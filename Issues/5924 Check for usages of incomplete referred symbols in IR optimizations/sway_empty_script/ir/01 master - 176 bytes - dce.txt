// IR: [dce] Dead code elimination
script {
    pub entry fn __entry() -> ptr slice, !1 {
        local { u64, u64, u64 } __anon_0
        local { u64, u64, u64 } __anon_00
        local { { u64, u64, u64 } } __anon_1
        local { u64, u64 } __anon_10
        local { u64, u64, u64 } __asm_arg
        local slice __ret_value
        local { { u64, u64, u64 } } buffer

        entry():
        v0 = get_local ptr slice, __ret_value
        v1 = const u64 1024
        v2 = asm(cap: v1) -> u64 hp, !5 {
            aloc   cap
        }
        v3 = int_to_ptr v2 to ptr u8, !6
        v4 = ptr_to_int v3 to u64, !7
        v5 = get_local ptr { u64, u64, u64 }, __anon_0, !8
        v6 = const u64 0
        v7 = get_elem_ptr v5, ptr u64, v6, !9
        store v4 to v7, !10
        v8 = const u64 1
        v9 = get_elem_ptr v5, ptr u64, v8, !11
        store v1 to v9, !12
        v10 = const u64 2
        v11 = get_elem_ptr v5, ptr u64, v10, !13
        v12 = const u64 0
        store v12 to v11, !14
        v13 = asm(buffer: v5) -> ptr { u64, u64, u64 } buffer {
        }
        v14 = get_local ptr { { u64, u64, u64 } }, __anon_1, !16
        v15 = const u64 0
        v16 = get_elem_ptr v14, ptr { u64, u64, u64 }, v15, !17
        mem_copy_val v16, v13
        v17 = get_local ptr { { u64, u64, u64 } }, buffer, !19
        mem_copy_val v17, v14
        v18 = get_local ptr { { u64, u64, u64 } }, buffer, !21
        v19 = ptr_to_int v18 to u64, !23
        v20 = int_to_ptr v19 to ptr { { u64, u64, u64 } }, !24
        v21 = const u64 0
        v22 = get_elem_ptr v20, ptr { u64, u64, u64 }, v21, !26
        v23 = get_local ptr { u64, u64, u64 }, __asm_arg
        mem_copy_val v23, v22
        v24 = asm(buffer: v23) -> ptr { u64, u64, u64 } buffer {
        }
        v25 = get_local ptr { u64, u64, u64 }, __anon_00, !27
        mem_copy_val v25, v24
        v26 = const u64 0
        v27 = get_elem_ptr v25, ptr u64, v26, !28
        v28 = load v27, !29
        v29 = int_to_ptr v28 to ptr u8, !30
        v30 = const u64 2
        v31 = get_elem_ptr v25, ptr u64, v30, !31
        v32 = ptr_to_int v29 to u64, !32
        v33 = get_local ptr { u64, u64 }, __anon_10, !33
        v34 = const u64 0
        v35 = get_elem_ptr v33, ptr u64, v34, !34
        store v32 to v35, !35
        v36 = const u64 1
        v37 = get_elem_ptr v33, ptr u64, v36, !36
        mem_copy_val v37, v31
        v38 = asm(s: v33) -> ptr slice s {
        }
        mem_copy_val v0, v38
        ret ptr slice v0
    }
}
