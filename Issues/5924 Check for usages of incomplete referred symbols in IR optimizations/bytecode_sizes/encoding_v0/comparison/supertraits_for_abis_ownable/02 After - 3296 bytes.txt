// IR: Initial
contract {
    pub entry fn set_data_if_owner<c626c6e2>(new_value !1: u64) -> (), !4 {
        local { b256, u64, b256 } __anon_0

        entry(new_value: u64):
        v0 = call only_owner_0(), !5
        v1 = get_local ptr { b256, u64, b256 }, __anon_0, !6
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2
        v4 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c, !6
        store v4 to v3, !6
        v5 = const u64 1
        v6 = get_elem_ptr v1, ptr u64, v5
        v7 = const u64 0
        store v7 to v6, !6
        v8 = const u64 2
        v9 = get_elem_ptr v1, ptr b256, v8
        v10 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c, !6
        store v10 to v9, !6
        v11 = load v1
        v12 = call write_47(v11, new_value), !7
        v13 = const unit ()
        ret () v13
    }

    pub fn only_owner_0() -> (), !11 {
        local { u64, ( { b256 } | { b256 } ) } __anon_0

        entry():
        v0 = call msg_sender_10(), !12
        v1 = call unwrap_9(v0), !13
        v2 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_0, !15
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !15
        v5 = const u64 0, !15
        store v5 to v4, !15
        v6 = call get_owner_27(), !16
        v7 = call from_22(v6), !17
        v8 = const u64 1
        v9 = const u64 0
        v10 = get_elem_ptr v2, ptr { b256 }, v8, v9, !15
        store v7 to v10, !15
        v11 = load v2
        v12 = call eq_4(v1, v11), !18
        v13 = call assert_1(v12), !19
        v14 = const unit ()
        ret () v14
    }

    pub fn assert_1(condition !21: bool) -> (), !22 {
        entry(condition: bool):
        v0 = call not_2(condition), !23
        cbr v0, block0(), block1(), !23

        block0():
        v1 = const u64 18446744073709486084, !25
        v2 = call revert_3(v1), !26
        v3 = const unit ()
        br block2(v3)

        block1():
        v4 = const unit ()
        br block2(v4)

        block2(v5: ()):
        v6 = const unit ()
        ret () v6
    }

    pub fn not_2(self !28: bool) -> bool, !29 {
        entry(self: bool):
        v0 = const bool false, !30
        v1 = cmp eq self v0
        ret bool v1
    }

    pub fn revert_3(code !32: u64) -> never, !33 {
        entry(code: u64):
        revert code, !34
    }

    pub fn eq_4(self !35: { u64, ( { b256 } | { b256 } ) }, other !36: { u64, ( { b256 } | { b256 } ) }) -> bool, !37 {
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __anon_0
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __matched_value_1
        local { b256 } addr1
        local { b256 } addr2
        local { b256 } id1
        local { b256 } id2

        entry(self: { u64, ( { b256 } | { b256 } ) }, other: { u64, ( { b256 } | { b256 } ) }):
        v0 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_0, !38
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr { u64, ( { b256 } | { b256 } ) }, v1, !38
        store self to v2, !38
        v3 = const u64 1
        v4 = get_elem_ptr v0, ptr { u64, ( { b256 } | { b256 } ) }, v3, !38
        store other to v4, !38
        v5 = load v0
        v6 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !39
        store v5 to v6, !39
        v7 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !38
        v8 = const u64 0
        v9 = get_elem_ptr v7, ptr { u64, ( { b256 } | { b256 } ) }, v8, !40
        v10 = const u64 0
        v11 = get_elem_ptr v9, ptr u64, v10, !40
        v12 = load v11
        v13 = const u64 0, !40
        v14 = call eq_5(v12, v13), !41
        cbr v14, block0(), block1(v14), !41

        block0():
        v15 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !38
        v16 = const u64 1
        v17 = get_elem_ptr v15, ptr { u64, ( { b256 } | { b256 } ) }, v16, !40
        v18 = const u64 0
        v19 = get_elem_ptr v17, ptr u64, v18, !40
        v20 = load v19
        v21 = const u64 0, !40
        v22 = call eq_5(v20, v21), !41
        br block1(v22), !41

        block1(v23: bool):
        cbr v23, block2(), block3(), !41

        block2():
        v24 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !38
        v25 = const u64 0
        v26 = get_elem_ptr v24, ptr { u64, ( { b256 } | { b256 } ) }, v25, !40
        v27 = const u64 1
        v28 = const u64 0
        v29 = get_elem_ptr v26, ptr { b256 }, v27, v28
        v30 = load v29
        v31 = get_local ptr { b256 }, addr1, !42
        store v30 to v31, !42
        v32 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !38
        v33 = const u64 1
        v34 = get_elem_ptr v32, ptr { u64, ( { b256 } | { b256 } ) }, v33, !40
        v35 = const u64 1
        v36 = const u64 0
        v37 = get_elem_ptr v34, ptr { b256 }, v35, v36
        v38 = load v37
        v39 = get_local ptr { b256 }, addr2, !43
        store v38 to v39, !43
        v40 = get_local ptr { b256 }, addr1, !44
        v41 = load v40
        v42 = get_local ptr { b256 }, addr2, !45
        v43 = load v42
        v44 = call eq_6(v41, v43), !46
        br block9(v44)

        block3():
        v45 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !38
        v46 = const u64 0
        v47 = get_elem_ptr v45, ptr { u64, ( { b256 } | { b256 } ) }, v46, !47
        v48 = const u64 0
        v49 = get_elem_ptr v47, ptr u64, v48, !47
        v50 = load v49
        v51 = const u64 1, !47
        v52 = call eq_5(v50, v51), !48
        cbr v52, block4(), block5(v52), !48

        block4():
        v53 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !38
        v54 = const u64 1
        v55 = get_elem_ptr v53, ptr { u64, ( { b256 } | { b256 } ) }, v54, !47
        v56 = const u64 0
        v57 = get_elem_ptr v55, ptr u64, v56, !47
        v58 = load v57
        v59 = const u64 1, !47
        v60 = call eq_5(v58, v59), !48
        br block5(v60), !48

        block5(v61: bool):
        cbr v61, block6(), block7(), !48

        block6():
        v62 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !38
        v63 = const u64 0
        v64 = get_elem_ptr v62, ptr { u64, ( { b256 } | { b256 } ) }, v63, !47
        v65 = const u64 1
        v66 = const u64 1
        v67 = get_elem_ptr v64, ptr { b256 }, v65, v66
        v68 = load v67
        v69 = get_local ptr { b256 }, id1, !49
        store v68 to v69, !49
        v70 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !38
        v71 = const u64 1
        v72 = get_elem_ptr v70, ptr { u64, ( { b256 } | { b256 } ) }, v71, !47
        v73 = const u64 1
        v74 = const u64 1
        v75 = get_elem_ptr v72, ptr { b256 }, v73, v74
        v76 = load v75
        v77 = get_local ptr { b256 }, id2, !50
        store v76 to v77, !50
        v78 = get_local ptr { b256 }, id1, !51
        v79 = load v78
        v80 = get_local ptr { b256 }, id2, !52
        v81 = load v80
        v82 = call eq_8(v79, v81), !53
        br block8(v82)

        block7():
        v83 = const bool false, !54
        br block8(v83)

        block8(v84: bool):
        br block9(v84)

        block9(v85: bool):
        ret bool v85
    }

    pub fn eq_5(self !55: u64, other !56: u64) -> bool, !57 {
        entry(self: u64, other: u64):
        v0 = cmp eq self other
        ret bool v0
    }

    pub fn eq_6(self !59: { b256 }, other !60: { b256 }) -> bool, !61 {
        entry(self: { b256 }, other: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !62
        v4 = load v3
        v5 = ptr_to_int other to u64
        v6 = int_to_ptr v5 to ptr { b256 }
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr b256, v7, !62
        v9 = load v8
        v10 = call eq_7(v4, v9), !63
        ret bool v10
    }

    pub fn eq_7(self !64: b256, other !65: b256) -> bool, !66 {
        entry(self: b256, other: b256):
        v0 = cmp eq self other
        ret bool v0
    }

    pub fn eq_8(self !68: { b256 }, other !69: { b256 }) -> bool, !70 {
        entry(self: { b256 }, other: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !71
        v4 = load v3
        v5 = ptr_to_int other to u64
        v6 = int_to_ptr v5 to ptr { b256 }
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr b256, v7, !71
        v9 = load v8
        v10 = call eq_7(v4, v9), !72
        ret bool v10
    }

    pub fn unwrap_9(self !74: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }) -> { u64, ( { b256 } | { b256 } ) }, !75 {
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __matched_value_3
        local { u64, ( { b256 } | { b256 } ) } inner_value

        entry(self: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v0 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_3, !76
        store self to v0, !76
        v1 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_3, !77
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !77
        v4 = load v3
        v5 = const u64 0, !77
        v6 = call eq_5(v4, v5), !78
        cbr v6, block0(), block1(), !78

        block0():
        v7 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_3, !77
        v8 = const u64 1
        v9 = const u64 0
        v10 = get_elem_ptr v7, ptr { u64, ( { b256 } | { b256 } ) }, v8, v9
        v11 = load v10
        v12 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !79
        store v11 to v12, !79
        v13 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !80
        v14 = load v13
        br block2(v14)

        block1():
        v15 = const u64 0, !81
        v16 = call revert_3(v15), !82
        br block2(v16)

        block2(v17: { u64, ( { b256 } | { b256 } ) }):
        ret { u64, ( { b256 } | { b256 } ) } v17
    }

    pub fn msg_sender_10() -> { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, !84 {
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_0
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_1
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { b256 } ) } __anon_4
        local { u64, ( { b256 } | { u64 } ) } __matched_value_1
        local { u64 } err
        local { b256 } owner

        entry():
        v0 = call caller_is_external_11(), !85
        cbr v0, block0(), block7(), !85

        block0():
        v1 = call caller_address_12(), !86
        v2 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !87
        store v1 to v2, !87
        v3 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !86
        v4 = const u64 0
        v5 = get_elem_ptr v3, ptr u64, v4, !86
        v6 = load v5
        v7 = const u64 1, !86
        v8 = call eq_5(v6, v7), !88
        cbr v8, block1(), block2(), !88

        block1():
        v9 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !86
        v10 = const u64 1
        v11 = const u64 1
        v12 = get_elem_ptr v9, ptr { u64 }, v10, v11
        v13 = load v12
        v14 = get_local ptr { u64 }, err, !89
        store v13 to v14, !89
        v15 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_0, !90
        v16 = const u64 0
        v17 = get_elem_ptr v15, ptr u64, v16, !90
        v18 = const u64 1, !90
        store v18 to v17, !90
        v19 = get_local ptr { u64 }, err, !91
        v20 = load v19
        v21 = const u64 1
        v22 = const u64 1
        v23 = get_elem_ptr v15, ptr { u64 }, v21, v22, !90
        store v20 to v23, !90
        v24 = load v15
        br block6(v24)

        block2():
        v25 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !86
        v26 = const u64 0
        v27 = get_elem_ptr v25, ptr u64, v26, !86
        v28 = load v27
        v29 = const u64 0, !86
        v30 = call eq_5(v28, v29), !92
        cbr v30, block3(), block4(), !92

        block3():
        v31 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !86
        v32 = const u64 1
        v33 = const u64 0
        v34 = get_elem_ptr v31, ptr { b256 }, v32, v33
        v35 = load v34
        v36 = get_local ptr { b256 }, owner, !93
        store v35 to v36, !93
        v37 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_1, !90
        v38 = const u64 0
        v39 = get_elem_ptr v37, ptr u64, v38, !90
        v40 = const u64 0, !90
        store v40 to v39, !90
        v41 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !15
        v42 = const u64 0
        v43 = get_elem_ptr v41, ptr u64, v42, !15
        v44 = const u64 0, !15
        store v44 to v43, !15
        v45 = get_local ptr { b256 }, owner, !94
        v46 = load v45
        v47 = const u64 1
        v48 = const u64 0
        v49 = get_elem_ptr v41, ptr { b256 }, v47, v48, !15
        store v46 to v49, !15
        v50 = load v41
        v51 = const u64 1
        v52 = const u64 0
        v53 = get_elem_ptr v37, ptr { u64, ( { b256 } | { b256 } ) }, v51, v52, !90
        store v50 to v53, !90
        v54 = load v37
        br block5(v54)

        block4():
        v55 = const u64 14757395258967588866, !87
        revert v55, !87

        block5(v56: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        br block6(v56)

        block6(v57: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        br block8(v57)

        block7():
        v58 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_3, !90
        v59 = const u64 0
        v60 = get_elem_ptr v58, ptr u64, v59, !90
        v61 = const u64 0, !90
        store v61 to v60, !90
        v62 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_4, !15
        v63 = const u64 0
        v64 = get_elem_ptr v62, ptr u64, v63, !15
        v65 = const u64 1, !15
        store v65 to v64, !15
        v66 = call caller_contract_id_25(), !95
        v67 = const u64 1
        v68 = const u64 1
        v69 = get_elem_ptr v62, ptr { b256 }, v67, v68, !15
        store v66 to v69, !15
        v70 = load v62
        v71 = const u64 1
        v72 = const u64 0
        v73 = get_elem_ptr v58, ptr { u64, ( { b256 } | { b256 } ) }, v71, v72, !90
        store v70 to v73, !90
        v74 = load v58
        br block8(v74)

        block8(v75: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        ret { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } v75
    }

    pub fn caller_is_external_11() -> bool, !96 {
        entry():
        v0 = asm(r1) -> bool r1, !97 {
            gm     r1 i1, !98
        }
        ret bool v0
    }

    pub fn caller_address_12() -> { u64, ( { b256 } | { u64 } ) }, !99 {
        local { u64, ( () | { b256 } ) } __anon_0
        local { u64, ( { b256 } | { u64 } ) } __anon_1
        local { u64 } __anon_2
        local { u64, ( { b256 } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { u64 } ) } __anon_4
        local { u64 } __anon_5
        local { u64 } __matched_value_2
        local { u64, ( () | { b256 } ) } __matched_value_3
        local { b256 } address
        local mut { u64, ( () | { b256 } ) } candidate
        local mut u64 i
        local u64 inputs
        local { u64, ( () | { b256 } ) } owner_of_input
        local { u64 } type_of_input

        entry():
        v0 = call input_count_13(), !100
        v1 = get_local ptr u64, inputs, !101
        store v0 to v1, !101
        v2 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0, !103
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !103
        v5 = const u64 0, !103
        store v5 to v4, !103
        v6 = load v2
        v7 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !104
        store v6 to v7, !104
        v8 = get_local ptr u64, i, !105
        v9 = const u64 0, !106
        store v9 to v8, !105
        br while()

        while():
        v10 = get_local ptr u64, i, !107
        v11 = load v10
        v12 = get_local ptr u64, inputs, !108
        v13 = load v12
        v14 = call lt_16(v11, v13), !109
        cbr v14, while_body(), end_while()

        while_break():
        br end_while()

        while_body():
        v15 = get_local ptr u64, i, !110
        v16 = load v15
        v17 = call as_u64_18(v16), !111
        v18 = call input_type_17(v17), !112
        v19 = get_local ptr { u64 }, type_of_input, !113
        store v18 to v19, !113
        v20 = get_local ptr { u64 }, type_of_input, !114
        v21 = load v20
        v22 = get_local ptr { u64 }, __matched_value_2, !115
        store v21 to v22, !115
        v23 = get_local ptr { u64 }, __matched_value_2, !114
        v24 = const u64 0
        v25 = get_elem_ptr v23, ptr u64, v24, !114
        v26 = load v25
        v27 = const u64 0, !114
        v28 = call eq_5(v26, v27), !116
        cbr v28, block0(), block1(), !116

        block0():
        v29 = const unit (), !117
        br block5(v29)

        block1():
        v30 = get_local ptr { u64 }, __matched_value_2, !114
        v31 = const u64 0
        v32 = get_elem_ptr v30, ptr u64, v31, !114
        v33 = load v32
        v34 = const u64 2, !114
        v35 = call eq_5(v33, v34), !118
        cbr v35, block2(), block3(), !118

        block2():
        v36 = const unit (), !119
        br block4(v36)

        block3():
        v37 = get_local ptr u64, i, !120
        v38 = load v37
        v39 = const u64 1, !121
        v40 = call add_19(v38, v39), !122
        v41 = get_local ptr u64, i, !122
        store v40 to v41, !122
        br while()

        block4(v42: ()):
        br block5(v42)

        block5(v43: ()):
        v44 = get_local ptr u64, i, !123
        v45 = load v44
        v46 = call as_u64_18(v45), !124
        v47 = call input_coin_owner_21(v46), !125
        v48 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !126
        store v47 to v48, !126
        v49 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !127
        v50 = load v49
        v51 = call is_none_23(v50), !128
        cbr v51, block6(), block7(), !128

        block6():
        v52 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !129
        v53 = load v52
        v54 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !130
        store v53 to v54, !130
        v55 = get_local ptr u64, i, !131
        v56 = load v55
        v57 = const u64 1, !132
        v58 = call add_19(v56, v57), !133
        v59 = get_local ptr u64, i, !133
        store v58 to v59, !133
        br while()

        block7():
        v60 = const unit ()
        br block8(v60)

        block8(v61: ()):
        v62 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !134
        v63 = load v62
        v64 = call unwrap_24(v63), !135
        v65 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !136
        v66 = load v65
        v67 = call unwrap_24(v66), !137
        v68 = call eq_6(v64, v67), !138
        cbr v68, block9(), block10(), !138

        block9():
        v69 = get_local ptr u64, i, !139
        v70 = load v69
        v71 = const u64 1, !140
        v72 = call add_19(v70, v71), !141
        v73 = get_local ptr u64, i, !141
        store v72 to v73, !141
        br while()

        block10():
        v74 = const unit ()
        br block11(v74)

        block11(v75: ()):
        v76 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_1, !90
        v77 = const u64 0
        v78 = get_elem_ptr v76, ptr u64, v77, !90
        v79 = const u64 1, !90
        store v79 to v78, !90
        v80 = get_local ptr { u64 }, __anon_2, !142
        v81 = const u64 0
        v82 = get_elem_ptr v80, ptr u64, v81, !142
        v83 = const u64 0, !142
        store v83 to v82, !142
        v84 = load v80
        v85 = const u64 1
        v86 = const u64 1
        v87 = get_elem_ptr v76, ptr { u64 }, v85, v86, !90
        store v84 to v87, !90
        v88 = load v76
        ret { u64, ( { b256 } | { u64 } ) } v88, !143

        end_while():
        v89 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !144
        v90 = load v89
        v91 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !145
        store v90 to v91, !145
        v92 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !144
        v93 = const u64 0
        v94 = get_elem_ptr v92, ptr u64, v93, !144
        v95 = load v94
        v96 = const u64 1, !144
        v97 = call eq_5(v95, v96), !146
        cbr v97, block12(), block13(), !146

        block12():
        v98 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !144
        v99 = const u64 1
        v100 = const u64 1
        v101 = get_elem_ptr v98, ptr { b256 }, v99, v100
        v102 = load v101
        v103 = get_local ptr { b256 }, address, !147
        store v102 to v103, !147
        v104 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_3, !90
        v105 = const u64 0
        v106 = get_elem_ptr v104, ptr u64, v105, !90
        v107 = const u64 0, !90
        store v107 to v106, !90
        v108 = get_local ptr { b256 }, address, !148
        v109 = load v108
        v110 = const u64 1
        v111 = const u64 0
        v112 = get_elem_ptr v104, ptr { b256 }, v110, v111, !90
        store v109 to v112, !90
        v113 = load v104
        br block17(v113)

        block13():
        v114 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !144
        v115 = const u64 0
        v116 = get_elem_ptr v114, ptr u64, v115, !144
        v117 = load v116
        v118 = const u64 0, !144
        v119 = call eq_5(v117, v118), !149
        cbr v119, block14(), block15(), !149

        block14():
        v120 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_4, !90
        v121 = const u64 0
        v122 = get_elem_ptr v120, ptr u64, v121, !90
        v123 = const u64 1, !90
        store v123 to v122, !90
        v124 = get_local ptr { u64 }, __anon_5, !142
        v125 = const u64 0
        v126 = get_elem_ptr v124, ptr u64, v125, !142
        v127 = const u64 1, !142
        store v127 to v126, !142
        v128 = load v124
        v129 = const u64 1
        v130 = const u64 1
        v131 = get_elem_ptr v120, ptr { u64 }, v129, v130, !90
        store v128 to v131, !90
        v132 = load v120
        br block16(v132)

        block15():
        v133 = const u64 14757395258967588866, !145
        revert v133, !145

        block16(v134: { u64, ( { b256 } | { u64 } ) }):
        br block17(v134)

        block17(v135: { u64, ( { b256 } | { u64 } ) }):
        ret { u64, ( { b256 } | { u64 } ) } v135
    }

    pub fn input_count_13() -> u64, !151 {
        local { u64 } __matched_value_3

        entry():
        v0 = call tx_type_14(), !152
        v1 = get_local ptr { u64 }, __matched_value_3, !153
        store v0 to v1, !153
        v2 = get_local ptr { u64 }, __matched_value_3, !152
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !152
        v5 = load v4
        v6 = const u64 0, !152
        v7 = call eq_5(v5, v6), !154
        cbr v7, block0(), block1(), !154

        block0():
        v8 = const u64 0, !155
        v9 = gtf v8, 5, !156
        v10 = bitcast v9 to u64, !156
        br block5(v10)

        block1():
        v11 = get_local ptr { u64 }, __matched_value_3, !152
        v12 = const u64 0
        v13 = get_elem_ptr v11, ptr u64, v12, !152
        v14 = load v13
        v15 = const u64 1, !152
        v16 = call eq_5(v14, v15), !157
        cbr v16, block2(), block3(), !157

        block2():
        v17 = const u64 0, !158
        v18 = gtf v17, 259, !159
        v19 = bitcast v18 to u64, !159
        br block4(v19)

        block3():
        v20 = const u64 14757395258967588866, !153
        revert v20, !153

        block4(v21: u64):
        br block5(v21)

        block5(v22: u64):
        ret u64 v22
    }

    pub fn tx_type_14() -> { u64 }, !161 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local u8 __matched_value_1

        entry():
        v0 = const u64 0, !162
        v1 = gtf v0, 1, !163
        v2 = bitcast v1 to u8, !163
        v3 = get_local ptr u8, __matched_value_1, !164
        store v2 to v3, !164
        v4 = get_local ptr u8, __matched_value_1, !163
        v5 = load v4
        v6 = const u8 0, !165
        v7 = call eq_15(v5, v6), !166
        cbr v7, block0(), block1(), !166

        block0():
        v8 = get_local ptr { u64 }, __anon_0, !167
        v9 = const u64 0
        v10 = get_elem_ptr v8, ptr u64, v9, !167
        v11 = const u64 0, !167
        store v11 to v10, !167
        v12 = load v8
        br block5(v12)

        block1():
        v13 = get_local ptr u8, __matched_value_1, !163
        v14 = load v13
        v15 = const u8 1, !168
        v16 = call eq_15(v14, v15), !169
        cbr v16, block2(), block3(), !169

        block2():
        v17 = get_local ptr { u64 }, __anon_1, !167
        v18 = const u64 0
        v19 = get_elem_ptr v17, ptr u64, v18, !167
        v20 = const u64 1, !167
        store v20 to v19, !167
        v21 = load v17
        br block4(v21)

        block3():
        v22 = const u64 0, !170
        v23 = call revert_3(v22), !171
        br block4(v23)

        block4(v24: { u64 }):
        br block5(v24)

        block5(v25: { u64 }):
        ret { u64 } v25
    }

    pub fn eq_15(self !172: u8, other !173: u8) -> bool, !174 {
        entry(self: u8, other: u8):
        v0 = cmp eq self other
        ret bool v0
    }

    pub fn lt_16(self !175: u64, other !176: u64) -> bool, !177 {
        entry(self: u64, other: u64):
        v0 = cmp lt self other
        ret bool v0
    }

    pub fn input_type_17(index !178: u64) -> { u64 }, !179 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local u8 __matched_value_2

        entry(index: u64):
        v0 = gtf index, 512, !180
        v1 = bitcast v0 to u8, !180
        v2 = get_local ptr u8, __matched_value_2, !181
        store v1 to v2, !181
        v3 = get_local ptr u8, __matched_value_2, !180
        v4 = load v3
        v5 = const u8 0, !182
        v6 = call eq_15(v4, v5), !183
        cbr v6, block0(), block1(), !183

        block0():
        v7 = get_local ptr { u64 }, __anon_0, !184
        v8 = const u64 0
        v9 = get_elem_ptr v7, ptr u64, v8, !184
        v10 = const u64 0, !184
        store v10 to v9, !184
        v11 = load v7
        br block8(v11)

        block1():
        v12 = get_local ptr u8, __matched_value_2, !180
        v13 = load v12
        v14 = const u8 1, !185
        v15 = call eq_15(v13, v14), !186
        cbr v15, block2(), block3(), !186

        block2():
        v16 = get_local ptr { u64 }, __anon_1, !184
        v17 = const u64 0
        v18 = get_elem_ptr v16, ptr u64, v17, !184
        v19 = const u64 1, !184
        store v19 to v18, !184
        v20 = load v16
        br block7(v20)

        block3():
        v21 = get_local ptr u8, __matched_value_2, !180
        v22 = load v21
        v23 = const u8 2, !187
        v24 = call eq_15(v22, v23), !188
        cbr v24, block4(), block5(), !188

        block4():
        v25 = get_local ptr { u64 }, __anon_2, !184
        v26 = const u64 0
        v27 = get_elem_ptr v25, ptr u64, v26, !184
        v28 = const u64 2, !184
        store v28 to v27, !184
        v29 = load v25
        br block6(v29)

        block5():
        v30 = const u64 0, !189
        v31 = call revert_3(v30), !190
        br block6(v31)

        block6(v32: { u64 }):
        br block7(v32)

        block7(v33: { u64 }):
        br block8(v33)

        block8(v34: { u64 }):
        ret { u64 } v34
    }

    pub fn as_u64_18(self !192: u64) -> u64, !193 {
        entry(self: u64):
        v0 = asm(input: self) -> u64 input, !194 {
        }
        ret u64 v0
    }

    pub fn add_19(self !195: u64, other !196: u64) -> u64, !197 {
        local u64 res

        entry(self: u64, other: u64):
        v0 = add self, other
        v1 = get_local ptr u64, res, !198
        store v0 to v1, !198
        v2 = get_local ptr u64, res, !199
        v3 = load v2
        v4 = call max_20(), !200
        v5 = cmp gt v3 v4
        cbr v5, block0(), block1(), !201

        block0():
        v6 = const u64 0, !202
        revert v6, !203

        block1():
        v7 = get_local ptr u64, res, !204
        v8 = load v7
        br block2(v8)

        block2(v9: u64):
        ret u64 v9
    }

    pub fn max_20() -> u64, !206 {
        entry():
        v0 = const u64 65535, !207
        ret u64 v0
    }

    pub fn input_coin_owner_21(index !208: u64) -> { u64, ( () | { b256 } ) }, !209 {
        local { u64, ( () | { b256 } ) } __anon_0
        local { u64, ( () | { b256 } ) } __anon_1
        local { u64 } __matched_value_6

        entry(index: u64):
        v0 = call input_type_17(index), !210
        v1 = get_local ptr { u64 }, __matched_value_6, !211
        store v0 to v1, !211
        v2 = get_local ptr { u64 }, __matched_value_6, !210
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !210
        v5 = load v4
        v6 = const u64 0, !210
        v7 = call eq_5(v5, v6), !212
        cbr v7, block0(), block1(), !212

        block0():
        v8 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0, !103
        v9 = const u64 0
        v10 = get_elem_ptr v8, ptr u64, v9, !103
        v11 = const u64 1, !103
        store v11 to v10, !103
        v12 = gtf index, 515, !213
        v13 = int_to_ptr v12 to ptr b256, !213
        v14 = load v13
        v15 = call from_22(v14), !214
        v16 = const u64 1
        v17 = const u64 1
        v18 = get_elem_ptr v8, ptr { b256 }, v16, v17, !103
        store v15 to v18, !103
        v19 = load v8
        br block2(v19)

        block1():
        v20 = get_local ptr { u64, ( () | { b256 } ) }, __anon_1, !103
        v21 = const u64 0
        v22 = get_elem_ptr v20, ptr u64, v21, !103
        v23 = const u64 0, !103
        store v23 to v22, !103
        v24 = load v20
        br block2(v24)

        block2(v25: { u64, ( () | { b256 } ) }):
        ret { u64, ( () | { b256 } ) } v25
    }

    pub fn from_22(bits !215: b256) -> { b256 }, !216 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !217
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !217
        v3 = load v0
        ret { b256 } v3
    }

    pub fn is_none_23(self !218: { u64, ( () | { b256 } ) }) -> bool, !219 {
        local { u64, ( () | { b256 } ) } __matched_value_3

        entry(self: { u64, ( () | { b256 } ) }):
        v0 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !220
        store self to v0, !220
        v1 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !221
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !221
        v4 = load v3
        v5 = const u64 1, !221
        v6 = call eq_5(v4, v5), !222
        cbr v6, block0(), block1(), !222

        block0():
        v7 = const bool false, !223
        br block2(v7)

        block1():
        v8 = const bool true, !224
        br block2(v8)

        block2(v9: bool):
        ret bool v9
    }

    pub fn unwrap_24(self !225: { u64, ( () | { b256 } ) }) -> { b256 }, !226 {
        local { u64, ( () | { b256 } ) } __matched_value_4
        local { b256 } inner_value

        entry(self: { u64, ( () | { b256 } ) }):
        v0 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !227
        store self to v0, !227
        v1 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !228
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !228
        v4 = load v3
        v5 = const u64 1, !228
        v6 = call eq_5(v4, v5), !229
        cbr v6, block0(), block1(), !229

        block0():
        v7 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !228
        v8 = const u64 1
        v9 = const u64 1
        v10 = get_elem_ptr v7, ptr { b256 }, v8, v9
        v11 = load v10
        v12 = get_local ptr { b256 }, inner_value, !230
        store v11 to v12, !230
        v13 = get_local ptr { b256 }, inner_value, !231
        v14 = load v13
        br block2(v14)

        block1():
        v15 = const u64 0, !232
        v16 = call revert_3(v15), !233
        br block2(v16)

        block2(v17: { b256 }):
        ret { b256 } v17
    }

    pub fn caller_contract_id_25() -> { b256 }, !234 {
        entry():
        v0 = asm(r1) -> b256 r1, !235 {
            gm     r1 i2, !236
        }
        v1 = call from_26(v0), !237
        ret { b256 } v1
    }

    pub fn from_26(bits !238: b256) -> { b256 }, !239 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !240
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !240
        v3 = load v0
        ret { b256 } v3
    }

    pub fn get_owner_27() -> b256, !242 {
        local { b256, u64, b256 } __anon_0

        entry():
        v0 = get_local ptr { b256, u64, b256 }, __anon_0, !243
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        v3 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !243
        store v3 to v2, !243
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4
        v6 = const u64 0
        store v6 to v5, !243
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr b256, v7
        v9 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !243
        store v9 to v8, !243
        v10 = load v0
        v11 = call read_28(v10), !244
        ret b256 v11
    }

    pub fn read_28(self !246: { b256, u64, b256 }) -> b256, !248 {
        entry(self: { b256, u64, b256 }):
        v0 = call slot_45(self), !249
        v1 = call offset_46(self), !250
        v2 = call read_30(v0, v1), !251
        v3 = call unwrap_29(v2), !252
        ret b256 v3
    }

    pub fn unwrap_29(self !225: { u64, ( () | b256 ) }) -> b256, !226 {
        local { u64, ( () | b256 ) } __matched_value_4
        local b256 inner_value

        entry(self: { u64, ( () | b256 ) }):
        v0 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !227
        store self to v0, !227
        v1 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !228
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !228
        v4 = load v3
        v5 = const u64 1, !228
        v6 = call eq_5(v4, v5), !229
        cbr v6, block0(), block1(), !229

        block0():
        v7 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !228
        v8 = const u64 1
        v9 = const u64 1
        v10 = get_elem_ptr v7, ptr b256, v8, v9
        v11 = load v10
        v12 = get_local ptr b256, inner_value, !230
        store v11 to v12, !230
        v13 = get_local ptr b256, inner_value, !231
        v14 = load v13
        br block2(v14)

        block1():
        v15 = const u64 0, !232
        v16 = call revert_3(v15), !233
        br block2(v16)

        block2(v17: b256):
        ret b256 v17
    }

    pub fn read_30(slot !254: b256, offset !255: u64) -> { u64, ( () | b256 ) }, !257 {
        local { u64, ( () | b256 ) } __anon_0
        local { u64, ( () | b256 ) } __anon_1
        local { u64, ( () | b256 ) } __anon_2
        local { b256, u64, u64 } __tuple_2
        local { b256, u64, u64 } __tuple_2_
        local b256 key_for_storage
        local u64 number_of_slots
        local b256 offset_slot
        local u64 place_in_slot
        local u64 result_ptr

        entry(slot: b256, offset: u64):
        v0 = const u64 32
        v1 = const u64 0, !258
        v2 = call eq_5(v0, v1), !259
        cbr v2, block0(), block1(), !259

        block0():
        v3 = get_local ptr { u64, ( () | b256 ) }, __anon_0, !103
        v4 = const u64 0
        v5 = get_elem_ptr v3, ptr u64, v4, !103
        v6 = const u64 0, !103
        store v6 to v5, !103
        v7 = load v3
        ret { u64, ( () | b256 ) } v7, !260

        block1():
        v8 = const unit ()
        br block2(v8)

        block2(v9: ()):
        v10 = call slot_calculator_31(slot, offset), !261
        v11 = get_local ptr { b256, u64, u64 }, __tuple_2, !262
        store v10 to v11, !262
        v12 = get_local ptr { b256, u64, u64 }, __tuple_2, !262
        v13 = load v12
        v14 = get_local ptr { b256, u64, u64 }, __tuple_2_, !262
        store v13 to v14, !262
        v15 = get_local ptr { b256, u64, u64 }, __tuple_2_, !262
        v16 = const u64 0
        v17 = get_elem_ptr v15, ptr b256, v16, !262
        v18 = load v17
        v19 = get_local ptr b256, offset_slot, !262
        store v18 to v19, !262
        v20 = get_local ptr { b256, u64, u64 }, __tuple_2_, !262
        v21 = const u64 1
        v22 = get_elem_ptr v20, ptr u64, v21, !262
        v23 = load v22
        v24 = get_local ptr u64, number_of_slots, !262
        store v23 to v24, !262
        v25 = get_local ptr { b256, u64, u64 }, __tuple_2_, !262
        v26 = const u64 2
        v27 = get_elem_ptr v25, ptr u64, v26, !262
        v28 = load v27
        v29 = get_local ptr u64, place_in_slot, !262
        store v28 to v29, !262
        v30 = get_local ptr u64, number_of_slots, !263
        v31 = load v30
        v32 = const u64 32, !264
        v33 = call multiply_34(v31, v32), !265
        v34 = call alloc_42(v33), !266
        v35 = get_local ptr u64, result_ptr, !267
        store v34 to v35, !267
        v36 = get_local ptr b256, offset_slot, !268
        v37 = load v36
        v38 = get_local ptr u64, result_ptr, !269
        v39 = load v38
        v40 = get_local ptr u64, number_of_slots, !270
        v41 = load v40
        v42 = get_local ptr b256, key_for_storage, !271
        store v37 to v42, !271
        v43 = int_to_ptr v39 to ptr b256, !271
        v44 = state_load_quad_word v43, key v42, v41, !271
        cbr v44, block3(), block4(), !271

        block3():
        v45 = get_local ptr { u64, ( () | b256 ) }, __anon_1, !103
        v46 = const u64 0
        v47 = get_elem_ptr v45, ptr u64, v46, !103
        v48 = const u64 1, !103
        store v48 to v47, !103
        v49 = get_local ptr u64, result_ptr, !272
        v50 = load v49
        v51 = get_local ptr u64, place_in_slot, !273
        v52 = load v51
        v53 = call add_44(v50, v52), !274
        v54 = call read_43(v53), !275
        v55 = const u64 1
        v56 = const u64 1
        v57 = get_elem_ptr v45, ptr b256, v55, v56, !103
        store v54 to v57, !103
        v58 = load v45
        br block5(v58)

        block4():
        v59 = get_local ptr { u64, ( () | b256 ) }, __anon_2, !103
        v60 = const u64 0
        v61 = get_elem_ptr v59, ptr u64, v60, !103
        v62 = const u64 0, !103
        store v62 to v61, !103
        v63 = load v59
        br block5(v63)

        block5(v64: { u64, ( () | b256 ) }):
        ret { u64, ( () | b256 ) } v64
    }

    fn slot_calculator_31(slot !276: b256, offset !277: u64) -> { b256, u64, u64 }, !278 {
        local { b256, u64, u64 } __anon_0
        local bool __matched_value_1
        local u64 last_slot
        local u64 number_of_slots
        local mut u256 offset_slot
        local u64 place_in_slot
        local u64 size_of_t

        entry(slot: b256, offset: u64):
        v0 = get_local ptr u64, size_of_t, !279
        v1 = const u64 32
        store v1 to v0, !279
        v2 = const u64 8, !280
        v3 = call multiply_34(offset, v2), !281
        v4 = get_local ptr u64, size_of_t, !282
        v5 = load v4
        v6 = call add_33(v3, v5), !283
        v7 = const u64 31, !284
        v8 = call add_33(v6, v7), !285
        v9 = const u64 5, !286
        v10 = call rsh_32(v8, v9), !287
        v11 = get_local ptr u64, last_slot, !288
        store v10 to v11, !288
        v12 = const u64 4, !289
        v13 = call modulo_35(offset, v12), !290
        v14 = get_local ptr u64, place_in_slot, !291
        store v13 to v14, !291
        v15 = get_local ptr bool, __matched_value_1, !292
        v16 = const bool true
        store v16 to v15, !292
        v17 = get_local ptr bool, __matched_value_1, !293
        v18 = load v17
        v19 = const bool true, !294
        v20 = call eq_36(v18, v19), !295
        cbr v20, block0(), block1(), !295

        block0():
        v21 = get_local ptr u64, place_in_slot, !296
        v22 = load v21
        v23 = const u64 8, !297
        v24 = call multiply_34(v22, v23), !298
        v25 = get_local ptr u64, size_of_t, !299
        v26 = load v25
        v27 = call add_33(v24, v26), !300
        v28 = const u64 31, !301
        v29 = call add_33(v27, v28), !302
        v30 = const u64 5, !303
        v31 = call rsh_32(v29, v30), !304
        br block5(v31)

        block1():
        v32 = get_local ptr bool, __matched_value_1, !293
        v33 = load v32
        v34 = const bool false, !305
        v35 = call eq_36(v33, v34), !306
        cbr v35, block2(), block3(), !306

        block2():
        v36 = const u64 1, !307
        br block4(v36)

        block3():
        v37 = const u64 14757395258967588866, !292
        revert v37, !292

        block4(v38: u64):
        br block5(v38)

        block5(v39: u64):
        v40 = get_local ptr u64, number_of_slots, !308
        store v39 to v40, !308
        v41 = call as_u256_37(slot), !309
        v42 = get_local ptr u256, offset_slot, !310
        store v41 to v42, !310
        v43 = get_local ptr u256, offset_slot, !311
        v44 = load v43
        v45 = get_local ptr u64, last_slot, !312
        v46 = load v45
        v47 = call as_u256_40(v46), !313
        v48 = get_local ptr u64, number_of_slots, !314
        v49 = load v48
        v50 = call as_u256_40(v49), !315
        v51 = call subtract_39(v47, v50), !316
        v52 = call add_38(v44, v51), !317
        v53 = get_local ptr u256, offset_slot, !317
        store v52 to v53, !317
        v54 = get_local ptr u256, offset_slot, !318
        v55 = load v54
        v56 = call as_b256_41(v55), !319
        v57 = get_local ptr u64, number_of_slots, !320
        v58 = load v57
        v59 = get_local ptr u64, place_in_slot, !321
        v60 = load v59
        v61 = get_local ptr { b256, u64, u64 }, __anon_0, !322
        v62 = const u64 0
        v63 = get_elem_ptr v61, ptr b256, v62, !322
        store v56 to v63, !322
        v64 = const u64 1
        v65 = get_elem_ptr v61, ptr u64, v64, !322
        store v58 to v65, !322
        v66 = const u64 2
        v67 = get_elem_ptr v61, ptr u64, v66, !322
        store v60 to v67, !322
        v68 = load v61
        ret { b256, u64, u64 } v68
    }

    pub fn rsh_32(self !323: u64, other !324: u64) -> u64, !325 {
        entry(self: u64, other: u64):
        v0 = rsh self, other
        ret u64 v0
    }

    pub fn add_33(self !326: u64, other !327: u64) -> u64, !328 {
        entry(self: u64, other: u64):
        v0 = add self, other
        ret u64 v0
    }

    pub fn multiply_34(self !329: u64, other !330: u64) -> u64, !331 {
        entry(self: u64, other: u64):
        v0 = mul self, other
        ret u64 v0
    }

    pub fn modulo_35(self !332: u64, other !333: u64) -> u64, !334 {
        entry(self: u64, other: u64):
        v0 = mod self, other
        ret u64 v0
    }

    pub fn eq_36(self !335: bool, other !336: bool) -> bool, !337 {
        entry(self: bool, other: bool):
        v0 = cmp eq self other
        ret bool v0
    }

    pub fn as_u256_37(self !338: b256) -> u256, !339 {
        entry(self: b256):
        v0 = asm(input: self) -> u256 input, !340 {
        }
        ret u256 v0
    }

    pub fn add_38(self !341: u256, other !342: u256) -> u256, !343 {
        entry(self: u256, other: u256):
        v0 = add self, other
        ret u256 v0
    }

    pub fn subtract_39(self !344: u256, other !345: u256) -> u256, !346 {
        entry(self: u256, other: u256):
        v0 = sub self, other
        ret u256 v0
    }

    pub fn as_u256_40(self !347: u64) -> u256, !348 {
        local { u64, u64, u64, u64 } __anon_0
        local { u64, u64, u64, u64 } input

        entry(self: u64):
        v0 = get_local ptr { u64, u64, u64, u64 }, __anon_0, !349
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr u64, v1, !349
        v3 = const u64 0, !350
        store v3 to v2, !349
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4, !349
        v6 = const u64 0, !351
        store v6 to v5, !349
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr u64, v7, !349
        v9 = const u64 0, !352
        store v9 to v8, !349
        v10 = const u64 3
        v11 = get_elem_ptr v0, ptr u64, v10, !349
        store self to v11, !349
        v12 = load v0
        v13 = get_local ptr { u64, u64, u64, u64 }, input, !353
        store v12 to v13, !353
        v14 = get_local ptr { u64, u64, u64, u64 }, input, !354
        v15 = asm(input: v14) -> u256 input, !355 {
        }
        ret u256 v15
    }

    pub fn as_b256_41(self !356: u256) -> b256, !357 {
        entry(self: u256):
        v0 = asm(input: self) -> b256 input, !358 {
        }
        ret b256 v0
    }

    pub fn alloc_42(count !360: u64) -> u64, !361 {
        entry(count: u64):
        v0 = const u64 8
        v1 = call multiply_34(v0, count), !362
        v2 = asm(size: v1, ptr) -> u64 ptr, !363 {
            aloc   size, !364
            move   ptr hp, !365
        }
        ret u64 v2
    }

    pub fn read_43(self !367: u64) -> b256, !368 {
        entry(self: u64):
        v0 = const bool true
        cbr v0, block0(), block1(), !369

        block0():
        v1 = asm(ptr: self) -> b256 ptr, !370 {
        }
        br block5(v1)

        block1():
        v2 = const u64 32
        v3 = const u64 1, !371
        v4 = cmp eq v2 v3
        cbr v4, block2(), block3(), !372

        block2():
        v5 = asm(ptr: self, val) -> b256 val, !373 {
            lb     val ptr i0, !374
        }
        br block4(v5)

        block3():
        v6 = asm(ptr: self, val) -> b256 val, !375 {
            lw     val ptr i0, !376
        }
        br block4(v6)

        block4(v7: b256):
        br block5(v7)

        block5(v8: b256):
        ret b256 v8
    }

    pub fn add_44(self !377: u64, count !378: u64) -> u64, !379 {
        entry(self: u64, count: u64):
        v0 = const u64 8
        v1 = mul v0, count
        v2 = add self, v1
        ret u64 v2
    }

    pub fn slot_45(self !381: { b256, u64, b256 }) -> b256, !382 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !383
        v4 = load v3
        ret b256 v4
    }

    pub fn offset_46(self !384: { b256, u64, b256 }) -> u64, !385 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 1
        v3 = get_elem_ptr v1, ptr u64, v2, !386
        v4 = load v3
        ret u64 v4
    }

    pub fn write_47(self !387: { b256, u64, b256 }, value !388: u64) -> (), !390 {
        entry(self: { b256, u64, b256 }, value: u64):
        v0 = call slot_51(self), !391
        v1 = call offset_52(self), !392
        v2 = call write_48(v0, v1, value), !393
        v3 = const unit ()
        ret () v3
    }

    pub fn write_48(slot !394: b256, offset !395: u64, value !396: u64) -> (), !398 {
        local bool _
        local bool __
        local { b256, u64, u64 } __tuple_1
        local { b256, u64, u64 } __tuple_1_
        local b256 key_for_storage
        local b256 key_for_storage_
        local u64 number_of_slots
        local b256 offset_slot
        local u64 padded_value
        local u64 place_in_slot

        entry(slot: b256, offset: u64, value: u64):
        v0 = const u64 8
        v1 = const u64 0, !399
        v2 = call eq_5(v0, v1), !400
        cbr v2, block0(), block1(), !400

        block0():
        v3 = const unit (), !401
        ret () v3, !401

        block1():
        v4 = const unit ()
        br block2(v4)

        block2(v5: ()):
        v6 = call slot_calculator_49(slot, offset), !402
        v7 = get_local ptr { b256, u64, u64 }, __tuple_1, !403
        store v6 to v7, !403
        v8 = get_local ptr { b256, u64, u64 }, __tuple_1, !403
        v9 = load v8
        v10 = get_local ptr { b256, u64, u64 }, __tuple_1_, !403
        store v9 to v10, !403
        v11 = get_local ptr { b256, u64, u64 }, __tuple_1_, !403
        v12 = const u64 0
        v13 = get_elem_ptr v11, ptr b256, v12, !403
        v14 = load v13
        v15 = get_local ptr b256, offset_slot, !403
        store v14 to v15, !403
        v16 = get_local ptr { b256, u64, u64 }, __tuple_1_, !403
        v17 = const u64 1
        v18 = get_elem_ptr v16, ptr u64, v17, !403
        v19 = load v18
        v20 = get_local ptr u64, number_of_slots, !403
        store v19 to v20, !403
        v21 = get_local ptr { b256, u64, u64 }, __tuple_1_, !403
        v22 = const u64 2
        v23 = get_elem_ptr v21, ptr u64, v22, !403
        v24 = load v23
        v25 = get_local ptr u64, place_in_slot, !403
        store v24 to v25, !403
        v26 = get_local ptr u64, number_of_slots, !404
        v27 = load v26
        v28 = const u64 32, !405
        v29 = call multiply_34(v27, v28), !406
        v30 = call alloc_42(v29), !407
        v31 = get_local ptr u64, padded_value, !408
        store v30 to v31, !408
        v32 = get_local ptr b256, offset_slot, !409
        v33 = load v32
        v34 = get_local ptr u64, padded_value, !410
        v35 = load v34
        v36 = get_local ptr u64, number_of_slots, !411
        v37 = load v36
        v38 = get_local ptr b256, key_for_storage, !412
        store v33 to v38, !412
        v39 = int_to_ptr v35 to ptr b256, !412
        v40 = state_load_quad_word v39, key v38, v37, !412
        v41 = get_local ptr bool, _, !413
        store v40 to v41, !413
        v42 = get_local ptr u64, padded_value, !414
        v43 = load v42
        v44 = get_local ptr u64, place_in_slot, !415
        v45 = load v44
        v46 = call add_44(v43, v45), !416
        v47 = call write_50(v46, value), !417
        v48 = get_local ptr b256, offset_slot, !418
        v49 = load v48
        v50 = get_local ptr u64, padded_value, !419
        v51 = load v50
        v52 = get_local ptr u64, number_of_slots, !420
        v53 = load v52
        v54 = get_local ptr b256, key_for_storage_, !421
        store v49 to v54, !421
        v55 = int_to_ptr v51 to ptr b256, !421
        v56 = state_store_quad_word v55, key v54, v53, !421
        v57 = get_local ptr bool, __, !422
        store v56 to v57, !422
        v58 = const unit ()
        ret () v58
    }

    fn slot_calculator_49(slot !276: b256, offset !277: u64) -> { b256, u64, u64 }, !278 {
        local { b256, u64, u64 } __anon_0
        local bool __matched_value_1
        local u64 last_slot
        local u64 number_of_slots
        local mut u256 offset_slot
        local u64 place_in_slot
        local u64 size_of_t

        entry(slot: b256, offset: u64):
        v0 = get_local ptr u64, size_of_t, !279
        v1 = const u64 8
        store v1 to v0, !279
        v2 = const u64 8, !280
        v3 = call multiply_34(offset, v2), !281
        v4 = get_local ptr u64, size_of_t, !282
        v5 = load v4
        v6 = call add_33(v3, v5), !283
        v7 = const u64 31, !284
        v8 = call add_33(v6, v7), !285
        v9 = const u64 5, !286
        v10 = call rsh_32(v8, v9), !287
        v11 = get_local ptr u64, last_slot, !288
        store v10 to v11, !288
        v12 = const u64 4, !289
        v13 = call modulo_35(offset, v12), !290
        v14 = get_local ptr u64, place_in_slot, !291
        store v13 to v14, !291
        v15 = get_local ptr bool, __matched_value_1, !292
        v16 = const bool false
        store v16 to v15, !292
        v17 = get_local ptr bool, __matched_value_1, !293
        v18 = load v17
        v19 = const bool true, !294
        v20 = call eq_36(v18, v19), !295
        cbr v20, block0(), block1(), !295

        block0():
        v21 = get_local ptr u64, place_in_slot, !296
        v22 = load v21
        v23 = const u64 8, !297
        v24 = call multiply_34(v22, v23), !298
        v25 = get_local ptr u64, size_of_t, !299
        v26 = load v25
        v27 = call add_33(v24, v26), !300
        v28 = const u64 31, !301
        v29 = call add_33(v27, v28), !302
        v30 = const u64 5, !303
        v31 = call rsh_32(v29, v30), !304
        br block5(v31)

        block1():
        v32 = get_local ptr bool, __matched_value_1, !293
        v33 = load v32
        v34 = const bool false, !305
        v35 = call eq_36(v33, v34), !306
        cbr v35, block2(), block3(), !306

        block2():
        v36 = const u64 1, !307
        br block4(v36)

        block3():
        v37 = const u64 14757395258967588866, !292
        revert v37, !292

        block4(v38: u64):
        br block5(v38)

        block5(v39: u64):
        v40 = get_local ptr u64, number_of_slots, !308
        store v39 to v40, !308
        v41 = call as_u256_37(slot), !309
        v42 = get_local ptr u256, offset_slot, !310
        store v41 to v42, !310
        v43 = get_local ptr u256, offset_slot, !311
        v44 = load v43
        v45 = get_local ptr u64, last_slot, !312
        v46 = load v45
        v47 = call as_u256_40(v46), !313
        v48 = get_local ptr u64, number_of_slots, !314
        v49 = load v48
        v50 = call as_u256_40(v49), !315
        v51 = call subtract_39(v47, v50), !316
        v52 = call add_38(v44, v51), !317
        v53 = get_local ptr u256, offset_slot, !317
        store v52 to v53, !317
        v54 = get_local ptr u256, offset_slot, !318
        v55 = load v54
        v56 = call as_b256_41(v55), !319
        v57 = get_local ptr u64, number_of_slots, !320
        v58 = load v57
        v59 = get_local ptr u64, place_in_slot, !321
        v60 = load v59
        v61 = get_local ptr { b256, u64, u64 }, __anon_0, !322
        v62 = const u64 0
        v63 = get_elem_ptr v61, ptr b256, v62, !322
        store v56 to v63, !322
        v64 = const u64 1
        v65 = get_elem_ptr v61, ptr u64, v64, !322
        store v58 to v65, !322
        v66 = const u64 2
        v67 = get_elem_ptr v61, ptr u64, v66, !322
        store v60 to v67, !322
        v68 = load v61
        ret { b256, u64, u64 } v68
    }

    pub fn write_50(self !423: u64, val !424: u64) -> (), !425 {
        entry(self: u64, val: u64):
        v0 = const bool false
        cbr v0, block0(), block1(), !426

        block0():
        v1 = const u64 8
        v2 = asm(dst: self, src: val, count: v1) {
            mcp    dst src count, !427
        }
        v3 = const unit ()
        br block5(v3)

        block1():
        v4 = const u64 8
        v5 = const u64 1, !428
        v6 = cmp eq v4 v5
        cbr v6, block2(), block3(), !429

        block2():
        v7 = asm(ptr: self, val: val) {
            sb     ptr val i0, !430
        }
        v8 = const unit ()
        br block4(v8)

        block3():
        v9 = asm(ptr: self, val: val) {
            sw     ptr val i0, !431
        }
        v10 = const unit ()
        br block4(v10)

        block4(v11: ()):
        br block5(v11)

        block5(v12: ()):
        v13 = const unit ()
        ret () v13
    }

    pub fn slot_51(self !381: { b256, u64, b256 }) -> b256, !382 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !383
        v4 = load v3
        ret b256 v4
    }

    pub fn offset_52(self !384: { b256, u64, b256 }) -> u64, !385 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 1
        v3 = get_elem_ptr v1, ptr u64, v2, !386
        v4 = load v3
        ret u64 v4
    }
}

// IR: [mem2reg] Promotion of local memory to SSA registers
contract {
    pub entry fn set_data_if_owner<c626c6e2>(new_value !1: u64) -> (), !4 {
        local { b256, u64, b256 } __anon_0

        entry(new_value: u64):
        v0 = call only_owner_0(), !5
        v1 = get_local ptr { b256, u64, b256 }, __anon_0, !6
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2
        v4 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c, !6
        store v4 to v3, !6
        v5 = const u64 1
        v6 = get_elem_ptr v1, ptr u64, v5
        v7 = const u64 0
        store v7 to v6, !6
        v8 = const u64 2
        v9 = get_elem_ptr v1, ptr b256, v8
        v10 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c, !6
        store v10 to v9, !6
        v11 = load v1
        v12 = call write_47(v11, new_value), !7
        v13 = const unit ()
        ret () v13
    }

    pub fn only_owner_0() -> (), !11 {
        local { u64, ( { b256 } | { b256 } ) } __anon_0

        entry():
        v0 = call msg_sender_10(), !12
        v1 = call unwrap_9(v0), !13
        v2 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_0, !15
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !15
        v5 = const u64 0, !15
        store v5 to v4, !15
        v6 = call get_owner_27(), !16
        v7 = call from_22(v6), !17
        v8 = const u64 1
        v9 = const u64 0
        v10 = get_elem_ptr v2, ptr { b256 }, v8, v9, !15
        store v7 to v10, !15
        v11 = load v2
        v12 = call eq_4(v1, v11), !18
        v13 = call assert_1(v12), !19
        v14 = const unit ()
        ret () v14
    }

    pub fn assert_1(condition !21: bool) -> (), !22 {
        entry(condition: bool):
        v0 = call not_2(condition), !23
        cbr v0, block0(), block1(), !23

        block0():
        v1 = const u64 18446744073709486084, !25
        v2 = call revert_3(v1), !26
        v3 = const unit ()
        br block2(v3)

        block1():
        v4 = const unit ()
        br block2(v4)

        block2(v5: ()):
        v6 = const unit ()
        ret () v6
    }

    pub fn not_2(self !28: bool) -> bool, !29 {
        entry(self: bool):
        v0 = const bool false, !30
        v1 = cmp eq self v0
        ret bool v1
    }

    pub fn revert_3(code !32: u64) -> never, !33 {
        entry(code: u64):
        revert code, !34
    }

    pub fn eq_4(self !35: { u64, ( { b256 } | { b256 } ) }, other !36: { u64, ( { b256 } | { b256 } ) }) -> bool, !37 {
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __anon_0
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __matched_value_1
        local { b256 } addr1
        local { b256 } addr2
        local { b256 } id1
        local { b256 } id2

        entry(self: { u64, ( { b256 } | { b256 } ) }, other: { u64, ( { b256 } | { b256 } ) }):
        v0 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_0, !38
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr { u64, ( { b256 } | { b256 } ) }, v1, !38
        store self to v2, !38
        v3 = const u64 1
        v4 = get_elem_ptr v0, ptr { u64, ( { b256 } | { b256 } ) }, v3, !38
        store other to v4, !38
        v5 = load v0
        v6 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !39
        store v5 to v6, !39
        v7 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !38
        v8 = const u64 0
        v9 = get_elem_ptr v7, ptr { u64, ( { b256 } | { b256 } ) }, v8, !40
        v10 = const u64 0
        v11 = get_elem_ptr v9, ptr u64, v10, !40
        v12 = load v11
        v13 = const u64 0, !40
        v14 = call eq_5(v12, v13), !41
        cbr v14, block0(), block1(v14), !41

        block0():
        v15 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !38
        v16 = const u64 1
        v17 = get_elem_ptr v15, ptr { u64, ( { b256 } | { b256 } ) }, v16, !40
        v18 = const u64 0
        v19 = get_elem_ptr v17, ptr u64, v18, !40
        v20 = load v19
        v21 = const u64 0, !40
        v22 = call eq_5(v20, v21), !41
        br block1(v22), !41

        block1(v23: bool):
        cbr v23, block2(), block3(), !41

        block2():
        v24 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !38
        v25 = const u64 0
        v26 = get_elem_ptr v24, ptr { u64, ( { b256 } | { b256 } ) }, v25, !40
        v27 = const u64 1
        v28 = const u64 0
        v29 = get_elem_ptr v26, ptr { b256 }, v27, v28
        v30 = load v29
        v31 = get_local ptr { b256 }, addr1, !42
        store v30 to v31, !42
        v32 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !38
        v33 = const u64 1
        v34 = get_elem_ptr v32, ptr { u64, ( { b256 } | { b256 } ) }, v33, !40
        v35 = const u64 1
        v36 = const u64 0
        v37 = get_elem_ptr v34, ptr { b256 }, v35, v36
        v38 = load v37
        v39 = get_local ptr { b256 }, addr2, !43
        store v38 to v39, !43
        v40 = get_local ptr { b256 }, addr1, !44
        v41 = load v40
        v42 = get_local ptr { b256 }, addr2, !45
        v43 = load v42
        v44 = call eq_6(v41, v43), !46
        br block9(v44)

        block3():
        v45 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !38
        v46 = const u64 0
        v47 = get_elem_ptr v45, ptr { u64, ( { b256 } | { b256 } ) }, v46, !47
        v48 = const u64 0
        v49 = get_elem_ptr v47, ptr u64, v48, !47
        v50 = load v49
        v51 = const u64 1, !47
        v52 = call eq_5(v50, v51), !48
        cbr v52, block4(), block5(v52), !48

        block4():
        v53 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !38
        v54 = const u64 1
        v55 = get_elem_ptr v53, ptr { u64, ( { b256 } | { b256 } ) }, v54, !47
        v56 = const u64 0
        v57 = get_elem_ptr v55, ptr u64, v56, !47
        v58 = load v57
        v59 = const u64 1, !47
        v60 = call eq_5(v58, v59), !48
        br block5(v60), !48

        block5(v61: bool):
        cbr v61, block6(), block7(), !48

        block6():
        v62 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !38
        v63 = const u64 0
        v64 = get_elem_ptr v62, ptr { u64, ( { b256 } | { b256 } ) }, v63, !47
        v65 = const u64 1
        v66 = const u64 1
        v67 = get_elem_ptr v64, ptr { b256 }, v65, v66
        v68 = load v67
        v69 = get_local ptr { b256 }, id1, !49
        store v68 to v69, !49
        v70 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !38
        v71 = const u64 1
        v72 = get_elem_ptr v70, ptr { u64, ( { b256 } | { b256 } ) }, v71, !47
        v73 = const u64 1
        v74 = const u64 1
        v75 = get_elem_ptr v72, ptr { b256 }, v73, v74
        v76 = load v75
        v77 = get_local ptr { b256 }, id2, !50
        store v76 to v77, !50
        v78 = get_local ptr { b256 }, id1, !51
        v79 = load v78
        v80 = get_local ptr { b256 }, id2, !52
        v81 = load v80
        v82 = call eq_8(v79, v81), !53
        br block8(v82)

        block7():
        v83 = const bool false, !54
        br block8(v83)

        block8(v84: bool):
        br block9(v84)

        block9(v85: bool):
        ret bool v85
    }

    pub fn eq_5(self !55: u64, other !56: u64) -> bool, !57 {
        entry(self: u64, other: u64):
        v0 = cmp eq self other
        ret bool v0
    }

    pub fn eq_6(self !59: { b256 }, other !60: { b256 }) -> bool, !61 {
        entry(self: { b256 }, other: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !62
        v4 = load v3
        v5 = ptr_to_int other to u64
        v6 = int_to_ptr v5 to ptr { b256 }
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr b256, v7, !62
        v9 = load v8
        v10 = call eq_7(v4, v9), !63
        ret bool v10
    }

    pub fn eq_7(self !64: b256, other !65: b256) -> bool, !66 {
        entry(self: b256, other: b256):
        v0 = cmp eq self other
        ret bool v0
    }

    pub fn eq_8(self !68: { b256 }, other !69: { b256 }) -> bool, !70 {
        entry(self: { b256 }, other: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !71
        v4 = load v3
        v5 = ptr_to_int other to u64
        v6 = int_to_ptr v5 to ptr { b256 }
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr b256, v7, !71
        v9 = load v8
        v10 = call eq_7(v4, v9), !72
        ret bool v10
    }

    pub fn unwrap_9(self !74: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }) -> { u64, ( { b256 } | { b256 } ) }, !75 {
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __matched_value_3
        local { u64, ( { b256 } | { b256 } ) } inner_value

        entry(self: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v0 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_3, !76
        store self to v0, !76
        v1 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_3, !77
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !77
        v4 = load v3
        v5 = const u64 0, !77
        v6 = call eq_5(v4, v5), !78
        cbr v6, block0(), block1(), !78

        block0():
        v7 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_3, !77
        v8 = const u64 1
        v9 = const u64 0
        v10 = get_elem_ptr v7, ptr { u64, ( { b256 } | { b256 } ) }, v8, v9
        v11 = load v10
        v12 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !79
        store v11 to v12, !79
        v13 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !80
        v14 = load v13
        br block2(v14)

        block1():
        v15 = const u64 0, !81
        v16 = call revert_3(v15), !82
        br block2(v16)

        block2(v17: { u64, ( { b256 } | { b256 } ) }):
        ret { u64, ( { b256 } | { b256 } ) } v17
    }

    pub fn msg_sender_10() -> { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, !84 {
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_0
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_1
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { b256 } ) } __anon_4
        local { u64, ( { b256 } | { u64 } ) } __matched_value_1
        local { u64 } err
        local { b256 } owner

        entry():
        v0 = call caller_is_external_11(), !85
        cbr v0, block0(), block7(), !85

        block0():
        v1 = call caller_address_12(), !86
        v2 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !87
        store v1 to v2, !87
        v3 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !86
        v4 = const u64 0
        v5 = get_elem_ptr v3, ptr u64, v4, !86
        v6 = load v5
        v7 = const u64 1, !86
        v8 = call eq_5(v6, v7), !88
        cbr v8, block1(), block2(), !88

        block1():
        v9 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !86
        v10 = const u64 1
        v11 = const u64 1
        v12 = get_elem_ptr v9, ptr { u64 }, v10, v11
        v13 = load v12
        v14 = get_local ptr { u64 }, err, !89
        store v13 to v14, !89
        v15 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_0, !90
        v16 = const u64 0
        v17 = get_elem_ptr v15, ptr u64, v16, !90
        v18 = const u64 1, !90
        store v18 to v17, !90
        v19 = get_local ptr { u64 }, err, !91
        v20 = load v19
        v21 = const u64 1
        v22 = const u64 1
        v23 = get_elem_ptr v15, ptr { u64 }, v21, v22, !90
        store v20 to v23, !90
        v24 = load v15
        br block6(v24)

        block2():
        v25 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !86
        v26 = const u64 0
        v27 = get_elem_ptr v25, ptr u64, v26, !86
        v28 = load v27
        v29 = const u64 0, !86
        v30 = call eq_5(v28, v29), !92
        cbr v30, block3(), block4(), !92

        block3():
        v31 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !86
        v32 = const u64 1
        v33 = const u64 0
        v34 = get_elem_ptr v31, ptr { b256 }, v32, v33
        v35 = load v34
        v36 = get_local ptr { b256 }, owner, !93
        store v35 to v36, !93
        v37 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_1, !90
        v38 = const u64 0
        v39 = get_elem_ptr v37, ptr u64, v38, !90
        v40 = const u64 0, !90
        store v40 to v39, !90
        v41 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !15
        v42 = const u64 0
        v43 = get_elem_ptr v41, ptr u64, v42, !15
        v44 = const u64 0, !15
        store v44 to v43, !15
        v45 = get_local ptr { b256 }, owner, !94
        v46 = load v45
        v47 = const u64 1
        v48 = const u64 0
        v49 = get_elem_ptr v41, ptr { b256 }, v47, v48, !15
        store v46 to v49, !15
        v50 = load v41
        v51 = const u64 1
        v52 = const u64 0
        v53 = get_elem_ptr v37, ptr { u64, ( { b256 } | { b256 } ) }, v51, v52, !90
        store v50 to v53, !90
        v54 = load v37
        br block5(v54)

        block4():
        v55 = const u64 14757395258967588866, !87
        revert v55, !87

        block5(v56: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        br block6(v56)

        block6(v57: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        br block8(v57)

        block7():
        v58 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_3, !90
        v59 = const u64 0
        v60 = get_elem_ptr v58, ptr u64, v59, !90
        v61 = const u64 0, !90
        store v61 to v60, !90
        v62 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_4, !15
        v63 = const u64 0
        v64 = get_elem_ptr v62, ptr u64, v63, !15
        v65 = const u64 1, !15
        store v65 to v64, !15
        v66 = call caller_contract_id_25(), !95
        v67 = const u64 1
        v68 = const u64 1
        v69 = get_elem_ptr v62, ptr { b256 }, v67, v68, !15
        store v66 to v69, !15
        v70 = load v62
        v71 = const u64 1
        v72 = const u64 0
        v73 = get_elem_ptr v58, ptr { u64, ( { b256 } | { b256 } ) }, v71, v72, !90
        store v70 to v73, !90
        v74 = load v58
        br block8(v74)

        block8(v75: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        ret { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } v75
    }

    pub fn caller_is_external_11() -> bool, !96 {
        entry():
        v0 = asm(r1) -> bool r1, !97 {
            gm     r1 i1, !98
        }
        ret bool v0
    }

    pub fn caller_address_12() -> { u64, ( { b256 } | { u64 } ) }, !99 {
        local { u64, ( () | { b256 } ) } __anon_0
        local { u64, ( { b256 } | { u64 } ) } __anon_1
        local { u64 } __anon_2
        local { u64, ( { b256 } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { u64 } ) } __anon_4
        local { u64 } __anon_5
        local { u64 } __matched_value_2
        local { u64, ( () | { b256 } ) } __matched_value_3
        local { b256 } address
        local mut { u64, ( () | { b256 } ) } candidate
        local mut u64 i
        local u64 inputs
        local { u64, ( () | { b256 } ) } owner_of_input
        local { u64 } type_of_input

        entry():
        v0 = call input_count_13(), !100
        v1 = get_local ptr u64, inputs, !101
        v2 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0, !103
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !103
        v5 = const u64 0, !103
        store v5 to v4, !103
        v6 = load v2
        v7 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !104
        store v6 to v7, !104
        v8 = get_local ptr u64, i, !105
        v9 = const u64 0, !106
        br while(v9)

        while(v10: u64):
        v11 = get_local ptr u64, i, !107
        v12 = get_local ptr u64, inputs, !108
        v13 = call lt_16(v10, v0), !109
        cbr v13, while_body(), end_while()

        while_break():
        br end_while()

        while_body():
        v14 = get_local ptr u64, i, !110
        v15 = call as_u64_18(v10), !111
        v16 = call input_type_17(v15), !112
        v17 = get_local ptr { u64 }, type_of_input, !113
        store v16 to v17, !113
        v18 = get_local ptr { u64 }, type_of_input, !114
        v19 = load v18
        v20 = get_local ptr { u64 }, __matched_value_2, !115
        store v19 to v20, !115
        v21 = get_local ptr { u64 }, __matched_value_2, !114
        v22 = const u64 0
        v23 = get_elem_ptr v21, ptr u64, v22, !114
        v24 = load v23
        v25 = const u64 0, !114
        v26 = call eq_5(v24, v25), !116
        cbr v26, block0(), block1(), !116

        block0():
        v27 = const unit (), !117
        br block5(v27)

        block1():
        v28 = get_local ptr { u64 }, __matched_value_2, !114
        v29 = const u64 0
        v30 = get_elem_ptr v28, ptr u64, v29, !114
        v31 = load v30
        v32 = const u64 2, !114
        v33 = call eq_5(v31, v32), !118
        cbr v33, block2(), block3(), !118

        block2():
        v34 = const unit (), !119
        br block4(v34)

        block3():
        v35 = get_local ptr u64, i, !120
        v36 = const u64 1, !121
        v37 = call add_19(v10, v36), !122
        v38 = get_local ptr u64, i, !122
        br while(v37)

        block4(v39: ()):
        br block5(v39)

        block5(v40: ()):
        v41 = get_local ptr u64, i, !123
        v42 = call as_u64_18(v10), !124
        v43 = call input_coin_owner_21(v42), !125
        v44 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !126
        store v43 to v44, !126
        v45 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !127
        v46 = load v45
        v47 = call is_none_23(v46), !128
        cbr v47, block6(), block7(), !128

        block6():
        v48 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !129
        v49 = load v48
        v50 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !130
        store v49 to v50, !130
        v51 = get_local ptr u64, i, !131
        v52 = const u64 1, !132
        v53 = call add_19(v10, v52), !133
        v54 = get_local ptr u64, i, !133
        br while(v53)

        block7():
        v55 = const unit ()
        br block8(v55)

        block8(v56: ()):
        v57 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !134
        v58 = load v57
        v59 = call unwrap_24(v58), !135
        v60 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !136
        v61 = load v60
        v62 = call unwrap_24(v61), !137
        v63 = call eq_6(v59, v62), !138
        cbr v63, block9(), block10(), !138

        block9():
        v64 = get_local ptr u64, i, !139
        v65 = const u64 1, !140
        v66 = call add_19(v10, v65), !141
        v67 = get_local ptr u64, i, !141
        br while(v66)

        block10():
        v68 = const unit ()
        br block11(v68)

        block11(v69: ()):
        v70 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_1, !90
        v71 = const u64 0
        v72 = get_elem_ptr v70, ptr u64, v71, !90
        v73 = const u64 1, !90
        store v73 to v72, !90
        v74 = get_local ptr { u64 }, __anon_2, !142
        v75 = const u64 0
        v76 = get_elem_ptr v74, ptr u64, v75, !142
        v77 = const u64 0, !142
        store v77 to v76, !142
        v78 = load v74
        v79 = const u64 1
        v80 = const u64 1
        v81 = get_elem_ptr v70, ptr { u64 }, v79, v80, !90
        store v78 to v81, !90
        v82 = load v70
        ret { u64, ( { b256 } | { u64 } ) } v82, !143

        end_while():
        v83 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !144
        v84 = load v83
        v85 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !145
        store v84 to v85, !145
        v86 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !144
        v87 = const u64 0
        v88 = get_elem_ptr v86, ptr u64, v87, !144
        v89 = load v88
        v90 = const u64 1, !144
        v91 = call eq_5(v89, v90), !146
        cbr v91, block12(), block13(), !146

        block12():
        v92 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !144
        v93 = const u64 1
        v94 = const u64 1
        v95 = get_elem_ptr v92, ptr { b256 }, v93, v94
        v96 = load v95
        v97 = get_local ptr { b256 }, address, !147
        store v96 to v97, !147
        v98 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_3, !90
        v99 = const u64 0
        v100 = get_elem_ptr v98, ptr u64, v99, !90
        v101 = const u64 0, !90
        store v101 to v100, !90
        v102 = get_local ptr { b256 }, address, !148
        v103 = load v102
        v104 = const u64 1
        v105 = const u64 0
        v106 = get_elem_ptr v98, ptr { b256 }, v104, v105, !90
        store v103 to v106, !90
        v107 = load v98
        br block17(v107)

        block13():
        v108 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !144
        v109 = const u64 0
        v110 = get_elem_ptr v108, ptr u64, v109, !144
        v111 = load v110
        v112 = const u64 0, !144
        v113 = call eq_5(v111, v112), !149
        cbr v113, block14(), block15(), !149

        block14():
        v114 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_4, !90
        v115 = const u64 0
        v116 = get_elem_ptr v114, ptr u64, v115, !90
        v117 = const u64 1, !90
        store v117 to v116, !90
        v118 = get_local ptr { u64 }, __anon_5, !142
        v119 = const u64 0
        v120 = get_elem_ptr v118, ptr u64, v119, !142
        v121 = const u64 1, !142
        store v121 to v120, !142
        v122 = load v118
        v123 = const u64 1
        v124 = const u64 1
        v125 = get_elem_ptr v114, ptr { u64 }, v123, v124, !90
        store v122 to v125, !90
        v126 = load v114
        br block16(v126)

        block15():
        v127 = const u64 14757395258967588866, !145
        revert v127, !145

        block16(v128: { u64, ( { b256 } | { u64 } ) }):
        br block17(v128)

        block17(v129: { u64, ( { b256 } | { u64 } ) }):
        ret { u64, ( { b256 } | { u64 } ) } v129
    }

    pub fn input_count_13() -> u64, !151 {
        local { u64 } __matched_value_3

        entry():
        v0 = call tx_type_14(), !152
        v1 = get_local ptr { u64 }, __matched_value_3, !153
        store v0 to v1, !153
        v2 = get_local ptr { u64 }, __matched_value_3, !152
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !152
        v5 = load v4
        v6 = const u64 0, !152
        v7 = call eq_5(v5, v6), !154
        cbr v7, block0(), block1(), !154

        block0():
        v8 = const u64 0, !155
        v9 = gtf v8, 5, !156
        v10 = bitcast v9 to u64, !156
        br block5(v10)

        block1():
        v11 = get_local ptr { u64 }, __matched_value_3, !152
        v12 = const u64 0
        v13 = get_elem_ptr v11, ptr u64, v12, !152
        v14 = load v13
        v15 = const u64 1, !152
        v16 = call eq_5(v14, v15), !157
        cbr v16, block2(), block3(), !157

        block2():
        v17 = const u64 0, !158
        v18 = gtf v17, 259, !159
        v19 = bitcast v18 to u64, !159
        br block4(v19)

        block3():
        v20 = const u64 14757395258967588866, !153
        revert v20, !153

        block4(v21: u64):
        br block5(v21)

        block5(v22: u64):
        ret u64 v22
    }

    pub fn tx_type_14() -> { u64 }, !161 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local u8 __matched_value_1

        entry():
        v0 = const u64 0, !162
        v1 = gtf v0, 1, !163
        v2 = bitcast v1 to u8, !163
        v3 = get_local ptr u8, __matched_value_1, !164
        v4 = get_local ptr u8, __matched_value_1, !163
        v5 = const u8 0, !165
        v6 = call eq_15(v2, v5), !166
        cbr v6, block0(), block1(), !166

        block0():
        v7 = get_local ptr { u64 }, __anon_0, !167
        v8 = const u64 0
        v9 = get_elem_ptr v7, ptr u64, v8, !167
        v10 = const u64 0, !167
        store v10 to v9, !167
        v11 = load v7
        br block5(v11)

        block1():
        v12 = get_local ptr u8, __matched_value_1, !163
        v13 = const u8 1, !168
        v14 = call eq_15(v2, v13), !169
        cbr v14, block2(), block3(), !169

        block2():
        v15 = get_local ptr { u64 }, __anon_1, !167
        v16 = const u64 0
        v17 = get_elem_ptr v15, ptr u64, v16, !167
        v18 = const u64 1, !167
        store v18 to v17, !167
        v19 = load v15
        br block4(v19)

        block3():
        v20 = const u64 0, !170
        v21 = call revert_3(v20), !171
        br block4(v21)

        block4(v22: { u64 }):
        br block5(v22)

        block5(v23: { u64 }):
        ret { u64 } v23
    }

    pub fn eq_15(self !172: u8, other !173: u8) -> bool, !174 {
        entry(self: u8, other: u8):
        v0 = cmp eq self other
        ret bool v0
    }

    pub fn lt_16(self !175: u64, other !176: u64) -> bool, !177 {
        entry(self: u64, other: u64):
        v0 = cmp lt self other
        ret bool v0
    }

    pub fn input_type_17(index !178: u64) -> { u64 }, !179 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local u8 __matched_value_2

        entry(index: u64):
        v0 = gtf index, 512, !180
        v1 = bitcast v0 to u8, !180
        v2 = get_local ptr u8, __matched_value_2, !181
        v3 = get_local ptr u8, __matched_value_2, !180
        v4 = const u8 0, !182
        v5 = call eq_15(v1, v4), !183
        cbr v5, block0(), block1(), !183

        block0():
        v6 = get_local ptr { u64 }, __anon_0, !184
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr u64, v7, !184
        v9 = const u64 0, !184
        store v9 to v8, !184
        v10 = load v6
        br block8(v10)

        block1():
        v11 = get_local ptr u8, __matched_value_2, !180
        v12 = const u8 1, !185
        v13 = call eq_15(v1, v12), !186
        cbr v13, block2(), block3(), !186

        block2():
        v14 = get_local ptr { u64 }, __anon_1, !184
        v15 = const u64 0
        v16 = get_elem_ptr v14, ptr u64, v15, !184
        v17 = const u64 1, !184
        store v17 to v16, !184
        v18 = load v14
        br block7(v18)

        block3():
        v19 = get_local ptr u8, __matched_value_2, !180
        v20 = const u8 2, !187
        v21 = call eq_15(v1, v20), !188
        cbr v21, block4(), block5(), !188

        block4():
        v22 = get_local ptr { u64 }, __anon_2, !184
        v23 = const u64 0
        v24 = get_elem_ptr v22, ptr u64, v23, !184
        v25 = const u64 2, !184
        store v25 to v24, !184
        v26 = load v22
        br block6(v26)

        block5():
        v27 = const u64 0, !189
        v28 = call revert_3(v27), !190
        br block6(v28)

        block6(v29: { u64 }):
        br block7(v29)

        block7(v30: { u64 }):
        br block8(v30)

        block8(v31: { u64 }):
        ret { u64 } v31
    }

    pub fn as_u64_18(self !192: u64) -> u64, !193 {
        entry(self: u64):
        v0 = asm(input: self) -> u64 input, !194 {
        }
        ret u64 v0
    }

    pub fn add_19(self !195: u64, other !196: u64) -> u64, !197 {
        local u64 res

        entry(self: u64, other: u64):
        v0 = add self, other
        v1 = get_local ptr u64, res, !198
        v2 = get_local ptr u64, res, !199
        v3 = call max_20(), !200
        v4 = cmp gt v0 v3
        cbr v4, block0(), block1(), !201

        block0():
        v5 = const u64 0, !202
        revert v5, !203

        block1():
        v6 = get_local ptr u64, res, !204
        br block2(v0)

        block2(v7: u64):
        ret u64 v7
    }

    pub fn max_20() -> u64, !206 {
        entry():
        v0 = const u64 65535, !207
        ret u64 v0
    }

    pub fn input_coin_owner_21(index !208: u64) -> { u64, ( () | { b256 } ) }, !209 {
        local { u64, ( () | { b256 } ) } __anon_0
        local { u64, ( () | { b256 } ) } __anon_1
        local { u64 } __matched_value_6

        entry(index: u64):
        v0 = call input_type_17(index), !210
        v1 = get_local ptr { u64 }, __matched_value_6, !211
        store v0 to v1, !211
        v2 = get_local ptr { u64 }, __matched_value_6, !210
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !210
        v5 = load v4
        v6 = const u64 0, !210
        v7 = call eq_5(v5, v6), !212
        cbr v7, block0(), block1(), !212

        block0():
        v8 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0, !103
        v9 = const u64 0
        v10 = get_elem_ptr v8, ptr u64, v9, !103
        v11 = const u64 1, !103
        store v11 to v10, !103
        v12 = gtf index, 515, !213
        v13 = int_to_ptr v12 to ptr b256, !213
        v14 = load v13
        v15 = call from_22(v14), !214
        v16 = const u64 1
        v17 = const u64 1
        v18 = get_elem_ptr v8, ptr { b256 }, v16, v17, !103
        store v15 to v18, !103
        v19 = load v8
        br block2(v19)

        block1():
        v20 = get_local ptr { u64, ( () | { b256 } ) }, __anon_1, !103
        v21 = const u64 0
        v22 = get_elem_ptr v20, ptr u64, v21, !103
        v23 = const u64 0, !103
        store v23 to v22, !103
        v24 = load v20
        br block2(v24)

        block2(v25: { u64, ( () | { b256 } ) }):
        ret { u64, ( () | { b256 } ) } v25
    }

    pub fn from_22(bits !215: b256) -> { b256 }, !216 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !217
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !217
        v3 = load v0
        ret { b256 } v3
    }

    pub fn is_none_23(self !218: { u64, ( () | { b256 } ) }) -> bool, !219 {
        local { u64, ( () | { b256 } ) } __matched_value_3

        entry(self: { u64, ( () | { b256 } ) }):
        v0 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !220
        store self to v0, !220
        v1 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !221
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !221
        v4 = load v3
        v5 = const u64 1, !221
        v6 = call eq_5(v4, v5), !222
        cbr v6, block0(), block1(), !222

        block0():
        v7 = const bool false, !223
        br block2(v7)

        block1():
        v8 = const bool true, !224
        br block2(v8)

        block2(v9: bool):
        ret bool v9
    }

    pub fn unwrap_24(self !225: { u64, ( () | { b256 } ) }) -> { b256 }, !226 {
        local { u64, ( () | { b256 } ) } __matched_value_4
        local { b256 } inner_value

        entry(self: { u64, ( () | { b256 } ) }):
        v0 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !227
        store self to v0, !227
        v1 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !228
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !228
        v4 = load v3
        v5 = const u64 1, !228
        v6 = call eq_5(v4, v5), !229
        cbr v6, block0(), block1(), !229

        block0():
        v7 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !228
        v8 = const u64 1
        v9 = const u64 1
        v10 = get_elem_ptr v7, ptr { b256 }, v8, v9
        v11 = load v10
        v12 = get_local ptr { b256 }, inner_value, !230
        store v11 to v12, !230
        v13 = get_local ptr { b256 }, inner_value, !231
        v14 = load v13
        br block2(v14)

        block1():
        v15 = const u64 0, !232
        v16 = call revert_3(v15), !233
        br block2(v16)

        block2(v17: { b256 }):
        ret { b256 } v17
    }

    pub fn caller_contract_id_25() -> { b256 }, !234 {
        entry():
        v0 = asm(r1) -> b256 r1, !235 {
            gm     r1 i2, !236
        }
        v1 = call from_26(v0), !237
        ret { b256 } v1
    }

    pub fn from_26(bits !238: b256) -> { b256 }, !239 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !240
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !240
        v3 = load v0
        ret { b256 } v3
    }

    pub fn get_owner_27() -> b256, !242 {
        local { b256, u64, b256 } __anon_0

        entry():
        v0 = get_local ptr { b256, u64, b256 }, __anon_0, !243
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        v3 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !243
        store v3 to v2, !243
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4
        v6 = const u64 0
        store v6 to v5, !243
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr b256, v7
        v9 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !243
        store v9 to v8, !243
        v10 = load v0
        v11 = call read_28(v10), !244
        ret b256 v11
    }

    pub fn read_28(self !246: { b256, u64, b256 }) -> b256, !248 {
        entry(self: { b256, u64, b256 }):
        v0 = call slot_45(self), !249
        v1 = call offset_46(self), !250
        v2 = call read_30(v0, v1), !251
        v3 = call unwrap_29(v2), !252
        ret b256 v3
    }

    pub fn unwrap_29(self !225: { u64, ( () | b256 ) }) -> b256, !226 {
        local { u64, ( () | b256 ) } __matched_value_4
        local b256 inner_value

        entry(self: { u64, ( () | b256 ) }):
        v0 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !227
        store self to v0, !227
        v1 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !228
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !228
        v4 = load v3
        v5 = const u64 1, !228
        v6 = call eq_5(v4, v5), !229
        cbr v6, block0(), block1(), !229

        block0():
        v7 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !228
        v8 = const u64 1
        v9 = const u64 1
        v10 = get_elem_ptr v7, ptr b256, v8, v9
        v11 = load v10
        v12 = get_local ptr b256, inner_value, !230
        store v11 to v12, !230
        v13 = get_local ptr b256, inner_value, !231
        v14 = load v13
        br block2(v14)

        block1():
        v15 = const u64 0, !232
        v16 = call revert_3(v15), !233
        br block2(v16)

        block2(v17: b256):
        ret b256 v17
    }

    pub fn read_30(slot !254: b256, offset !255: u64) -> { u64, ( () | b256 ) }, !257 {
        local { u64, ( () | b256 ) } __anon_0
        local { u64, ( () | b256 ) } __anon_1
        local { u64, ( () | b256 ) } __anon_2
        local { b256, u64, u64 } __tuple_2
        local { b256, u64, u64 } __tuple_2_
        local b256 key_for_storage
        local u64 number_of_slots
        local b256 offset_slot
        local u64 place_in_slot
        local u64 result_ptr

        entry(slot: b256, offset: u64):
        v0 = const u64 32
        v1 = const u64 0, !258
        v2 = call eq_5(v0, v1), !259
        cbr v2, block0(), block1(), !259

        block0():
        v3 = get_local ptr { u64, ( () | b256 ) }, __anon_0, !103
        v4 = const u64 0
        v5 = get_elem_ptr v3, ptr u64, v4, !103
        v6 = const u64 0, !103
        store v6 to v5, !103
        v7 = load v3
        ret { u64, ( () | b256 ) } v7, !260

        block1():
        v8 = const unit ()
        br block2(v8)

        block2(v9: ()):
        v10 = call slot_calculator_31(slot, offset), !261
        v11 = get_local ptr { b256, u64, u64 }, __tuple_2, !262
        store v10 to v11, !262
        v12 = get_local ptr { b256, u64, u64 }, __tuple_2, !262
        v13 = load v12
        v14 = get_local ptr { b256, u64, u64 }, __tuple_2_, !262
        store v13 to v14, !262
        v15 = get_local ptr { b256, u64, u64 }, __tuple_2_, !262
        v16 = const u64 0
        v17 = get_elem_ptr v15, ptr b256, v16, !262
        v18 = load v17
        v19 = get_local ptr b256, offset_slot, !262
        store v18 to v19, !262
        v20 = get_local ptr { b256, u64, u64 }, __tuple_2_, !262
        v21 = const u64 1
        v22 = get_elem_ptr v20, ptr u64, v21, !262
        v23 = load v22
        v24 = get_local ptr u64, number_of_slots, !262
        v25 = get_local ptr { b256, u64, u64 }, __tuple_2_, !262
        v26 = const u64 2
        v27 = get_elem_ptr v25, ptr u64, v26, !262
        v28 = load v27
        v29 = get_local ptr u64, place_in_slot, !262
        v30 = get_local ptr u64, number_of_slots, !263
        v31 = const u64 32, !264
        v32 = call multiply_34(v23, v31), !265
        v33 = call alloc_42(v32), !266
        v34 = get_local ptr u64, result_ptr, !267
        v35 = get_local ptr b256, offset_slot, !268
        v36 = load v35
        v37 = get_local ptr u64, result_ptr, !269
        v38 = get_local ptr u64, number_of_slots, !270
        v39 = get_local ptr b256, key_for_storage, !271
        store v36 to v39, !271
        v40 = int_to_ptr v33 to ptr b256, !271
        v41 = state_load_quad_word v40, key v39, v23, !271
        cbr v41, block3(), block4(), !271

        block3():
        v42 = get_local ptr { u64, ( () | b256 ) }, __anon_1, !103
        v43 = const u64 0
        v44 = get_elem_ptr v42, ptr u64, v43, !103
        v45 = const u64 1, !103
        store v45 to v44, !103
        v46 = get_local ptr u64, result_ptr, !272
        v47 = get_local ptr u64, place_in_slot, !273
        v48 = call add_44(v33, v28), !274
        v49 = call read_43(v48), !275
        v50 = const u64 1
        v51 = const u64 1
        v52 = get_elem_ptr v42, ptr b256, v50, v51, !103
        store v49 to v52, !103
        v53 = load v42
        br block5(v53)

        block4():
        v54 = get_local ptr { u64, ( () | b256 ) }, __anon_2, !103
        v55 = const u64 0
        v56 = get_elem_ptr v54, ptr u64, v55, !103
        v57 = const u64 0, !103
        store v57 to v56, !103
        v58 = load v54
        br block5(v58)

        block5(v59: { u64, ( () | b256 ) }):
        ret { u64, ( () | b256 ) } v59
    }

    fn slot_calculator_31(slot !276: b256, offset !277: u64) -> { b256, u64, u64 }, !278 {
        local { b256, u64, u64 } __anon_0
        local bool __matched_value_1
        local u64 last_slot
        local u64 number_of_slots
        local mut u256 offset_slot
        local u64 place_in_slot
        local u64 size_of_t

        entry(slot: b256, offset: u64):
        v0 = get_local ptr u64, size_of_t, !279
        v1 = const u64 8, !280
        v2 = call multiply_34(offset, v1), !281
        v3 = get_local ptr u64, size_of_t, !282
        v4 = const u64 32
        v5 = call add_33(v2, v4), !283
        v6 = const u64 31, !284
        v7 = call add_33(v5, v6), !285
        v8 = const u64 5, !286
        v9 = call rsh_32(v7, v8), !287
        v10 = get_local ptr u64, last_slot, !288
        v11 = const u64 4, !289
        v12 = call modulo_35(offset, v11), !290
        v13 = get_local ptr u64, place_in_slot, !291
        v14 = get_local ptr bool, __matched_value_1, !292
        v15 = get_local ptr bool, __matched_value_1, !293
        v16 = const bool true
        v17 = const bool true, !294
        v18 = call eq_36(v16, v17), !295
        cbr v18, block0(), block1(), !295

        block0():
        v19 = get_local ptr u64, place_in_slot, !296
        v20 = const u64 8, !297
        v21 = call multiply_34(v12, v20), !298
        v22 = get_local ptr u64, size_of_t, !299
        v23 = call add_33(v21, v4), !300
        v24 = const u64 31, !301
        v25 = call add_33(v23, v24), !302
        v26 = const u64 5, !303
        v27 = call rsh_32(v25, v26), !304
        br block5(v27)

        block1():
        v28 = get_local ptr bool, __matched_value_1, !293
        v29 = const bool false, !305
        v30 = call eq_36(v16, v29), !306
        cbr v30, block2(), block3(), !306

        block2():
        v31 = const u64 1, !307
        br block4(v31)

        block3():
        v32 = const u64 14757395258967588866, !292
        revert v32, !292

        block4(v33: u64):
        br block5(v33)

        block5(v34: u64):
        v35 = get_local ptr u64, number_of_slots, !308
        v36 = call as_u256_37(slot), !309
        v37 = get_local ptr u256, offset_slot, !310
        store v36 to v37, !310
        v38 = get_local ptr u256, offset_slot, !311
        v39 = load v38
        v40 = get_local ptr u64, last_slot, !312
        v41 = call as_u256_40(v9), !313
        v42 = get_local ptr u64, number_of_slots, !314
        v43 = call as_u256_40(v34), !315
        v44 = call subtract_39(v41, v43), !316
        v45 = call add_38(v39, v44), !317
        v46 = get_local ptr u256, offset_slot, !317
        store v45 to v46, !317
        v47 = get_local ptr u256, offset_slot, !318
        v48 = load v47
        v49 = call as_b256_41(v48), !319
        v50 = get_local ptr u64, number_of_slots, !320
        v51 = get_local ptr u64, place_in_slot, !321
        v52 = get_local ptr { b256, u64, u64 }, __anon_0, !322
        v53 = const u64 0
        v54 = get_elem_ptr v52, ptr b256, v53, !322
        store v49 to v54, !322
        v55 = const u64 1
        v56 = get_elem_ptr v52, ptr u64, v55, !322
        store v34 to v56, !322
        v57 = const u64 2
        v58 = get_elem_ptr v52, ptr u64, v57, !322
        store v12 to v58, !322
        v59 = load v52
        ret { b256, u64, u64 } v59
    }

    pub fn rsh_32(self !323: u64, other !324: u64) -> u64, !325 {
        entry(self: u64, other: u64):
        v0 = rsh self, other
        ret u64 v0
    }

    pub fn add_33(self !326: u64, other !327: u64) -> u64, !328 {
        entry(self: u64, other: u64):
        v0 = add self, other
        ret u64 v0
    }

    pub fn multiply_34(self !329: u64, other !330: u64) -> u64, !331 {
        entry(self: u64, other: u64):
        v0 = mul self, other
        ret u64 v0
    }

    pub fn modulo_35(self !332: u64, other !333: u64) -> u64, !334 {
        entry(self: u64, other: u64):
        v0 = mod self, other
        ret u64 v0
    }

    pub fn eq_36(self !335: bool, other !336: bool) -> bool, !337 {
        entry(self: bool, other: bool):
        v0 = cmp eq self other
        ret bool v0
    }

    pub fn as_u256_37(self !338: b256) -> u256, !339 {
        entry(self: b256):
        v0 = asm(input: self) -> u256 input, !340 {
        }
        ret u256 v0
    }

    pub fn add_38(self !341: u256, other !342: u256) -> u256, !343 {
        entry(self: u256, other: u256):
        v0 = add self, other
        ret u256 v0
    }

    pub fn subtract_39(self !344: u256, other !345: u256) -> u256, !346 {
        entry(self: u256, other: u256):
        v0 = sub self, other
        ret u256 v0
    }

    pub fn as_u256_40(self !347: u64) -> u256, !348 {
        local { u64, u64, u64, u64 } __anon_0
        local { u64, u64, u64, u64 } input

        entry(self: u64):
        v0 = get_local ptr { u64, u64, u64, u64 }, __anon_0, !349
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr u64, v1, !349
        v3 = const u64 0, !350
        store v3 to v2, !349
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4, !349
        v6 = const u64 0, !351
        store v6 to v5, !349
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr u64, v7, !349
        v9 = const u64 0, !352
        store v9 to v8, !349
        v10 = const u64 3
        v11 = get_elem_ptr v0, ptr u64, v10, !349
        store self to v11, !349
        v12 = load v0
        v13 = get_local ptr { u64, u64, u64, u64 }, input, !353
        store v12 to v13, !353
        v14 = get_local ptr { u64, u64, u64, u64 }, input, !354
        v15 = asm(input: v14) -> u256 input, !355 {
        }
        ret u256 v15
    }

    pub fn as_b256_41(self !356: u256) -> b256, !357 {
        entry(self: u256):
        v0 = asm(input: self) -> b256 input, !358 {
        }
        ret b256 v0
    }

    pub fn alloc_42(count !360: u64) -> u64, !361 {
        entry(count: u64):
        v0 = const u64 8
        v1 = call multiply_34(v0, count), !362
        v2 = asm(size: v1, ptr) -> u64 ptr, !363 {
            aloc   size, !364
            move   ptr hp, !365
        }
        ret u64 v2
    }

    pub fn read_43(self !367: u64) -> b256, !368 {
        entry(self: u64):
        v0 = const bool true
        cbr v0, block0(), block1(), !369

        block0():
        v1 = asm(ptr: self) -> b256 ptr, !370 {
        }
        br block5(v1)

        block1():
        v2 = const u64 32
        v3 = const u64 1, !371
        v4 = cmp eq v2 v3
        cbr v4, block2(), block3(), !372

        block2():
        v5 = asm(ptr: self, val) -> b256 val, !373 {
            lb     val ptr i0, !374
        }
        br block4(v5)

        block3():
        v6 = asm(ptr: self, val) -> b256 val, !375 {
            lw     val ptr i0, !376
        }
        br block4(v6)

        block4(v7: b256):
        br block5(v7)

        block5(v8: b256):
        ret b256 v8
    }

    pub fn add_44(self !377: u64, count !378: u64) -> u64, !379 {
        entry(self: u64, count: u64):
        v0 = const u64 8
        v1 = mul v0, count
        v2 = add self, v1
        ret u64 v2
    }

    pub fn slot_45(self !381: { b256, u64, b256 }) -> b256, !382 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !383
        v4 = load v3
        ret b256 v4
    }

    pub fn offset_46(self !384: { b256, u64, b256 }) -> u64, !385 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 1
        v3 = get_elem_ptr v1, ptr u64, v2, !386
        v4 = load v3
        ret u64 v4
    }

    pub fn write_47(self !387: { b256, u64, b256 }, value !388: u64) -> (), !390 {
        entry(self: { b256, u64, b256 }, value: u64):
        v0 = call slot_51(self), !391
        v1 = call offset_52(self), !392
        v2 = call write_48(v0, v1, value), !393
        v3 = const unit ()
        ret () v3
    }

    pub fn write_48(slot !394: b256, offset !395: u64, value !396: u64) -> (), !398 {
        local bool _
        local bool __
        local { b256, u64, u64 } __tuple_1
        local { b256, u64, u64 } __tuple_1_
        local b256 key_for_storage
        local b256 key_for_storage_
        local u64 number_of_slots
        local b256 offset_slot
        local u64 padded_value
        local u64 place_in_slot

        entry(slot: b256, offset: u64, value: u64):
        v0 = const u64 8
        v1 = const u64 0, !399
        v2 = call eq_5(v0, v1), !400
        cbr v2, block0(), block1(), !400

        block0():
        v3 = const unit (), !401
        ret () v3, !401

        block1():
        v4 = const unit ()
        br block2(v4)

        block2(v5: ()):
        v6 = call slot_calculator_49(slot, offset), !402
        v7 = get_local ptr { b256, u64, u64 }, __tuple_1, !403
        store v6 to v7, !403
        v8 = get_local ptr { b256, u64, u64 }, __tuple_1, !403
        v9 = load v8
        v10 = get_local ptr { b256, u64, u64 }, __tuple_1_, !403
        store v9 to v10, !403
        v11 = get_local ptr { b256, u64, u64 }, __tuple_1_, !403
        v12 = const u64 0
        v13 = get_elem_ptr v11, ptr b256, v12, !403
        v14 = load v13
        v15 = get_local ptr b256, offset_slot, !403
        store v14 to v15, !403
        v16 = get_local ptr { b256, u64, u64 }, __tuple_1_, !403
        v17 = const u64 1
        v18 = get_elem_ptr v16, ptr u64, v17, !403
        v19 = load v18
        v20 = get_local ptr u64, number_of_slots, !403
        v21 = get_local ptr { b256, u64, u64 }, __tuple_1_, !403
        v22 = const u64 2
        v23 = get_elem_ptr v21, ptr u64, v22, !403
        v24 = load v23
        v25 = get_local ptr u64, place_in_slot, !403
        v26 = get_local ptr u64, number_of_slots, !404
        v27 = const u64 32, !405
        v28 = call multiply_34(v19, v27), !406
        v29 = call alloc_42(v28), !407
        v30 = get_local ptr u64, padded_value, !408
        v31 = get_local ptr b256, offset_slot, !409
        v32 = load v31
        v33 = get_local ptr u64, padded_value, !410
        v34 = get_local ptr u64, number_of_slots, !411
        v35 = get_local ptr b256, key_for_storage, !412
        store v32 to v35, !412
        v36 = int_to_ptr v29 to ptr b256, !412
        v37 = state_load_quad_word v36, key v35, v19, !412
        v38 = get_local ptr bool, _, !413
        v39 = get_local ptr u64, padded_value, !414
        v40 = get_local ptr u64, place_in_slot, !415
        v41 = call add_44(v29, v24), !416
        v42 = call write_50(v41, value), !417
        v43 = get_local ptr b256, offset_slot, !418
        v44 = load v43
        v45 = get_local ptr u64, padded_value, !419
        v46 = get_local ptr u64, number_of_slots, !420
        v47 = get_local ptr b256, key_for_storage_, !421
        store v44 to v47, !421
        v48 = int_to_ptr v29 to ptr b256, !421
        v49 = state_store_quad_word v48, key v47, v19, !421
        v50 = get_local ptr bool, __, !422
        v51 = const unit ()
        ret () v51
    }

    fn slot_calculator_49(slot !276: b256, offset !277: u64) -> { b256, u64, u64 }, !278 {
        local { b256, u64, u64 } __anon_0
        local bool __matched_value_1
        local u64 last_slot
        local u64 number_of_slots
        local mut u256 offset_slot
        local u64 place_in_slot
        local u64 size_of_t

        entry(slot: b256, offset: u64):
        v0 = get_local ptr u64, size_of_t, !279
        v1 = const u64 8, !280
        v2 = call multiply_34(offset, v1), !281
        v3 = get_local ptr u64, size_of_t, !282
        v4 = const u64 8
        v5 = call add_33(v2, v4), !283
        v6 = const u64 31, !284
        v7 = call add_33(v5, v6), !285
        v8 = const u64 5, !286
        v9 = call rsh_32(v7, v8), !287
        v10 = get_local ptr u64, last_slot, !288
        v11 = const u64 4, !289
        v12 = call modulo_35(offset, v11), !290
        v13 = get_local ptr u64, place_in_slot, !291
        v14 = get_local ptr bool, __matched_value_1, !292
        v15 = get_local ptr bool, __matched_value_1, !293
        v16 = const bool false
        v17 = const bool true, !294
        v18 = call eq_36(v16, v17), !295
        cbr v18, block0(), block1(), !295

        block0():
        v19 = get_local ptr u64, place_in_slot, !296
        v20 = const u64 8, !297
        v21 = call multiply_34(v12, v20), !298
        v22 = get_local ptr u64, size_of_t, !299
        v23 = call add_33(v21, v4), !300
        v24 = const u64 31, !301
        v25 = call add_33(v23, v24), !302
        v26 = const u64 5, !303
        v27 = call rsh_32(v25, v26), !304
        br block5(v27)

        block1():
        v28 = get_local ptr bool, __matched_value_1, !293
        v29 = const bool false, !305
        v30 = call eq_36(v16, v29), !306
        cbr v30, block2(), block3(), !306

        block2():
        v31 = const u64 1, !307
        br block4(v31)

        block3():
        v32 = const u64 14757395258967588866, !292
        revert v32, !292

        block4(v33: u64):
        br block5(v33)

        block5(v34: u64):
        v35 = get_local ptr u64, number_of_slots, !308
        v36 = call as_u256_37(slot), !309
        v37 = get_local ptr u256, offset_slot, !310
        store v36 to v37, !310
        v38 = get_local ptr u256, offset_slot, !311
        v39 = load v38
        v40 = get_local ptr u64, last_slot, !312
        v41 = call as_u256_40(v9), !313
        v42 = get_local ptr u64, number_of_slots, !314
        v43 = call as_u256_40(v34), !315
        v44 = call subtract_39(v41, v43), !316
        v45 = call add_38(v39, v44), !317
        v46 = get_local ptr u256, offset_slot, !317
        store v45 to v46, !317
        v47 = get_local ptr u256, offset_slot, !318
        v48 = load v47
        v49 = call as_b256_41(v48), !319
        v50 = get_local ptr u64, number_of_slots, !320
        v51 = get_local ptr u64, place_in_slot, !321
        v52 = get_local ptr { b256, u64, u64 }, __anon_0, !322
        v53 = const u64 0
        v54 = get_elem_ptr v52, ptr b256, v53, !322
        store v49 to v54, !322
        v55 = const u64 1
        v56 = get_elem_ptr v52, ptr u64, v55, !322
        store v34 to v56, !322
        v57 = const u64 2
        v58 = get_elem_ptr v52, ptr u64, v57, !322
        store v12 to v58, !322
        v59 = load v52
        ret { b256, u64, u64 } v59
    }

    pub fn write_50(self !423: u64, val !424: u64) -> (), !425 {
        entry(self: u64, val: u64):
        v0 = const bool false
        cbr v0, block0(), block1(), !426

        block0():
        v1 = const u64 8
        v2 = asm(dst: self, src: val, count: v1) {
            mcp    dst src count, !427
        }
        v3 = const unit ()
        br block5(v3)

        block1():
        v4 = const u64 8
        v5 = const u64 1, !428
        v6 = cmp eq v4 v5
        cbr v6, block2(), block3(), !429

        block2():
        v7 = asm(ptr: self, val: val) {
            sb     ptr val i0, !430
        }
        v8 = const unit ()
        br block4(v8)

        block3():
        v9 = asm(ptr: self, val: val) {
            sw     ptr val i0, !431
        }
        v10 = const unit ()
        br block4(v10)

        block4(v11: ()):
        br block5(v11)

        block5(v12: ()):
        v13 = const unit ()
        ret () v13
    }

    pub fn slot_51(self !381: { b256, u64, b256 }) -> b256, !382 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !383
        v4 = load v3
        ret b256 v4
    }

    pub fn offset_52(self !384: { b256, u64, b256 }) -> u64, !385 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 1
        v3 = get_elem_ptr v1, ptr u64, v2, !386
        v4 = load v3
        ret u64 v4
    }
}

// IR: [fn-dedup-release] Function deduplication with metadata ignored
contract {
    pub entry fn set_data_if_owner<c626c6e2>(new_value !1: u64) -> (), !4 {
        local { b256, u64, b256 } __anon_0

        entry(new_value: u64):
        v0 = call only_owner_0(), !5
        v1 = get_local ptr { b256, u64, b256 }, __anon_0, !6
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2
        v4 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c, !6
        store v4 to v3, !6
        v5 = const u64 1
        v6 = get_elem_ptr v1, ptr u64, v5
        v7 = const u64 0
        store v7 to v6, !6
        v8 = const u64 2
        v9 = get_elem_ptr v1, ptr b256, v8
        v10 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c, !6
        store v10 to v9, !6
        v11 = load v1
        v12 = call write_47(v11, new_value), !7
        v13 = const unit ()
        ret () v13
    }

    pub fn only_owner_0() -> (), !11 {
        local { u64, ( { b256 } | { b256 } ) } __anon_0

        entry():
        v0 = call msg_sender_10(), !12
        v1 = call unwrap_9(v0), !13
        v2 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_0, !15
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !15
        v5 = const u64 0, !15
        store v5 to v4, !15
        v6 = call get_owner_27(), !16
        v7 = call from_22(v6), !17
        v8 = const u64 1
        v9 = const u64 0
        v10 = get_elem_ptr v2, ptr { b256 }, v8, v9, !15
        store v7 to v10, !15
        v11 = load v2
        v12 = call eq_4(v1, v11), !18
        v13 = call assert_1(v12), !19
        v14 = const unit ()
        ret () v14
    }

    pub fn assert_1(condition !21: bool) -> (), !22 {
        entry(condition: bool):
        v0 = call not_2(condition), !23
        cbr v0, block0(), block1(), !23

        block0():
        v1 = const u64 18446744073709486084, !25
        v2 = call revert_3(v1), !26
        v3 = const unit ()
        br block2(v3)

        block1():
        v4 = const unit ()
        br block2(v4)

        block2(v5: ()):
        v6 = const unit ()
        ret () v6
    }

    pub fn not_2(self !28: bool) -> bool, !29 {
        entry(self: bool):
        v0 = const bool false, !30
        v1 = cmp eq self v0
        ret bool v1
    }

    pub fn revert_3(code !32: u64) -> never, !33 {
        entry(code: u64):
        revert code, !34
    }

    pub fn eq_4(self !35: { u64, ( { b256 } | { b256 } ) }, other !36: { u64, ( { b256 } | { b256 } ) }) -> bool, !37 {
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __anon_0
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __matched_value_1
        local { b256 } addr1
        local { b256 } addr2
        local { b256 } id1
        local { b256 } id2

        entry(self: { u64, ( { b256 } | { b256 } ) }, other: { u64, ( { b256 } | { b256 } ) }):
        v0 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_0, !38
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr { u64, ( { b256 } | { b256 } ) }, v1, !38
        store self to v2, !38
        v3 = const u64 1
        v4 = get_elem_ptr v0, ptr { u64, ( { b256 } | { b256 } ) }, v3, !38
        store other to v4, !38
        v5 = load v0
        v6 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !39
        store v5 to v6, !39
        v7 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !38
        v8 = const u64 0
        v9 = get_elem_ptr v7, ptr { u64, ( { b256 } | { b256 } ) }, v8, !40
        v10 = const u64 0
        v11 = get_elem_ptr v9, ptr u64, v10, !40
        v12 = load v11
        v13 = const u64 0, !40
        v14 = call eq_5(v12, v13), !41
        cbr v14, block0(), block1(v14), !41

        block0():
        v15 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !38
        v16 = const u64 1
        v17 = get_elem_ptr v15, ptr { u64, ( { b256 } | { b256 } ) }, v16, !40
        v18 = const u64 0
        v19 = get_elem_ptr v17, ptr u64, v18, !40
        v20 = load v19
        v21 = const u64 0, !40
        v22 = call eq_5(v20, v21), !41
        br block1(v22), !41

        block1(v23: bool):
        cbr v23, block2(), block3(), !41

        block2():
        v24 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !38
        v25 = const u64 0
        v26 = get_elem_ptr v24, ptr { u64, ( { b256 } | { b256 } ) }, v25, !40
        v27 = const u64 1
        v28 = const u64 0
        v29 = get_elem_ptr v26, ptr { b256 }, v27, v28
        v30 = load v29
        v31 = get_local ptr { b256 }, addr1, !42
        store v30 to v31, !42
        v32 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !38
        v33 = const u64 1
        v34 = get_elem_ptr v32, ptr { u64, ( { b256 } | { b256 } ) }, v33, !40
        v35 = const u64 1
        v36 = const u64 0
        v37 = get_elem_ptr v34, ptr { b256 }, v35, v36
        v38 = load v37
        v39 = get_local ptr { b256 }, addr2, !43
        store v38 to v39, !43
        v40 = get_local ptr { b256 }, addr1, !44
        v41 = load v40
        v42 = get_local ptr { b256 }, addr2, !45
        v43 = load v42
        v44 = call eq_6(v41, v43), !46
        br block9(v44)

        block3():
        v45 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !38
        v46 = const u64 0
        v47 = get_elem_ptr v45, ptr { u64, ( { b256 } | { b256 } ) }, v46, !47
        v48 = const u64 0
        v49 = get_elem_ptr v47, ptr u64, v48, !47
        v50 = load v49
        v51 = const u64 1, !47
        v52 = call eq_5(v50, v51), !48
        cbr v52, block4(), block5(v52), !48

        block4():
        v53 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !38
        v54 = const u64 1
        v55 = get_elem_ptr v53, ptr { u64, ( { b256 } | { b256 } ) }, v54, !47
        v56 = const u64 0
        v57 = get_elem_ptr v55, ptr u64, v56, !47
        v58 = load v57
        v59 = const u64 1, !47
        v60 = call eq_5(v58, v59), !48
        br block5(v60), !48

        block5(v61: bool):
        cbr v61, block6(), block7(), !48

        block6():
        v62 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !38
        v63 = const u64 0
        v64 = get_elem_ptr v62, ptr { u64, ( { b256 } | { b256 } ) }, v63, !47
        v65 = const u64 1
        v66 = const u64 1
        v67 = get_elem_ptr v64, ptr { b256 }, v65, v66
        v68 = load v67
        v69 = get_local ptr { b256 }, id1, !49
        store v68 to v69, !49
        v70 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !38
        v71 = const u64 1
        v72 = get_elem_ptr v70, ptr { u64, ( { b256 } | { b256 } ) }, v71, !47
        v73 = const u64 1
        v74 = const u64 1
        v75 = get_elem_ptr v72, ptr { b256 }, v73, v74
        v76 = load v75
        v77 = get_local ptr { b256 }, id2, !50
        store v76 to v77, !50
        v78 = get_local ptr { b256 }, id1, !51
        v79 = load v78
        v80 = get_local ptr { b256 }, id2, !52
        v81 = load v80
        v82 = call eq_6(v79, v81), !53
        br block8(v82)

        block7():
        v83 = const bool false, !54
        br block8(v83)

        block8(v84: bool):
        br block9(v84)

        block9(v85: bool):
        ret bool v85
    }

    pub fn eq_5(self !55: u64, other !56: u64) -> bool, !57 {
        entry(self: u64, other: u64):
        v0 = cmp eq self other
        ret bool v0
    }

    pub fn eq_6(self !59: { b256 }, other !60: { b256 }) -> bool, !61 {
        entry(self: { b256 }, other: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !62
        v4 = load v3
        v5 = ptr_to_int other to u64
        v6 = int_to_ptr v5 to ptr { b256 }
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr b256, v7, !62
        v9 = load v8
        v10 = call eq_7(v4, v9), !63
        ret bool v10
    }

    pub fn eq_7(self !64: b256, other !65: b256) -> bool, !66 {
        entry(self: b256, other: b256):
        v0 = cmp eq self other
        ret bool v0
    }

    pub fn eq_8(self !68: { b256 }, other !69: { b256 }) -> bool, !70 {
        entry(self: { b256 }, other: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !71
        v4 = load v3
        v5 = ptr_to_int other to u64
        v6 = int_to_ptr v5 to ptr { b256 }
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr b256, v7, !71
        v9 = load v8
        v10 = call eq_7(v4, v9), !72
        ret bool v10
    }

    pub fn unwrap_9(self !74: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }) -> { u64, ( { b256 } | { b256 } ) }, !75 {
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __matched_value_3
        local { u64, ( { b256 } | { b256 } ) } inner_value

        entry(self: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v0 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_3, !76
        store self to v0, !76
        v1 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_3, !77
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !77
        v4 = load v3
        v5 = const u64 0, !77
        v6 = call eq_5(v4, v5), !78
        cbr v6, block0(), block1(), !78

        block0():
        v7 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_3, !77
        v8 = const u64 1
        v9 = const u64 0
        v10 = get_elem_ptr v7, ptr { u64, ( { b256 } | { b256 } ) }, v8, v9
        v11 = load v10
        v12 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !79
        store v11 to v12, !79
        v13 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !80
        v14 = load v13
        br block2(v14)

        block1():
        v15 = const u64 0, !81
        v16 = call revert_3(v15), !82
        br block2(v16)

        block2(v17: { u64, ( { b256 } | { b256 } ) }):
        ret { u64, ( { b256 } | { b256 } ) } v17
    }

    pub fn msg_sender_10() -> { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, !84 {
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_0
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_1
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { b256 } ) } __anon_4
        local { u64, ( { b256 } | { u64 } ) } __matched_value_1
        local { u64 } err
        local { b256 } owner

        entry():
        v0 = call caller_is_external_11(), !85
        cbr v0, block0(), block7(), !85

        block0():
        v1 = call caller_address_12(), !86
        v2 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !87
        store v1 to v2, !87
        v3 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !86
        v4 = const u64 0
        v5 = get_elem_ptr v3, ptr u64, v4, !86
        v6 = load v5
        v7 = const u64 1, !86
        v8 = call eq_5(v6, v7), !88
        cbr v8, block1(), block2(), !88

        block1():
        v9 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !86
        v10 = const u64 1
        v11 = const u64 1
        v12 = get_elem_ptr v9, ptr { u64 }, v10, v11
        v13 = load v12
        v14 = get_local ptr { u64 }, err, !89
        store v13 to v14, !89
        v15 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_0, !90
        v16 = const u64 0
        v17 = get_elem_ptr v15, ptr u64, v16, !90
        v18 = const u64 1, !90
        store v18 to v17, !90
        v19 = get_local ptr { u64 }, err, !91
        v20 = load v19
        v21 = const u64 1
        v22 = const u64 1
        v23 = get_elem_ptr v15, ptr { u64 }, v21, v22, !90
        store v20 to v23, !90
        v24 = load v15
        br block6(v24)

        block2():
        v25 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !86
        v26 = const u64 0
        v27 = get_elem_ptr v25, ptr u64, v26, !86
        v28 = load v27
        v29 = const u64 0, !86
        v30 = call eq_5(v28, v29), !92
        cbr v30, block3(), block4(), !92

        block3():
        v31 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !86
        v32 = const u64 1
        v33 = const u64 0
        v34 = get_elem_ptr v31, ptr { b256 }, v32, v33
        v35 = load v34
        v36 = get_local ptr { b256 }, owner, !93
        store v35 to v36, !93
        v37 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_1, !90
        v38 = const u64 0
        v39 = get_elem_ptr v37, ptr u64, v38, !90
        v40 = const u64 0, !90
        store v40 to v39, !90
        v41 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !15
        v42 = const u64 0
        v43 = get_elem_ptr v41, ptr u64, v42, !15
        v44 = const u64 0, !15
        store v44 to v43, !15
        v45 = get_local ptr { b256 }, owner, !94
        v46 = load v45
        v47 = const u64 1
        v48 = const u64 0
        v49 = get_elem_ptr v41, ptr { b256 }, v47, v48, !15
        store v46 to v49, !15
        v50 = load v41
        v51 = const u64 1
        v52 = const u64 0
        v53 = get_elem_ptr v37, ptr { u64, ( { b256 } | { b256 } ) }, v51, v52, !90
        store v50 to v53, !90
        v54 = load v37
        br block5(v54)

        block4():
        v55 = const u64 14757395258967588866, !87
        revert v55, !87

        block5(v56: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        br block6(v56)

        block6(v57: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        br block8(v57)

        block7():
        v58 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_3, !90
        v59 = const u64 0
        v60 = get_elem_ptr v58, ptr u64, v59, !90
        v61 = const u64 0, !90
        store v61 to v60, !90
        v62 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_4, !15
        v63 = const u64 0
        v64 = get_elem_ptr v62, ptr u64, v63, !15
        v65 = const u64 1, !15
        store v65 to v64, !15
        v66 = call caller_contract_id_25(), !95
        v67 = const u64 1
        v68 = const u64 1
        v69 = get_elem_ptr v62, ptr { b256 }, v67, v68, !15
        store v66 to v69, !15
        v70 = load v62
        v71 = const u64 1
        v72 = const u64 0
        v73 = get_elem_ptr v58, ptr { u64, ( { b256 } | { b256 } ) }, v71, v72, !90
        store v70 to v73, !90
        v74 = load v58
        br block8(v74)

        block8(v75: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        ret { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } v75
    }

    pub fn caller_is_external_11() -> bool, !96 {
        entry():
        v0 = asm(r1) -> bool r1, !97 {
            gm     r1 i1, !98
        }
        ret bool v0
    }

    pub fn caller_address_12() -> { u64, ( { b256 } | { u64 } ) }, !99 {
        local { u64, ( () | { b256 } ) } __anon_0
        local { u64, ( { b256 } | { u64 } ) } __anon_1
        local { u64 } __anon_2
        local { u64, ( { b256 } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { u64 } ) } __anon_4
        local { u64 } __anon_5
        local { u64 } __matched_value_2
        local { u64, ( () | { b256 } ) } __matched_value_3
        local { b256 } address
        local mut { u64, ( () | { b256 } ) } candidate
        local mut u64 i
        local u64 inputs
        local { u64, ( () | { b256 } ) } owner_of_input
        local { u64 } type_of_input

        entry():
        v0 = call input_count_13(), !100
        v1 = get_local ptr u64, inputs, !101
        v2 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0, !103
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !103
        v5 = const u64 0, !103
        store v5 to v4, !103
        v6 = load v2
        v7 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !104
        store v6 to v7, !104
        v8 = get_local ptr u64, i, !105
        v9 = const u64 0, !106
        br while(v9)

        while(v10: u64):
        v11 = get_local ptr u64, i, !107
        v12 = get_local ptr u64, inputs, !108
        v13 = call lt_16(v10, v0), !109
        cbr v13, while_body(), end_while()

        while_break():
        br end_while()

        while_body():
        v14 = get_local ptr u64, i, !110
        v15 = call as_u64_18(v10), !111
        v16 = call input_type_17(v15), !112
        v17 = get_local ptr { u64 }, type_of_input, !113
        store v16 to v17, !113
        v18 = get_local ptr { u64 }, type_of_input, !114
        v19 = load v18
        v20 = get_local ptr { u64 }, __matched_value_2, !115
        store v19 to v20, !115
        v21 = get_local ptr { u64 }, __matched_value_2, !114
        v22 = const u64 0
        v23 = get_elem_ptr v21, ptr u64, v22, !114
        v24 = load v23
        v25 = const u64 0, !114
        v26 = call eq_5(v24, v25), !116
        cbr v26, block0(), block1(), !116

        block0():
        v27 = const unit (), !117
        br block5(v27)

        block1():
        v28 = get_local ptr { u64 }, __matched_value_2, !114
        v29 = const u64 0
        v30 = get_elem_ptr v28, ptr u64, v29, !114
        v31 = load v30
        v32 = const u64 2, !114
        v33 = call eq_5(v31, v32), !118
        cbr v33, block2(), block3(), !118

        block2():
        v34 = const unit (), !119
        br block4(v34)

        block3():
        v35 = get_local ptr u64, i, !120
        v36 = const u64 1, !121
        v37 = call add_19(v10, v36), !122
        v38 = get_local ptr u64, i, !122
        br while(v37)

        block4(v39: ()):
        br block5(v39)

        block5(v40: ()):
        v41 = get_local ptr u64, i, !123
        v42 = call as_u64_18(v10), !124
        v43 = call input_coin_owner_21(v42), !125
        v44 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !126
        store v43 to v44, !126
        v45 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !127
        v46 = load v45
        v47 = call is_none_23(v46), !128
        cbr v47, block6(), block7(), !128

        block6():
        v48 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !129
        v49 = load v48
        v50 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !130
        store v49 to v50, !130
        v51 = get_local ptr u64, i, !131
        v52 = const u64 1, !132
        v53 = call add_19(v10, v52), !133
        v54 = get_local ptr u64, i, !133
        br while(v53)

        block7():
        v55 = const unit ()
        br block8(v55)

        block8(v56: ()):
        v57 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !134
        v58 = load v57
        v59 = call unwrap_24(v58), !135
        v60 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !136
        v61 = load v60
        v62 = call unwrap_24(v61), !137
        v63 = call eq_6(v59, v62), !138
        cbr v63, block9(), block10(), !138

        block9():
        v64 = get_local ptr u64, i, !139
        v65 = const u64 1, !140
        v66 = call add_19(v10, v65), !141
        v67 = get_local ptr u64, i, !141
        br while(v66)

        block10():
        v68 = const unit ()
        br block11(v68)

        block11(v69: ()):
        v70 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_1, !90
        v71 = const u64 0
        v72 = get_elem_ptr v70, ptr u64, v71, !90
        v73 = const u64 1, !90
        store v73 to v72, !90
        v74 = get_local ptr { u64 }, __anon_2, !142
        v75 = const u64 0
        v76 = get_elem_ptr v74, ptr u64, v75, !142
        v77 = const u64 0, !142
        store v77 to v76, !142
        v78 = load v74
        v79 = const u64 1
        v80 = const u64 1
        v81 = get_elem_ptr v70, ptr { u64 }, v79, v80, !90
        store v78 to v81, !90
        v82 = load v70
        ret { u64, ( { b256 } | { u64 } ) } v82, !143

        end_while():
        v83 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !144
        v84 = load v83
        v85 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !145
        store v84 to v85, !145
        v86 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !144
        v87 = const u64 0
        v88 = get_elem_ptr v86, ptr u64, v87, !144
        v89 = load v88
        v90 = const u64 1, !144
        v91 = call eq_5(v89, v90), !146
        cbr v91, block12(), block13(), !146

        block12():
        v92 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !144
        v93 = const u64 1
        v94 = const u64 1
        v95 = get_elem_ptr v92, ptr { b256 }, v93, v94
        v96 = load v95
        v97 = get_local ptr { b256 }, address, !147
        store v96 to v97, !147
        v98 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_3, !90
        v99 = const u64 0
        v100 = get_elem_ptr v98, ptr u64, v99, !90
        v101 = const u64 0, !90
        store v101 to v100, !90
        v102 = get_local ptr { b256 }, address, !148
        v103 = load v102
        v104 = const u64 1
        v105 = const u64 0
        v106 = get_elem_ptr v98, ptr { b256 }, v104, v105, !90
        store v103 to v106, !90
        v107 = load v98
        br block17(v107)

        block13():
        v108 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !144
        v109 = const u64 0
        v110 = get_elem_ptr v108, ptr u64, v109, !144
        v111 = load v110
        v112 = const u64 0, !144
        v113 = call eq_5(v111, v112), !149
        cbr v113, block14(), block15(), !149

        block14():
        v114 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_4, !90
        v115 = const u64 0
        v116 = get_elem_ptr v114, ptr u64, v115, !90
        v117 = const u64 1, !90
        store v117 to v116, !90
        v118 = get_local ptr { u64 }, __anon_5, !142
        v119 = const u64 0
        v120 = get_elem_ptr v118, ptr u64, v119, !142
        v121 = const u64 1, !142
        store v121 to v120, !142
        v122 = load v118
        v123 = const u64 1
        v124 = const u64 1
        v125 = get_elem_ptr v114, ptr { u64 }, v123, v124, !90
        store v122 to v125, !90
        v126 = load v114
        br block16(v126)

        block15():
        v127 = const u64 14757395258967588866, !145
        revert v127, !145

        block16(v128: { u64, ( { b256 } | { u64 } ) }):
        br block17(v128)

        block17(v129: { u64, ( { b256 } | { u64 } ) }):
        ret { u64, ( { b256 } | { u64 } ) } v129
    }

    pub fn input_count_13() -> u64, !151 {
        local { u64 } __matched_value_3

        entry():
        v0 = call tx_type_14(), !152
        v1 = get_local ptr { u64 }, __matched_value_3, !153
        store v0 to v1, !153
        v2 = get_local ptr { u64 }, __matched_value_3, !152
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !152
        v5 = load v4
        v6 = const u64 0, !152
        v7 = call eq_5(v5, v6), !154
        cbr v7, block0(), block1(), !154

        block0():
        v8 = const u64 0, !155
        v9 = gtf v8, 5, !156
        v10 = bitcast v9 to u64, !156
        br block5(v10)

        block1():
        v11 = get_local ptr { u64 }, __matched_value_3, !152
        v12 = const u64 0
        v13 = get_elem_ptr v11, ptr u64, v12, !152
        v14 = load v13
        v15 = const u64 1, !152
        v16 = call eq_5(v14, v15), !157
        cbr v16, block2(), block3(), !157

        block2():
        v17 = const u64 0, !158
        v18 = gtf v17, 259, !159
        v19 = bitcast v18 to u64, !159
        br block4(v19)

        block3():
        v20 = const u64 14757395258967588866, !153
        revert v20, !153

        block4(v21: u64):
        br block5(v21)

        block5(v22: u64):
        ret u64 v22
    }

    pub fn tx_type_14() -> { u64 }, !161 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local u8 __matched_value_1

        entry():
        v0 = const u64 0, !162
        v1 = gtf v0, 1, !163
        v2 = bitcast v1 to u8, !163
        v3 = get_local ptr u8, __matched_value_1, !164
        v4 = get_local ptr u8, __matched_value_1, !163
        v5 = const u8 0, !165
        v6 = call eq_15(v2, v5), !166
        cbr v6, block0(), block1(), !166

        block0():
        v7 = get_local ptr { u64 }, __anon_0, !167
        v8 = const u64 0
        v9 = get_elem_ptr v7, ptr u64, v8, !167
        v10 = const u64 0, !167
        store v10 to v9, !167
        v11 = load v7
        br block5(v11)

        block1():
        v12 = get_local ptr u8, __matched_value_1, !163
        v13 = const u8 1, !168
        v14 = call eq_15(v2, v13), !169
        cbr v14, block2(), block3(), !169

        block2():
        v15 = get_local ptr { u64 }, __anon_1, !167
        v16 = const u64 0
        v17 = get_elem_ptr v15, ptr u64, v16, !167
        v18 = const u64 1, !167
        store v18 to v17, !167
        v19 = load v15
        br block4(v19)

        block3():
        v20 = const u64 0, !170
        v21 = call revert_3(v20), !171
        br block4(v21)

        block4(v22: { u64 }):
        br block5(v22)

        block5(v23: { u64 }):
        ret { u64 } v23
    }

    pub fn eq_15(self !172: u8, other !173: u8) -> bool, !174 {
        entry(self: u8, other: u8):
        v0 = cmp eq self other
        ret bool v0
    }

    pub fn lt_16(self !175: u64, other !176: u64) -> bool, !177 {
        entry(self: u64, other: u64):
        v0 = cmp lt self other
        ret bool v0
    }

    pub fn input_type_17(index !178: u64) -> { u64 }, !179 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local u8 __matched_value_2

        entry(index: u64):
        v0 = gtf index, 512, !180
        v1 = bitcast v0 to u8, !180
        v2 = get_local ptr u8, __matched_value_2, !181
        v3 = get_local ptr u8, __matched_value_2, !180
        v4 = const u8 0, !182
        v5 = call eq_15(v1, v4), !183
        cbr v5, block0(), block1(), !183

        block0():
        v6 = get_local ptr { u64 }, __anon_0, !184
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr u64, v7, !184
        v9 = const u64 0, !184
        store v9 to v8, !184
        v10 = load v6
        br block8(v10)

        block1():
        v11 = get_local ptr u8, __matched_value_2, !180
        v12 = const u8 1, !185
        v13 = call eq_15(v1, v12), !186
        cbr v13, block2(), block3(), !186

        block2():
        v14 = get_local ptr { u64 }, __anon_1, !184
        v15 = const u64 0
        v16 = get_elem_ptr v14, ptr u64, v15, !184
        v17 = const u64 1, !184
        store v17 to v16, !184
        v18 = load v14
        br block7(v18)

        block3():
        v19 = get_local ptr u8, __matched_value_2, !180
        v20 = const u8 2, !187
        v21 = call eq_15(v1, v20), !188
        cbr v21, block4(), block5(), !188

        block4():
        v22 = get_local ptr { u64 }, __anon_2, !184
        v23 = const u64 0
        v24 = get_elem_ptr v22, ptr u64, v23, !184
        v25 = const u64 2, !184
        store v25 to v24, !184
        v26 = load v22
        br block6(v26)

        block5():
        v27 = const u64 0, !189
        v28 = call revert_3(v27), !190
        br block6(v28)

        block6(v29: { u64 }):
        br block7(v29)

        block7(v30: { u64 }):
        br block8(v30)

        block8(v31: { u64 }):
        ret { u64 } v31
    }

    pub fn as_u64_18(self !192: u64) -> u64, !193 {
        entry(self: u64):
        v0 = asm(input: self) -> u64 input, !194 {
        }
        ret u64 v0
    }

    pub fn add_19(self !195: u64, other !196: u64) -> u64, !197 {
        local u64 res

        entry(self: u64, other: u64):
        v0 = add self, other
        v1 = get_local ptr u64, res, !198
        v2 = get_local ptr u64, res, !199
        v3 = call max_20(), !200
        v4 = cmp gt v0 v3
        cbr v4, block0(), block1(), !201

        block0():
        v5 = const u64 0, !202
        revert v5, !203

        block1():
        v6 = get_local ptr u64, res, !204
        br block2(v0)

        block2(v7: u64):
        ret u64 v7
    }

    pub fn max_20() -> u64, !206 {
        entry():
        v0 = const u64 65535, !207
        ret u64 v0
    }

    pub fn input_coin_owner_21(index !208: u64) -> { u64, ( () | { b256 } ) }, !209 {
        local { u64, ( () | { b256 } ) } __anon_0
        local { u64, ( () | { b256 } ) } __anon_1
        local { u64 } __matched_value_6

        entry(index: u64):
        v0 = call input_type_17(index), !210
        v1 = get_local ptr { u64 }, __matched_value_6, !211
        store v0 to v1, !211
        v2 = get_local ptr { u64 }, __matched_value_6, !210
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !210
        v5 = load v4
        v6 = const u64 0, !210
        v7 = call eq_5(v5, v6), !212
        cbr v7, block0(), block1(), !212

        block0():
        v8 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0, !103
        v9 = const u64 0
        v10 = get_elem_ptr v8, ptr u64, v9, !103
        v11 = const u64 1, !103
        store v11 to v10, !103
        v12 = gtf index, 515, !213
        v13 = int_to_ptr v12 to ptr b256, !213
        v14 = load v13
        v15 = call from_22(v14), !214
        v16 = const u64 1
        v17 = const u64 1
        v18 = get_elem_ptr v8, ptr { b256 }, v16, v17, !103
        store v15 to v18, !103
        v19 = load v8
        br block2(v19)

        block1():
        v20 = get_local ptr { u64, ( () | { b256 } ) }, __anon_1, !103
        v21 = const u64 0
        v22 = get_elem_ptr v20, ptr u64, v21, !103
        v23 = const u64 0, !103
        store v23 to v22, !103
        v24 = load v20
        br block2(v24)

        block2(v25: { u64, ( () | { b256 } ) }):
        ret { u64, ( () | { b256 } ) } v25
    }

    pub fn from_22(bits !215: b256) -> { b256 }, !216 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !217
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !217
        v3 = load v0
        ret { b256 } v3
    }

    pub fn is_none_23(self !218: { u64, ( () | { b256 } ) }) -> bool, !219 {
        local { u64, ( () | { b256 } ) } __matched_value_3

        entry(self: { u64, ( () | { b256 } ) }):
        v0 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !220
        store self to v0, !220
        v1 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !221
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !221
        v4 = load v3
        v5 = const u64 1, !221
        v6 = call eq_5(v4, v5), !222
        cbr v6, block0(), block1(), !222

        block0():
        v7 = const bool false, !223
        br block2(v7)

        block1():
        v8 = const bool true, !224
        br block2(v8)

        block2(v9: bool):
        ret bool v9
    }

    pub fn unwrap_24(self !225: { u64, ( () | { b256 } ) }) -> { b256 }, !226 {
        local { u64, ( () | { b256 } ) } __matched_value_4
        local { b256 } inner_value

        entry(self: { u64, ( () | { b256 } ) }):
        v0 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !227
        store self to v0, !227
        v1 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !228
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !228
        v4 = load v3
        v5 = const u64 1, !228
        v6 = call eq_5(v4, v5), !229
        cbr v6, block0(), block1(), !229

        block0():
        v7 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !228
        v8 = const u64 1
        v9 = const u64 1
        v10 = get_elem_ptr v7, ptr { b256 }, v8, v9
        v11 = load v10
        v12 = get_local ptr { b256 }, inner_value, !230
        store v11 to v12, !230
        v13 = get_local ptr { b256 }, inner_value, !231
        v14 = load v13
        br block2(v14)

        block1():
        v15 = const u64 0, !232
        v16 = call revert_3(v15), !233
        br block2(v16)

        block2(v17: { b256 }):
        ret { b256 } v17
    }

    pub fn caller_contract_id_25() -> { b256 }, !234 {
        entry():
        v0 = asm(r1) -> b256 r1, !235 {
            gm     r1 i2, !236
        }
        v1 = call from_22(v0), !237
        ret { b256 } v1
    }

    pub fn from_26(bits !238: b256) -> { b256 }, !239 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !240
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !240
        v3 = load v0
        ret { b256 } v3
    }

    pub fn get_owner_27() -> b256, !242 {
        local { b256, u64, b256 } __anon_0

        entry():
        v0 = get_local ptr { b256, u64, b256 }, __anon_0, !243
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        v3 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !243
        store v3 to v2, !243
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4
        v6 = const u64 0
        store v6 to v5, !243
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr b256, v7
        v9 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !243
        store v9 to v8, !243
        v10 = load v0
        v11 = call read_28(v10), !244
        ret b256 v11
    }

    pub fn read_28(self !246: { b256, u64, b256 }) -> b256, !248 {
        entry(self: { b256, u64, b256 }):
        v0 = call slot_51(self), !249
        v1 = call offset_46(self), !250
        v2 = call read_30(v0, v1), !251
        v3 = call unwrap_29(v2), !252
        ret b256 v3
    }

    pub fn unwrap_29(self !225: { u64, ( () | b256 ) }) -> b256, !226 {
        local { u64, ( () | b256 ) } __matched_value_4
        local b256 inner_value

        entry(self: { u64, ( () | b256 ) }):
        v0 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !227
        store self to v0, !227
        v1 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !228
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !228
        v4 = load v3
        v5 = const u64 1, !228
        v6 = call eq_5(v4, v5), !229
        cbr v6, block0(), block1(), !229

        block0():
        v7 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !228
        v8 = const u64 1
        v9 = const u64 1
        v10 = get_elem_ptr v7, ptr b256, v8, v9
        v11 = load v10
        v12 = get_local ptr b256, inner_value, !230
        store v11 to v12, !230
        v13 = get_local ptr b256, inner_value, !231
        v14 = load v13
        br block2(v14)

        block1():
        v15 = const u64 0, !232
        v16 = call revert_3(v15), !233
        br block2(v16)

        block2(v17: b256):
        ret b256 v17
    }

    pub fn read_30(slot !254: b256, offset !255: u64) -> { u64, ( () | b256 ) }, !257 {
        local { u64, ( () | b256 ) } __anon_0
        local { u64, ( () | b256 ) } __anon_1
        local { u64, ( () | b256 ) } __anon_2
        local { b256, u64, u64 } __tuple_2
        local { b256, u64, u64 } __tuple_2_
        local b256 key_for_storage
        local u64 number_of_slots
        local b256 offset_slot
        local u64 place_in_slot
        local u64 result_ptr

        entry(slot: b256, offset: u64):
        v0 = const u64 32
        v1 = const u64 0, !258
        v2 = call eq_5(v0, v1), !259
        cbr v2, block0(), block1(), !259

        block0():
        v3 = get_local ptr { u64, ( () | b256 ) }, __anon_0, !103
        v4 = const u64 0
        v5 = get_elem_ptr v3, ptr u64, v4, !103
        v6 = const u64 0, !103
        store v6 to v5, !103
        v7 = load v3
        ret { u64, ( () | b256 ) } v7, !260

        block1():
        v8 = const unit ()
        br block2(v8)

        block2(v9: ()):
        v10 = call slot_calculator_31(slot, offset), !261
        v11 = get_local ptr { b256, u64, u64 }, __tuple_2, !262
        store v10 to v11, !262
        v12 = get_local ptr { b256, u64, u64 }, __tuple_2, !262
        v13 = load v12
        v14 = get_local ptr { b256, u64, u64 }, __tuple_2_, !262
        store v13 to v14, !262
        v15 = get_local ptr { b256, u64, u64 }, __tuple_2_, !262
        v16 = const u64 0
        v17 = get_elem_ptr v15, ptr b256, v16, !262
        v18 = load v17
        v19 = get_local ptr b256, offset_slot, !262
        store v18 to v19, !262
        v20 = get_local ptr { b256, u64, u64 }, __tuple_2_, !262
        v21 = const u64 1
        v22 = get_elem_ptr v20, ptr u64, v21, !262
        v23 = load v22
        v24 = get_local ptr u64, number_of_slots, !262
        v25 = get_local ptr { b256, u64, u64 }, __tuple_2_, !262
        v26 = const u64 2
        v27 = get_elem_ptr v25, ptr u64, v26, !262
        v28 = load v27
        v29 = get_local ptr u64, place_in_slot, !262
        v30 = get_local ptr u64, number_of_slots, !263
        v31 = const u64 32, !264
        v32 = call multiply_34(v23, v31), !265
        v33 = call alloc_42(v32), !266
        v34 = get_local ptr u64, result_ptr, !267
        v35 = get_local ptr b256, offset_slot, !268
        v36 = load v35
        v37 = get_local ptr u64, result_ptr, !269
        v38 = get_local ptr u64, number_of_slots, !270
        v39 = get_local ptr b256, key_for_storage, !271
        store v36 to v39, !271
        v40 = int_to_ptr v33 to ptr b256, !271
        v41 = state_load_quad_word v40, key v39, v23, !271
        cbr v41, block3(), block4(), !271

        block3():
        v42 = get_local ptr { u64, ( () | b256 ) }, __anon_1, !103
        v43 = const u64 0
        v44 = get_elem_ptr v42, ptr u64, v43, !103
        v45 = const u64 1, !103
        store v45 to v44, !103
        v46 = get_local ptr u64, result_ptr, !272
        v47 = get_local ptr u64, place_in_slot, !273
        v48 = call add_44(v33, v28), !274
        v49 = call read_43(v48), !275
        v50 = const u64 1
        v51 = const u64 1
        v52 = get_elem_ptr v42, ptr b256, v50, v51, !103
        store v49 to v52, !103
        v53 = load v42
        br block5(v53)

        block4():
        v54 = get_local ptr { u64, ( () | b256 ) }, __anon_2, !103
        v55 = const u64 0
        v56 = get_elem_ptr v54, ptr u64, v55, !103
        v57 = const u64 0, !103
        store v57 to v56, !103
        v58 = load v54
        br block5(v58)

        block5(v59: { u64, ( () | b256 ) }):
        ret { u64, ( () | b256 ) } v59
    }

    fn slot_calculator_31(slot !276: b256, offset !277: u64) -> { b256, u64, u64 }, !278 {
        local { b256, u64, u64 } __anon_0
        local bool __matched_value_1
        local u64 last_slot
        local u64 number_of_slots
        local mut u256 offset_slot
        local u64 place_in_slot
        local u64 size_of_t

        entry(slot: b256, offset: u64):
        v0 = get_local ptr u64, size_of_t, !279
        v1 = const u64 8, !280
        v2 = call multiply_34(offset, v1), !281
        v3 = get_local ptr u64, size_of_t, !282
        v4 = const u64 32
        v5 = call add_33(v2, v4), !283
        v6 = const u64 31, !284
        v7 = call add_33(v5, v6), !285
        v8 = const u64 5, !286
        v9 = call rsh_32(v7, v8), !287
        v10 = get_local ptr u64, last_slot, !288
        v11 = const u64 4, !289
        v12 = call modulo_35(offset, v11), !290
        v13 = get_local ptr u64, place_in_slot, !291
        v14 = get_local ptr bool, __matched_value_1, !292
        v15 = get_local ptr bool, __matched_value_1, !293
        v16 = const bool true
        v17 = const bool true, !294
        v18 = call eq_36(v16, v17), !295
        cbr v18, block0(), block1(), !295

        block0():
        v19 = get_local ptr u64, place_in_slot, !296
        v20 = const u64 8, !297
        v21 = call multiply_34(v12, v20), !298
        v22 = get_local ptr u64, size_of_t, !299
        v23 = call add_33(v21, v4), !300
        v24 = const u64 31, !301
        v25 = call add_33(v23, v24), !302
        v26 = const u64 5, !303
        v27 = call rsh_32(v25, v26), !304
        br block5(v27)

        block1():
        v28 = get_local ptr bool, __matched_value_1, !293
        v29 = const bool false, !305
        v30 = call eq_36(v16, v29), !306
        cbr v30, block2(), block3(), !306

        block2():
        v31 = const u64 1, !307
        br block4(v31)

        block3():
        v32 = const u64 14757395258967588866, !292
        revert v32, !292

        block4(v33: u64):
        br block5(v33)

        block5(v34: u64):
        v35 = get_local ptr u64, number_of_slots, !308
        v36 = call as_u256_37(slot), !309
        v37 = get_local ptr u256, offset_slot, !310
        store v36 to v37, !310
        v38 = get_local ptr u256, offset_slot, !311
        v39 = load v38
        v40 = get_local ptr u64, last_slot, !312
        v41 = call as_u256_40(v9), !313
        v42 = get_local ptr u64, number_of_slots, !314
        v43 = call as_u256_40(v34), !315
        v44 = call subtract_39(v41, v43), !316
        v45 = call add_38(v39, v44), !317
        v46 = get_local ptr u256, offset_slot, !317
        store v45 to v46, !317
        v47 = get_local ptr u256, offset_slot, !318
        v48 = load v47
        v49 = call as_b256_41(v48), !319
        v50 = get_local ptr u64, number_of_slots, !320
        v51 = get_local ptr u64, place_in_slot, !321
        v52 = get_local ptr { b256, u64, u64 }, __anon_0, !322
        v53 = const u64 0
        v54 = get_elem_ptr v52, ptr b256, v53, !322
        store v49 to v54, !322
        v55 = const u64 1
        v56 = get_elem_ptr v52, ptr u64, v55, !322
        store v34 to v56, !322
        v57 = const u64 2
        v58 = get_elem_ptr v52, ptr u64, v57, !322
        store v12 to v58, !322
        v59 = load v52
        ret { b256, u64, u64 } v59
    }

    pub fn rsh_32(self !323: u64, other !324: u64) -> u64, !325 {
        entry(self: u64, other: u64):
        v0 = rsh self, other
        ret u64 v0
    }

    pub fn add_33(self !326: u64, other !327: u64) -> u64, !328 {
        entry(self: u64, other: u64):
        v0 = add self, other
        ret u64 v0
    }

    pub fn multiply_34(self !329: u64, other !330: u64) -> u64, !331 {
        entry(self: u64, other: u64):
        v0 = mul self, other
        ret u64 v0
    }

    pub fn modulo_35(self !332: u64, other !333: u64) -> u64, !334 {
        entry(self: u64, other: u64):
        v0 = mod self, other
        ret u64 v0
    }

    pub fn eq_36(self !335: bool, other !336: bool) -> bool, !337 {
        entry(self: bool, other: bool):
        v0 = cmp eq self other
        ret bool v0
    }

    pub fn as_u256_37(self !338: b256) -> u256, !339 {
        entry(self: b256):
        v0 = asm(input: self) -> u256 input, !340 {
        }
        ret u256 v0
    }

    pub fn add_38(self !341: u256, other !342: u256) -> u256, !343 {
        entry(self: u256, other: u256):
        v0 = add self, other
        ret u256 v0
    }

    pub fn subtract_39(self !344: u256, other !345: u256) -> u256, !346 {
        entry(self: u256, other: u256):
        v0 = sub self, other
        ret u256 v0
    }

    pub fn as_u256_40(self !347: u64) -> u256, !348 {
        local { u64, u64, u64, u64 } __anon_0
        local { u64, u64, u64, u64 } input

        entry(self: u64):
        v0 = get_local ptr { u64, u64, u64, u64 }, __anon_0, !349
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr u64, v1, !349
        v3 = const u64 0, !350
        store v3 to v2, !349
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4, !349
        v6 = const u64 0, !351
        store v6 to v5, !349
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr u64, v7, !349
        v9 = const u64 0, !352
        store v9 to v8, !349
        v10 = const u64 3
        v11 = get_elem_ptr v0, ptr u64, v10, !349
        store self to v11, !349
        v12 = load v0
        v13 = get_local ptr { u64, u64, u64, u64 }, input, !353
        store v12 to v13, !353
        v14 = get_local ptr { u64, u64, u64, u64 }, input, !354
        v15 = asm(input: v14) -> u256 input, !355 {
        }
        ret u256 v15
    }

    pub fn as_b256_41(self !356: u256) -> b256, !357 {
        entry(self: u256):
        v0 = asm(input: self) -> b256 input, !358 {
        }
        ret b256 v0
    }

    pub fn alloc_42(count !360: u64) -> u64, !361 {
        entry(count: u64):
        v0 = const u64 8
        v1 = call multiply_34(v0, count), !362
        v2 = asm(size: v1, ptr) -> u64 ptr, !363 {
            aloc   size, !364
            move   ptr hp, !365
        }
        ret u64 v2
    }

    pub fn read_43(self !367: u64) -> b256, !368 {
        entry(self: u64):
        v0 = const bool true
        cbr v0, block0(), block1(), !369

        block0():
        v1 = asm(ptr: self) -> b256 ptr, !370 {
        }
        br block5(v1)

        block1():
        v2 = const u64 32
        v3 = const u64 1, !371
        v4 = cmp eq v2 v3
        cbr v4, block2(), block3(), !372

        block2():
        v5 = asm(ptr: self, val) -> b256 val, !373 {
            lb     val ptr i0, !374
        }
        br block4(v5)

        block3():
        v6 = asm(ptr: self, val) -> b256 val, !375 {
            lw     val ptr i0, !376
        }
        br block4(v6)

        block4(v7: b256):
        br block5(v7)

        block5(v8: b256):
        ret b256 v8
    }

    pub fn add_44(self !377: u64, count !378: u64) -> u64, !379 {
        entry(self: u64, count: u64):
        v0 = const u64 8
        v1 = mul v0, count
        v2 = add self, v1
        ret u64 v2
    }

    pub fn slot_45(self !381: { b256, u64, b256 }) -> b256, !382 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !383
        v4 = load v3
        ret b256 v4
    }

    pub fn offset_46(self !384: { b256, u64, b256 }) -> u64, !385 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 1
        v3 = get_elem_ptr v1, ptr u64, v2, !386
        v4 = load v3
        ret u64 v4
    }

    pub fn write_47(self !387: { b256, u64, b256 }, value !388: u64) -> (), !390 {
        entry(self: { b256, u64, b256 }, value: u64):
        v0 = call slot_51(self), !391
        v1 = call offset_46(self), !392
        v2 = call write_48(v0, v1, value), !393
        v3 = const unit ()
        ret () v3
    }

    pub fn write_48(slot !394: b256, offset !395: u64, value !396: u64) -> (), !398 {
        local bool _
        local bool __
        local { b256, u64, u64 } __tuple_1
        local { b256, u64, u64 } __tuple_1_
        local b256 key_for_storage
        local b256 key_for_storage_
        local u64 number_of_slots
        local b256 offset_slot
        local u64 padded_value
        local u64 place_in_slot

        entry(slot: b256, offset: u64, value: u64):
        v0 = const u64 8
        v1 = const u64 0, !399
        v2 = call eq_5(v0, v1), !400
        cbr v2, block0(), block1(), !400

        block0():
        v3 = const unit (), !401
        ret () v3, !401

        block1():
        v4 = const unit ()
        br block2(v4)

        block2(v5: ()):
        v6 = call slot_calculator_49(slot, offset), !402
        v7 = get_local ptr { b256, u64, u64 }, __tuple_1, !403
        store v6 to v7, !403
        v8 = get_local ptr { b256, u64, u64 }, __tuple_1, !403
        v9 = load v8
        v10 = get_local ptr { b256, u64, u64 }, __tuple_1_, !403
        store v9 to v10, !403
        v11 = get_local ptr { b256, u64, u64 }, __tuple_1_, !403
        v12 = const u64 0
        v13 = get_elem_ptr v11, ptr b256, v12, !403
        v14 = load v13
        v15 = get_local ptr b256, offset_slot, !403
        store v14 to v15, !403
        v16 = get_local ptr { b256, u64, u64 }, __tuple_1_, !403
        v17 = const u64 1
        v18 = get_elem_ptr v16, ptr u64, v17, !403
        v19 = load v18
        v20 = get_local ptr u64, number_of_slots, !403
        v21 = get_local ptr { b256, u64, u64 }, __tuple_1_, !403
        v22 = const u64 2
        v23 = get_elem_ptr v21, ptr u64, v22, !403
        v24 = load v23
        v25 = get_local ptr u64, place_in_slot, !403
        v26 = get_local ptr u64, number_of_slots, !404
        v27 = const u64 32, !405
        v28 = call multiply_34(v19, v27), !406
        v29 = call alloc_42(v28), !407
        v30 = get_local ptr u64, padded_value, !408
        v31 = get_local ptr b256, offset_slot, !409
        v32 = load v31
        v33 = get_local ptr u64, padded_value, !410
        v34 = get_local ptr u64, number_of_slots, !411
        v35 = get_local ptr b256, key_for_storage, !412
        store v32 to v35, !412
        v36 = int_to_ptr v29 to ptr b256, !412
        v37 = state_load_quad_word v36, key v35, v19, !412
        v38 = get_local ptr bool, _, !413
        v39 = get_local ptr u64, padded_value, !414
        v40 = get_local ptr u64, place_in_slot, !415
        v41 = call add_44(v29, v24), !416
        v42 = call write_50(v41, value), !417
        v43 = get_local ptr b256, offset_slot, !418
        v44 = load v43
        v45 = get_local ptr u64, padded_value, !419
        v46 = get_local ptr u64, number_of_slots, !420
        v47 = get_local ptr b256, key_for_storage_, !421
        store v44 to v47, !421
        v48 = int_to_ptr v29 to ptr b256, !421
        v49 = state_store_quad_word v48, key v47, v19, !421
        v50 = get_local ptr bool, __, !422
        v51 = const unit ()
        ret () v51
    }

    fn slot_calculator_49(slot !276: b256, offset !277: u64) -> { b256, u64, u64 }, !278 {
        local { b256, u64, u64 } __anon_0
        local bool __matched_value_1
        local u64 last_slot
        local u64 number_of_slots
        local mut u256 offset_slot
        local u64 place_in_slot
        local u64 size_of_t

        entry(slot: b256, offset: u64):
        v0 = get_local ptr u64, size_of_t, !279
        v1 = const u64 8, !280
        v2 = call multiply_34(offset, v1), !281
        v3 = get_local ptr u64, size_of_t, !282
        v4 = const u64 8
        v5 = call add_33(v2, v4), !283
        v6 = const u64 31, !284
        v7 = call add_33(v5, v6), !285
        v8 = const u64 5, !286
        v9 = call rsh_32(v7, v8), !287
        v10 = get_local ptr u64, last_slot, !288
        v11 = const u64 4, !289
        v12 = call modulo_35(offset, v11), !290
        v13 = get_local ptr u64, place_in_slot, !291
        v14 = get_local ptr bool, __matched_value_1, !292
        v15 = get_local ptr bool, __matched_value_1, !293
        v16 = const bool false
        v17 = const bool true, !294
        v18 = call eq_36(v16, v17), !295
        cbr v18, block0(), block1(), !295

        block0():
        v19 = get_local ptr u64, place_in_slot, !296
        v20 = const u64 8, !297
        v21 = call multiply_34(v12, v20), !298
        v22 = get_local ptr u64, size_of_t, !299
        v23 = call add_33(v21, v4), !300
        v24 = const u64 31, !301
        v25 = call add_33(v23, v24), !302
        v26 = const u64 5, !303
        v27 = call rsh_32(v25, v26), !304
        br block5(v27)

        block1():
        v28 = get_local ptr bool, __matched_value_1, !293
        v29 = const bool false, !305
        v30 = call eq_36(v16, v29), !306
        cbr v30, block2(), block3(), !306

        block2():
        v31 = const u64 1, !307
        br block4(v31)

        block3():
        v32 = const u64 14757395258967588866, !292
        revert v32, !292

        block4(v33: u64):
        br block5(v33)

        block5(v34: u64):
        v35 = get_local ptr u64, number_of_slots, !308
        v36 = call as_u256_37(slot), !309
        v37 = get_local ptr u256, offset_slot, !310
        store v36 to v37, !310
        v38 = get_local ptr u256, offset_slot, !311
        v39 = load v38
        v40 = get_local ptr u64, last_slot, !312
        v41 = call as_u256_40(v9), !313
        v42 = get_local ptr u64, number_of_slots, !314
        v43 = call as_u256_40(v34), !315
        v44 = call subtract_39(v41, v43), !316
        v45 = call add_38(v39, v44), !317
        v46 = get_local ptr u256, offset_slot, !317
        store v45 to v46, !317
        v47 = get_local ptr u256, offset_slot, !318
        v48 = load v47
        v49 = call as_b256_41(v48), !319
        v50 = get_local ptr u64, number_of_slots, !320
        v51 = get_local ptr u64, place_in_slot, !321
        v52 = get_local ptr { b256, u64, u64 }, __anon_0, !322
        v53 = const u64 0
        v54 = get_elem_ptr v52, ptr b256, v53, !322
        store v49 to v54, !322
        v55 = const u64 1
        v56 = get_elem_ptr v52, ptr u64, v55, !322
        store v34 to v56, !322
        v57 = const u64 2
        v58 = get_elem_ptr v52, ptr u64, v57, !322
        store v12 to v58, !322
        v59 = load v52
        ret { b256, u64, u64 } v59
    }

    pub fn write_50(self !423: u64, val !424: u64) -> (), !425 {
        entry(self: u64, val: u64):
        v0 = const bool false
        cbr v0, block0(), block1(), !426

        block0():
        v1 = const u64 8
        v2 = asm(dst: self, src: val, count: v1) {
            mcp    dst src count, !427
        }
        v3 = const unit ()
        br block5(v3)

        block1():
        v4 = const u64 8
        v5 = const u64 1, !428
        v6 = cmp eq v4 v5
        cbr v6, block2(), block3(), !429

        block2():
        v7 = asm(ptr: self, val: val) {
            sb     ptr val i0, !430
        }
        v8 = const unit ()
        br block4(v8)

        block3():
        v9 = asm(ptr: self, val: val) {
            sw     ptr val i0, !431
        }
        v10 = const unit ()
        br block4(v10)

        block4(v11: ()):
        br block5(v11)

        block5(v12: ()):
        v13 = const unit ()
        ret () v13
    }

    pub fn slot_51(self !381: { b256, u64, b256 }) -> b256, !382 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !383
        v4 = load v3
        ret b256 v4
    }

    pub fn offset_52(self !384: { b256, u64, b256 }) -> u64, !385 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 1
        v3 = get_elem_ptr v1, ptr u64, v2, !386
        v4 = load v3
        ret u64 v4
    }
}

// IR: [inline] Function inlining
contract {
    pub entry fn set_data_if_owner<c626c6e2>(new_value !1: u64) -> (), !4 {
        local bool _
        local bool __
        local { b256, u64, b256 } __anon_0
        local { u64, ( { b256 } | { b256 } ) } __anon_00
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_000
        local { u64, ( () | { b256 } ) } __anon_0000
        local { u64 } __anon_00000
        local { b256, u64, u64 } __anon_0001
        local { u64, ( () | b256 ) } __anon_001
        local { u64, ( () | { b256 } ) } __anon_01
        local { b256, u64, b256 } __anon_02
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __anon_03
        local { b256, u64, u64 } __anon_04
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_1
        local { u64, ( { b256 } | { u64 } ) } __anon_10
        local { u64 } __anon_100
        local { u64, ( () | { b256 } ) } __anon_11
        local { u64, ( () | b256 ) } __anon_12
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64 } __anon_20
        local { u64, ( () | b256 ) } __anon_21
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { u64 } ) } __anon_30
        local { u64, ( { b256 } | { b256 } ) } __anon_4
        local { u64, ( { b256 } | { u64 } ) } __anon_40
        local { u64 } __anon_5
        local { u64, ( { b256 } | { u64 } ) } __matched_value_1
        local u8 __matched_value_10
        local bool __matched_value_11
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __matched_value_12
        local bool __matched_value_13
        local { u64 } __matched_value_2
        local { u64, ( () | { b256 } ) } __matched_value_3
        local { u64 } __matched_value_30
        local { u64, ( () | { b256 } ) } __matched_value_31
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __matched_value_32
        local { u64, ( () | b256 ) } __matched_value_4
        local { u64 } __matched_value_6
        local { b256, u64, u64 } __tuple_1
        local { b256, u64, u64 } __tuple_1_
        local { b256, u64, u64 } __tuple_2
        local { b256, u64, u64 } __tuple_2_
        local { b256 } addr1
        local { b256 } addr2
        local { b256 } address
        local mut { u64, ( () | { b256 } ) } candidate
        local { u64 } err
        local mut u64 i
        local { b256 } id1
        local { b256 } id2
        local { u64, ( { b256 } | { b256 } ) } inner_value
        local b256 inner_value0
        local u64 inputs
        local b256 key_for_storage
        local b256 key_for_storage0
        local b256 key_for_storage_
        local u64 last_slot
        local u64 last_slot0
        local u64 number_of_slots
        local u64 number_of_slots0
        local u64 number_of_slots00
        local u64 number_of_slots1
        local b256 offset_slot
        local mut u256 offset_slot0
        local mut u256 offset_slot00
        local b256 offset_slot1
        local { b256 } owner
        local { u64, ( () | { b256 } ) } owner_of_input
        local u64 padded_value
        local u64 place_in_slot
        local u64 place_in_slot0
        local u64 place_in_slot00
        local u64 place_in_slot1
        local u64 result_ptr
        local u64 size_of_t
        local u64 size_of_t0
        local { u64 } type_of_input

        entry(new_value: u64):
        v0 = asm(r1) -> bool r1, !11 {
            gm     r1 i1, !12
        }
        br only_owner_0_msg_sender_10_block9(v0), !13

        only_owner_0_msg_sender_10_block9(v1: bool):
        cbr v1, only_owner_0_msg_sender_10_block0(), only_owner_0_msg_sender_10_block7(), !14

        only_owner_0_msg_sender_10_block0():
        v2 = const u64 0, !16
        v3 = gtf v2, 1, !22
        v4 = bitcast v3 to u8, !23
        v5 = get_local ptr u8, __matched_value_10, !25
        v6 = get_local ptr u8, __matched_value_10, !26
        v7 = const u8 0, !27
        v8 = cmp eq v4 v7, !29
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block6(v8), !30

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block6(v9: bool):
        cbr v9, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1(), !31

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0():
        v10 = get_local ptr { u64 }, __anon_00000, !33
        v11 = const u64 0
        v12 = get_elem_ptr v10, ptr u64, v11, !34
        v13 = const u64 0, !32
        store v13 to v12, !35
        v14 = load v10, !36
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v14), !37

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1():
        v15 = get_local ptr u8, __matched_value_10, !38
        v16 = const u8 1, !39
        v17 = cmp eq v4 v16, !41
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block7(v17), !42

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block7(v18: bool):
        cbr v18, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3(), !43

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2():
        v19 = get_local ptr { u64 }, __anon_100, !44
        v20 = const u64 0
        v21 = get_elem_ptr v19, ptr u64, v20, !45
        v22 = const u64 1, !32
        store v22 to v21, !46
        v23 = load v19, !47
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block4(v23), !48

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3():
        v24 = const u64 0, !49
        revert v24, !53

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block8(v25: never):
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block4(v25), !54

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block4(v26: { u64 }):
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v26), !55

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v27: { u64 }):
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block6(v27), !56

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block6(v28: { u64 }):
        v29 = get_local ptr { u64 }, __matched_value_30, !58
        store v28 to v29, !59
        v30 = get_local ptr { u64 }, __matched_value_30, !60
        v31 = const u64 0
        v32 = get_elem_ptr v30, ptr u64, v31, !61
        v33 = load v32, !62
        v34 = const u64 0, !20
        v35 = cmp eq v33 v34, !64
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block7(v35), !65

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block7(v36: bool):
        cbr v36, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1(), !66

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0():
        v37 = const u64 0, !67
        v38 = gtf v37, 5, !69
        v39 = bitcast v38 to u64, !70
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v39), !71

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1():
        v40 = get_local ptr { u64 }, __matched_value_30, !72
        v41 = const u64 0
        v42 = get_elem_ptr v40, ptr u64, v41, !73
        v43 = load v42, !74
        v44 = const u64 1, !20
        v45 = cmp eq v43 v44, !76
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block8(v45), !77

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block8(v46: bool):
        cbr v46, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3(), !78

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2():
        v47 = const u64 0, !79
        v48 = gtf v47, 259, !81
        v49 = bitcast v48 to u64, !82
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block4(v49), !83

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3():
        v50 = const u64 14757395258967588866, !57
        revert v50, !84

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block4(v51: u64):
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v51), !85

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v52: u64):
        br only_owner_0_msg_sender_10_caller_address_12_block18(v52), !86

        only_owner_0_msg_sender_10_caller_address_12_block18(v53: u64):
        v54 = get_local ptr u64, inputs, !88
        v55 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0000, !91
        v56 = const u64 0
        v57 = get_elem_ptr v55, ptr u64, v56, !92
        v58 = const u64 0, !90
        store v58 to v57, !93
        v59 = load v55, !94
        v60 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !96
        store v59 to v60, !97
        v61 = get_local ptr u64, i, !99
        v62 = const u64 0, !100
        br only_owner_0_msg_sender_10_caller_address_12_while(v62), !101

        only_owner_0_msg_sender_10_caller_address_12_while(v63: u64):
        v64 = get_local ptr u64, i, !103
        v65 = get_local ptr u64, inputs, !105
        v66 = cmp lt v63 v53, !107
        br only_owner_0_msg_sender_10_caller_address_12_block19(v66), !108

        only_owner_0_msg_sender_10_caller_address_12_block19(v67: bool):
        cbr v67, only_owner_0_msg_sender_10_caller_address_12_while_body(), only_owner_0_msg_sender_10_caller_address_12_end_while(), !109

        only_owner_0_msg_sender_10_caller_address_12_while_break():
        br only_owner_0_msg_sender_10_caller_address_12_end_while(), !110

        only_owner_0_msg_sender_10_caller_address_12_while_body():
        v68 = get_local ptr u64, i, !112
        v69 = asm(input: v63) -> u64 input, !116 {
        }
        br only_owner_0_msg_sender_10_caller_address_12_block20(v69), !117

        only_owner_0_msg_sender_10_caller_address_12_block20(v70: u64):
        v71 = call input_type_17(v70), !119
        v72 = get_local ptr { u64 }, type_of_input, !121
        store v71 to v72, !122
        v73 = get_local ptr { u64 }, type_of_input, !124
        v74 = load v73, !125
        v75 = get_local ptr { u64 }, __matched_value_2, !127
        store v74 to v75, !128
        v76 = get_local ptr { u64 }, __matched_value_2, !129
        v77 = const u64 0
        v78 = get_elem_ptr v76, ptr u64, v77, !130
        v79 = load v78, !131
        v80 = const u64 0, !123
        v81 = cmp eq v79 v80, !133
        br only_owner_0_msg_sender_10_caller_address_12_block21(v81), !134

        only_owner_0_msg_sender_10_caller_address_12_block21(v82: bool):
        cbr v82, only_owner_0_msg_sender_10_caller_address_12_block0(), only_owner_0_msg_sender_10_caller_address_12_block1(), !135

        only_owner_0_msg_sender_10_caller_address_12_block0():
        v83 = const unit (), !136
        br only_owner_0_msg_sender_10_caller_address_12_block5(v83), !137

        only_owner_0_msg_sender_10_caller_address_12_block1():
        v84 = get_local ptr { u64 }, __matched_value_2, !138
        v85 = const u64 0
        v86 = get_elem_ptr v84, ptr u64, v85, !139
        v87 = load v86, !140
        v88 = const u64 2, !123
        v89 = cmp eq v87 v88, !142
        br only_owner_0_msg_sender_10_caller_address_12_block22(v89), !143

        only_owner_0_msg_sender_10_caller_address_12_block22(v90: bool):
        cbr v90, only_owner_0_msg_sender_10_caller_address_12_block2(), only_owner_0_msg_sender_10_caller_address_12_block3(), !144

        only_owner_0_msg_sender_10_caller_address_12_block2():
        v91 = const unit (), !145
        br only_owner_0_msg_sender_10_caller_address_12_block4(v91), !146

        only_owner_0_msg_sender_10_caller_address_12_block3():
        v92 = get_local ptr u64, i, !148
        v93 = const u64 1, !149
        v94 = call add_19(v63, v93), !151
        v95 = get_local ptr u64, i, !152
        br only_owner_0_msg_sender_10_caller_address_12_while(v94), !153

        only_owner_0_msg_sender_10_caller_address_12_block4(v96: ()):
        br only_owner_0_msg_sender_10_caller_address_12_block5(v96), !154

        only_owner_0_msg_sender_10_caller_address_12_block5(v97: ()):
        v98 = get_local ptr u64, i, !156
        v99 = asm(input: v63) -> u64 input, !158 {
        }
        br only_owner_0_msg_sender_10_caller_address_12_block23(v99), !159

        only_owner_0_msg_sender_10_caller_address_12_block23(v100: u64):
        v101 = call input_type_17(v100), !162
        v102 = get_local ptr { u64 }, __matched_value_6, !164
        store v101 to v102, !165
        v103 = get_local ptr { u64 }, __matched_value_6, !166
        v104 = const u64 0
        v105 = get_elem_ptr v103, ptr u64, v104, !167
        v106 = load v105, !168
        v107 = const u64 0, !161
        v108 = cmp eq v106 v107, !170
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block3(v108), !171

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block3(v109: bool):
        cbr v109, only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0(), only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1(), !172

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0():
        v110 = get_local ptr { u64, ( () | { b256 } ) }, __anon_01, !173
        v111 = const u64 0
        v112 = get_elem_ptr v110, ptr u64, v111, !174
        v113 = const u64 1, !90
        store v113 to v112, !175
        v114 = gtf v100, 515, !177
        v115 = int_to_ptr v114 to ptr b256, !178
        v116 = load v115, !179
        v117 = call from_22(v116), !181
        v118 = const u64 1
        v119 = const u64 1
        v120 = get_elem_ptr v110, ptr { b256 }, v118, v119, !182
        store v117 to v120, !183
        v121 = load v110, !184
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v121), !185

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1():
        v122 = get_local ptr { u64, ( () | { b256 } ) }, __anon_11, !186
        v123 = const u64 0
        v124 = get_elem_ptr v122, ptr u64, v123, !187
        v125 = const u64 0, !90
        store v125 to v124, !188
        v126 = load v122, !189
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v126), !190

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v127: { u64, ( () | { b256 } ) }):
        br only_owner_0_msg_sender_10_caller_address_12_block24(v127), !191

        only_owner_0_msg_sender_10_caller_address_12_block24(v128: { u64, ( () | { b256 } ) }):
        v129 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !193
        store v128 to v129, !194
        v130 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !196
        v131 = load v130, !197
        v132 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !200
        store v131 to v132, !201
        v133 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !203
        v134 = const u64 0
        v135 = get_elem_ptr v133, ptr u64, v134, !204
        v136 = load v135, !205
        v137 = const u64 1, !202
        v138 = cmp eq v136 v137, !207
        br only_owner_0_msg_sender_10_caller_address_12_is_none_23_block3(v138), !208

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block3(v139: bool):
        cbr v139, only_owner_0_msg_sender_10_caller_address_12_is_none_23_block0(), only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1(), !209

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block0():
        v140 = const bool false, !210
        br only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v140), !211

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1():
        v141 = const bool true, !212
        br only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v141), !213

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v142: bool):
        br only_owner_0_msg_sender_10_caller_address_12_block25(v142), !214

        only_owner_0_msg_sender_10_caller_address_12_block25(v143: bool):
        cbr v143, only_owner_0_msg_sender_10_caller_address_12_block6(), only_owner_0_msg_sender_10_caller_address_12_block7(), !215

        only_owner_0_msg_sender_10_caller_address_12_block6():
        v144 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !217
        v145 = load v144, !218
        v146 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !220
        store v145 to v146, !221
        v147 = get_local ptr u64, i, !223
        v148 = const u64 1, !224
        v149 = call add_19(v63, v148), !226
        v150 = get_local ptr u64, i, !227
        br only_owner_0_msg_sender_10_caller_address_12_while(v149), !228

        only_owner_0_msg_sender_10_caller_address_12_block7():
        v151 = const unit ()
        br only_owner_0_msg_sender_10_caller_address_12_block8(v151), !229

        only_owner_0_msg_sender_10_caller_address_12_block8(v152: ()):
        v153 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !231
        v154 = load v153, !232
        v155 = call unwrap_24(v154), !234
        v156 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !236
        v157 = load v156, !237
        v158 = call unwrap_24(v157), !239
        v159 = call eq_6(v155, v158), !241
        cbr v159, only_owner_0_msg_sender_10_caller_address_12_block9(), only_owner_0_msg_sender_10_caller_address_12_block10(), !242

        only_owner_0_msg_sender_10_caller_address_12_block9():
        v160 = get_local ptr u64, i, !244
        v161 = const u64 1, !245
        v162 = call add_19(v63, v161), !247
        v163 = get_local ptr u64, i, !248
        br only_owner_0_msg_sender_10_caller_address_12_while(v162), !249

        only_owner_0_msg_sender_10_caller_address_12_block10():
        v164 = const unit ()
        br only_owner_0_msg_sender_10_caller_address_12_block11(v164), !250

        only_owner_0_msg_sender_10_caller_address_12_block11(v165: ()):
        v166 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_10, !253
        v167 = const u64 0
        v168 = get_elem_ptr v166, ptr u64, v167, !254
        v169 = const u64 1, !252
        store v169 to v168, !255
        v170 = get_local ptr { u64 }, __anon_20, !257
        v171 = const u64 0
        v172 = get_elem_ptr v170, ptr u64, v171, !258
        v173 = const u64 0, !256
        store v173 to v172, !259
        v174 = load v170, !260
        v175 = const u64 1
        v176 = const u64 1
        v177 = get_elem_ptr v166, ptr { u64 }, v175, v176, !261
        store v174 to v177, !262
        v178 = load v166, !263
        br only_owner_0_msg_sender_10_block10(v178), !265

        only_owner_0_msg_sender_10_caller_address_12_end_while():
        v179 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !267
        v180 = load v179, !268
        v181 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !270
        store v180 to v181, !271
        v182 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !272
        v183 = const u64 0
        v184 = get_elem_ptr v182, ptr u64, v183, !273
        v185 = load v184, !274
        v186 = const u64 1, !266
        v187 = cmp eq v185 v186, !276
        br only_owner_0_msg_sender_10_caller_address_12_block26(v187), !277

        only_owner_0_msg_sender_10_caller_address_12_block26(v188: bool):
        cbr v188, only_owner_0_msg_sender_10_caller_address_12_block12(), only_owner_0_msg_sender_10_caller_address_12_block13(), !278

        only_owner_0_msg_sender_10_caller_address_12_block12():
        v189 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !279
        v190 = const u64 1
        v191 = const u64 1
        v192 = get_elem_ptr v189, ptr { b256 }, v190, v191, !280
        v193 = load v192, !281
        v194 = get_local ptr { b256 }, address, !283
        store v193 to v194, !284
        v195 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_30, !285
        v196 = const u64 0
        v197 = get_elem_ptr v195, ptr u64, v196, !286
        v198 = const u64 0, !252
        store v198 to v197, !287
        v199 = get_local ptr { b256 }, address, !289
        v200 = load v199, !290
        v201 = const u64 1
        v202 = const u64 0
        v203 = get_elem_ptr v195, ptr { b256 }, v201, v202, !291
        store v200 to v203, !292
        v204 = load v195, !293
        br only_owner_0_msg_sender_10_caller_address_12_block17(v204), !294

        only_owner_0_msg_sender_10_caller_address_12_block13():
        v205 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !295
        v206 = const u64 0
        v207 = get_elem_ptr v205, ptr u64, v206, !296
        v208 = load v207, !297
        v209 = const u64 0, !266
        v210 = cmp eq v208 v209, !299
        br only_owner_0_msg_sender_10_caller_address_12_block27(v210), !300

        only_owner_0_msg_sender_10_caller_address_12_block27(v211: bool):
        cbr v211, only_owner_0_msg_sender_10_caller_address_12_block14(), only_owner_0_msg_sender_10_caller_address_12_block15(), !301

        only_owner_0_msg_sender_10_caller_address_12_block14():
        v212 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_40, !302
        v213 = const u64 0
        v214 = get_elem_ptr v212, ptr u64, v213, !303
        v215 = const u64 1, !252
        store v215 to v214, !304
        v216 = get_local ptr { u64 }, __anon_5, !305
        v217 = const u64 0
        v218 = get_elem_ptr v216, ptr u64, v217, !306
        v219 = const u64 1, !256
        store v219 to v218, !307
        v220 = load v216, !308
        v221 = const u64 1
        v222 = const u64 1
        v223 = get_elem_ptr v212, ptr { u64 }, v221, v222, !309
        store v220 to v223, !310
        v224 = load v212, !311
        br only_owner_0_msg_sender_10_caller_address_12_block16(v224), !312

        only_owner_0_msg_sender_10_caller_address_12_block15():
        v225 = const u64 14757395258967588866, !269
        revert v225, !313

        only_owner_0_msg_sender_10_caller_address_12_block16(v226: { u64, ( { b256 } | { u64 } ) }):
        br only_owner_0_msg_sender_10_caller_address_12_block17(v226), !314

        only_owner_0_msg_sender_10_caller_address_12_block17(v227: { u64, ( { b256 } | { u64 } ) }):
        br only_owner_0_msg_sender_10_block10(v227), !315

        only_owner_0_msg_sender_10_block10(v228: { u64, ( { b256 } | { u64 } ) }):
        v229 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !317
        store v228 to v229, !318
        v230 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !319
        v231 = const u64 0
        v232 = get_elem_ptr v230, ptr u64, v231, !320
        v233 = load v232, !321
        v234 = const u64 1, !17
        v235 = cmp eq v233 v234, !323
        br only_owner_0_msg_sender_10_block11(v235), !324

        only_owner_0_msg_sender_10_block11(v236: bool):
        cbr v236, only_owner_0_msg_sender_10_block1(), only_owner_0_msg_sender_10_block2(), !325

        only_owner_0_msg_sender_10_block1():
        v237 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !326
        v238 = const u64 1
        v239 = const u64 1
        v240 = get_elem_ptr v237, ptr { u64 }, v238, v239, !327
        v241 = load v240, !328
        v242 = get_local ptr { u64 }, err, !330
        store v241 to v242, !331
        v243 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_000, !332
        v244 = const u64 0
        v245 = get_elem_ptr v243, ptr u64, v244, !333
        v246 = const u64 1, !252
        store v246 to v245, !334
        v247 = get_local ptr { u64 }, err, !336
        v248 = load v247, !337
        v249 = const u64 1
        v250 = const u64 1
        v251 = get_elem_ptr v243, ptr { u64 }, v249, v250, !338
        store v248 to v251, !339
        v252 = load v243, !340
        br only_owner_0_msg_sender_10_block6(v252), !341

        only_owner_0_msg_sender_10_block2():
        v253 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !342
        v254 = const u64 0
        v255 = get_elem_ptr v253, ptr u64, v254, !343
        v256 = load v255, !344
        v257 = const u64 0, !17
        v258 = cmp eq v256 v257, !346
        br only_owner_0_msg_sender_10_block12(v258), !347

        only_owner_0_msg_sender_10_block12(v259: bool):
        cbr v259, only_owner_0_msg_sender_10_block3(), only_owner_0_msg_sender_10_block4(), !348

        only_owner_0_msg_sender_10_block3():
        v260 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !349
        v261 = const u64 1
        v262 = const u64 0
        v263 = get_elem_ptr v260, ptr { b256 }, v261, v262, !350
        v264 = load v263, !351
        v265 = get_local ptr { b256 }, owner, !353
        store v264 to v265, !354
        v266 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_1, !355
        v267 = const u64 0
        v268 = get_elem_ptr v266, ptr u64, v267, !356
        v269 = const u64 0, !252
        store v269 to v268, !357
        v270 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !360
        v271 = const u64 0
        v272 = get_elem_ptr v270, ptr u64, v271, !361
        v273 = const u64 0, !359
        store v273 to v272, !362
        v274 = get_local ptr { b256 }, owner, !364
        v275 = load v274, !365
        v276 = const u64 1
        v277 = const u64 0
        v278 = get_elem_ptr v270, ptr { b256 }, v276, v277, !366
        store v275 to v278, !367
        v279 = load v270, !368
        v280 = const u64 1
        v281 = const u64 0
        v282 = get_elem_ptr v266, ptr { u64, ( { b256 } | { b256 } ) }, v280, v281, !369
        store v279 to v282, !370
        v283 = load v266, !371
        br only_owner_0_msg_sender_10_block5(v283), !372

        only_owner_0_msg_sender_10_block4():
        v284 = const u64 14757395258967588866, !316
        revert v284, !373

        only_owner_0_msg_sender_10_block5(v285: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        br only_owner_0_msg_sender_10_block6(v285), !374

        only_owner_0_msg_sender_10_block6(v286: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        br only_owner_0_msg_sender_10_block8(v286), !375

        only_owner_0_msg_sender_10_block7():
        v287 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_3, !376
        v288 = const u64 0
        v289 = get_elem_ptr v287, ptr u64, v288, !377
        v290 = const u64 0, !252
        store v290 to v289, !378
        v291 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_4, !379
        v292 = const u64 0
        v293 = get_elem_ptr v291, ptr u64, v292, !380
        v294 = const u64 1, !359
        store v294 to v293, !381
        v295 = asm(r1) -> b256 r1, !384 {
            gm     r1 i2, !385
        }
        v296 = call from_22(v295), !387
        br only_owner_0_msg_sender_10_block13(v296), !388

        only_owner_0_msg_sender_10_block13(v297: { b256 }):
        v298 = const u64 1
        v299 = const u64 1
        v300 = get_elem_ptr v291, ptr { b256 }, v298, v299, !389
        store v297 to v300, !390
        v301 = load v291, !391
        v302 = const u64 1
        v303 = const u64 0
        v304 = get_elem_ptr v287, ptr { u64, ( { b256 } | { b256 } ) }, v302, v303, !392
        store v301 to v304, !393
        v305 = load v287, !394
        br only_owner_0_msg_sender_10_block8(v305), !395

        only_owner_0_msg_sender_10_block8(v306: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        br only_owner_0_block0(v306), !396

        only_owner_0_block0(v307: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v308 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !399
        store v307 to v308, !400
        v309 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !402
        v310 = const u64 0
        v311 = get_elem_ptr v309, ptr u64, v310, !403
        v312 = load v311, !404
        v313 = const u64 0, !401
        v314 = cmp eq v312 v313, !406
        br only_owner_0_unwrap_9_block3(v314), !407

        only_owner_0_unwrap_9_block3(v315: bool):
        cbr v315, only_owner_0_unwrap_9_block0(), only_owner_0_unwrap_9_block1(), !408

        only_owner_0_unwrap_9_block0():
        v316 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !409
        v317 = const u64 1
        v318 = const u64 0
        v319 = get_elem_ptr v316, ptr { u64, ( { b256 } | { b256 } ) }, v317, v318, !410
        v320 = load v319, !411
        v321 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !413
        store v320 to v321, !414
        v322 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !416
        v323 = load v322, !417
        br only_owner_0_unwrap_9_block2(v323), !418

        only_owner_0_unwrap_9_block1():
        v324 = const u64 0, !419
        revert v324, !421

        only_owner_0_unwrap_9_block4(v325: never):
        br only_owner_0_unwrap_9_block2(v325), !422

        only_owner_0_unwrap_9_block2(v326: { u64, ( { b256 } | { b256 } ) }):
        br only_owner_0_block1(v326), !423

        only_owner_0_block1(v327: { u64, ( { b256 } | { b256 } ) }):
        v328 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_00, !424
        v329 = const u64 0
        v330 = get_elem_ptr v328, ptr u64, v329, !425
        v331 = const u64 0, !359
        store v331 to v330, !426
        v332 = get_local ptr { b256, u64, b256 }, __anon_02, !429
        v333 = const u64 0
        v334 = get_elem_ptr v332, ptr b256, v333, !430
        v335 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !428
        store v335 to v334, !431
        v336 = const u64 1
        v337 = get_elem_ptr v332, ptr u64, v336, !432
        v338 = const u64 0
        store v338 to v337, !433
        v339 = const u64 2
        v340 = get_elem_ptr v332, ptr b256, v339, !434
        v341 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !428
        store v341 to v340, !435
        v342 = load v332, !436
        v343 = call slot_51(v342), !440
        v344 = call offset_46(v342), !442
        v345 = const u64 32
        v346 = const u64 0, !444
        v347 = cmp eq v345 v346, !447
        br only_owner_0_get_owner_27_read_28_read_30_block6(v347), !448

        only_owner_0_get_owner_27_read_28_read_30_block6(v348: bool):
        cbr v348, only_owner_0_get_owner_27_read_28_read_30_block0(), only_owner_0_get_owner_27_read_28_read_30_block1(), !449

        only_owner_0_get_owner_27_read_28_read_30_block0():
        v349 = get_local ptr { u64, ( () | b256 ) }, __anon_001, !450
        v350 = const u64 0
        v351 = get_elem_ptr v349, ptr u64, v350, !451
        v352 = const u64 0, !90
        store v352 to v351, !452
        v353 = load v349, !453
        br only_owner_0_get_owner_27_read_28_block0(v353), !455

        only_owner_0_get_owner_27_read_28_read_30_block1():
        v354 = const unit ()
        br only_owner_0_get_owner_27_read_28_read_30_block2(v354), !456

        only_owner_0_get_owner_27_read_28_read_30_block2(v355: ()):
        v356 = get_local ptr u64, size_of_t, !459
        v357 = const u64 8, !460
        v358 = mul v344, v357, !462
        br only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block6(v358), !463

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block6(v359: u64):
        v360 = get_local ptr u64, size_of_t, !465
        v361 = const u64 32
        v362 = add v359, v361, !467
        br only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block7(v362), !468

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block7(v363: u64):
        v364 = const u64 31, !469
        v365 = add v363, v364, !471
        br only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block8(v365), !472

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block8(v366: u64):
        v367 = const u64 5, !473
        v368 = rsh v366, v367, !475
        br only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block9(v368), !476

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block9(v369: u64):
        v370 = get_local ptr u64, last_slot, !478
        v371 = const u64 4, !479
        v372 = mod v344, v371, !481
        br only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block10(v372), !482

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block10(v373: u64):
        v374 = get_local ptr u64, place_in_slot0, !484
        v375 = get_local ptr bool, __matched_value_11, !486
        v376 = get_local ptr bool, __matched_value_11, !488
        v377 = const bool true
        v378 = const bool true, !489
        v379 = cmp eq v377 v378, !491
        br only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block11(v379), !492

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block11(v380: bool):
        cbr v380, only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block0(), only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block1(), !493

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block0():
        v381 = get_local ptr u64, place_in_slot0, !495
        v382 = const u64 8, !496
        v383 = mul v373, v382, !498
        br only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block12(v383), !499

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block12(v384: u64):
        v385 = get_local ptr u64, size_of_t, !501
        v386 = add v384, v361, !503
        br only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block13(v386), !504

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block13(v387: u64):
        v388 = const u64 31, !505
        v389 = add v387, v388, !507
        br only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block14(v389), !508

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block14(v390: u64):
        v391 = const u64 5, !509
        v392 = rsh v390, v391, !511
        br only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block15(v392), !512

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block15(v393: u64):
        br only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block5(v393), !513

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block1():
        v394 = get_local ptr bool, __matched_value_11, !514
        v395 = const bool false, !515
        v396 = cmp eq v377 v395, !517
        br only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block16(v396), !518

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block16(v397: bool):
        cbr v397, only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block2(), only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block3(), !519

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block2():
        v398 = const u64 1, !520
        br only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block4(v398), !521

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block3():
        v399 = const u64 14757395258967588866, !485
        revert v399, !522

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block4(v400: u64):
        br only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block5(v400), !523

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block5(v401: u64):
        v402 = get_local ptr u64, number_of_slots0, !525
        v403 = asm(input: v343) -> u256 input, !528 {
        }
        br only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block17(v403), !529

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block17(v404: u256):
        v405 = get_local ptr u256, offset_slot0, !531
        store v404 to v405, !532
        v406 = get_local ptr u256, offset_slot0, !534
        v407 = load v406, !535
        v408 = get_local ptr u64, last_slot, !537
        v409 = call as_u256_40(v369), !539
        v410 = get_local ptr u64, number_of_slots0, !541
        v411 = call as_u256_40(v401), !543
        v412 = sub v409, v411, !545
        br only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block18(v412), !546

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block18(v413: u256):
        v414 = add v407, v413, !548
        br only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block19(v414), !549

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block19(v415: u256):
        v416 = get_local ptr u256, offset_slot0, !550
        store v415 to v416, !551
        v417 = get_local ptr u256, offset_slot0, !553
        v418 = load v417, !554
        v419 = asm(input: v418) -> b256 input, !557 {
        }
        br only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block20(v419), !558

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block20(v420: b256):
        v421 = get_local ptr u64, number_of_slots0, !560
        v422 = get_local ptr u64, place_in_slot0, !562
        v423 = get_local ptr { b256, u64, u64 }, __anon_0001, !564
        v424 = const u64 0
        v425 = get_elem_ptr v423, ptr b256, v424, !565
        store v420 to v425, !566
        v426 = const u64 1
        v427 = get_elem_ptr v423, ptr u64, v426, !567
        store v401 to v427, !568
        v428 = const u64 2
        v429 = get_elem_ptr v423, ptr u64, v428, !569
        store v373 to v429, !570
        v430 = load v423, !571
        br only_owner_0_get_owner_27_read_28_read_30_block7(v430), !572

        only_owner_0_get_owner_27_read_28_read_30_block7(v431: { b256, u64, u64 }):
        v432 = get_local ptr { b256, u64, u64 }, __tuple_2, !574
        store v431 to v432, !575
        v433 = get_local ptr { b256, u64, u64 }, __tuple_2, !576
        v434 = load v433, !577
        v435 = get_local ptr { b256, u64, u64 }, __tuple_2_, !578
        store v434 to v435, !579
        v436 = get_local ptr { b256, u64, u64 }, __tuple_2_, !580
        v437 = const u64 0
        v438 = get_elem_ptr v436, ptr b256, v437, !581
        v439 = load v438, !582
        v440 = get_local ptr b256, offset_slot, !583
        store v439 to v440, !584
        v441 = get_local ptr { b256, u64, u64 }, __tuple_2_, !585
        v442 = const u64 1
        v443 = get_elem_ptr v441, ptr u64, v442, !586
        v444 = load v443, !587
        v445 = get_local ptr u64, number_of_slots, !588
        v446 = get_local ptr { b256, u64, u64 }, __tuple_2_, !589
        v447 = const u64 2
        v448 = get_elem_ptr v446, ptr u64, v447, !590
        v449 = load v448, !591
        v450 = get_local ptr u64, place_in_slot, !592
        v451 = get_local ptr u64, number_of_slots, !594
        v452 = const u64 32, !595
        v453 = mul v444, v452, !597
        br only_owner_0_get_owner_27_read_28_read_30_block8(v453), !598

        only_owner_0_get_owner_27_read_28_read_30_block8(v454: u64):
        v455 = const u64 8
        v456 = mul v455, v454, !602
        br only_owner_0_get_owner_27_read_28_read_30_alloc_42_block0(v456), !603

        only_owner_0_get_owner_27_read_28_read_30_alloc_42_block0(v457: u64):
        v458 = asm(size: v457, ptr) -> u64 ptr, !605 {
            aloc   size, !606
            move   ptr hp, !607
        }
        br only_owner_0_get_owner_27_read_28_read_30_block9(v458), !608

        only_owner_0_get_owner_27_read_28_read_30_block9(v459: u64):
        v460 = get_local ptr u64, result_ptr, !610
        v461 = get_local ptr b256, offset_slot, !612
        v462 = load v461, !613
        v463 = get_local ptr u64, result_ptr, !615
        v464 = get_local ptr u64, number_of_slots, !617
        v465 = get_local ptr b256, key_for_storage, !619
        store v462 to v465, !620
        v466 = int_to_ptr v459 to ptr b256, !621
        v467 = state_load_quad_word v466, key v465, v444, !622
        cbr v467, only_owner_0_get_owner_27_read_28_read_30_block3(), only_owner_0_get_owner_27_read_28_read_30_block4(), !623

        only_owner_0_get_owner_27_read_28_read_30_block3():
        v468 = get_local ptr { u64, ( () | b256 ) }, __anon_12, !624
        v469 = const u64 0
        v470 = get_elem_ptr v468, ptr u64, v469, !625
        v471 = const u64 1, !90
        store v471 to v470, !626
        v472 = get_local ptr u64, result_ptr, !628
        v473 = get_local ptr u64, place_in_slot, !630
        v474 = const u64 8
        v475 = mul v474, v449, !632
        v476 = add v459, v475, !633
        br only_owner_0_get_owner_27_read_28_read_30_block10(v476), !634

        only_owner_0_get_owner_27_read_28_read_30_block10(v477: u64):
        v478 = const bool true
        cbr v478, only_owner_0_get_owner_27_read_28_read_30_read_43_block0(), only_owner_0_get_owner_27_read_28_read_30_read_43_block1(), !638

        only_owner_0_get_owner_27_read_28_read_30_read_43_block0():
        v479 = asm(ptr: v477) -> b256 ptr, !640 {
        }
        br only_owner_0_get_owner_27_read_28_read_30_read_43_block5(v479), !641

        only_owner_0_get_owner_27_read_28_read_30_read_43_block1():
        v480 = const u64 32
        v481 = const u64 1, !642
        v482 = cmp eq v480 v481, !643
        cbr v482, only_owner_0_get_owner_27_read_28_read_30_read_43_block2(), only_owner_0_get_owner_27_read_28_read_30_read_43_block3(), !645

        only_owner_0_get_owner_27_read_28_read_30_read_43_block2():
        v483 = asm(ptr: v477, val) -> b256 val, !647 {
            lb     val ptr i0, !648
        }
        br only_owner_0_get_owner_27_read_28_read_30_read_43_block4(v483), !649

        only_owner_0_get_owner_27_read_28_read_30_read_43_block3():
        v484 = asm(ptr: v477, val) -> b256 val, !651 {
            lw     val ptr i0, !652
        }
        br only_owner_0_get_owner_27_read_28_read_30_read_43_block4(v484), !653

        only_owner_0_get_owner_27_read_28_read_30_read_43_block4(v485: b256):
        br only_owner_0_get_owner_27_read_28_read_30_read_43_block5(v485), !654

        only_owner_0_get_owner_27_read_28_read_30_read_43_block5(v486: b256):
        br only_owner_0_get_owner_27_read_28_read_30_block11(v486), !655

        only_owner_0_get_owner_27_read_28_read_30_block11(v487: b256):
        v488 = const u64 1
        v489 = const u64 1
        v490 = get_elem_ptr v468, ptr b256, v488, v489, !656
        store v487 to v490, !657
        v491 = load v468, !658
        br only_owner_0_get_owner_27_read_28_read_30_block5(v491), !659

        only_owner_0_get_owner_27_read_28_read_30_block4():
        v492 = get_local ptr { u64, ( () | b256 ) }, __anon_21, !660
        v493 = const u64 0
        v494 = get_elem_ptr v492, ptr u64, v493, !661
        v495 = const u64 0, !90
        store v495 to v494, !662
        v496 = load v492, !663
        br only_owner_0_get_owner_27_read_28_read_30_block5(v496), !664

        only_owner_0_get_owner_27_read_28_read_30_block5(v497: { u64, ( () | b256 ) }):
        br only_owner_0_get_owner_27_read_28_block0(v497), !665

        only_owner_0_get_owner_27_read_28_block0(v498: { u64, ( () | b256 ) }):
        v499 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !668
        store v498 to v499, !669
        v500 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !671
        v501 = const u64 0
        v502 = get_elem_ptr v500, ptr u64, v501, !672
        v503 = load v502, !673
        v504 = const u64 1, !670
        v505 = cmp eq v503 v504, !675
        br only_owner_0_get_owner_27_read_28_unwrap_29_block3(v505), !676

        only_owner_0_get_owner_27_read_28_unwrap_29_block3(v506: bool):
        cbr v506, only_owner_0_get_owner_27_read_28_unwrap_29_block0(), only_owner_0_get_owner_27_read_28_unwrap_29_block1(), !677

        only_owner_0_get_owner_27_read_28_unwrap_29_block0():
        v507 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !678
        v508 = const u64 1
        v509 = const u64 1
        v510 = get_elem_ptr v507, ptr b256, v508, v509, !679
        v511 = load v510, !680
        v512 = get_local ptr b256, inner_value0, !682
        store v511 to v512, !683
        v513 = get_local ptr b256, inner_value0, !685
        v514 = load v513, !686
        br only_owner_0_get_owner_27_read_28_unwrap_29_block2(v514), !687

        only_owner_0_get_owner_27_read_28_unwrap_29_block1():
        v515 = const u64 0, !688
        revert v515, !690

        only_owner_0_get_owner_27_read_28_unwrap_29_block4(v516: never):
        br only_owner_0_get_owner_27_read_28_unwrap_29_block2(v516), !691

        only_owner_0_get_owner_27_read_28_unwrap_29_block2(v517: b256):
        br only_owner_0_get_owner_27_read_28_block1(v517), !692

        only_owner_0_get_owner_27_read_28_block1(v518: b256):
        br only_owner_0_get_owner_27_block0(v518), !693

        only_owner_0_get_owner_27_block0(v519: b256):
        br only_owner_0_block2(v519), !694

        only_owner_0_block2(v520: b256):
        v521 = call from_22(v520), !696
        v522 = const u64 1
        v523 = const u64 0
        v524 = get_elem_ptr v328, ptr { b256 }, v522, v523, !697
        store v521 to v524, !698
        v525 = load v328, !5
        v526 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_03, !701
        v527 = const u64 0
        v528 = get_elem_ptr v526, ptr { u64, ( { b256 } | { b256 } ) }, v527, !702
        store v327 to v528, !703
        v529 = const u64 1
        v530 = get_elem_ptr v526, ptr { u64, ( { b256 } | { b256 } ) }, v529, !704
        store v525 to v530, !705
        v531 = load v526, !706
        v532 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !708
        store v531 to v532, !709
        v533 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !710
        v534 = const u64 0
        v535 = get_elem_ptr v533, ptr { u64, ( { b256 } | { b256 } ) }, v534, !712
        v536 = const u64 0
        v537 = get_elem_ptr v535, ptr u64, v536, !713
        v538 = load v537, !714
        v539 = const u64 0, !711
        v540 = cmp eq v538 v539, !716
        br only_owner_0_eq_4_block10(v540), !717

        only_owner_0_eq_4_block10(v541: bool):
        cbr v541, only_owner_0_eq_4_block0(), only_owner_0_eq_4_block1(v541), !718

        only_owner_0_eq_4_block0():
        v542 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !719
        v543 = const u64 1
        v544 = get_elem_ptr v542, ptr { u64, ( { b256 } | { b256 } ) }, v543, !720
        v545 = const u64 0
        v546 = get_elem_ptr v544, ptr u64, v545, !721
        v547 = load v546, !722
        v548 = const u64 0, !711
        v549 = cmp eq v547 v548, !723
        br only_owner_0_eq_4_block11(v549), !724

        only_owner_0_eq_4_block11(v550: bool):
        br only_owner_0_eq_4_block1(v550), !725

        only_owner_0_eq_4_block1(v551: bool):
        cbr v551, only_owner_0_eq_4_block2(), only_owner_0_eq_4_block3(), !726

        only_owner_0_eq_4_block2():
        v552 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !727
        v553 = const u64 0
        v554 = get_elem_ptr v552, ptr { u64, ( { b256 } | { b256 } ) }, v553, !728
        v555 = const u64 1
        v556 = const u64 0
        v557 = get_elem_ptr v554, ptr { b256 }, v555, v556, !729
        v558 = load v557, !730
        v559 = get_local ptr { b256 }, addr1, !732
        store v558 to v559, !733
        v560 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !734
        v561 = const u64 1
        v562 = get_elem_ptr v560, ptr { u64, ( { b256 } | { b256 } ) }, v561, !735
        v563 = const u64 1
        v564 = const u64 0
        v565 = get_elem_ptr v562, ptr { b256 }, v563, v564, !736
        v566 = load v565, !737
        v567 = get_local ptr { b256 }, addr2, !739
        store v566 to v567, !740
        v568 = get_local ptr { b256 }, addr1, !742
        v569 = load v568, !743
        v570 = get_local ptr { b256 }, addr2, !745
        v571 = load v570, !746
        v572 = call eq_6(v569, v571), !748
        br only_owner_0_eq_4_block9(v572), !749

        only_owner_0_eq_4_block3():
        v573 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !750
        v574 = const u64 0
        v575 = get_elem_ptr v573, ptr { u64, ( { b256 } | { b256 } ) }, v574, !752
        v576 = const u64 0
        v577 = get_elem_ptr v575, ptr u64, v576, !753
        v578 = load v577, !754
        v579 = const u64 1, !751
        v580 = cmp eq v578 v579, !756
        br only_owner_0_eq_4_block12(v580), !757

        only_owner_0_eq_4_block12(v581: bool):
        cbr v581, only_owner_0_eq_4_block4(), only_owner_0_eq_4_block5(v581), !758

        only_owner_0_eq_4_block4():
        v582 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !759
        v583 = const u64 1
        v584 = get_elem_ptr v582, ptr { u64, ( { b256 } | { b256 } ) }, v583, !760
        v585 = const u64 0
        v586 = get_elem_ptr v584, ptr u64, v585, !761
        v587 = load v586, !762
        v588 = const u64 1, !751
        v589 = cmp eq v587 v588, !763
        br only_owner_0_eq_4_block13(v589), !764

        only_owner_0_eq_4_block13(v590: bool):
        br only_owner_0_eq_4_block5(v590), !765

        only_owner_0_eq_4_block5(v591: bool):
        cbr v591, only_owner_0_eq_4_block6(), only_owner_0_eq_4_block7(), !766

        only_owner_0_eq_4_block6():
        v592 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !767
        v593 = const u64 0
        v594 = get_elem_ptr v592, ptr { u64, ( { b256 } | { b256 } ) }, v593, !768
        v595 = const u64 1
        v596 = const u64 1
        v597 = get_elem_ptr v594, ptr { b256 }, v595, v596, !769
        v598 = load v597, !770
        v599 = get_local ptr { b256 }, id1, !772
        store v598 to v599, !773
        v600 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !774
        v601 = const u64 1
        v602 = get_elem_ptr v600, ptr { u64, ( { b256 } | { b256 } ) }, v601, !775
        v603 = const u64 1
        v604 = const u64 1
        v605 = get_elem_ptr v602, ptr { b256 }, v603, v604, !776
        v606 = load v605, !777
        v607 = get_local ptr { b256 }, id2, !779
        store v606 to v607, !780
        v608 = get_local ptr { b256 }, id1, !782
        v609 = load v608, !783
        v610 = get_local ptr { b256 }, id2, !785
        v611 = load v610, !786
        v612 = call eq_6(v609, v611), !788
        br only_owner_0_eq_4_block8(v612), !789

        only_owner_0_eq_4_block7():
        v613 = const bool false, !790
        br only_owner_0_eq_4_block8(v613), !791

        only_owner_0_eq_4_block8(v614: bool):
        br only_owner_0_eq_4_block9(v614), !792

        only_owner_0_eq_4_block9(v615: bool):
        br only_owner_0_block3(v615), !793

        only_owner_0_block3(v616: bool):
        v617 = const bool false, !795
        v618 = cmp eq v616 v617, !799
        br only_owner_0_assert_1_block3(v618), !800

        only_owner_0_assert_1_block3(v619: bool):
        cbr v619, only_owner_0_assert_1_block0(), only_owner_0_assert_1_block1(), !801

        only_owner_0_assert_1_block0():
        v620 = const u64 18446744073709486084, !803
        revert v620, !805

        only_owner_0_assert_1_block4(v621: never):
        v622 = const unit ()
        br only_owner_0_assert_1_block2(v622), !806

        only_owner_0_assert_1_block1():
        v623 = const unit ()
        br only_owner_0_assert_1_block2(v623), !807

        only_owner_0_assert_1_block2(v624: ()):
        v625 = const unit ()
        br only_owner_0_block4(v625), !808

        only_owner_0_block4(v626: ()):
        v627 = const unit ()
        br block0(v627), !5

        block0(v628: ()):
        v629 = get_local ptr { b256, u64, b256 }, __anon_0, !809
        v630 = const u64 0
        v631 = get_elem_ptr v629, ptr b256, v630
        v632 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c, !809
        store v632 to v631, !809
        v633 = const u64 1
        v634 = get_elem_ptr v629, ptr u64, v633
        v635 = const u64 0
        store v635 to v634, !809
        v636 = const u64 2
        v637 = get_elem_ptr v629, ptr b256, v636
        v638 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c, !809
        store v638 to v637, !809
        v639 = load v629
        v640 = call slot_51(v639), !812
        v641 = call offset_46(v639), !814
        v642 = const u64 8
        v643 = const u64 0, !815
        v644 = cmp eq v642 v643, !818
        br write_47_write_48_block3(v644), !819

        write_47_write_48_block3(v645: bool):
        cbr v645, write_47_write_48_block0(), write_47_write_48_block1(), !820

        write_47_write_48_block0():
        v646 = const unit (), !821
        br write_47_block0(v646), !822

        write_47_write_48_block1():
        v647 = const unit ()
        br write_47_write_48_block2(v647), !823

        write_47_write_48_block2(v648: ()):
        v649 = get_local ptr u64, size_of_t0, !825
        v650 = const u64 8, !460
        v651 = mul v641, v650, !826
        br write_47_write_48_slot_calculator_49_block6(v651), !827

        write_47_write_48_slot_calculator_49_block6(v652: u64):
        v653 = get_local ptr u64, size_of_t0, !828
        v654 = const u64 8
        v655 = add v652, v654, !829
        br write_47_write_48_slot_calculator_49_block7(v655), !830

        write_47_write_48_slot_calculator_49_block7(v656: u64):
        v657 = const u64 31, !469
        v658 = add v656, v657, !831
        br write_47_write_48_slot_calculator_49_block8(v658), !832

        write_47_write_48_slot_calculator_49_block8(v659: u64):
        v660 = const u64 5, !473
        v661 = rsh v659, v660, !833
        br write_47_write_48_slot_calculator_49_block9(v661), !834

        write_47_write_48_slot_calculator_49_block9(v662: u64):
        v663 = get_local ptr u64, last_slot0, !835
        v664 = const u64 4, !479
        v665 = mod v641, v664, !836
        br write_47_write_48_slot_calculator_49_block10(v665), !837

        write_47_write_48_slot_calculator_49_block10(v666: u64):
        v667 = get_local ptr u64, place_in_slot00, !838
        v668 = get_local ptr bool, __matched_value_13, !839
        v669 = get_local ptr bool, __matched_value_13, !840
        v670 = const bool false
        v671 = const bool true, !489
        v672 = cmp eq v670 v671, !841
        br write_47_write_48_slot_calculator_49_block11(v672), !842

        write_47_write_48_slot_calculator_49_block11(v673: bool):
        cbr v673, write_47_write_48_slot_calculator_49_block0(), write_47_write_48_slot_calculator_49_block1(), !843

        write_47_write_48_slot_calculator_49_block0():
        v674 = get_local ptr u64, place_in_slot00, !844
        v675 = const u64 8, !496
        v676 = mul v666, v675, !845
        br write_47_write_48_slot_calculator_49_block12(v676), !846

        write_47_write_48_slot_calculator_49_block12(v677: u64):
        v678 = get_local ptr u64, size_of_t0, !847
        v679 = add v677, v654, !848
        br write_47_write_48_slot_calculator_49_block13(v679), !849

        write_47_write_48_slot_calculator_49_block13(v680: u64):
        v681 = const u64 31, !505
        v682 = add v680, v681, !850
        br write_47_write_48_slot_calculator_49_block14(v682), !851

        write_47_write_48_slot_calculator_49_block14(v683: u64):
        v684 = const u64 5, !509
        v685 = rsh v683, v684, !852
        br write_47_write_48_slot_calculator_49_block15(v685), !853

        write_47_write_48_slot_calculator_49_block15(v686: u64):
        br write_47_write_48_slot_calculator_49_block5(v686), !854

        write_47_write_48_slot_calculator_49_block1():
        v687 = get_local ptr bool, __matched_value_13, !855
        v688 = const bool false, !515
        v689 = cmp eq v670 v688, !856
        br write_47_write_48_slot_calculator_49_block16(v689), !857

        write_47_write_48_slot_calculator_49_block16(v690: bool):
        cbr v690, write_47_write_48_slot_calculator_49_block2(), write_47_write_48_slot_calculator_49_block3(), !858

        write_47_write_48_slot_calculator_49_block2():
        v691 = const u64 1, !520
        br write_47_write_48_slot_calculator_49_block4(v691), !859

        write_47_write_48_slot_calculator_49_block3():
        v692 = const u64 14757395258967588866, !485
        revert v692, !860

        write_47_write_48_slot_calculator_49_block4(v693: u64):
        br write_47_write_48_slot_calculator_49_block5(v693), !861

        write_47_write_48_slot_calculator_49_block5(v694: u64):
        v695 = get_local ptr u64, number_of_slots00, !862
        v696 = asm(input: v640) -> u256 input, !863 {
        }
        br write_47_write_48_slot_calculator_49_block17(v696), !864

        write_47_write_48_slot_calculator_49_block17(v697: u256):
        v698 = get_local ptr u256, offset_slot00, !865
        store v697 to v698, !866
        v699 = get_local ptr u256, offset_slot00, !867
        v700 = load v699, !868
        v701 = get_local ptr u64, last_slot0, !869
        v702 = call as_u256_40(v662), !870
        v703 = get_local ptr u64, number_of_slots00, !871
        v704 = call as_u256_40(v694), !872
        v705 = sub v702, v704, !873
        br write_47_write_48_slot_calculator_49_block18(v705), !874

        write_47_write_48_slot_calculator_49_block18(v706: u256):
        v707 = add v700, v706, !875
        br write_47_write_48_slot_calculator_49_block19(v707), !876

        write_47_write_48_slot_calculator_49_block19(v708: u256):
        v709 = get_local ptr u256, offset_slot00, !877
        store v708 to v709, !878
        v710 = get_local ptr u256, offset_slot00, !879
        v711 = load v710, !880
        v712 = asm(input: v711) -> b256 input, !881 {
        }
        br write_47_write_48_slot_calculator_49_block20(v712), !882

        write_47_write_48_slot_calculator_49_block20(v713: b256):
        v714 = get_local ptr u64, number_of_slots00, !883
        v715 = get_local ptr u64, place_in_slot00, !884
        v716 = get_local ptr { b256, u64, u64 }, __anon_04, !885
        v717 = const u64 0
        v718 = get_elem_ptr v716, ptr b256, v717, !886
        store v713 to v718, !887
        v719 = const u64 1
        v720 = get_elem_ptr v716, ptr u64, v719, !888
        store v694 to v720, !889
        v721 = const u64 2
        v722 = get_elem_ptr v716, ptr u64, v721, !890
        store v666 to v722, !891
        v723 = load v716, !892
        br write_47_write_48_block4(v723), !893

        write_47_write_48_block4(v724: { b256, u64, u64 }):
        v725 = get_local ptr { b256, u64, u64 }, __tuple_1, !895
        store v724 to v725, !896
        v726 = get_local ptr { b256, u64, u64 }, __tuple_1, !897
        v727 = load v726, !898
        v728 = get_local ptr { b256, u64, u64 }, __tuple_1_, !899
        store v727 to v728, !900
        v729 = get_local ptr { b256, u64, u64 }, __tuple_1_, !901
        v730 = const u64 0
        v731 = get_elem_ptr v729, ptr b256, v730, !902
        v732 = load v731, !903
        v733 = get_local ptr b256, offset_slot1, !904
        store v732 to v733, !905
        v734 = get_local ptr { b256, u64, u64 }, __tuple_1_, !906
        v735 = const u64 1
        v736 = get_elem_ptr v734, ptr u64, v735, !907
        v737 = load v736, !908
        v738 = get_local ptr u64, number_of_slots1, !909
        v739 = get_local ptr { b256, u64, u64 }, __tuple_1_, !910
        v740 = const u64 2
        v741 = get_elem_ptr v739, ptr u64, v740, !911
        v742 = load v741, !912
        v743 = get_local ptr u64, place_in_slot1, !913
        v744 = get_local ptr u64, number_of_slots1, !915
        v745 = const u64 32, !916
        v746 = mul v737, v745, !918
        br write_47_write_48_block5(v746), !919

        write_47_write_48_block5(v747: u64):
        v748 = mul v455, v747, !921
        br write_47_write_48_alloc_42_block0(v748), !922

        write_47_write_48_alloc_42_block0(v749: u64):
        v750 = asm(size: v749, ptr) -> u64 ptr, !923 {
            aloc   size, !606
            move   ptr hp, !607
        }
        br write_47_write_48_block6(v750), !924

        write_47_write_48_block6(v751: u64):
        v752 = get_local ptr u64, padded_value, !926
        v753 = get_local ptr b256, offset_slot1, !928
        v754 = load v753, !929
        v755 = get_local ptr u64, padded_value, !931
        v756 = get_local ptr u64, number_of_slots1, !933
        v757 = get_local ptr b256, key_for_storage0, !935
        store v754 to v757, !936
        v758 = int_to_ptr v751 to ptr b256, !937
        v759 = state_load_quad_word v758, key v757, v737, !938
        v760 = get_local ptr bool, _, !940
        v761 = get_local ptr u64, padded_value, !942
        v762 = get_local ptr u64, place_in_slot1, !944
        v763 = mul v474, v742, !946
        v764 = add v751, v763, !947
        br write_47_write_48_block7(v764), !948

        write_47_write_48_block7(v765: u64):
        v766 = const bool false
        cbr v766, write_47_write_48_write_50_block0(), write_47_write_48_write_50_block1(), !951

        write_47_write_48_write_50_block0():
        v767 = const u64 8
        v768 = asm(dst: v765, src: new_value, count: v767) {
            mcp    dst src count, !952
        }
        v769 = const unit ()
        br write_47_write_48_write_50_block5(v769), !953

        write_47_write_48_write_50_block1():
        v770 = const u64 8
        v771 = const u64 1, !954
        v772 = cmp eq v770 v771, !955
        cbr v772, write_47_write_48_write_50_block2(), write_47_write_48_write_50_block3(), !957

        write_47_write_48_write_50_block2():
        v773 = asm(ptr: v765, val: new_value) {
            sb     ptr val i0, !958
        }
        v774 = const unit ()
        br write_47_write_48_write_50_block4(v774), !959

        write_47_write_48_write_50_block3():
        v775 = asm(ptr: v765, val: new_value) {
            sw     ptr val i0, !960
        }
        v776 = const unit ()
        br write_47_write_48_write_50_block4(v776), !961

        write_47_write_48_write_50_block4(v777: ()):
        br write_47_write_48_write_50_block5(v777), !962

        write_47_write_48_write_50_block5(v778: ()):
        v779 = const unit ()
        br write_47_write_48_block8(v779), !963

        write_47_write_48_block8(v780: ()):
        v781 = get_local ptr b256, offset_slot1, !965
        v782 = load v781, !966
        v783 = get_local ptr u64, padded_value, !968
        v784 = get_local ptr u64, number_of_slots1, !970
        v785 = get_local ptr b256, key_for_storage_, !972
        store v782 to v785, !973
        v786 = int_to_ptr v751 to ptr b256, !974
        v787 = state_store_quad_word v786, key v785, v737, !975
        v788 = get_local ptr bool, __, !977
        v789 = const unit ()
        br write_47_block0(v789), !978

        write_47_block0(v790: ()):
        v791 = const unit ()
        br block1(v791), !810

        block1(v792: ()):
        v793 = const unit ()
        ret () v793
    }

    pub fn only_owner_0() -> (), !981 {
        local { u64, ( { b256 } | { b256 } ) } __anon_0
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_00
        local { u64, ( () | { b256 } ) } __anon_000
        local { u64 } __anon_0000
        local { b256, u64, u64 } __anon_0001
        local { u64, ( () | b256 ) } __anon_001
        local { u64, ( () | { b256 } ) } __anon_01
        local { b256, u64, b256 } __anon_02
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __anon_03
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_1
        local { u64, ( { b256 } | { u64 } ) } __anon_10
        local { u64 } __anon_100
        local { u64, ( () | { b256 } ) } __anon_11
        local { u64, ( () | b256 ) } __anon_12
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64 } __anon_20
        local { u64, ( () | b256 ) } __anon_21
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { u64 } ) } __anon_30
        local { u64, ( { b256 } | { b256 } ) } __anon_4
        local { u64, ( { b256 } | { u64 } ) } __anon_40
        local { u64 } __anon_5
        local { u64, ( { b256 } | { u64 } ) } __matched_value_1
        local u8 __matched_value_10
        local bool __matched_value_11
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __matched_value_12
        local { u64 } __matched_value_2
        local { u64, ( () | { b256 } ) } __matched_value_3
        local { u64 } __matched_value_30
        local { u64, ( () | { b256 } ) } __matched_value_31
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __matched_value_32
        local { u64, ( () | b256 ) } __matched_value_4
        local { u64 } __matched_value_6
        local { b256, u64, u64 } __tuple_2
        local { b256, u64, u64 } __tuple_2_
        local { b256 } addr1
        local { b256 } addr2
        local { b256 } address
        local mut { u64, ( () | { b256 } ) } candidate
        local { u64 } err
        local mut u64 i
        local { b256 } id1
        local { b256 } id2
        local { u64, ( { b256 } | { b256 } ) } inner_value
        local b256 inner_value0
        local u64 inputs
        local b256 key_for_storage
        local u64 last_slot
        local u64 number_of_slots
        local u64 number_of_slots0
        local b256 offset_slot
        local mut u256 offset_slot0
        local { b256 } owner
        local { u64, ( () | { b256 } ) } owner_of_input
        local u64 place_in_slot
        local u64 place_in_slot0
        local u64 result_ptr
        local u64 size_of_t
        local { u64 } type_of_input

        entry():
        v0 = asm(r1) -> bool r1, !982 {
            gm     r1 i1, !12
        }
        br msg_sender_10_block9(v0), !983

        msg_sender_10_block9(v1: bool):
        cbr v1, msg_sender_10_block0(), msg_sender_10_block7(), !984

        msg_sender_10_block0():
        v2 = const u64 0, !16
        v3 = gtf v2, 1, !985
        v4 = bitcast v3 to u8, !986
        v5 = get_local ptr u8, __matched_value_10, !987
        v6 = get_local ptr u8, __matched_value_10, !988
        v7 = const u8 0, !27
        v8 = cmp eq v4 v7, !989
        br msg_sender_10_caller_address_12_input_count_13_tx_type_14_block6(v8), !990

        msg_sender_10_caller_address_12_input_count_13_tx_type_14_block6(v9: bool):
        cbr v9, msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0(), msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1(), !991

        msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0():
        v10 = get_local ptr { u64 }, __anon_0000, !992
        v11 = const u64 0
        v12 = get_elem_ptr v10, ptr u64, v11, !993
        v13 = const u64 0, !32
        store v13 to v12, !994
        v14 = load v10, !995
        br msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v14), !996

        msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1():
        v15 = get_local ptr u8, __matched_value_10, !997
        v16 = const u8 1, !39
        v17 = cmp eq v4 v16, !998
        br msg_sender_10_caller_address_12_input_count_13_tx_type_14_block7(v17), !999

        msg_sender_10_caller_address_12_input_count_13_tx_type_14_block7(v18: bool):
        cbr v18, msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2(), msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3(), !1000

        msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2():
        v19 = get_local ptr { u64 }, __anon_100, !1001
        v20 = const u64 0
        v21 = get_elem_ptr v19, ptr u64, v20, !1002
        v22 = const u64 1, !32
        store v22 to v21, !1003
        v23 = load v19, !1004
        br msg_sender_10_caller_address_12_input_count_13_tx_type_14_block4(v23), !1005

        msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3():
        v24 = const u64 0, !49
        revert v24, !1006

        msg_sender_10_caller_address_12_input_count_13_tx_type_14_block8(v25: never):
        br msg_sender_10_caller_address_12_input_count_13_tx_type_14_block4(v25), !1007

        msg_sender_10_caller_address_12_input_count_13_tx_type_14_block4(v26: { u64 }):
        br msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v26), !1008

        msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v27: { u64 }):
        br msg_sender_10_caller_address_12_input_count_13_block6(v27), !1009

        msg_sender_10_caller_address_12_input_count_13_block6(v28: { u64 }):
        v29 = get_local ptr { u64 }, __matched_value_30, !1010
        store v28 to v29, !1011
        v30 = get_local ptr { u64 }, __matched_value_30, !1012
        v31 = const u64 0
        v32 = get_elem_ptr v30, ptr u64, v31, !1013
        v33 = load v32, !1014
        v34 = const u64 0, !20
        v35 = cmp eq v33 v34, !1015
        br msg_sender_10_caller_address_12_input_count_13_block7(v35), !1016

        msg_sender_10_caller_address_12_input_count_13_block7(v36: bool):
        cbr v36, msg_sender_10_caller_address_12_input_count_13_block0(), msg_sender_10_caller_address_12_input_count_13_block1(), !1017

        msg_sender_10_caller_address_12_input_count_13_block0():
        v37 = const u64 0, !67
        v38 = gtf v37, 5, !1018
        v39 = bitcast v38 to u64, !1019
        br msg_sender_10_caller_address_12_input_count_13_block5(v39), !1020

        msg_sender_10_caller_address_12_input_count_13_block1():
        v40 = get_local ptr { u64 }, __matched_value_30, !1021
        v41 = const u64 0
        v42 = get_elem_ptr v40, ptr u64, v41, !1022
        v43 = load v42, !1023
        v44 = const u64 1, !20
        v45 = cmp eq v43 v44, !1024
        br msg_sender_10_caller_address_12_input_count_13_block8(v45), !1025

        msg_sender_10_caller_address_12_input_count_13_block8(v46: bool):
        cbr v46, msg_sender_10_caller_address_12_input_count_13_block2(), msg_sender_10_caller_address_12_input_count_13_block3(), !1026

        msg_sender_10_caller_address_12_input_count_13_block2():
        v47 = const u64 0, !79
        v48 = gtf v47, 259, !1027
        v49 = bitcast v48 to u64, !1028
        br msg_sender_10_caller_address_12_input_count_13_block4(v49), !1029

        msg_sender_10_caller_address_12_input_count_13_block3():
        v50 = const u64 14757395258967588866, !57
        revert v50, !1030

        msg_sender_10_caller_address_12_input_count_13_block4(v51: u64):
        br msg_sender_10_caller_address_12_input_count_13_block5(v51), !1031

        msg_sender_10_caller_address_12_input_count_13_block5(v52: u64):
        br msg_sender_10_caller_address_12_block18(v52), !1032

        msg_sender_10_caller_address_12_block18(v53: u64):
        v54 = get_local ptr u64, inputs, !1033
        v55 = get_local ptr { u64, ( () | { b256 } ) }, __anon_000, !1034
        v56 = const u64 0
        v57 = get_elem_ptr v55, ptr u64, v56, !1035
        v58 = const u64 0, !90
        store v58 to v57, !1036
        v59 = load v55, !1037
        v60 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !1038
        store v59 to v60, !1039
        v61 = get_local ptr u64, i, !1040
        v62 = const u64 0, !100
        br msg_sender_10_caller_address_12_while(v62), !1041

        msg_sender_10_caller_address_12_while(v63: u64):
        v64 = get_local ptr u64, i, !1042
        v65 = get_local ptr u64, inputs, !1043
        v66 = cmp lt v63 v53, !1044
        br msg_sender_10_caller_address_12_block19(v66), !1045

        msg_sender_10_caller_address_12_block19(v67: bool):
        cbr v67, msg_sender_10_caller_address_12_while_body(), msg_sender_10_caller_address_12_end_while(), !1046

        msg_sender_10_caller_address_12_while_break():
        br msg_sender_10_caller_address_12_end_while(), !1047

        msg_sender_10_caller_address_12_while_body():
        v68 = get_local ptr u64, i, !1048
        v69 = asm(input: v63) -> u64 input, !1049 {
        }
        br msg_sender_10_caller_address_12_block20(v69), !1050

        msg_sender_10_caller_address_12_block20(v70: u64):
        v71 = call input_type_17(v70), !1051
        v72 = get_local ptr { u64 }, type_of_input, !1052
        store v71 to v72, !1053
        v73 = get_local ptr { u64 }, type_of_input, !1054
        v74 = load v73, !1055
        v75 = get_local ptr { u64 }, __matched_value_2, !1056
        store v74 to v75, !1057
        v76 = get_local ptr { u64 }, __matched_value_2, !1058
        v77 = const u64 0
        v78 = get_elem_ptr v76, ptr u64, v77, !1059
        v79 = load v78, !1060
        v80 = const u64 0, !123
        v81 = cmp eq v79 v80, !1061
        br msg_sender_10_caller_address_12_block21(v81), !1062

        msg_sender_10_caller_address_12_block21(v82: bool):
        cbr v82, msg_sender_10_caller_address_12_block0(), msg_sender_10_caller_address_12_block1(), !1063

        msg_sender_10_caller_address_12_block0():
        v83 = const unit (), !136
        br msg_sender_10_caller_address_12_block5(v83), !1064

        msg_sender_10_caller_address_12_block1():
        v84 = get_local ptr { u64 }, __matched_value_2, !1065
        v85 = const u64 0
        v86 = get_elem_ptr v84, ptr u64, v85, !1066
        v87 = load v86, !1067
        v88 = const u64 2, !123
        v89 = cmp eq v87 v88, !1068
        br msg_sender_10_caller_address_12_block22(v89), !1069

        msg_sender_10_caller_address_12_block22(v90: bool):
        cbr v90, msg_sender_10_caller_address_12_block2(), msg_sender_10_caller_address_12_block3(), !1070

        msg_sender_10_caller_address_12_block2():
        v91 = const unit (), !145
        br msg_sender_10_caller_address_12_block4(v91), !1071

        msg_sender_10_caller_address_12_block3():
        v92 = get_local ptr u64, i, !1072
        v93 = const u64 1, !149
        v94 = call add_19(v63, v93), !1073
        v95 = get_local ptr u64, i, !1074
        br msg_sender_10_caller_address_12_while(v94), !1075

        msg_sender_10_caller_address_12_block4(v96: ()):
        br msg_sender_10_caller_address_12_block5(v96), !1076

        msg_sender_10_caller_address_12_block5(v97: ()):
        v98 = get_local ptr u64, i, !1077
        v99 = asm(input: v63) -> u64 input, !1078 {
        }
        br msg_sender_10_caller_address_12_block23(v99), !1079

        msg_sender_10_caller_address_12_block23(v100: u64):
        v101 = call input_type_17(v100), !1080
        v102 = get_local ptr { u64 }, __matched_value_6, !1081
        store v101 to v102, !1082
        v103 = get_local ptr { u64 }, __matched_value_6, !1083
        v104 = const u64 0
        v105 = get_elem_ptr v103, ptr u64, v104, !1084
        v106 = load v105, !1085
        v107 = const u64 0, !161
        v108 = cmp eq v106 v107, !1086
        br msg_sender_10_caller_address_12_input_coin_owner_21_block3(v108), !1087

        msg_sender_10_caller_address_12_input_coin_owner_21_block3(v109: bool):
        cbr v109, msg_sender_10_caller_address_12_input_coin_owner_21_block0(), msg_sender_10_caller_address_12_input_coin_owner_21_block1(), !1088

        msg_sender_10_caller_address_12_input_coin_owner_21_block0():
        v110 = get_local ptr { u64, ( () | { b256 } ) }, __anon_01, !1089
        v111 = const u64 0
        v112 = get_elem_ptr v110, ptr u64, v111, !1090
        v113 = const u64 1, !90
        store v113 to v112, !1091
        v114 = gtf v100, 515, !1092
        v115 = int_to_ptr v114 to ptr b256, !1093
        v116 = load v115, !1094
        v117 = call from_22(v116), !1095
        v118 = const u64 1
        v119 = const u64 1
        v120 = get_elem_ptr v110, ptr { b256 }, v118, v119, !1096
        store v117 to v120, !1097
        v121 = load v110, !1098
        br msg_sender_10_caller_address_12_input_coin_owner_21_block2(v121), !1099

        msg_sender_10_caller_address_12_input_coin_owner_21_block1():
        v122 = get_local ptr { u64, ( () | { b256 } ) }, __anon_11, !1100
        v123 = const u64 0
        v124 = get_elem_ptr v122, ptr u64, v123, !1101
        v125 = const u64 0, !90
        store v125 to v124, !1102
        v126 = load v122, !1103
        br msg_sender_10_caller_address_12_input_coin_owner_21_block2(v126), !1104

        msg_sender_10_caller_address_12_input_coin_owner_21_block2(v127: { u64, ( () | { b256 } ) }):
        br msg_sender_10_caller_address_12_block24(v127), !1105

        msg_sender_10_caller_address_12_block24(v128: { u64, ( () | { b256 } ) }):
        v129 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !1106
        store v128 to v129, !1107
        v130 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !1108
        v131 = load v130, !1109
        v132 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !1110
        store v131 to v132, !1111
        v133 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !1112
        v134 = const u64 0
        v135 = get_elem_ptr v133, ptr u64, v134, !1113
        v136 = load v135, !1114
        v137 = const u64 1, !202
        v138 = cmp eq v136 v137, !1115
        br msg_sender_10_caller_address_12_is_none_23_block3(v138), !1116

        msg_sender_10_caller_address_12_is_none_23_block3(v139: bool):
        cbr v139, msg_sender_10_caller_address_12_is_none_23_block0(), msg_sender_10_caller_address_12_is_none_23_block1(), !1117

        msg_sender_10_caller_address_12_is_none_23_block0():
        v140 = const bool false, !210
        br msg_sender_10_caller_address_12_is_none_23_block2(v140), !1118

        msg_sender_10_caller_address_12_is_none_23_block1():
        v141 = const bool true, !212
        br msg_sender_10_caller_address_12_is_none_23_block2(v141), !1119

        msg_sender_10_caller_address_12_is_none_23_block2(v142: bool):
        br msg_sender_10_caller_address_12_block25(v142), !1120

        msg_sender_10_caller_address_12_block25(v143: bool):
        cbr v143, msg_sender_10_caller_address_12_block6(), msg_sender_10_caller_address_12_block7(), !1121

        msg_sender_10_caller_address_12_block6():
        v144 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !1122
        v145 = load v144, !1123
        v146 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !1124
        store v145 to v146, !1125
        v147 = get_local ptr u64, i, !1126
        v148 = const u64 1, !224
        v149 = call add_19(v63, v148), !1127
        v150 = get_local ptr u64, i, !1128
        br msg_sender_10_caller_address_12_while(v149), !1129

        msg_sender_10_caller_address_12_block7():
        v151 = const unit ()
        br msg_sender_10_caller_address_12_block8(v151), !1130

        msg_sender_10_caller_address_12_block8(v152: ()):
        v153 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !1131
        v154 = load v153, !1132
        v155 = call unwrap_24(v154), !1133
        v156 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !1134
        v157 = load v156, !1135
        v158 = call unwrap_24(v157), !1136
        v159 = call eq_6(v155, v158), !1137
        cbr v159, msg_sender_10_caller_address_12_block9(), msg_sender_10_caller_address_12_block10(), !1138

        msg_sender_10_caller_address_12_block9():
        v160 = get_local ptr u64, i, !1139
        v161 = const u64 1, !245
        v162 = call add_19(v63, v161), !1140
        v163 = get_local ptr u64, i, !1141
        br msg_sender_10_caller_address_12_while(v162), !1142

        msg_sender_10_caller_address_12_block10():
        v164 = const unit ()
        br msg_sender_10_caller_address_12_block11(v164), !1143

        msg_sender_10_caller_address_12_block11(v165: ()):
        v166 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_10, !1144
        v167 = const u64 0
        v168 = get_elem_ptr v166, ptr u64, v167, !1145
        v169 = const u64 1, !252
        store v169 to v168, !1146
        v170 = get_local ptr { u64 }, __anon_20, !1147
        v171 = const u64 0
        v172 = get_elem_ptr v170, ptr u64, v171, !1148
        v173 = const u64 0, !256
        store v173 to v172, !1149
        v174 = load v170, !1150
        v175 = const u64 1
        v176 = const u64 1
        v177 = get_elem_ptr v166, ptr { u64 }, v175, v176, !1151
        store v174 to v177, !1152
        v178 = load v166, !1153
        br msg_sender_10_block10(v178), !1154

        msg_sender_10_caller_address_12_end_while():
        v179 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !1155
        v180 = load v179, !1156
        v181 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !1157
        store v180 to v181, !1158
        v182 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !1159
        v183 = const u64 0
        v184 = get_elem_ptr v182, ptr u64, v183, !1160
        v185 = load v184, !1161
        v186 = const u64 1, !266
        v187 = cmp eq v185 v186, !1162
        br msg_sender_10_caller_address_12_block26(v187), !1163

        msg_sender_10_caller_address_12_block26(v188: bool):
        cbr v188, msg_sender_10_caller_address_12_block12(), msg_sender_10_caller_address_12_block13(), !1164

        msg_sender_10_caller_address_12_block12():
        v189 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !1165
        v190 = const u64 1
        v191 = const u64 1
        v192 = get_elem_ptr v189, ptr { b256 }, v190, v191, !1166
        v193 = load v192, !1167
        v194 = get_local ptr { b256 }, address, !1168
        store v193 to v194, !1169
        v195 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_30, !1170
        v196 = const u64 0
        v197 = get_elem_ptr v195, ptr u64, v196, !1171
        v198 = const u64 0, !252
        store v198 to v197, !1172
        v199 = get_local ptr { b256 }, address, !1173
        v200 = load v199, !1174
        v201 = const u64 1
        v202 = const u64 0
        v203 = get_elem_ptr v195, ptr { b256 }, v201, v202, !1175
        store v200 to v203, !1176
        v204 = load v195, !1177
        br msg_sender_10_caller_address_12_block17(v204), !1178

        msg_sender_10_caller_address_12_block13():
        v205 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !1179
        v206 = const u64 0
        v207 = get_elem_ptr v205, ptr u64, v206, !1180
        v208 = load v207, !1181
        v209 = const u64 0, !266
        v210 = cmp eq v208 v209, !1182
        br msg_sender_10_caller_address_12_block27(v210), !1183

        msg_sender_10_caller_address_12_block27(v211: bool):
        cbr v211, msg_sender_10_caller_address_12_block14(), msg_sender_10_caller_address_12_block15(), !1184

        msg_sender_10_caller_address_12_block14():
        v212 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_40, !1185
        v213 = const u64 0
        v214 = get_elem_ptr v212, ptr u64, v213, !1186
        v215 = const u64 1, !252
        store v215 to v214, !1187
        v216 = get_local ptr { u64 }, __anon_5, !1188
        v217 = const u64 0
        v218 = get_elem_ptr v216, ptr u64, v217, !1189
        v219 = const u64 1, !256
        store v219 to v218, !1190
        v220 = load v216, !1191
        v221 = const u64 1
        v222 = const u64 1
        v223 = get_elem_ptr v212, ptr { u64 }, v221, v222, !1192
        store v220 to v223, !1193
        v224 = load v212, !1194
        br msg_sender_10_caller_address_12_block16(v224), !1195

        msg_sender_10_caller_address_12_block15():
        v225 = const u64 14757395258967588866, !269
        revert v225, !1196

        msg_sender_10_caller_address_12_block16(v226: { u64, ( { b256 } | { u64 } ) }):
        br msg_sender_10_caller_address_12_block17(v226), !1197

        msg_sender_10_caller_address_12_block17(v227: { u64, ( { b256 } | { u64 } ) }):
        br msg_sender_10_block10(v227), !1198

        msg_sender_10_block10(v228: { u64, ( { b256 } | { u64 } ) }):
        v229 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !1199
        store v228 to v229, !1200
        v230 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !1201
        v231 = const u64 0
        v232 = get_elem_ptr v230, ptr u64, v231, !1202
        v233 = load v232, !7
        v234 = const u64 1, !17
        v235 = cmp eq v233 v234, !1203
        br msg_sender_10_block11(v235), !1204

        msg_sender_10_block11(v236: bool):
        cbr v236, msg_sender_10_block1(), msg_sender_10_block2(), !1205

        msg_sender_10_block1():
        v237 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !1206
        v238 = const u64 1
        v239 = const u64 1
        v240 = get_elem_ptr v237, ptr { u64 }, v238, v239, !7
        v241 = load v240, !7
        v242 = get_local ptr { u64 }, err, !1207
        store v241 to v242, !1208
        v243 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_00, !1209
        v244 = const u64 0
        v245 = get_elem_ptr v243, ptr u64, v244, !1210
        v246 = const u64 1, !252
        store v246 to v245, !1211
        v247 = get_local ptr { u64 }, err, !1212
        v248 = load v247, !7
        v249 = const u64 1
        v250 = const u64 1
        v251 = get_elem_ptr v243, ptr { u64 }, v249, v250, !1213
        store v248 to v251, !1214
        v252 = load v243, !7
        br msg_sender_10_block6(v252), !7

        msg_sender_10_block2():
        v253 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !1215
        v254 = const u64 0
        v255 = get_elem_ptr v253, ptr u64, v254, !1216
        v256 = load v255, !7
        v257 = const u64 0, !17
        v258 = cmp eq v256 v257, !1217
        br msg_sender_10_block12(v258), !1218

        msg_sender_10_block12(v259: bool):
        cbr v259, msg_sender_10_block3(), msg_sender_10_block4(), !1219

        msg_sender_10_block3():
        v260 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !1220
        v261 = const u64 1
        v262 = const u64 0
        v263 = get_elem_ptr v260, ptr { b256 }, v261, v262, !7
        v264 = load v263, !7
        v265 = get_local ptr { b256 }, owner, !1221
        store v264 to v265, !1222
        v266 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_1, !1223
        v267 = const u64 0
        v268 = get_elem_ptr v266, ptr u64, v267, !1224
        v269 = const u64 0, !252
        store v269 to v268, !1225
        v270 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !1226
        v271 = const u64 0
        v272 = get_elem_ptr v270, ptr u64, v271, !1227
        v273 = const u64 0, !359
        store v273 to v272, !1228
        v274 = get_local ptr { b256 }, owner, !1229
        v275 = load v274, !7
        v276 = const u64 1
        v277 = const u64 0
        v278 = get_elem_ptr v270, ptr { b256 }, v276, v277, !1230
        store v275 to v278, !1231
        v279 = load v270, !7
        v280 = const u64 1
        v281 = const u64 0
        v282 = get_elem_ptr v266, ptr { u64, ( { b256 } | { b256 } ) }, v280, v281, !1232
        store v279 to v282, !1233
        v283 = load v266, !7
        br msg_sender_10_block5(v283), !7

        msg_sender_10_block4():
        v284 = const u64 14757395258967588866, !316
        revert v284, !1234

        msg_sender_10_block5(v285: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        br msg_sender_10_block6(v285), !7

        msg_sender_10_block6(v286: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        br msg_sender_10_block8(v286), !7

        msg_sender_10_block7():
        v287 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_3, !1235
        v288 = const u64 0
        v289 = get_elem_ptr v287, ptr u64, v288, !1236
        v290 = const u64 0, !252
        store v290 to v289, !1237
        v291 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_4, !1238
        v292 = const u64 0
        v293 = get_elem_ptr v291, ptr u64, v292, !1239
        v294 = const u64 1, !359
        store v294 to v293, !1240
        v295 = asm(r1) -> b256 r1, !1241 {
            gm     r1 i2, !385
        }
        v296 = call from_22(v295), !1242
        br msg_sender_10_block13(v296), !1243

        msg_sender_10_block13(v297: { b256 }):
        v298 = const u64 1
        v299 = const u64 1
        v300 = get_elem_ptr v291, ptr { b256 }, v298, v299, !1244
        store v297 to v300, !1245
        v301 = load v291, !7
        v302 = const u64 1
        v303 = const u64 0
        v304 = get_elem_ptr v287, ptr { u64, ( { b256 } | { b256 } ) }, v302, v303, !1246
        store v301 to v304, !1247
        v305 = load v287, !7
        br msg_sender_10_block8(v305), !7

        msg_sender_10_block8(v306: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        br block0(v306), !7

        block0(v307: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v308 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !1248
        store v307 to v308, !1249
        v309 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !1250
        v310 = const u64 0
        v311 = get_elem_ptr v309, ptr u64, v310, !1251
        v312 = load v311, !397
        v313 = const u64 0, !401
        v314 = cmp eq v312 v313, !1252
        br unwrap_9_block3(v314), !1253

        unwrap_9_block3(v315: bool):
        cbr v315, unwrap_9_block0(), unwrap_9_block1(), !1254

        unwrap_9_block0():
        v316 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !1255
        v317 = const u64 1
        v318 = const u64 0
        v319 = get_elem_ptr v316, ptr { u64, ( { b256 } | { b256 } ) }, v317, v318, !397
        v320 = load v319, !397
        v321 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !1256
        store v320 to v321, !1257
        v322 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !1258
        v323 = load v322, !397
        br unwrap_9_block2(v323), !397

        unwrap_9_block1():
        v324 = const u64 0, !419
        revert v324, !1259

        unwrap_9_block4(v325: never):
        br unwrap_9_block2(v325), !397

        unwrap_9_block2(v326: { u64, ( { b256 } | { b256 } ) }):
        br block1(v326), !397

        block1(v327: { u64, ( { b256 } | { b256 } ) }):
        v328 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_0, !359
        v329 = const u64 0
        v330 = get_elem_ptr v328, ptr u64, v329, !359
        v331 = const u64 0, !359
        store v331 to v330, !359
        v332 = get_local ptr { b256, u64, b256 }, __anon_02, !1260
        v333 = const u64 0
        v334 = get_elem_ptr v332, ptr b256, v333, !427
        v335 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !428
        store v335 to v334, !1261
        v336 = const u64 1
        v337 = get_elem_ptr v332, ptr u64, v336, !427
        v338 = const u64 0
        store v338 to v337, !1262
        v339 = const u64 2
        v340 = get_elem_ptr v332, ptr b256, v339, !427
        v341 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !428
        store v341 to v340, !1263
        v342 = load v332, !427
        v343 = call slot_51(v342), !1264
        v344 = call offset_46(v342), !1265
        v345 = const u64 32
        v346 = const u64 0, !444
        v347 = cmp eq v345 v346, !1266
        br get_owner_27_read_28_read_30_block6(v347), !1267

        get_owner_27_read_28_read_30_block6(v348: bool):
        cbr v348, get_owner_27_read_28_read_30_block0(), get_owner_27_read_28_read_30_block1(), !1268

        get_owner_27_read_28_read_30_block0():
        v349 = get_local ptr { u64, ( () | b256 ) }, __anon_001, !1269
        v350 = const u64 0
        v351 = get_elem_ptr v349, ptr u64, v350, !1270
        v352 = const u64 0, !90
        store v352 to v351, !1271
        v353 = load v349, !1272
        br get_owner_27_read_28_block0(v353), !1273

        get_owner_27_read_28_read_30_block1():
        v354 = const unit ()
        br get_owner_27_read_28_read_30_block2(v354), !1274

        get_owner_27_read_28_read_30_block2(v355: ()):
        v356 = get_local ptr u64, size_of_t, !1275
        v357 = const u64 8, !460
        v358 = mul v344, v357, !1276
        br get_owner_27_read_28_read_30_slot_calculator_31_block6(v358), !1277

        get_owner_27_read_28_read_30_slot_calculator_31_block6(v359: u64):
        v360 = get_local ptr u64, size_of_t, !1278
        v361 = const u64 32
        v362 = add v359, v361, !1279
        br get_owner_27_read_28_read_30_slot_calculator_31_block7(v362), !1280

        get_owner_27_read_28_read_30_slot_calculator_31_block7(v363: u64):
        v364 = const u64 31, !469
        v365 = add v363, v364, !1281
        br get_owner_27_read_28_read_30_slot_calculator_31_block8(v365), !1282

        get_owner_27_read_28_read_30_slot_calculator_31_block8(v366: u64):
        v367 = const u64 5, !473
        v368 = rsh v366, v367, !1283
        br get_owner_27_read_28_read_30_slot_calculator_31_block9(v368), !1284

        get_owner_27_read_28_read_30_slot_calculator_31_block9(v369: u64):
        v370 = get_local ptr u64, last_slot, !1285
        v371 = const u64 4, !479
        v372 = mod v344, v371, !1286
        br get_owner_27_read_28_read_30_slot_calculator_31_block10(v372), !1287

        get_owner_27_read_28_read_30_slot_calculator_31_block10(v373: u64):
        v374 = get_local ptr u64, place_in_slot0, !1288
        v375 = get_local ptr bool, __matched_value_11, !1289
        v376 = get_local ptr bool, __matched_value_11, !1290
        v377 = const bool true
        v378 = const bool true, !489
        v379 = cmp eq v377 v378, !1291
        br get_owner_27_read_28_read_30_slot_calculator_31_block11(v379), !1292

        get_owner_27_read_28_read_30_slot_calculator_31_block11(v380: bool):
        cbr v380, get_owner_27_read_28_read_30_slot_calculator_31_block0(), get_owner_27_read_28_read_30_slot_calculator_31_block1(), !1293

        get_owner_27_read_28_read_30_slot_calculator_31_block0():
        v381 = get_local ptr u64, place_in_slot0, !1294
        v382 = const u64 8, !496
        v383 = mul v373, v382, !1295
        br get_owner_27_read_28_read_30_slot_calculator_31_block12(v383), !1296

        get_owner_27_read_28_read_30_slot_calculator_31_block12(v384: u64):
        v385 = get_local ptr u64, size_of_t, !1297
        v386 = add v384, v361, !1298
        br get_owner_27_read_28_read_30_slot_calculator_31_block13(v386), !1299

        get_owner_27_read_28_read_30_slot_calculator_31_block13(v387: u64):
        v388 = const u64 31, !505
        v389 = add v387, v388, !1300
        br get_owner_27_read_28_read_30_slot_calculator_31_block14(v389), !1301

        get_owner_27_read_28_read_30_slot_calculator_31_block14(v390: u64):
        v391 = const u64 5, !509
        v392 = rsh v390, v391, !1302
        br get_owner_27_read_28_read_30_slot_calculator_31_block15(v392), !1303

        get_owner_27_read_28_read_30_slot_calculator_31_block15(v393: u64):
        br get_owner_27_read_28_read_30_slot_calculator_31_block5(v393), !1304

        get_owner_27_read_28_read_30_slot_calculator_31_block1():
        v394 = get_local ptr bool, __matched_value_11, !1305
        v395 = const bool false, !515
        v396 = cmp eq v377 v395, !1306
        br get_owner_27_read_28_read_30_slot_calculator_31_block16(v396), !1307

        get_owner_27_read_28_read_30_slot_calculator_31_block16(v397: bool):
        cbr v397, get_owner_27_read_28_read_30_slot_calculator_31_block2(), get_owner_27_read_28_read_30_slot_calculator_31_block3(), !1308

        get_owner_27_read_28_read_30_slot_calculator_31_block2():
        v398 = const u64 1, !520
        br get_owner_27_read_28_read_30_slot_calculator_31_block4(v398), !1309

        get_owner_27_read_28_read_30_slot_calculator_31_block3():
        v399 = const u64 14757395258967588866, !485
        revert v399, !1310

        get_owner_27_read_28_read_30_slot_calculator_31_block4(v400: u64):
        br get_owner_27_read_28_read_30_slot_calculator_31_block5(v400), !1311

        get_owner_27_read_28_read_30_slot_calculator_31_block5(v401: u64):
        v402 = get_local ptr u64, number_of_slots0, !1312
        v403 = asm(input: v343) -> u256 input, !1313 {
        }
        br get_owner_27_read_28_read_30_slot_calculator_31_block17(v403), !1314

        get_owner_27_read_28_read_30_slot_calculator_31_block17(v404: u256):
        v405 = get_local ptr u256, offset_slot0, !1315
        store v404 to v405, !1316
        v406 = get_local ptr u256, offset_slot0, !1317
        v407 = load v406, !1318
        v408 = get_local ptr u64, last_slot, !1319
        v409 = call as_u256_40(v369), !1320
        v410 = get_local ptr u64, number_of_slots0, !1321
        v411 = call as_u256_40(v401), !1322
        v412 = sub v409, v411, !1323
        br get_owner_27_read_28_read_30_slot_calculator_31_block18(v412), !1324

        get_owner_27_read_28_read_30_slot_calculator_31_block18(v413: u256):
        v414 = add v407, v413, !1325
        br get_owner_27_read_28_read_30_slot_calculator_31_block19(v414), !1326

        get_owner_27_read_28_read_30_slot_calculator_31_block19(v415: u256):
        v416 = get_local ptr u256, offset_slot0, !1327
        store v415 to v416, !1328
        v417 = get_local ptr u256, offset_slot0, !1329
        v418 = load v417, !1330
        v419 = asm(input: v418) -> b256 input, !1331 {
        }
        br get_owner_27_read_28_read_30_slot_calculator_31_block20(v419), !1332

        get_owner_27_read_28_read_30_slot_calculator_31_block20(v420: b256):
        v421 = get_local ptr u64, number_of_slots0, !1333
        v422 = get_local ptr u64, place_in_slot0, !1334
        v423 = get_local ptr { b256, u64, u64 }, __anon_0001, !1335
        v424 = const u64 0
        v425 = get_elem_ptr v423, ptr b256, v424, !1336
        store v420 to v425, !1337
        v426 = const u64 1
        v427 = get_elem_ptr v423, ptr u64, v426, !1338
        store v401 to v427, !1339
        v428 = const u64 2
        v429 = get_elem_ptr v423, ptr u64, v428, !1340
        store v373 to v429, !1341
        v430 = load v423, !1342
        br get_owner_27_read_28_read_30_block7(v430), !1343

        get_owner_27_read_28_read_30_block7(v431: { b256, u64, u64 }):
        v432 = get_local ptr { b256, u64, u64 }, __tuple_2, !1344
        store v431 to v432, !1345
        v433 = get_local ptr { b256, u64, u64 }, __tuple_2, !1346
        v434 = load v433, !1347
        v435 = get_local ptr { b256, u64, u64 }, __tuple_2_, !1348
        store v434 to v435, !1349
        v436 = get_local ptr { b256, u64, u64 }, __tuple_2_, !1350
        v437 = const u64 0
        v438 = get_elem_ptr v436, ptr b256, v437, !1351
        v439 = load v438, !1352
        v440 = get_local ptr b256, offset_slot, !1353
        store v439 to v440, !1354
        v441 = get_local ptr { b256, u64, u64 }, __tuple_2_, !1355
        v442 = const u64 1
        v443 = get_elem_ptr v441, ptr u64, v442, !1356
        v444 = load v443, !1357
        v445 = get_local ptr u64, number_of_slots, !1358
        v446 = get_local ptr { b256, u64, u64 }, __tuple_2_, !1359
        v447 = const u64 2
        v448 = get_elem_ptr v446, ptr u64, v447, !1360
        v449 = load v448, !1361
        v450 = get_local ptr u64, place_in_slot, !1362
        v451 = get_local ptr u64, number_of_slots, !1363
        v452 = const u64 32, !595
        v453 = mul v444, v452, !1364
        br get_owner_27_read_28_read_30_block8(v453), !1365

        get_owner_27_read_28_read_30_block8(v454: u64):
        v455 = const u64 8
        v456 = mul v455, v454, !1366
        br get_owner_27_read_28_read_30_alloc_42_block0(v456), !1367

        get_owner_27_read_28_read_30_alloc_42_block0(v457: u64):
        v458 = asm(size: v457, ptr) -> u64 ptr, !1368 {
            aloc   size, !606
            move   ptr hp, !607
        }
        br get_owner_27_read_28_read_30_block9(v458), !1369

        get_owner_27_read_28_read_30_block9(v459: u64):
        v460 = get_local ptr u64, result_ptr, !1370
        v461 = get_local ptr b256, offset_slot, !1371
        v462 = load v461, !1372
        v463 = get_local ptr u64, result_ptr, !1373
        v464 = get_local ptr u64, number_of_slots, !1374
        v465 = get_local ptr b256, key_for_storage, !1375
        store v462 to v465, !1376
        v466 = int_to_ptr v459 to ptr b256, !1377
        v467 = state_load_quad_word v466, key v465, v444, !1378
        cbr v467, get_owner_27_read_28_read_30_block3(), get_owner_27_read_28_read_30_block4(), !1379

        get_owner_27_read_28_read_30_block3():
        v468 = get_local ptr { u64, ( () | b256 ) }, __anon_12, !1380
        v469 = const u64 0
        v470 = get_elem_ptr v468, ptr u64, v469, !1381
        v471 = const u64 1, !90
        store v471 to v470, !1382
        v472 = get_local ptr u64, result_ptr, !1383
        v473 = get_local ptr u64, place_in_slot, !1384
        v474 = const u64 8
        v475 = mul v474, v449, !1385
        v476 = add v459, v475, !1386
        br get_owner_27_read_28_read_30_block10(v476), !1387

        get_owner_27_read_28_read_30_block10(v477: u64):
        v478 = const bool true
        cbr v478, get_owner_27_read_28_read_30_read_43_block0(), get_owner_27_read_28_read_30_read_43_block1(), !1388

        get_owner_27_read_28_read_30_read_43_block0():
        v479 = asm(ptr: v477) -> b256 ptr, !1389 {
        }
        br get_owner_27_read_28_read_30_read_43_block5(v479), !1390

        get_owner_27_read_28_read_30_read_43_block1():
        v480 = const u64 32
        v481 = const u64 1, !642
        v482 = cmp eq v480 v481, !1391
        cbr v482, get_owner_27_read_28_read_30_read_43_block2(), get_owner_27_read_28_read_30_read_43_block3(), !1392

        get_owner_27_read_28_read_30_read_43_block2():
        v483 = asm(ptr: v477, val) -> b256 val, !1393 {
            lb     val ptr i0, !648
        }
        br get_owner_27_read_28_read_30_read_43_block4(v483), !1394

        get_owner_27_read_28_read_30_read_43_block3():
        v484 = asm(ptr: v477, val) -> b256 val, !1395 {
            lw     val ptr i0, !652
        }
        br get_owner_27_read_28_read_30_read_43_block4(v484), !1396

        get_owner_27_read_28_read_30_read_43_block4(v485: b256):
        br get_owner_27_read_28_read_30_read_43_block5(v485), !1397

        get_owner_27_read_28_read_30_read_43_block5(v486: b256):
        br get_owner_27_read_28_read_30_block11(v486), !1398

        get_owner_27_read_28_read_30_block11(v487: b256):
        v488 = const u64 1
        v489 = const u64 1
        v490 = get_elem_ptr v468, ptr b256, v488, v489, !1399
        store v487 to v490, !1400
        v491 = load v468, !1401
        br get_owner_27_read_28_read_30_block5(v491), !1402

        get_owner_27_read_28_read_30_block4():
        v492 = get_local ptr { u64, ( () | b256 ) }, __anon_21, !1403
        v493 = const u64 0
        v494 = get_elem_ptr v492, ptr u64, v493, !1404
        v495 = const u64 0, !90
        store v495 to v494, !1405
        v496 = load v492, !1406
        br get_owner_27_read_28_read_30_block5(v496), !1407

        get_owner_27_read_28_read_30_block5(v497: { u64, ( () | b256 ) }):
        br get_owner_27_read_28_block0(v497), !1408

        get_owner_27_read_28_block0(v498: { u64, ( () | b256 ) }):
        v499 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !1409
        store v498 to v499, !1410
        v500 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !1411
        v501 = const u64 0
        v502 = get_elem_ptr v500, ptr u64, v501, !1412
        v503 = load v502, !1413
        v504 = const u64 1, !670
        v505 = cmp eq v503 v504, !1414
        br get_owner_27_read_28_unwrap_29_block3(v505), !1415

        get_owner_27_read_28_unwrap_29_block3(v506: bool):
        cbr v506, get_owner_27_read_28_unwrap_29_block0(), get_owner_27_read_28_unwrap_29_block1(), !1416

        get_owner_27_read_28_unwrap_29_block0():
        v507 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !1417
        v508 = const u64 1
        v509 = const u64 1
        v510 = get_elem_ptr v507, ptr b256, v508, v509, !1418
        v511 = load v510, !1419
        v512 = get_local ptr b256, inner_value0, !1420
        store v511 to v512, !1421
        v513 = get_local ptr b256, inner_value0, !1422
        v514 = load v513, !1423
        br get_owner_27_read_28_unwrap_29_block2(v514), !1424

        get_owner_27_read_28_unwrap_29_block1():
        v515 = const u64 0, !688
        revert v515, !1425

        get_owner_27_read_28_unwrap_29_block4(v516: never):
        br get_owner_27_read_28_unwrap_29_block2(v516), !1426

        get_owner_27_read_28_unwrap_29_block2(v517: b256):
        br get_owner_27_read_28_block1(v517), !1427

        get_owner_27_read_28_block1(v518: b256):
        br get_owner_27_block0(v518), !1428

        get_owner_27_block0(v519: b256):
        br block2(v519), !427

        block2(v520: b256):
        v521 = call from_22(v520), !695
        v522 = const u64 1
        v523 = const u64 0
        v524 = get_elem_ptr v328, ptr { b256 }, v522, v523, !359
        store v521 to v524, !359
        v525 = load v328
        v526 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_03, !1429
        v527 = const u64 0
        v528 = get_elem_ptr v526, ptr { u64, ( { b256 } | { b256 } ) }, v527, !1430
        store v327 to v528, !1431
        v529 = const u64 1
        v530 = get_elem_ptr v526, ptr { u64, ( { b256 } | { b256 } ) }, v529, !1432
        store v525 to v530, !1433
        v531 = load v526, !699
        v532 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !1434
        store v531 to v532, !1435
        v533 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !1436
        v534 = const u64 0
        v535 = get_elem_ptr v533, ptr { u64, ( { b256 } | { b256 } ) }, v534, !1437
        v536 = const u64 0
        v537 = get_elem_ptr v535, ptr u64, v536, !1438
        v538 = load v537, !699
        v539 = const u64 0, !711
        v540 = cmp eq v538 v539, !1439
        br eq_4_block10(v540), !1440

        eq_4_block10(v541: bool):
        cbr v541, eq_4_block0(), eq_4_block1(v541), !1441

        eq_4_block0():
        v542 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !1442
        v543 = const u64 1
        v544 = get_elem_ptr v542, ptr { u64, ( { b256 } | { b256 } ) }, v543, !1443
        v545 = const u64 0
        v546 = get_elem_ptr v544, ptr u64, v545, !1444
        v547 = load v546, !699
        v548 = const u64 0, !711
        v549 = cmp eq v547 v548, !1445
        br eq_4_block11(v549), !1446

        eq_4_block11(v550: bool):
        br eq_4_block1(v550), !1447

        eq_4_block1(v551: bool):
        cbr v551, eq_4_block2(), eq_4_block3(), !1448

        eq_4_block2():
        v552 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !1449
        v553 = const u64 0
        v554 = get_elem_ptr v552, ptr { u64, ( { b256 } | { b256 } ) }, v553, !1450
        v555 = const u64 1
        v556 = const u64 0
        v557 = get_elem_ptr v554, ptr { b256 }, v555, v556, !699
        v558 = load v557, !699
        v559 = get_local ptr { b256 }, addr1, !1451
        store v558 to v559, !1452
        v560 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !1453
        v561 = const u64 1
        v562 = get_elem_ptr v560, ptr { u64, ( { b256 } | { b256 } ) }, v561, !1454
        v563 = const u64 1
        v564 = const u64 0
        v565 = get_elem_ptr v562, ptr { b256 }, v563, v564, !699
        v566 = load v565, !699
        v567 = get_local ptr { b256 }, addr2, !1455
        store v566 to v567, !1456
        v568 = get_local ptr { b256 }, addr1, !1457
        v569 = load v568, !699
        v570 = get_local ptr { b256 }, addr2, !1458
        v571 = load v570, !699
        v572 = call eq_6(v569, v571), !1459
        br eq_4_block9(v572), !699

        eq_4_block3():
        v573 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !1460
        v574 = const u64 0
        v575 = get_elem_ptr v573, ptr { u64, ( { b256 } | { b256 } ) }, v574, !1461
        v576 = const u64 0
        v577 = get_elem_ptr v575, ptr u64, v576, !1462
        v578 = load v577, !699
        v579 = const u64 1, !751
        v580 = cmp eq v578 v579, !1463
        br eq_4_block12(v580), !1464

        eq_4_block12(v581: bool):
        cbr v581, eq_4_block4(), eq_4_block5(v581), !1465

        eq_4_block4():
        v582 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !1466
        v583 = const u64 1
        v584 = get_elem_ptr v582, ptr { u64, ( { b256 } | { b256 } ) }, v583, !1467
        v585 = const u64 0
        v586 = get_elem_ptr v584, ptr u64, v585, !1468
        v587 = load v586, !699
        v588 = const u64 1, !751
        v589 = cmp eq v587 v588, !1469
        br eq_4_block13(v589), !1470

        eq_4_block13(v590: bool):
        br eq_4_block5(v590), !1471

        eq_4_block5(v591: bool):
        cbr v591, eq_4_block6(), eq_4_block7(), !1472

        eq_4_block6():
        v592 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !1473
        v593 = const u64 0
        v594 = get_elem_ptr v592, ptr { u64, ( { b256 } | { b256 } ) }, v593, !1474
        v595 = const u64 1
        v596 = const u64 1
        v597 = get_elem_ptr v594, ptr { b256 }, v595, v596, !699
        v598 = load v597, !699
        v599 = get_local ptr { b256 }, id1, !1475
        store v598 to v599, !1476
        v600 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !1477
        v601 = const u64 1
        v602 = get_elem_ptr v600, ptr { u64, ( { b256 } | { b256 } ) }, v601, !1478
        v603 = const u64 1
        v604 = const u64 1
        v605 = get_elem_ptr v602, ptr { b256 }, v603, v604, !699
        v606 = load v605, !699
        v607 = get_local ptr { b256 }, id2, !1479
        store v606 to v607, !1480
        v608 = get_local ptr { b256 }, id1, !1481
        v609 = load v608, !699
        v610 = get_local ptr { b256 }, id2, !1482
        v611 = load v610, !699
        v612 = call eq_6(v609, v611), !1483
        br eq_4_block8(v612), !699

        eq_4_block7():
        v613 = const bool false, !790
        br eq_4_block8(v613), !699

        eq_4_block8(v614: bool):
        br eq_4_block9(v614), !699

        eq_4_block9(v615: bool):
        br block3(v615), !699

        block3(v616: bool):
        v617 = const bool false, !795
        v618 = cmp eq v616 v617, !1484
        br assert_1_block3(v618), !1485

        assert_1_block3(v619: bool):
        cbr v619, assert_1_block0(), assert_1_block1(), !1486

        assert_1_block0():
        v620 = const u64 18446744073709486084, !803
        revert v620, !1487

        assert_1_block4(v621: never):
        v622 = const unit ()
        br assert_1_block2(v622), !796

        assert_1_block1():
        v623 = const unit ()
        br assert_1_block2(v623), !796

        assert_1_block2(v624: ()):
        v625 = const unit ()
        br block4(v625), !796

        block4(v626: ()):
        v627 = const unit ()
        ret () v627
    }

    pub fn assert_1(condition !1488: bool) -> (), !1489 {
        entry(condition: bool):
        v0 = const bool false, !795
        v1 = cmp eq condition v0, !798
        br block3(v1), !798

        block3(v2: bool):
        cbr v2, block0(), block1(), !798

        block0():
        v3 = const u64 18446744073709486084, !803
        revert v3, !1490

        block4(v4: never):
        v5 = const unit ()
        br block2(v5)

        block1():
        v6 = const unit ()
        br block2(v6)

        block2(v7: ()):
        v8 = const unit ()
        ret () v8
    }

    pub fn not_2(self !1491: bool) -> bool, !1492 {
        entry(self: bool):
        v0 = const bool false, !795
        v1 = cmp eq self v0
        ret bool v1
    }

    pub fn revert_3(code !1493: u64) -> never, !1494 {
        entry(code: u64):
        revert code, !52
    }

    pub fn eq_4(self !1495: { u64, ( { b256 } | { b256 } ) }, other !1496: { u64, ( { b256 } | { b256 } ) }) -> bool, !1497 {
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __anon_0
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __matched_value_1
        local { b256 } addr1
        local { b256 } addr2
        local { b256 } id1
        local { b256 } id2

        entry(self: { u64, ( { b256 } | { b256 } ) }, other: { u64, ( { b256 } | { b256 } ) }):
        v0 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_0, !700
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr { u64, ( { b256 } | { b256 } ) }, v1, !700
        store self to v2, !700
        v3 = const u64 1
        v4 = get_elem_ptr v0, ptr { u64, ( { b256 } | { b256 } ) }, v3, !700
        store other to v4, !700
        v5 = load v0
        v6 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !707
        store v5 to v6, !707
        v7 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !700
        v8 = const u64 0
        v9 = get_elem_ptr v7, ptr { u64, ( { b256 } | { b256 } ) }, v8, !711
        v10 = const u64 0
        v11 = get_elem_ptr v9, ptr u64, v10, !711
        v12 = load v11
        v13 = const u64 0, !711
        v14 = cmp eq v12 v13, !715
        br block10(v14), !715

        block10(v15: bool):
        cbr v15, block0(), block1(v15), !715

        block0():
        v16 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !700
        v17 = const u64 1
        v18 = get_elem_ptr v16, ptr { u64, ( { b256 } | { b256 } ) }, v17, !711
        v19 = const u64 0
        v20 = get_elem_ptr v18, ptr u64, v19, !711
        v21 = load v20
        v22 = const u64 0, !711
        v23 = cmp eq v21 v22, !715
        br block11(v23), !715

        block11(v24: bool):
        br block1(v24), !715

        block1(v25: bool):
        cbr v25, block2(), block3(), !715

        block2():
        v26 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !700
        v27 = const u64 0
        v28 = get_elem_ptr v26, ptr { u64, ( { b256 } | { b256 } ) }, v27, !711
        v29 = const u64 1
        v30 = const u64 0
        v31 = get_elem_ptr v28, ptr { b256 }, v29, v30
        v32 = load v31
        v33 = get_local ptr { b256 }, addr1, !731
        store v32 to v33, !731
        v34 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !700
        v35 = const u64 1
        v36 = get_elem_ptr v34, ptr { u64, ( { b256 } | { b256 } ) }, v35, !711
        v37 = const u64 1
        v38 = const u64 0
        v39 = get_elem_ptr v36, ptr { b256 }, v37, v38
        v40 = load v39
        v41 = get_local ptr { b256 }, addr2, !738
        store v40 to v41, !738
        v42 = get_local ptr { b256 }, addr1, !741
        v43 = load v42
        v44 = get_local ptr { b256 }, addr2, !744
        v45 = load v44
        v46 = call eq_6(v43, v45), !747
        br block9(v46)

        block3():
        v47 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !700
        v48 = const u64 0
        v49 = get_elem_ptr v47, ptr { u64, ( { b256 } | { b256 } ) }, v48, !751
        v50 = const u64 0
        v51 = get_elem_ptr v49, ptr u64, v50, !751
        v52 = load v51
        v53 = const u64 1, !751
        v54 = cmp eq v52 v53, !755
        br block12(v54), !755

        block12(v55: bool):
        cbr v55, block4(), block5(v55), !755

        block4():
        v56 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !700
        v57 = const u64 1
        v58 = get_elem_ptr v56, ptr { u64, ( { b256 } | { b256 } ) }, v57, !751
        v59 = const u64 0
        v60 = get_elem_ptr v58, ptr u64, v59, !751
        v61 = load v60
        v62 = const u64 1, !751
        v63 = cmp eq v61 v62, !755
        br block13(v63), !755

        block13(v64: bool):
        br block5(v64), !755

        block5(v65: bool):
        cbr v65, block6(), block7(), !755

        block6():
        v66 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !700
        v67 = const u64 0
        v68 = get_elem_ptr v66, ptr { u64, ( { b256 } | { b256 } ) }, v67, !751
        v69 = const u64 1
        v70 = const u64 1
        v71 = get_elem_ptr v68, ptr { b256 }, v69, v70
        v72 = load v71
        v73 = get_local ptr { b256 }, id1, !771
        store v72 to v73, !771
        v74 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !700
        v75 = const u64 1
        v76 = get_elem_ptr v74, ptr { u64, ( { b256 } | { b256 } ) }, v75, !751
        v77 = const u64 1
        v78 = const u64 1
        v79 = get_elem_ptr v76, ptr { b256 }, v77, v78
        v80 = load v79
        v81 = get_local ptr { b256 }, id2, !778
        store v80 to v81, !778
        v82 = get_local ptr { b256 }, id1, !781
        v83 = load v82
        v84 = get_local ptr { b256 }, id2, !784
        v85 = load v84
        v86 = call eq_6(v83, v85), !787
        br block8(v86)

        block7():
        v87 = const bool false, !790
        br block8(v87)

        block8(v88: bool):
        br block9(v88)

        block9(v89: bool):
        ret bool v89
    }

    pub fn eq_5(self !1498: u64, other !1499: u64) -> bool, !1500 {
        entry(self: u64, other: u64):
        v0 = cmp eq self other
        ret bool v0
    }

    pub fn eq_6(self !1502: { b256 }, other !1503: { b256 }) -> bool, !1504 {
        entry(self: { b256 }, other: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !1505
        v4 = load v3
        v5 = ptr_to_int other to u64
        v6 = int_to_ptr v5 to ptr { b256 }
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr b256, v7, !1505
        v9 = load v8
        v10 = cmp eq v4 v9, !1506
        br block0(v10), !1506

        block0(v11: bool):
        ret bool v11
    }

    pub fn eq_7(self !1507: b256, other !1508: b256) -> bool, !1509 {
        entry(self: b256, other: b256):
        v0 = cmp eq self other
        ret bool v0
    }

    pub fn eq_8(self !1511: { b256 }, other !1512: { b256 }) -> bool, !1513 {
        entry(self: { b256 }, other: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !1514
        v4 = load v3
        v5 = ptr_to_int other to u64
        v6 = int_to_ptr v5 to ptr { b256 }
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr b256, v7, !1514
        v9 = load v8
        v10 = cmp eq v4 v9, !1515
        br block0(v10), !1515

        block0(v11: bool):
        ret bool v11
    }

    pub fn unwrap_9(self !1516: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }) -> { u64, ( { b256 } | { b256 } ) }, !1517 {
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __matched_value_3
        local { u64, ( { b256 } | { b256 } ) } inner_value

        entry(self: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v0 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_3, !398
        store self to v0, !398
        v1 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_3, !401
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !401
        v4 = load v3
        v5 = const u64 0, !401
        v6 = cmp eq v4 v5, !405
        br block3(v6), !405

        block3(v7: bool):
        cbr v7, block0(), block1(), !405

        block0():
        v8 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_3, !401
        v9 = const u64 1
        v10 = const u64 0
        v11 = get_elem_ptr v8, ptr { u64, ( { b256 } | { b256 } ) }, v9, v10
        v12 = load v11
        v13 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !412
        store v12 to v13, !412
        v14 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !415
        v15 = load v14
        br block2(v15)

        block1():
        v16 = const u64 0, !419
        revert v16, !1518

        block4(v17: never):
        br block2(v17)

        block2(v18: { u64, ( { b256 } | { b256 } ) }):
        ret { u64, ( { b256 } | { b256 } ) } v18
    }

    pub fn msg_sender_10() -> { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, !1519 {
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_0
        local { u64, ( () | { b256 } ) } __anon_00
        local { u64 } __anon_000
        local { u64, ( () | { b256 } ) } __anon_01
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_1
        local { u64, ( { b256 } | { u64 } ) } __anon_10
        local { u64 } __anon_100
        local { u64, ( () | { b256 } ) } __anon_11
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64 } __anon_20
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { u64 } ) } __anon_30
        local { u64, ( { b256 } | { b256 } ) } __anon_4
        local { u64, ( { b256 } | { u64 } ) } __anon_40
        local { u64 } __anon_5
        local { u64, ( { b256 } | { u64 } ) } __matched_value_1
        local u8 __matched_value_10
        local { u64 } __matched_value_2
        local { u64, ( () | { b256 } ) } __matched_value_3
        local { u64 } __matched_value_30
        local { u64, ( () | { b256 } ) } __matched_value_31
        local { u64 } __matched_value_6
        local { b256 } address
        local mut { u64, ( () | { b256 } ) } candidate
        local { u64 } err
        local mut u64 i
        local u64 inputs
        local { b256 } owner
        local { u64, ( () | { b256 } ) } owner_of_input
        local { u64 } type_of_input

        entry():
        v0 = asm(r1) -> bool r1, !1520 {
            gm     r1 i1, !12
        }
        br block9(v0), !9

        block9(v1: bool):
        cbr v1, block0(), block7(), !9

        block0():
        v2 = const u64 0, !16
        v3 = gtf v2, 1, !1521
        v4 = bitcast v3 to u8, !1522
        v5 = get_local ptr u8, __matched_value_10, !1523
        v6 = get_local ptr u8, __matched_value_10, !1524
        v7 = const u8 0, !27
        v8 = cmp eq v4 v7, !1525
        br caller_address_12_input_count_13_tx_type_14_block6(v8), !1526

        caller_address_12_input_count_13_tx_type_14_block6(v9: bool):
        cbr v9, caller_address_12_input_count_13_tx_type_14_block0(), caller_address_12_input_count_13_tx_type_14_block1(), !1527

        caller_address_12_input_count_13_tx_type_14_block0():
        v10 = get_local ptr { u64 }, __anon_000, !1528
        v11 = const u64 0
        v12 = get_elem_ptr v10, ptr u64, v11, !1529
        v13 = const u64 0, !32
        store v13 to v12, !1530
        v14 = load v10, !1531
        br caller_address_12_input_count_13_tx_type_14_block5(v14), !1532

        caller_address_12_input_count_13_tx_type_14_block1():
        v15 = get_local ptr u8, __matched_value_10, !1533
        v16 = const u8 1, !39
        v17 = cmp eq v4 v16, !1534
        br caller_address_12_input_count_13_tx_type_14_block7(v17), !1535

        caller_address_12_input_count_13_tx_type_14_block7(v18: bool):
        cbr v18, caller_address_12_input_count_13_tx_type_14_block2(), caller_address_12_input_count_13_tx_type_14_block3(), !1536

        caller_address_12_input_count_13_tx_type_14_block2():
        v19 = get_local ptr { u64 }, __anon_100, !1537
        v20 = const u64 0
        v21 = get_elem_ptr v19, ptr u64, v20, !1538
        v22 = const u64 1, !32
        store v22 to v21, !1539
        v23 = load v19, !1540
        br caller_address_12_input_count_13_tx_type_14_block4(v23), !1541

        caller_address_12_input_count_13_tx_type_14_block3():
        v24 = const u64 0, !49
        revert v24, !1542

        caller_address_12_input_count_13_tx_type_14_block8(v25: never):
        br caller_address_12_input_count_13_tx_type_14_block4(v25), !1543

        caller_address_12_input_count_13_tx_type_14_block4(v26: { u64 }):
        br caller_address_12_input_count_13_tx_type_14_block5(v26), !1544

        caller_address_12_input_count_13_tx_type_14_block5(v27: { u64 }):
        br caller_address_12_input_count_13_block6(v27), !1545

        caller_address_12_input_count_13_block6(v28: { u64 }):
        v29 = get_local ptr { u64 }, __matched_value_30, !1546
        store v28 to v29, !1547
        v30 = get_local ptr { u64 }, __matched_value_30, !1548
        v31 = const u64 0
        v32 = get_elem_ptr v30, ptr u64, v31, !1549
        v33 = load v32, !1550
        v34 = const u64 0, !20
        v35 = cmp eq v33 v34, !1551
        br caller_address_12_input_count_13_block7(v35), !1552

        caller_address_12_input_count_13_block7(v36: bool):
        cbr v36, caller_address_12_input_count_13_block0(), caller_address_12_input_count_13_block1(), !1553

        caller_address_12_input_count_13_block0():
        v37 = const u64 0, !67
        v38 = gtf v37, 5, !1554
        v39 = bitcast v38 to u64, !1555
        br caller_address_12_input_count_13_block5(v39), !1556

        caller_address_12_input_count_13_block1():
        v40 = get_local ptr { u64 }, __matched_value_30, !1557
        v41 = const u64 0
        v42 = get_elem_ptr v40, ptr u64, v41, !1558
        v43 = load v42, !1559
        v44 = const u64 1, !20
        v45 = cmp eq v43 v44, !1560
        br caller_address_12_input_count_13_block8(v45), !1561

        caller_address_12_input_count_13_block8(v46: bool):
        cbr v46, caller_address_12_input_count_13_block2(), caller_address_12_input_count_13_block3(), !1562

        caller_address_12_input_count_13_block2():
        v47 = const u64 0, !79
        v48 = gtf v47, 259, !1563
        v49 = bitcast v48 to u64, !1564
        br caller_address_12_input_count_13_block4(v49), !1565

        caller_address_12_input_count_13_block3():
        v50 = const u64 14757395258967588866, !57
        revert v50, !1566

        caller_address_12_input_count_13_block4(v51: u64):
        br caller_address_12_input_count_13_block5(v51), !1567

        caller_address_12_input_count_13_block5(v52: u64):
        br caller_address_12_block18(v52), !1568

        caller_address_12_block18(v53: u64):
        v54 = get_local ptr u64, inputs, !1569
        v55 = get_local ptr { u64, ( () | { b256 } ) }, __anon_00, !1570
        v56 = const u64 0
        v57 = get_elem_ptr v55, ptr u64, v56, !1571
        v58 = const u64 0, !90
        store v58 to v57, !1572
        v59 = load v55, !17
        v60 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !1573
        store v59 to v60, !1574
        v61 = get_local ptr u64, i, !1575
        v62 = const u64 0, !100
        br caller_address_12_while(v62), !17

        caller_address_12_while(v63: u64):
        v64 = get_local ptr u64, i, !1576
        v65 = get_local ptr u64, inputs, !1577
        v66 = cmp lt v63 v53, !1578
        br caller_address_12_block19(v66), !1579

        caller_address_12_block19(v67: bool):
        cbr v67, caller_address_12_while_body(), caller_address_12_end_while(), !17

        caller_address_12_while_break():
        br caller_address_12_end_while(), !17

        caller_address_12_while_body():
        v68 = get_local ptr u64, i, !1580
        v69 = asm(input: v63) -> u64 input, !1581 {
        }
        br caller_address_12_block20(v69), !1582

        caller_address_12_block20(v70: u64):
        v71 = call input_type_17(v70), !1583
        v72 = get_local ptr { u64 }, type_of_input, !1584
        store v71 to v72, !1585
        v73 = get_local ptr { u64 }, type_of_input, !1586
        v74 = load v73, !17
        v75 = get_local ptr { u64 }, __matched_value_2, !1587
        store v74 to v75, !1588
        v76 = get_local ptr { u64 }, __matched_value_2, !1589
        v77 = const u64 0
        v78 = get_elem_ptr v76, ptr u64, v77, !1590
        v79 = load v78, !17
        v80 = const u64 0, !123
        v81 = cmp eq v79 v80, !1591
        br caller_address_12_block21(v81), !1592

        caller_address_12_block21(v82: bool):
        cbr v82, caller_address_12_block0(), caller_address_12_block1(), !1593

        caller_address_12_block0():
        v83 = const unit (), !136
        br caller_address_12_block5(v83), !17

        caller_address_12_block1():
        v84 = get_local ptr { u64 }, __matched_value_2, !1594
        v85 = const u64 0
        v86 = get_elem_ptr v84, ptr u64, v85, !1595
        v87 = load v86, !17
        v88 = const u64 2, !123
        v89 = cmp eq v87 v88, !1596
        br caller_address_12_block22(v89), !1597

        caller_address_12_block22(v90: bool):
        cbr v90, caller_address_12_block2(), caller_address_12_block3(), !1598

        caller_address_12_block2():
        v91 = const unit (), !145
        br caller_address_12_block4(v91), !17

        caller_address_12_block3():
        v92 = get_local ptr u64, i, !1599
        v93 = const u64 1, !149
        v94 = call add_19(v63, v93), !1600
        v95 = get_local ptr u64, i, !1601
        br caller_address_12_while(v94), !17

        caller_address_12_block4(v96: ()):
        br caller_address_12_block5(v96), !17

        caller_address_12_block5(v97: ()):
        v98 = get_local ptr u64, i, !1602
        v99 = asm(input: v63) -> u64 input, !1603 {
        }
        br caller_address_12_block23(v99), !1604

        caller_address_12_block23(v100: u64):
        v101 = call input_type_17(v100), !1605
        v102 = get_local ptr { u64 }, __matched_value_6, !1606
        store v101 to v102, !1607
        v103 = get_local ptr { u64 }, __matched_value_6, !1608
        v104 = const u64 0
        v105 = get_elem_ptr v103, ptr u64, v104, !1609
        v106 = load v105, !1610
        v107 = const u64 0, !161
        v108 = cmp eq v106 v107, !1611
        br caller_address_12_input_coin_owner_21_block3(v108), !1612

        caller_address_12_input_coin_owner_21_block3(v109: bool):
        cbr v109, caller_address_12_input_coin_owner_21_block0(), caller_address_12_input_coin_owner_21_block1(), !1613

        caller_address_12_input_coin_owner_21_block0():
        v110 = get_local ptr { u64, ( () | { b256 } ) }, __anon_01, !1614
        v111 = const u64 0
        v112 = get_elem_ptr v110, ptr u64, v111, !1615
        v113 = const u64 1, !90
        store v113 to v112, !1616
        v114 = gtf v100, 515, !1617
        v115 = int_to_ptr v114 to ptr b256, !1618
        v116 = load v115, !1619
        v117 = call from_22(v116), !1620
        v118 = const u64 1
        v119 = const u64 1
        v120 = get_elem_ptr v110, ptr { b256 }, v118, v119, !1621
        store v117 to v120, !1622
        v121 = load v110, !1623
        br caller_address_12_input_coin_owner_21_block2(v121), !1624

        caller_address_12_input_coin_owner_21_block1():
        v122 = get_local ptr { u64, ( () | { b256 } ) }, __anon_11, !1625
        v123 = const u64 0
        v124 = get_elem_ptr v122, ptr u64, v123, !1626
        v125 = const u64 0, !90
        store v125 to v124, !1627
        v126 = load v122, !1628
        br caller_address_12_input_coin_owner_21_block2(v126), !1629

        caller_address_12_input_coin_owner_21_block2(v127: { u64, ( () | { b256 } ) }):
        br caller_address_12_block24(v127), !1630

        caller_address_12_block24(v128: { u64, ( () | { b256 } ) }):
        v129 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !1631
        store v128 to v129, !1632
        v130 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !1633
        v131 = load v130, !17
        v132 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !1634
        store v131 to v132, !1635
        v133 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !1636
        v134 = const u64 0
        v135 = get_elem_ptr v133, ptr u64, v134, !1637
        v136 = load v135, !1638
        v137 = const u64 1, !202
        v138 = cmp eq v136 v137, !1639
        br caller_address_12_is_none_23_block3(v138), !1640

        caller_address_12_is_none_23_block3(v139: bool):
        cbr v139, caller_address_12_is_none_23_block0(), caller_address_12_is_none_23_block1(), !1641

        caller_address_12_is_none_23_block0():
        v140 = const bool false, !210
        br caller_address_12_is_none_23_block2(v140), !1642

        caller_address_12_is_none_23_block1():
        v141 = const bool true, !212
        br caller_address_12_is_none_23_block2(v141), !1643

        caller_address_12_is_none_23_block2(v142: bool):
        br caller_address_12_block25(v142), !1644

        caller_address_12_block25(v143: bool):
        cbr v143, caller_address_12_block6(), caller_address_12_block7(), !1645

        caller_address_12_block6():
        v144 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !1646
        v145 = load v144, !17
        v146 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !1647
        store v145 to v146, !1648
        v147 = get_local ptr u64, i, !1649
        v148 = const u64 1, !224
        v149 = call add_19(v63, v148), !1650
        v150 = get_local ptr u64, i, !1651
        br caller_address_12_while(v149), !17

        caller_address_12_block7():
        v151 = const unit ()
        br caller_address_12_block8(v151), !17

        caller_address_12_block8(v152: ()):
        v153 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !1652
        v154 = load v153, !17
        v155 = call unwrap_24(v154), !1653
        v156 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !1654
        v157 = load v156, !17
        v158 = call unwrap_24(v157), !1655
        v159 = call eq_6(v155, v158), !1656
        cbr v159, caller_address_12_block9(), caller_address_12_block10(), !1657

        caller_address_12_block9():
        v160 = get_local ptr u64, i, !1658
        v161 = const u64 1, !245
        v162 = call add_19(v63, v161), !1659
        v163 = get_local ptr u64, i, !1660
        br caller_address_12_while(v162), !17

        caller_address_12_block10():
        v164 = const unit ()
        br caller_address_12_block11(v164), !17

        caller_address_12_block11(v165: ()):
        v166 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_10, !1661
        v167 = const u64 0
        v168 = get_elem_ptr v166, ptr u64, v167, !1662
        v169 = const u64 1, !252
        store v169 to v168, !1663
        v170 = get_local ptr { u64 }, __anon_20, !1664
        v171 = const u64 0
        v172 = get_elem_ptr v170, ptr u64, v171, !1665
        v173 = const u64 0, !256
        store v173 to v172, !1666
        v174 = load v170, !17
        v175 = const u64 1
        v176 = const u64 1
        v177 = get_elem_ptr v166, ptr { u64 }, v175, v176, !1667
        store v174 to v177, !1668
        v178 = load v166, !17
        br block10(v178), !1669

        caller_address_12_end_while():
        v179 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !1670
        v180 = load v179, !17
        v181 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !1671
        store v180 to v181, !1672
        v182 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !1673
        v183 = const u64 0
        v184 = get_elem_ptr v182, ptr u64, v183, !1674
        v185 = load v184, !17
        v186 = const u64 1, !266
        v187 = cmp eq v185 v186, !1675
        br caller_address_12_block26(v187), !1676

        caller_address_12_block26(v188: bool):
        cbr v188, caller_address_12_block12(), caller_address_12_block13(), !1677

        caller_address_12_block12():
        v189 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !1678
        v190 = const u64 1
        v191 = const u64 1
        v192 = get_elem_ptr v189, ptr { b256 }, v190, v191, !17
        v193 = load v192, !17
        v194 = get_local ptr { b256 }, address, !1679
        store v193 to v194, !1680
        v195 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_30, !1681
        v196 = const u64 0
        v197 = get_elem_ptr v195, ptr u64, v196, !1682
        v198 = const u64 0, !252
        store v198 to v197, !1683
        v199 = get_local ptr { b256 }, address, !1684
        v200 = load v199, !17
        v201 = const u64 1
        v202 = const u64 0
        v203 = get_elem_ptr v195, ptr { b256 }, v201, v202, !1685
        store v200 to v203, !1686
        v204 = load v195, !17
        br caller_address_12_block17(v204), !17

        caller_address_12_block13():
        v205 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !1687
        v206 = const u64 0
        v207 = get_elem_ptr v205, ptr u64, v206, !1688
        v208 = load v207, !17
        v209 = const u64 0, !266
        v210 = cmp eq v208 v209, !1689
        br caller_address_12_block27(v210), !1690

        caller_address_12_block27(v211: bool):
        cbr v211, caller_address_12_block14(), caller_address_12_block15(), !1691

        caller_address_12_block14():
        v212 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_40, !1692
        v213 = const u64 0
        v214 = get_elem_ptr v212, ptr u64, v213, !1693
        v215 = const u64 1, !252
        store v215 to v214, !1694
        v216 = get_local ptr { u64 }, __anon_5, !1695
        v217 = const u64 0
        v218 = get_elem_ptr v216, ptr u64, v217, !1696
        v219 = const u64 1, !256
        store v219 to v218, !1697
        v220 = load v216, !17
        v221 = const u64 1
        v222 = const u64 1
        v223 = get_elem_ptr v212, ptr { u64 }, v221, v222, !1698
        store v220 to v223, !1699
        v224 = load v212, !17
        br caller_address_12_block16(v224), !17

        caller_address_12_block15():
        v225 = const u64 14757395258967588866, !269
        revert v225, !1700

        caller_address_12_block16(v226: { u64, ( { b256 } | { u64 } ) }):
        br caller_address_12_block17(v226), !17

        caller_address_12_block17(v227: { u64, ( { b256 } | { u64 } ) }):
        br block10(v227), !17

        block10(v228: { u64, ( { b256 } | { u64 } ) }):
        v229 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !316
        store v228 to v229, !316
        v230 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !17
        v231 = const u64 0
        v232 = get_elem_ptr v230, ptr u64, v231, !17
        v233 = load v232
        v234 = const u64 1, !17
        v235 = cmp eq v233 v234, !322
        br block11(v235), !322

        block11(v236: bool):
        cbr v236, block1(), block2(), !322

        block1():
        v237 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !17
        v238 = const u64 1
        v239 = const u64 1
        v240 = get_elem_ptr v237, ptr { u64 }, v238, v239
        v241 = load v240
        v242 = get_local ptr { u64 }, err, !329
        store v241 to v242, !329
        v243 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_0, !252
        v244 = const u64 0
        v245 = get_elem_ptr v243, ptr u64, v244, !252
        v246 = const u64 1, !252
        store v246 to v245, !252
        v247 = get_local ptr { u64 }, err, !335
        v248 = load v247
        v249 = const u64 1
        v250 = const u64 1
        v251 = get_elem_ptr v243, ptr { u64 }, v249, v250, !252
        store v248 to v251, !252
        v252 = load v243
        br block6(v252)

        block2():
        v253 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !17
        v254 = const u64 0
        v255 = get_elem_ptr v253, ptr u64, v254, !17
        v256 = load v255
        v257 = const u64 0, !17
        v258 = cmp eq v256 v257, !345
        br block12(v258), !345

        block12(v259: bool):
        cbr v259, block3(), block4(), !345

        block3():
        v260 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !17
        v261 = const u64 1
        v262 = const u64 0
        v263 = get_elem_ptr v260, ptr { b256 }, v261, v262
        v264 = load v263
        v265 = get_local ptr { b256 }, owner, !352
        store v264 to v265, !352
        v266 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_1, !252
        v267 = const u64 0
        v268 = get_elem_ptr v266, ptr u64, v267, !252
        v269 = const u64 0, !252
        store v269 to v268, !252
        v270 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !359
        v271 = const u64 0
        v272 = get_elem_ptr v270, ptr u64, v271, !359
        v273 = const u64 0, !359
        store v273 to v272, !359
        v274 = get_local ptr { b256 }, owner, !363
        v275 = load v274
        v276 = const u64 1
        v277 = const u64 0
        v278 = get_elem_ptr v270, ptr { b256 }, v276, v277, !359
        store v275 to v278, !359
        v279 = load v270
        v280 = const u64 1
        v281 = const u64 0
        v282 = get_elem_ptr v266, ptr { u64, ( { b256 } | { b256 } ) }, v280, v281, !252
        store v279 to v282, !252
        v283 = load v266
        br block5(v283)

        block4():
        v284 = const u64 14757395258967588866, !316
        revert v284, !316

        block5(v285: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        br block6(v285)

        block6(v286: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        br block8(v286)

        block7():
        v287 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_3, !252
        v288 = const u64 0
        v289 = get_elem_ptr v287, ptr u64, v288, !252
        v290 = const u64 0, !252
        store v290 to v289, !252
        v291 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_4, !359
        v292 = const u64 0
        v293 = get_elem_ptr v291, ptr u64, v292, !359
        v294 = const u64 1, !359
        store v294 to v293, !359
        v295 = asm(r1) -> b256 r1, !1701 {
            gm     r1 i2, !385
        }
        v296 = call from_22(v295), !1702
        br block13(v296), !382

        block13(v297: { b256 }):
        v298 = const u64 1
        v299 = const u64 1
        v300 = get_elem_ptr v291, ptr { b256 }, v298, v299, !359
        store v297 to v300, !359
        v301 = load v291
        v302 = const u64 1
        v303 = const u64 0
        v304 = get_elem_ptr v287, ptr { u64, ( { b256 } | { b256 } ) }, v302, v303, !252
        store v301 to v304, !252
        v305 = load v287
        br block8(v305)

        block8(v306: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        ret { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } v306
    }

    pub fn caller_is_external_11() -> bool, !1703 {
        entry():
        v0 = asm(r1) -> bool r1, !10 {
            gm     r1 i1, !12
        }
        ret bool v0
    }

    pub fn caller_address_12() -> { u64, ( { b256 } | { u64 } ) }, !1704 {
        local { u64, ( () | { b256 } ) } __anon_0
        local { u64 } __anon_00
        local { u64, ( () | { b256 } ) } __anon_01
        local { u64, ( { b256 } | { u64 } ) } __anon_1
        local { u64 } __anon_10
        local { u64, ( () | { b256 } ) } __anon_11
        local { u64 } __anon_2
        local { u64, ( { b256 } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { u64 } ) } __anon_4
        local { u64 } __anon_5
        local u8 __matched_value_1
        local { u64 } __matched_value_2
        local { u64, ( () | { b256 } ) } __matched_value_3
        local { u64 } __matched_value_30
        local { u64, ( () | { b256 } ) } __matched_value_31
        local { u64 } __matched_value_6
        local { b256 } address
        local mut { u64, ( () | { b256 } ) } candidate
        local mut u64 i
        local u64 inputs
        local { u64, ( () | { b256 } ) } owner_of_input
        local { u64 } type_of_input

        entry():
        v0 = const u64 0, !16
        v1 = gtf v0, 1, !1705
        v2 = bitcast v1 to u8, !1706
        v3 = get_local ptr u8, __matched_value_1, !1707
        v4 = get_local ptr u8, __matched_value_1, !1708
        v5 = const u8 0, !27
        v6 = cmp eq v2 v5, !1709
        br input_count_13_tx_type_14_block6(v6), !1710

        input_count_13_tx_type_14_block6(v7: bool):
        cbr v7, input_count_13_tx_type_14_block0(), input_count_13_tx_type_14_block1(), !1711

        input_count_13_tx_type_14_block0():
        v8 = get_local ptr { u64 }, __anon_00, !1712
        v9 = const u64 0
        v10 = get_elem_ptr v8, ptr u64, v9, !1713
        v11 = const u64 0, !32
        store v11 to v10, !1714
        v12 = load v8, !1715
        br input_count_13_tx_type_14_block5(v12), !1716

        input_count_13_tx_type_14_block1():
        v13 = get_local ptr u8, __matched_value_1, !1717
        v14 = const u8 1, !39
        v15 = cmp eq v2 v14, !1718
        br input_count_13_tx_type_14_block7(v15), !1719

        input_count_13_tx_type_14_block7(v16: bool):
        cbr v16, input_count_13_tx_type_14_block2(), input_count_13_tx_type_14_block3(), !1720

        input_count_13_tx_type_14_block2():
        v17 = get_local ptr { u64 }, __anon_10, !1721
        v18 = const u64 0
        v19 = get_elem_ptr v17, ptr u64, v18, !1722
        v20 = const u64 1, !32
        store v20 to v19, !1723
        v21 = load v17, !1724
        br input_count_13_tx_type_14_block4(v21), !1725

        input_count_13_tx_type_14_block3():
        v22 = const u64 0, !49
        revert v22, !1726

        input_count_13_tx_type_14_block8(v23: never):
        br input_count_13_tx_type_14_block4(v23), !1727

        input_count_13_tx_type_14_block4(v24: { u64 }):
        br input_count_13_tx_type_14_block5(v24), !1728

        input_count_13_tx_type_14_block5(v25: { u64 }):
        br input_count_13_block6(v25), !1729

        input_count_13_block6(v26: { u64 }):
        v27 = get_local ptr { u64 }, __matched_value_30, !1730
        store v26 to v27, !1731
        v28 = get_local ptr { u64 }, __matched_value_30, !1732
        v29 = const u64 0
        v30 = get_elem_ptr v28, ptr u64, v29, !1733
        v31 = load v30, !18
        v32 = const u64 0, !20
        v33 = cmp eq v31 v32, !1734
        br input_count_13_block7(v33), !1735

        input_count_13_block7(v34: bool):
        cbr v34, input_count_13_block0(), input_count_13_block1(), !1736

        input_count_13_block0():
        v35 = const u64 0, !67
        v36 = gtf v35, 5, !1737
        v37 = bitcast v36 to u64, !1738
        br input_count_13_block5(v37), !18

        input_count_13_block1():
        v38 = get_local ptr { u64 }, __matched_value_30, !1739
        v39 = const u64 0
        v40 = get_elem_ptr v38, ptr u64, v39, !1740
        v41 = load v40, !18
        v42 = const u64 1, !20
        v43 = cmp eq v41 v42, !1741
        br input_count_13_block8(v43), !1742

        input_count_13_block8(v44: bool):
        cbr v44, input_count_13_block2(), input_count_13_block3(), !1743

        input_count_13_block2():
        v45 = const u64 0, !79
        v46 = gtf v45, 259, !1744
        v47 = bitcast v46 to u64, !1745
        br input_count_13_block4(v47), !18

        input_count_13_block3():
        v48 = const u64 14757395258967588866, !57
        revert v48, !1746

        input_count_13_block4(v49: u64):
        br input_count_13_block5(v49), !18

        input_count_13_block5(v50: u64):
        br block18(v50), !18

        block18(v51: u64):
        v52 = get_local ptr u64, inputs, !87
        v53 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0, !90
        v54 = const u64 0
        v55 = get_elem_ptr v53, ptr u64, v54, !90
        v56 = const u64 0, !90
        store v56 to v55, !90
        v57 = load v53
        v58 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !95
        store v57 to v58, !95
        v59 = get_local ptr u64, i, !98
        v60 = const u64 0, !100
        br while(v60)

        while(v61: u64):
        v62 = get_local ptr u64, i, !102
        v63 = get_local ptr u64, inputs, !104
        v64 = cmp lt v61 v51, !106
        br block19(v64), !106

        block19(v65: bool):
        cbr v65, while_body(), end_while()

        while_break():
        br end_while()

        while_body():
        v66 = get_local ptr u64, i, !111
        v67 = asm(input: v61) -> u64 input, !1747 {
        }
        br block20(v67), !113

        block20(v68: u64):
        v69 = call input_type_17(v68), !118
        v70 = get_local ptr { u64 }, type_of_input, !120
        store v69 to v70, !120
        v71 = get_local ptr { u64 }, type_of_input, !123
        v72 = load v71
        v73 = get_local ptr { u64 }, __matched_value_2, !126
        store v72 to v73, !126
        v74 = get_local ptr { u64 }, __matched_value_2, !123
        v75 = const u64 0
        v76 = get_elem_ptr v74, ptr u64, v75, !123
        v77 = load v76
        v78 = const u64 0, !123
        v79 = cmp eq v77 v78, !132
        br block21(v79), !132

        block21(v80: bool):
        cbr v80, block0(), block1(), !132

        block0():
        v81 = const unit (), !136
        br block5(v81)

        block1():
        v82 = get_local ptr { u64 }, __matched_value_2, !123
        v83 = const u64 0
        v84 = get_elem_ptr v82, ptr u64, v83, !123
        v85 = load v84
        v86 = const u64 2, !123
        v87 = cmp eq v85 v86, !141
        br block22(v87), !141

        block22(v88: bool):
        cbr v88, block2(), block3(), !141

        block2():
        v89 = const unit (), !145
        br block4(v89)

        block3():
        v90 = get_local ptr u64, i, !147
        v91 = const u64 1, !149
        v92 = call add_19(v61, v91), !150
        v93 = get_local ptr u64, i, !150
        br while(v92)

        block4(v94: ()):
        br block5(v94)

        block5(v95: ()):
        v96 = get_local ptr u64, i, !155
        v97 = asm(input: v61) -> u64 input, !1748 {
        }
        br block23(v97), !157

        block23(v98: u64):
        v99 = call input_type_17(v98), !1749
        v100 = get_local ptr { u64 }, __matched_value_6, !1750
        store v99 to v100, !1751
        v101 = get_local ptr { u64 }, __matched_value_6, !1752
        v102 = const u64 0
        v103 = get_elem_ptr v101, ptr u64, v102, !1753
        v104 = load v103, !160
        v105 = const u64 0, !161
        v106 = cmp eq v104 v105, !1754
        br input_coin_owner_21_block3(v106), !1755

        input_coin_owner_21_block3(v107: bool):
        cbr v107, input_coin_owner_21_block0(), input_coin_owner_21_block1(), !1756

        input_coin_owner_21_block0():
        v108 = get_local ptr { u64, ( () | { b256 } ) }, __anon_01, !1757
        v109 = const u64 0
        v110 = get_elem_ptr v108, ptr u64, v109, !1758
        v111 = const u64 1, !90
        store v111 to v110, !1759
        v112 = gtf v98, 515, !1760
        v113 = int_to_ptr v112 to ptr b256, !1761
        v114 = load v113, !160
        v115 = call from_22(v114), !1762
        v116 = const u64 1
        v117 = const u64 1
        v118 = get_elem_ptr v108, ptr { b256 }, v116, v117, !1763
        store v115 to v118, !1764
        v119 = load v108, !160
        br input_coin_owner_21_block2(v119), !160

        input_coin_owner_21_block1():
        v120 = get_local ptr { u64, ( () | { b256 } ) }, __anon_11, !1765
        v121 = const u64 0
        v122 = get_elem_ptr v120, ptr u64, v121, !1766
        v123 = const u64 0, !90
        store v123 to v122, !1767
        v124 = load v120, !160
        br input_coin_owner_21_block2(v124), !160

        input_coin_owner_21_block2(v125: { u64, ( () | { b256 } ) }):
        br block24(v125), !160

        block24(v126: { u64, ( () | { b256 } ) }):
        v127 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !192
        store v126 to v127, !192
        v128 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !195
        v129 = load v128
        v130 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !1768
        store v129 to v130, !1769
        v131 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !1770
        v132 = const u64 0
        v133 = get_elem_ptr v131, ptr u64, v132, !1771
        v134 = load v133, !198
        v135 = const u64 1, !202
        v136 = cmp eq v134 v135, !1772
        br is_none_23_block3(v136), !1773

        is_none_23_block3(v137: bool):
        cbr v137, is_none_23_block0(), is_none_23_block1(), !1774

        is_none_23_block0():
        v138 = const bool false, !210
        br is_none_23_block2(v138), !198

        is_none_23_block1():
        v139 = const bool true, !212
        br is_none_23_block2(v139), !198

        is_none_23_block2(v140: bool):
        br block25(v140), !198

        block25(v141: bool):
        cbr v141, block6(), block7(), !198

        block6():
        v142 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !216
        v143 = load v142
        v144 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !219
        store v143 to v144, !219
        v145 = get_local ptr u64, i, !222
        v146 = const u64 1, !224
        v147 = call add_19(v61, v146), !225
        v148 = get_local ptr u64, i, !225
        br while(v147)

        block7():
        v149 = const unit ()
        br block8(v149)

        block8(v150: ()):
        v151 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !230
        v152 = load v151
        v153 = call unwrap_24(v152), !233
        v154 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !235
        v155 = load v154
        v156 = call unwrap_24(v155), !238
        v157 = call eq_6(v153, v156), !240
        cbr v157, block9(), block10(), !240

        block9():
        v158 = get_local ptr u64, i, !243
        v159 = const u64 1, !245
        v160 = call add_19(v61, v159), !246
        v161 = get_local ptr u64, i, !246
        br while(v160)

        block10():
        v162 = const unit ()
        br block11(v162)

        block11(v163: ()):
        v164 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_1, !252
        v165 = const u64 0
        v166 = get_elem_ptr v164, ptr u64, v165, !252
        v167 = const u64 1, !252
        store v167 to v166, !252
        v168 = get_local ptr { u64 }, __anon_2, !256
        v169 = const u64 0
        v170 = get_elem_ptr v168, ptr u64, v169, !256
        v171 = const u64 0, !256
        store v171 to v170, !256
        v172 = load v168
        v173 = const u64 1
        v174 = const u64 1
        v175 = get_elem_ptr v164, ptr { u64 }, v173, v174, !252
        store v172 to v175, !252
        v176 = load v164
        ret { u64, ( { b256 } | { u64 } ) } v176, !264

        end_while():
        v177 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !266
        v178 = load v177
        v179 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !269
        store v178 to v179, !269
        v180 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !266
        v181 = const u64 0
        v182 = get_elem_ptr v180, ptr u64, v181, !266
        v183 = load v182
        v184 = const u64 1, !266
        v185 = cmp eq v183 v184, !275
        br block26(v185), !275

        block26(v186: bool):
        cbr v186, block12(), block13(), !275

        block12():
        v187 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !266
        v188 = const u64 1
        v189 = const u64 1
        v190 = get_elem_ptr v187, ptr { b256 }, v188, v189
        v191 = load v190
        v192 = get_local ptr { b256 }, address, !282
        store v191 to v192, !282
        v193 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_3, !252
        v194 = const u64 0
        v195 = get_elem_ptr v193, ptr u64, v194, !252
        v196 = const u64 0, !252
        store v196 to v195, !252
        v197 = get_local ptr { b256 }, address, !288
        v198 = load v197
        v199 = const u64 1
        v200 = const u64 0
        v201 = get_elem_ptr v193, ptr { b256 }, v199, v200, !252
        store v198 to v201, !252
        v202 = load v193
        br block17(v202)

        block13():
        v203 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !266
        v204 = const u64 0
        v205 = get_elem_ptr v203, ptr u64, v204, !266
        v206 = load v205
        v207 = const u64 0, !266
        v208 = cmp eq v206 v207, !298
        br block27(v208), !298

        block27(v209: bool):
        cbr v209, block14(), block15(), !298

        block14():
        v210 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_4, !252
        v211 = const u64 0
        v212 = get_elem_ptr v210, ptr u64, v211, !252
        v213 = const u64 1, !252
        store v213 to v212, !252
        v214 = get_local ptr { u64 }, __anon_5, !256
        v215 = const u64 0
        v216 = get_elem_ptr v214, ptr u64, v215, !256
        v217 = const u64 1, !256
        store v217 to v216, !256
        v218 = load v214
        v219 = const u64 1
        v220 = const u64 1
        v221 = get_elem_ptr v210, ptr { u64 }, v219, v220, !252
        store v218 to v221, !252
        v222 = load v210
        br block16(v222)

        block15():
        v223 = const u64 14757395258967588866, !269
        revert v223, !269

        block16(v224: { u64, ( { b256 } | { u64 } ) }):
        br block17(v224)

        block17(v225: { u64, ( { b256 } | { u64 } ) }):
        ret { u64, ( { b256 } | { u64 } ) } v225
    }

    pub fn input_count_13() -> u64, !1775 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local u8 __matched_value_1
        local { u64 } __matched_value_3

        entry():
        v0 = const u64 0, !16
        v1 = gtf v0, 1, !1776
        v2 = bitcast v1 to u8, !1777
        v3 = get_local ptr u8, __matched_value_1, !1778
        v4 = get_local ptr u8, __matched_value_1, !1779
        v5 = const u8 0, !27
        v6 = cmp eq v2 v5, !1780
        br tx_type_14_block6(v6), !1781

        tx_type_14_block6(v7: bool):
        cbr v7, tx_type_14_block0(), tx_type_14_block1(), !1782

        tx_type_14_block0():
        v8 = get_local ptr { u64 }, __anon_0, !1783
        v9 = const u64 0
        v10 = get_elem_ptr v8, ptr u64, v9, !1784
        v11 = const u64 0, !32
        store v11 to v10, !1785
        v12 = load v8, !20
        br tx_type_14_block5(v12), !20

        tx_type_14_block1():
        v13 = get_local ptr u8, __matched_value_1, !1786
        v14 = const u8 1, !39
        v15 = cmp eq v2 v14, !1787
        br tx_type_14_block7(v15), !1788

        tx_type_14_block7(v16: bool):
        cbr v16, tx_type_14_block2(), tx_type_14_block3(), !1789

        tx_type_14_block2():
        v17 = get_local ptr { u64 }, __anon_1, !1790
        v18 = const u64 0
        v19 = get_elem_ptr v17, ptr u64, v18, !1791
        v20 = const u64 1, !32
        store v20 to v19, !1792
        v21 = load v17, !20
        br tx_type_14_block4(v21), !20

        tx_type_14_block3():
        v22 = const u64 0, !49
        revert v22, !1793

        tx_type_14_block8(v23: never):
        br tx_type_14_block4(v23), !20

        tx_type_14_block4(v24: { u64 }):
        br tx_type_14_block5(v24), !20

        tx_type_14_block5(v25: { u64 }):
        br block6(v25), !20

        block6(v26: { u64 }):
        v27 = get_local ptr { u64 }, __matched_value_3, !57
        store v26 to v27, !57
        v28 = get_local ptr { u64 }, __matched_value_3, !20
        v29 = const u64 0
        v30 = get_elem_ptr v28, ptr u64, v29, !20
        v31 = load v30
        v32 = const u64 0, !20
        v33 = cmp eq v31 v32, !63
        br block7(v33), !63

        block7(v34: bool):
        cbr v34, block0(), block1(), !63

        block0():
        v35 = const u64 0, !67
        v36 = gtf v35, 5, !68
        v37 = bitcast v36 to u64, !68
        br block5(v37)

        block1():
        v38 = get_local ptr { u64 }, __matched_value_3, !20
        v39 = const u64 0
        v40 = get_elem_ptr v38, ptr u64, v39, !20
        v41 = load v40
        v42 = const u64 1, !20
        v43 = cmp eq v41 v42, !75
        br block8(v43), !75

        block8(v44: bool):
        cbr v44, block2(), block3(), !75

        block2():
        v45 = const u64 0, !79
        v46 = gtf v45, 259, !80
        v47 = bitcast v46 to u64, !80
        br block4(v47)

        block3():
        v48 = const u64 14757395258967588866, !57
        revert v48, !57

        block4(v49: u64):
        br block5(v49)

        block5(v50: u64):
        ret u64 v50
    }

    pub fn tx_type_14() -> { u64 }, !1794 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local u8 __matched_value_1

        entry():
        v0 = const u64 0, !16
        v1 = gtf v0, 1, !21
        v2 = bitcast v1 to u8, !21
        v3 = get_local ptr u8, __matched_value_1, !24
        v4 = get_local ptr u8, __matched_value_1, !21
        v5 = const u8 0, !27
        v6 = cmp eq v2 v5, !28
        br block6(v6), !28

        block6(v7: bool):
        cbr v7, block0(), block1(), !28

        block0():
        v8 = get_local ptr { u64 }, __anon_0, !32
        v9 = const u64 0
        v10 = get_elem_ptr v8, ptr u64, v9, !32
        v11 = const u64 0, !32
        store v11 to v10, !32
        v12 = load v8
        br block5(v12)

        block1():
        v13 = get_local ptr u8, __matched_value_1, !21
        v14 = const u8 1, !39
        v15 = cmp eq v2 v14, !40
        br block7(v15), !40

        block7(v16: bool):
        cbr v16, block2(), block3(), !40

        block2():
        v17 = get_local ptr { u64 }, __anon_1, !32
        v18 = const u64 0
        v19 = get_elem_ptr v17, ptr u64, v18, !32
        v20 = const u64 1, !32
        store v20 to v19, !32
        v21 = load v17
        br block4(v21)

        block3():
        v22 = const u64 0, !49
        revert v22, !1795

        block8(v23: never):
        br block4(v23)

        block4(v24: { u64 }):
        br block5(v24)

        block5(v25: { u64 }):
        ret { u64 } v25
    }

    pub fn eq_15(self !1796: u8, other !1797: u8) -> bool, !1798 {
        entry(self: u8, other: u8):
        v0 = cmp eq self other
        ret bool v0
    }

    pub fn lt_16(self !1799: u64, other !1800: u64) -> bool, !1801 {
        entry(self: u64, other: u64):
        v0 = cmp lt self other
        ret bool v0
    }

    pub fn input_type_17(index !1802: u64) -> { u64 }, !1803 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local u8 __matched_value_2

        entry(index: u64):
        v0 = gtf index, 512, !1804
        v1 = bitcast v0 to u8, !1804
        v2 = get_local ptr u8, __matched_value_2, !1805
        v3 = get_local ptr u8, __matched_value_2, !1804
        v4 = const u8 0, !1806
        v5 = cmp eq v1 v4, !1807
        br block9(v5), !1807

        block9(v6: bool):
        cbr v6, block0(), block1(), !1807

        block0():
        v7 = get_local ptr { u64 }, __anon_0, !1808
        v8 = const u64 0
        v9 = get_elem_ptr v7, ptr u64, v8, !1808
        v10 = const u64 0, !1808
        store v10 to v9, !1808
        v11 = load v7
        br block8(v11)

        block1():
        v12 = get_local ptr u8, __matched_value_2, !1804
        v13 = const u8 1, !1809
        v14 = cmp eq v1 v13, !1810
        br block10(v14), !1810

        block10(v15: bool):
        cbr v15, block2(), block3(), !1810

        block2():
        v16 = get_local ptr { u64 }, __anon_1, !1808
        v17 = const u64 0
        v18 = get_elem_ptr v16, ptr u64, v17, !1808
        v19 = const u64 1, !1808
        store v19 to v18, !1808
        v20 = load v16
        br block7(v20)

        block3():
        v21 = get_local ptr u8, __matched_value_2, !1804
        v22 = const u8 2, !1811
        v23 = cmp eq v1 v22, !1812
        br block11(v23), !1812

        block11(v24: bool):
        cbr v24, block4(), block5(), !1812

        block4():
        v25 = get_local ptr { u64 }, __anon_2, !1808
        v26 = const u64 0
        v27 = get_elem_ptr v25, ptr u64, v26, !1808
        v28 = const u64 2, !1808
        store v28 to v27, !1808
        v29 = load v25
        br block6(v29)

        block5():
        v30 = const u64 0, !1813
        revert v30, !1815

        block12(v31: never):
        br block6(v31)

        block6(v32: { u64 }):
        br block7(v32)

        block7(v33: { u64 }):
        br block8(v33)

        block8(v34: { u64 }):
        ret { u64 } v34
    }

    pub fn as_u64_18(self !1816: u64) -> u64, !1817 {
        entry(self: u64):
        v0 = asm(input: self) -> u64 input, !115 {
        }
        ret u64 v0
    }

    pub fn add_19(self !1818: u64, other !1819: u64) -> u64, !1820 {
        local u64 res

        entry(self: u64, other: u64):
        v0 = add self, other
        v1 = get_local ptr u64, res, !1821
        v2 = get_local ptr u64, res, !1822
        v3 = const u64 65535, !1824
        br block3(v3), !1825

        block3(v4: u64):
        v5 = cmp gt v0 v4
        cbr v5, block0(), block1(), !1826

        block0():
        v6 = const u64 0, !1827
        revert v6, !1828

        block1():
        v7 = get_local ptr u64, res, !1829
        br block2(v0)

        block2(v8: u64):
        ret u64 v8
    }

    pub fn max_20() -> u64, !1830 {
        entry():
        v0 = const u64 65535, !1824
        ret u64 v0
    }

    pub fn input_coin_owner_21(index !1831: u64) -> { u64, ( () | { b256 } ) }, !1832 {
        local { u64, ( () | { b256 } ) } __anon_0
        local { u64, ( () | { b256 } ) } __anon_1
        local { u64 } __matched_value_6

        entry(index: u64):
        v0 = call input_type_17(index), !161
        v1 = get_local ptr { u64 }, __matched_value_6, !163
        store v0 to v1, !163
        v2 = get_local ptr { u64 }, __matched_value_6, !161
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !161
        v5 = load v4
        v6 = const u64 0, !161
        v7 = cmp eq v5 v6, !169
        br block3(v7), !169

        block3(v8: bool):
        cbr v8, block0(), block1(), !169

        block0():
        v9 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0, !90
        v10 = const u64 0
        v11 = get_elem_ptr v9, ptr u64, v10, !90
        v12 = const u64 1, !90
        store v12 to v11, !90
        v13 = gtf index, 515, !176
        v14 = int_to_ptr v13 to ptr b256, !176
        v15 = load v14
        v16 = call from_22(v15), !180
        v17 = const u64 1
        v18 = const u64 1
        v19 = get_elem_ptr v9, ptr { b256 }, v17, v18, !90
        store v16 to v19, !90
        v20 = load v9
        br block2(v20)

        block1():
        v21 = get_local ptr { u64, ( () | { b256 } ) }, __anon_1, !90
        v22 = const u64 0
        v23 = get_elem_ptr v21, ptr u64, v22, !90
        v24 = const u64 0, !90
        store v24 to v23, !90
        v25 = load v21
        br block2(v25)

        block2(v26: { u64, ( () | { b256 } ) }):
        ret { u64, ( () | { b256 } ) } v26
    }

    pub fn from_22(bits !1833: b256) -> { b256 }, !1834 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !1835
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !1835
        v3 = load v0
        ret { b256 } v3
    }

    pub fn is_none_23(self !1836: { u64, ( () | { b256 } ) }) -> bool, !1837 {
        local { u64, ( () | { b256 } ) } __matched_value_3

        entry(self: { u64, ( () | { b256 } ) }):
        v0 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !199
        store self to v0, !199
        v1 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !202
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !202
        v4 = load v3
        v5 = const u64 1, !202
        v6 = cmp eq v4 v5, !206
        br block3(v6), !206

        block3(v7: bool):
        cbr v7, block0(), block1(), !206

        block0():
        v8 = const bool false, !210
        br block2(v8)

        block1():
        v9 = const bool true, !212
        br block2(v9)

        block2(v10: bool):
        ret bool v10
    }

    pub fn unwrap_24(self !1838: { u64, ( () | { b256 } ) }) -> { b256 }, !1839 {
        local { u64, ( () | { b256 } ) } __matched_value_4
        local { b256 } inner_value

        entry(self: { u64, ( () | { b256 } ) }):
        v0 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !667
        store self to v0, !667
        v1 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !670
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !670
        v4 = load v3
        v5 = const u64 1, !670
        v6 = cmp eq v4 v5, !674
        br block3(v6), !674

        block3(v7: bool):
        cbr v7, block0(), block1(), !674

        block0():
        v8 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !670
        v9 = const u64 1
        v10 = const u64 1
        v11 = get_elem_ptr v8, ptr { b256 }, v9, v10
        v12 = load v11
        v13 = get_local ptr { b256 }, inner_value, !681
        store v12 to v13, !681
        v14 = get_local ptr { b256 }, inner_value, !684
        v15 = load v14
        br block2(v15)

        block1():
        v16 = const u64 0, !688
        revert v16, !1840

        block4(v17: never):
        br block2(v17)

        block2(v18: { b256 }):
        ret { b256 } v18
    }

    pub fn caller_contract_id_25() -> { b256 }, !1841 {
        entry():
        v0 = asm(r1) -> b256 r1, !383 {
            gm     r1 i2, !385
        }
        v1 = call from_22(v0), !386
        ret { b256 } v1
    }

    pub fn from_26(bits !1842: b256) -> { b256 }, !1843 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !1844
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !1844
        v3 = load v0
        ret { b256 } v3
    }

    pub fn get_owner_27() -> b256, !1846 {
        local { b256, u64, b256 } __anon_0
        local { u64, ( () | b256 ) } __anon_00
        local { b256, u64, u64 } __anon_000
        local { u64, ( () | b256 ) } __anon_1
        local { u64, ( () | b256 ) } __anon_2
        local bool __matched_value_1
        local { u64, ( () | b256 ) } __matched_value_4
        local { b256, u64, u64 } __tuple_2
        local { b256, u64, u64 } __tuple_2_
        local b256 inner_value
        local b256 key_for_storage
        local u64 last_slot
        local u64 number_of_slots
        local u64 number_of_slots0
        local b256 offset_slot
        local mut u256 offset_slot0
        local u64 place_in_slot
        local u64 place_in_slot0
        local u64 result_ptr
        local u64 size_of_t

        entry():
        v0 = get_local ptr { b256, u64, b256 }, __anon_0, !428
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        v3 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !428
        store v3 to v2, !428
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4
        v6 = const u64 0
        store v6 to v5, !428
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr b256, v7
        v9 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !428
        store v9 to v8, !428
        v10 = load v0
        v11 = call slot_51(v10), !1847
        v12 = call offset_46(v10), !1848
        v13 = const u64 32
        v14 = const u64 0, !444
        v15 = cmp eq v13 v14, !1849
        br read_28_read_30_block6(v15), !1850

        read_28_read_30_block6(v16: bool):
        cbr v16, read_28_read_30_block0(), read_28_read_30_block1(), !1851

        read_28_read_30_block0():
        v17 = get_local ptr { u64, ( () | b256 ) }, __anon_00, !1852
        v18 = const u64 0
        v19 = get_elem_ptr v17, ptr u64, v18, !1853
        v20 = const u64 0, !90
        store v20 to v19, !1854
        v21 = load v17, !1855
        br read_28_block0(v21), !1856

        read_28_read_30_block1():
        v22 = const unit ()
        br read_28_read_30_block2(v22), !1857

        read_28_read_30_block2(v23: ()):
        v24 = get_local ptr u64, size_of_t, !1858
        v25 = const u64 8, !460
        v26 = mul v12, v25, !1859
        br read_28_read_30_slot_calculator_31_block6(v26), !1860

        read_28_read_30_slot_calculator_31_block6(v27: u64):
        v28 = get_local ptr u64, size_of_t, !1861
        v29 = const u64 32
        v30 = add v27, v29, !1862
        br read_28_read_30_slot_calculator_31_block7(v30), !1863

        read_28_read_30_slot_calculator_31_block7(v31: u64):
        v32 = const u64 31, !469
        v33 = add v31, v32, !1864
        br read_28_read_30_slot_calculator_31_block8(v33), !1865

        read_28_read_30_slot_calculator_31_block8(v34: u64):
        v35 = const u64 5, !473
        v36 = rsh v34, v35, !1866
        br read_28_read_30_slot_calculator_31_block9(v36), !1867

        read_28_read_30_slot_calculator_31_block9(v37: u64):
        v38 = get_local ptr u64, last_slot, !1868
        v39 = const u64 4, !479
        v40 = mod v12, v39, !1869
        br read_28_read_30_slot_calculator_31_block10(v40), !1870

        read_28_read_30_slot_calculator_31_block10(v41: u64):
        v42 = get_local ptr u64, place_in_slot0, !1871
        v43 = get_local ptr bool, __matched_value_1, !1872
        v44 = get_local ptr bool, __matched_value_1, !1873
        v45 = const bool true
        v46 = const bool true, !489
        v47 = cmp eq v45 v46, !1874
        br read_28_read_30_slot_calculator_31_block11(v47), !1875

        read_28_read_30_slot_calculator_31_block11(v48: bool):
        cbr v48, read_28_read_30_slot_calculator_31_block0(), read_28_read_30_slot_calculator_31_block1(), !1876

        read_28_read_30_slot_calculator_31_block0():
        v49 = get_local ptr u64, place_in_slot0, !1877
        v50 = const u64 8, !496
        v51 = mul v41, v50, !1878
        br read_28_read_30_slot_calculator_31_block12(v51), !1879

        read_28_read_30_slot_calculator_31_block12(v52: u64):
        v53 = get_local ptr u64, size_of_t, !1880
        v54 = add v52, v29, !1881
        br read_28_read_30_slot_calculator_31_block13(v54), !1882

        read_28_read_30_slot_calculator_31_block13(v55: u64):
        v56 = const u64 31, !505
        v57 = add v55, v56, !1883
        br read_28_read_30_slot_calculator_31_block14(v57), !1884

        read_28_read_30_slot_calculator_31_block14(v58: u64):
        v59 = const u64 5, !509
        v60 = rsh v58, v59, !1885
        br read_28_read_30_slot_calculator_31_block15(v60), !1886

        read_28_read_30_slot_calculator_31_block15(v61: u64):
        br read_28_read_30_slot_calculator_31_block5(v61), !1887

        read_28_read_30_slot_calculator_31_block1():
        v62 = get_local ptr bool, __matched_value_1, !1888
        v63 = const bool false, !515
        v64 = cmp eq v45 v63, !1889
        br read_28_read_30_slot_calculator_31_block16(v64), !1890

        read_28_read_30_slot_calculator_31_block16(v65: bool):
        cbr v65, read_28_read_30_slot_calculator_31_block2(), read_28_read_30_slot_calculator_31_block3(), !1891

        read_28_read_30_slot_calculator_31_block2():
        v66 = const u64 1, !520
        br read_28_read_30_slot_calculator_31_block4(v66), !1892

        read_28_read_30_slot_calculator_31_block3():
        v67 = const u64 14757395258967588866, !485
        revert v67, !1893

        read_28_read_30_slot_calculator_31_block4(v68: u64):
        br read_28_read_30_slot_calculator_31_block5(v68), !1894

        read_28_read_30_slot_calculator_31_block5(v69: u64):
        v70 = get_local ptr u64, number_of_slots0, !1895
        v71 = asm(input: v11) -> u256 input, !1896 {
        }
        br read_28_read_30_slot_calculator_31_block17(v71), !1897

        read_28_read_30_slot_calculator_31_block17(v72: u256):
        v73 = get_local ptr u256, offset_slot0, !1898
        store v72 to v73, !1899
        v74 = get_local ptr u256, offset_slot0, !1900
        v75 = load v74, !1901
        v76 = get_local ptr u64, last_slot, !1902
        v77 = call as_u256_40(v37), !1903
        v78 = get_local ptr u64, number_of_slots0, !1904
        v79 = call as_u256_40(v69), !1905
        v80 = sub v77, v79, !1906
        br read_28_read_30_slot_calculator_31_block18(v80), !1907

        read_28_read_30_slot_calculator_31_block18(v81: u256):
        v82 = add v75, v81, !1908
        br read_28_read_30_slot_calculator_31_block19(v82), !1909

        read_28_read_30_slot_calculator_31_block19(v83: u256):
        v84 = get_local ptr u256, offset_slot0, !1910
        store v83 to v84, !1911
        v85 = get_local ptr u256, offset_slot0, !1912
        v86 = load v85, !1913
        v87 = asm(input: v86) -> b256 input, !1914 {
        }
        br read_28_read_30_slot_calculator_31_block20(v87), !1915

        read_28_read_30_slot_calculator_31_block20(v88: b256):
        v89 = get_local ptr u64, number_of_slots0, !1916
        v90 = get_local ptr u64, place_in_slot0, !1917
        v91 = get_local ptr { b256, u64, u64 }, __anon_000, !1918
        v92 = const u64 0
        v93 = get_elem_ptr v91, ptr b256, v92, !1919
        store v88 to v93, !1920
        v94 = const u64 1
        v95 = get_elem_ptr v91, ptr u64, v94, !1921
        store v69 to v95, !1922
        v96 = const u64 2
        v97 = get_elem_ptr v91, ptr u64, v96, !1923
        store v41 to v97, !1924
        v98 = load v91, !1925
        br read_28_read_30_block7(v98), !1926

        read_28_read_30_block7(v99: { b256, u64, u64 }):
        v100 = get_local ptr { b256, u64, u64 }, __tuple_2, !1927
        store v99 to v100, !1928
        v101 = get_local ptr { b256, u64, u64 }, __tuple_2, !1929
        v102 = load v101, !1930
        v103 = get_local ptr { b256, u64, u64 }, __tuple_2_, !1931
        store v102 to v103, !1932
        v104 = get_local ptr { b256, u64, u64 }, __tuple_2_, !1933
        v105 = const u64 0
        v106 = get_elem_ptr v104, ptr b256, v105, !1934
        v107 = load v106, !1935
        v108 = get_local ptr b256, offset_slot, !1936
        store v107 to v108, !1937
        v109 = get_local ptr { b256, u64, u64 }, __tuple_2_, !1938
        v110 = const u64 1
        v111 = get_elem_ptr v109, ptr u64, v110, !1939
        v112 = load v111, !1940
        v113 = get_local ptr u64, number_of_slots, !1941
        v114 = get_local ptr { b256, u64, u64 }, __tuple_2_, !1942
        v115 = const u64 2
        v116 = get_elem_ptr v114, ptr u64, v115, !1943
        v117 = load v116, !1944
        v118 = get_local ptr u64, place_in_slot, !1945
        v119 = get_local ptr u64, number_of_slots, !1946
        v120 = const u64 32, !595
        v121 = mul v112, v120, !1947
        br read_28_read_30_block8(v121), !1948

        read_28_read_30_block8(v122: u64):
        v123 = const u64 8
        v124 = mul v123, v122, !1949
        br read_28_read_30_alloc_42_block0(v124), !1950

        read_28_read_30_alloc_42_block0(v125: u64):
        v126 = asm(size: v125, ptr) -> u64 ptr, !1951 {
            aloc   size, !606
            move   ptr hp, !607
        }
        br read_28_read_30_block9(v126), !1952

        read_28_read_30_block9(v127: u64):
        v128 = get_local ptr u64, result_ptr, !1953
        v129 = get_local ptr b256, offset_slot, !1954
        v130 = load v129, !1955
        v131 = get_local ptr u64, result_ptr, !1956
        v132 = get_local ptr u64, number_of_slots, !1957
        v133 = get_local ptr b256, key_for_storage, !1958
        store v130 to v133, !1959
        v134 = int_to_ptr v127 to ptr b256, !1960
        v135 = state_load_quad_word v134, key v133, v112, !1961
        cbr v135, read_28_read_30_block3(), read_28_read_30_block4(), !1962

        read_28_read_30_block3():
        v136 = get_local ptr { u64, ( () | b256 ) }, __anon_1, !1963
        v137 = const u64 0
        v138 = get_elem_ptr v136, ptr u64, v137, !1964
        v139 = const u64 1, !90
        store v139 to v138, !1965
        v140 = get_local ptr u64, result_ptr, !1966
        v141 = get_local ptr u64, place_in_slot, !1967
        v142 = const u64 8
        v143 = mul v142, v117, !1968
        v144 = add v127, v143, !1969
        br read_28_read_30_block10(v144), !1970

        read_28_read_30_block10(v145: u64):
        v146 = const bool true
        cbr v146, read_28_read_30_read_43_block0(), read_28_read_30_read_43_block1(), !1971

        read_28_read_30_read_43_block0():
        v147 = asm(ptr: v145) -> b256 ptr, !1972 {
        }
        br read_28_read_30_read_43_block5(v147), !1973

        read_28_read_30_read_43_block1():
        v148 = const u64 32
        v149 = const u64 1, !642
        v150 = cmp eq v148 v149, !1974
        cbr v150, read_28_read_30_read_43_block2(), read_28_read_30_read_43_block3(), !1975

        read_28_read_30_read_43_block2():
        v151 = asm(ptr: v145, val) -> b256 val, !1976 {
            lb     val ptr i0, !648
        }
        br read_28_read_30_read_43_block4(v151), !1977

        read_28_read_30_read_43_block3():
        v152 = asm(ptr: v145, val) -> b256 val, !1978 {
            lw     val ptr i0, !652
        }
        br read_28_read_30_read_43_block4(v152), !1979

        read_28_read_30_read_43_block4(v153: b256):
        br read_28_read_30_read_43_block5(v153), !1980

        read_28_read_30_read_43_block5(v154: b256):
        br read_28_read_30_block11(v154), !1981

        read_28_read_30_block11(v155: b256):
        v156 = const u64 1
        v157 = const u64 1
        v158 = get_elem_ptr v136, ptr b256, v156, v157, !1982
        store v155 to v158, !1983
        v159 = load v136, !1984
        br read_28_read_30_block5(v159), !1985

        read_28_read_30_block4():
        v160 = get_local ptr { u64, ( () | b256 ) }, __anon_2, !1986
        v161 = const u64 0
        v162 = get_elem_ptr v160, ptr u64, v161, !1987
        v163 = const u64 0, !90
        store v163 to v162, !1988
        v164 = load v160, !1989
        br read_28_read_30_block5(v164), !1990

        read_28_read_30_block5(v165: { u64, ( () | b256 ) }):
        br read_28_block0(v165), !1991

        read_28_block0(v166: { u64, ( () | b256 ) }):
        v167 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !1992
        store v166 to v167, !1993
        v168 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !1994
        v169 = const u64 0
        v170 = get_elem_ptr v168, ptr u64, v169, !1995
        v171 = load v170, !1996
        v172 = const u64 1, !670
        v173 = cmp eq v171 v172, !1997
        br read_28_unwrap_29_block3(v173), !1998

        read_28_unwrap_29_block3(v174: bool):
        cbr v174, read_28_unwrap_29_block0(), read_28_unwrap_29_block1(), !1999

        read_28_unwrap_29_block0():
        v175 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !2000
        v176 = const u64 1
        v177 = const u64 1
        v178 = get_elem_ptr v175, ptr b256, v176, v177, !2001
        v179 = load v178, !2002
        v180 = get_local ptr b256, inner_value, !2003
        store v179 to v180, !2004
        v181 = get_local ptr b256, inner_value, !2005
        v182 = load v181, !2006
        br read_28_unwrap_29_block2(v182), !2007

        read_28_unwrap_29_block1():
        v183 = const u64 0, !688
        revert v183, !2008

        read_28_unwrap_29_block4(v184: never):
        br read_28_unwrap_29_block2(v184), !2009

        read_28_unwrap_29_block2(v185: b256):
        br read_28_block1(v185), !2010

        read_28_block1(v186: b256):
        br block0(v186), !437

        block0(v187: b256):
        ret b256 v187
    }

    pub fn read_28(self !2011: { b256, u64, b256 }) -> b256, !2013 {
        local { u64, ( () | b256 ) } __anon_0
        local { b256, u64, u64 } __anon_00
        local { u64, ( () | b256 ) } __anon_1
        local { u64, ( () | b256 ) } __anon_2
        local bool __matched_value_1
        local { u64, ( () | b256 ) } __matched_value_4
        local { b256, u64, u64 } __tuple_2
        local { b256, u64, u64 } __tuple_2_
        local b256 inner_value
        local b256 key_for_storage
        local u64 last_slot
        local u64 number_of_slots
        local u64 number_of_slots0
        local b256 offset_slot
        local mut u256 offset_slot0
        local u64 place_in_slot
        local u64 place_in_slot0
        local u64 result_ptr
        local u64 size_of_t

        entry(self: { b256, u64, b256 }):
        v0 = call slot_51(self), !439
        v1 = call offset_46(self), !441
        v2 = const u64 32
        v3 = const u64 0, !444
        v4 = cmp eq v2 v3, !2014
        br read_30_block6(v4), !2015

        read_30_block6(v5: bool):
        cbr v5, read_30_block0(), read_30_block1(), !2016

        read_30_block0():
        v6 = get_local ptr { u64, ( () | b256 ) }, __anon_0, !2017
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr u64, v7, !2018
        v9 = const u64 0, !90
        store v9 to v8, !2019
        v10 = load v6, !445
        br block0(v10), !2020

        read_30_block1():
        v11 = const unit ()
        br read_30_block2(v11), !445

        read_30_block2(v12: ()):
        v13 = get_local ptr u64, size_of_t, !2021
        v14 = const u64 8, !460
        v15 = mul v1, v14, !2022
        br read_30_slot_calculator_31_block6(v15), !2023

        read_30_slot_calculator_31_block6(v16: u64):
        v17 = get_local ptr u64, size_of_t, !2024
        v18 = const u64 32
        v19 = add v16, v18, !2025
        br read_30_slot_calculator_31_block7(v19), !2026

        read_30_slot_calculator_31_block7(v20: u64):
        v21 = const u64 31, !469
        v22 = add v20, v21, !2027
        br read_30_slot_calculator_31_block8(v22), !2028

        read_30_slot_calculator_31_block8(v23: u64):
        v24 = const u64 5, !473
        v25 = rsh v23, v24, !2029
        br read_30_slot_calculator_31_block9(v25), !2030

        read_30_slot_calculator_31_block9(v26: u64):
        v27 = get_local ptr u64, last_slot, !2031
        v28 = const u64 4, !479
        v29 = mod v1, v28, !2032
        br read_30_slot_calculator_31_block10(v29), !2033

        read_30_slot_calculator_31_block10(v30: u64):
        v31 = get_local ptr u64, place_in_slot0, !2034
        v32 = get_local ptr bool, __matched_value_1, !2035
        v33 = get_local ptr bool, __matched_value_1, !2036
        v34 = const bool true
        v35 = const bool true, !489
        v36 = cmp eq v34 v35, !2037
        br read_30_slot_calculator_31_block11(v36), !2038

        read_30_slot_calculator_31_block11(v37: bool):
        cbr v37, read_30_slot_calculator_31_block0(), read_30_slot_calculator_31_block1(), !2039

        read_30_slot_calculator_31_block0():
        v38 = get_local ptr u64, place_in_slot0, !2040
        v39 = const u64 8, !496
        v40 = mul v30, v39, !2041
        br read_30_slot_calculator_31_block12(v40), !2042

        read_30_slot_calculator_31_block12(v41: u64):
        v42 = get_local ptr u64, size_of_t, !2043
        v43 = add v41, v18, !2044
        br read_30_slot_calculator_31_block13(v43), !2045

        read_30_slot_calculator_31_block13(v44: u64):
        v45 = const u64 31, !505
        v46 = add v44, v45, !2046
        br read_30_slot_calculator_31_block14(v46), !2047

        read_30_slot_calculator_31_block14(v47: u64):
        v48 = const u64 5, !509
        v49 = rsh v47, v48, !2048
        br read_30_slot_calculator_31_block15(v49), !2049

        read_30_slot_calculator_31_block15(v50: u64):
        br read_30_slot_calculator_31_block5(v50), !2050

        read_30_slot_calculator_31_block1():
        v51 = get_local ptr bool, __matched_value_1, !2051
        v52 = const bool false, !515
        v53 = cmp eq v34 v52, !2052
        br read_30_slot_calculator_31_block16(v53), !2053

        read_30_slot_calculator_31_block16(v54: bool):
        cbr v54, read_30_slot_calculator_31_block2(), read_30_slot_calculator_31_block3(), !2054

        read_30_slot_calculator_31_block2():
        v55 = const u64 1, !520
        br read_30_slot_calculator_31_block4(v55), !2055

        read_30_slot_calculator_31_block3():
        v56 = const u64 14757395258967588866, !485
        revert v56, !2056

        read_30_slot_calculator_31_block4(v57: u64):
        br read_30_slot_calculator_31_block5(v57), !2057

        read_30_slot_calculator_31_block5(v58: u64):
        v59 = get_local ptr u64, number_of_slots0, !2058
        v60 = asm(input: v0) -> u256 input, !2059 {
        }
        br read_30_slot_calculator_31_block17(v60), !2060

        read_30_slot_calculator_31_block17(v61: u256):
        v62 = get_local ptr u256, offset_slot0, !2061
        store v61 to v62, !2062
        v63 = get_local ptr u256, offset_slot0, !2063
        v64 = load v63, !2064
        v65 = get_local ptr u64, last_slot, !2065
        v66 = call as_u256_40(v26), !2066
        v67 = get_local ptr u64, number_of_slots0, !2067
        v68 = call as_u256_40(v58), !2068
        v69 = sub v66, v68, !2069
        br read_30_slot_calculator_31_block18(v69), !2070

        read_30_slot_calculator_31_block18(v70: u256):
        v71 = add v64, v70, !2071
        br read_30_slot_calculator_31_block19(v71), !2072

        read_30_slot_calculator_31_block19(v72: u256):
        v73 = get_local ptr u256, offset_slot0, !2073
        store v72 to v73, !2074
        v74 = get_local ptr u256, offset_slot0, !2075
        v75 = load v74, !2076
        v76 = asm(input: v75) -> b256 input, !2077 {
        }
        br read_30_slot_calculator_31_block20(v76), !2078

        read_30_slot_calculator_31_block20(v77: b256):
        v78 = get_local ptr u64, number_of_slots0, !2079
        v79 = get_local ptr u64, place_in_slot0, !2080
        v80 = get_local ptr { b256, u64, u64 }, __anon_00, !2081
        v81 = const u64 0
        v82 = get_elem_ptr v80, ptr b256, v81, !2082
        store v77 to v82, !2083
        v83 = const u64 1
        v84 = get_elem_ptr v80, ptr u64, v83, !2084
        store v58 to v84, !2085
        v85 = const u64 2
        v86 = get_elem_ptr v80, ptr u64, v85, !2086
        store v30 to v86, !2087
        v87 = load v80, !2088
        br read_30_block7(v87), !2089

        read_30_block7(v88: { b256, u64, u64 }):
        v89 = get_local ptr { b256, u64, u64 }, __tuple_2, !2090
        store v88 to v89, !2091
        v90 = get_local ptr { b256, u64, u64 }, __tuple_2, !2092
        v91 = load v90, !445
        v92 = get_local ptr { b256, u64, u64 }, __tuple_2_, !2093
        store v91 to v92, !2094
        v93 = get_local ptr { b256, u64, u64 }, __tuple_2_, !2095
        v94 = const u64 0
        v95 = get_elem_ptr v93, ptr b256, v94, !2096
        v96 = load v95, !445
        v97 = get_local ptr b256, offset_slot, !2097
        store v96 to v97, !2098
        v98 = get_local ptr { b256, u64, u64 }, __tuple_2_, !2099
        v99 = const u64 1
        v100 = get_elem_ptr v98, ptr u64, v99, !2100
        v101 = load v100, !445
        v102 = get_local ptr u64, number_of_slots, !2101
        v103 = get_local ptr { b256, u64, u64 }, __tuple_2_, !2102
        v104 = const u64 2
        v105 = get_elem_ptr v103, ptr u64, v104, !2103
        v106 = load v105, !445
        v107 = get_local ptr u64, place_in_slot, !2104
        v108 = get_local ptr u64, number_of_slots, !2105
        v109 = const u64 32, !595
        v110 = mul v101, v109, !2106
        br read_30_block8(v110), !2107

        read_30_block8(v111: u64):
        v112 = const u64 8
        v113 = mul v112, v111, !2108
        br read_30_alloc_42_block0(v113), !2109

        read_30_alloc_42_block0(v114: u64):
        v115 = asm(size: v114, ptr) -> u64 ptr, !2110 {
            aloc   size, !606
            move   ptr hp, !607
        }
        br read_30_block9(v115), !2111

        read_30_block9(v116: u64):
        v117 = get_local ptr u64, result_ptr, !2112
        v118 = get_local ptr b256, offset_slot, !2113
        v119 = load v118, !445
        v120 = get_local ptr u64, result_ptr, !2114
        v121 = get_local ptr u64, number_of_slots, !2115
        v122 = get_local ptr b256, key_for_storage, !2116
        store v119 to v122, !2117
        v123 = int_to_ptr v116 to ptr b256, !2118
        v124 = state_load_quad_word v123, key v122, v101, !2119
        cbr v124, read_30_block3(), read_30_block4(), !2120

        read_30_block3():
        v125 = get_local ptr { u64, ( () | b256 ) }, __anon_1, !2121
        v126 = const u64 0
        v127 = get_elem_ptr v125, ptr u64, v126, !2122
        v128 = const u64 1, !90
        store v128 to v127, !2123
        v129 = get_local ptr u64, result_ptr, !2124
        v130 = get_local ptr u64, place_in_slot, !2125
        v131 = const u64 8
        v132 = mul v131, v106, !2126
        v133 = add v116, v132, !2127
        br read_30_block10(v133), !2128

        read_30_block10(v134: u64):
        v135 = const bool true
        cbr v135, read_30_read_43_block0(), read_30_read_43_block1(), !2129

        read_30_read_43_block0():
        v136 = asm(ptr: v134) -> b256 ptr, !2130 {
        }
        br read_30_read_43_block5(v136), !2131

        read_30_read_43_block1():
        v137 = const u64 32
        v138 = const u64 1, !642
        v139 = cmp eq v137 v138, !2132
        cbr v139, read_30_read_43_block2(), read_30_read_43_block3(), !2133

        read_30_read_43_block2():
        v140 = asm(ptr: v134, val) -> b256 val, !2134 {
            lb     val ptr i0, !648
        }
        br read_30_read_43_block4(v140), !2135

        read_30_read_43_block3():
        v141 = asm(ptr: v134, val) -> b256 val, !2136 {
            lw     val ptr i0, !652
        }
        br read_30_read_43_block4(v141), !2137

        read_30_read_43_block4(v142: b256):
        br read_30_read_43_block5(v142), !2138

        read_30_read_43_block5(v143: b256):
        br read_30_block11(v143), !2139

        read_30_block11(v144: b256):
        v145 = const u64 1
        v146 = const u64 1
        v147 = get_elem_ptr v125, ptr b256, v145, v146, !2140
        store v144 to v147, !2141
        v148 = load v125, !445
        br read_30_block5(v148), !445

        read_30_block4():
        v149 = get_local ptr { u64, ( () | b256 ) }, __anon_2, !2142
        v150 = const u64 0
        v151 = get_elem_ptr v149, ptr u64, v150, !2143
        v152 = const u64 0, !90
        store v152 to v151, !2144
        v153 = load v149, !445
        br read_30_block5(v153), !445

        read_30_block5(v154: { u64, ( () | b256 ) }):
        br block0(v154), !445

        block0(v155: { u64, ( () | b256 ) }):
        v156 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !2145
        store v155 to v156, !2146
        v157 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !2147
        v158 = const u64 0
        v159 = get_elem_ptr v157, ptr u64, v158, !2148
        v160 = load v159, !666
        v161 = const u64 1, !670
        v162 = cmp eq v160 v161, !2149
        br unwrap_29_block3(v162), !2150

        unwrap_29_block3(v163: bool):
        cbr v163, unwrap_29_block0(), unwrap_29_block1(), !2151

        unwrap_29_block0():
        v164 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !2152
        v165 = const u64 1
        v166 = const u64 1
        v167 = get_elem_ptr v164, ptr b256, v165, v166, !666
        v168 = load v167, !666
        v169 = get_local ptr b256, inner_value, !2153
        store v168 to v169, !2154
        v170 = get_local ptr b256, inner_value, !2155
        v171 = load v170, !666
        br unwrap_29_block2(v171), !666

        unwrap_29_block1():
        v172 = const u64 0, !688
        revert v172, !2156

        unwrap_29_block4(v173: never):
        br unwrap_29_block2(v173), !666

        unwrap_29_block2(v174: b256):
        br block1(v174), !666

        block1(v175: b256):
        ret b256 v175
    }

    pub fn unwrap_29(self !1838: { u64, ( () | b256 ) }) -> b256, !1839 {
        local { u64, ( () | b256 ) } __matched_value_4
        local b256 inner_value

        entry(self: { u64, ( () | b256 ) }):
        v0 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !667
        store self to v0, !667
        v1 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !670
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !670
        v4 = load v3
        v5 = const u64 1, !670
        v6 = cmp eq v4 v5, !674
        br block3(v6), !674

        block3(v7: bool):
        cbr v7, block0(), block1(), !674

        block0():
        v8 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !670
        v9 = const u64 1
        v10 = const u64 1
        v11 = get_elem_ptr v8, ptr b256, v9, v10
        v12 = load v11
        v13 = get_local ptr b256, inner_value, !681
        store v12 to v13, !681
        v14 = get_local ptr b256, inner_value, !684
        v15 = load v14
        br block2(v15)

        block1():
        v16 = const u64 0, !688
        revert v16, !2157

        block4(v17: never):
        br block2(v17)

        block2(v18: b256):
        ret b256 v18
    }

    pub fn read_30(slot !2158: b256, offset !2159: u64) -> { u64, ( () | b256 ) }, !2161 {
        local { u64, ( () | b256 ) } __anon_0
        local { b256, u64, u64 } __anon_00
        local { u64, ( () | b256 ) } __anon_1
        local { u64, ( () | b256 ) } __anon_2
        local bool __matched_value_1
        local { b256, u64, u64 } __tuple_2
        local { b256, u64, u64 } __tuple_2_
        local b256 key_for_storage
        local u64 last_slot
        local u64 number_of_slots
        local u64 number_of_slots0
        local b256 offset_slot
        local mut u256 offset_slot0
        local u64 place_in_slot
        local u64 place_in_slot0
        local u64 result_ptr
        local u64 size_of_t

        entry(slot: b256, offset: u64):
        v0 = const u64 32
        v1 = const u64 0, !444
        v2 = cmp eq v0 v1, !446
        br block6(v2), !446

        block6(v3: bool):
        cbr v3, block0(), block1(), !446

        block0():
        v4 = get_local ptr { u64, ( () | b256 ) }, __anon_0, !90
        v5 = const u64 0
        v6 = get_elem_ptr v4, ptr u64, v5, !90
        v7 = const u64 0, !90
        store v7 to v6, !90
        v8 = load v4
        ret { u64, ( () | b256 ) } v8, !454

        block1():
        v9 = const unit ()
        br block2(v9)

        block2(v10: ()):
        v11 = get_local ptr u64, size_of_t, !2162
        v12 = const u64 8, !460
        v13 = mul offset, v12, !2163
        br slot_calculator_31_block6(v13), !2164

        slot_calculator_31_block6(v14: u64):
        v15 = get_local ptr u64, size_of_t, !2165
        v16 = const u64 32
        v17 = add v14, v16, !2166
        br slot_calculator_31_block7(v17), !2167

        slot_calculator_31_block7(v18: u64):
        v19 = const u64 31, !469
        v20 = add v18, v19, !2168
        br slot_calculator_31_block8(v20), !2169

        slot_calculator_31_block8(v21: u64):
        v22 = const u64 5, !473
        v23 = rsh v21, v22, !2170
        br slot_calculator_31_block9(v23), !2171

        slot_calculator_31_block9(v24: u64):
        v25 = get_local ptr u64, last_slot, !2172
        v26 = const u64 4, !479
        v27 = mod offset, v26, !2173
        br slot_calculator_31_block10(v27), !2174

        slot_calculator_31_block10(v28: u64):
        v29 = get_local ptr u64, place_in_slot0, !2175
        v30 = get_local ptr bool, __matched_value_1, !2176
        v31 = get_local ptr bool, __matched_value_1, !2177
        v32 = const bool true
        v33 = const bool true, !489
        v34 = cmp eq v32 v33, !2178
        br slot_calculator_31_block11(v34), !2179

        slot_calculator_31_block11(v35: bool):
        cbr v35, slot_calculator_31_block0(), slot_calculator_31_block1(), !2180

        slot_calculator_31_block0():
        v36 = get_local ptr u64, place_in_slot0, !2181
        v37 = const u64 8, !496
        v38 = mul v28, v37, !2182
        br slot_calculator_31_block12(v38), !2183

        slot_calculator_31_block12(v39: u64):
        v40 = get_local ptr u64, size_of_t, !2184
        v41 = add v39, v16, !2185
        br slot_calculator_31_block13(v41), !2186

        slot_calculator_31_block13(v42: u64):
        v43 = const u64 31, !505
        v44 = add v42, v43, !2187
        br slot_calculator_31_block14(v44), !2188

        slot_calculator_31_block14(v45: u64):
        v46 = const u64 5, !509
        v47 = rsh v45, v46, !2189
        br slot_calculator_31_block15(v47), !2190

        slot_calculator_31_block15(v48: u64):
        br slot_calculator_31_block5(v48), !457

        slot_calculator_31_block1():
        v49 = get_local ptr bool, __matched_value_1, !2191
        v50 = const bool false, !515
        v51 = cmp eq v32 v50, !2192
        br slot_calculator_31_block16(v51), !2193

        slot_calculator_31_block16(v52: bool):
        cbr v52, slot_calculator_31_block2(), slot_calculator_31_block3(), !2194

        slot_calculator_31_block2():
        v53 = const u64 1, !520
        br slot_calculator_31_block4(v53), !457

        slot_calculator_31_block3():
        v54 = const u64 14757395258967588866, !485
        revert v54, !2195

        slot_calculator_31_block4(v55: u64):
        br slot_calculator_31_block5(v55), !457

        slot_calculator_31_block5(v56: u64):
        v57 = get_local ptr u64, number_of_slots0, !2196
        v58 = asm(input: slot) -> u256 input, !2197 {
        }
        br slot_calculator_31_block17(v58), !2198

        slot_calculator_31_block17(v59: u256):
        v60 = get_local ptr u256, offset_slot0, !2199
        store v59 to v60, !2200
        v61 = get_local ptr u256, offset_slot0, !2201
        v62 = load v61, !457
        v63 = get_local ptr u64, last_slot, !2202
        v64 = call as_u256_40(v24), !2203
        v65 = get_local ptr u64, number_of_slots0, !2204
        v66 = call as_u256_40(v56), !2205
        v67 = sub v64, v66, !2206
        br slot_calculator_31_block18(v67), !2207

        slot_calculator_31_block18(v68: u256):
        v69 = add v62, v68, !2208
        br slot_calculator_31_block19(v69), !2209

        slot_calculator_31_block19(v70: u256):
        v71 = get_local ptr u256, offset_slot0, !2210
        store v70 to v71, !2211
        v72 = get_local ptr u256, offset_slot0, !2212
        v73 = load v72, !457
        v74 = asm(input: v73) -> b256 input, !2213 {
        }
        br slot_calculator_31_block20(v74), !2214

        slot_calculator_31_block20(v75: b256):
        v76 = get_local ptr u64, number_of_slots0, !2215
        v77 = get_local ptr u64, place_in_slot0, !2216
        v78 = get_local ptr { b256, u64, u64 }, __anon_00, !2217
        v79 = const u64 0
        v80 = get_elem_ptr v78, ptr b256, v79, !2218
        store v75 to v80, !2219
        v81 = const u64 1
        v82 = get_elem_ptr v78, ptr u64, v81, !2220
        store v56 to v82, !2221
        v83 = const u64 2
        v84 = get_elem_ptr v78, ptr u64, v83, !2222
        store v28 to v84, !2223
        v85 = load v78, !457
        br block7(v85), !457

        block7(v86: { b256, u64, u64 }):
        v87 = get_local ptr { b256, u64, u64 }, __tuple_2, !573
        store v86 to v87, !573
        v88 = get_local ptr { b256, u64, u64 }, __tuple_2, !573
        v89 = load v88
        v90 = get_local ptr { b256, u64, u64 }, __tuple_2_, !573
        store v89 to v90, !573
        v91 = get_local ptr { b256, u64, u64 }, __tuple_2_, !573
        v92 = const u64 0
        v93 = get_elem_ptr v91, ptr b256, v92, !573
        v94 = load v93
        v95 = get_local ptr b256, offset_slot, !573
        store v94 to v95, !573
        v96 = get_local ptr { b256, u64, u64 }, __tuple_2_, !573
        v97 = const u64 1
        v98 = get_elem_ptr v96, ptr u64, v97, !573
        v99 = load v98
        v100 = get_local ptr u64, number_of_slots, !573
        v101 = get_local ptr { b256, u64, u64 }, __tuple_2_, !573
        v102 = const u64 2
        v103 = get_elem_ptr v101, ptr u64, v102, !573
        v104 = load v103
        v105 = get_local ptr u64, place_in_slot, !573
        v106 = get_local ptr u64, number_of_slots, !593
        v107 = const u64 32, !595
        v108 = mul v99, v107, !596
        br block8(v108), !596

        block8(v109: u64):
        v110 = const u64 8
        v111 = mul v110, v109, !2224
        br alloc_42_block0(v111), !2225

        alloc_42_block0(v112: u64):
        v113 = asm(size: v112, ptr) -> u64 ptr, !2226 {
            aloc   size, !606
            move   ptr hp, !607
        }
        br block9(v113), !599

        block9(v114: u64):
        v115 = get_local ptr u64, result_ptr, !609
        v116 = get_local ptr b256, offset_slot, !611
        v117 = load v116
        v118 = get_local ptr u64, result_ptr, !614
        v119 = get_local ptr u64, number_of_slots, !616
        v120 = get_local ptr b256, key_for_storage, !618
        store v117 to v120, !618
        v121 = int_to_ptr v114 to ptr b256, !618
        v122 = state_load_quad_word v121, key v120, v99, !618
        cbr v122, block3(), block4(), !618

        block3():
        v123 = get_local ptr { u64, ( () | b256 ) }, __anon_1, !90
        v124 = const u64 0
        v125 = get_elem_ptr v123, ptr u64, v124, !90
        v126 = const u64 1, !90
        store v126 to v125, !90
        v127 = get_local ptr u64, result_ptr, !627
        v128 = get_local ptr u64, place_in_slot, !629
        v129 = const u64 8
        v130 = mul v129, v104, !631
        v131 = add v114, v130, !631
        br block10(v131), !631

        block10(v132: u64):
        v133 = const bool true
        cbr v133, read_43_block0(), read_43_block1(), !2227

        read_43_block0():
        v134 = asm(ptr: v132) -> b256 ptr, !2228 {
        }
        br read_43_block5(v134), !635

        read_43_block1():
        v135 = const u64 32
        v136 = const u64 1, !642
        v137 = cmp eq v135 v136, !635
        cbr v137, read_43_block2(), read_43_block3(), !2229

        read_43_block2():
        v138 = asm(ptr: v132, val) -> b256 val, !2230 {
            lb     val ptr i0, !648
        }
        br read_43_block4(v138), !635

        read_43_block3():
        v139 = asm(ptr: v132, val) -> b256 val, !2231 {
            lw     val ptr i0, !652
        }
        br read_43_block4(v139), !635

        read_43_block4(v140: b256):
        br read_43_block5(v140), !635

        read_43_block5(v141: b256):
        br block11(v141), !635

        block11(v142: b256):
        v143 = const u64 1
        v144 = const u64 1
        v145 = get_elem_ptr v123, ptr b256, v143, v144, !90
        store v142 to v145, !90
        v146 = load v123
        br block5(v146)

        block4():
        v147 = get_local ptr { u64, ( () | b256 ) }, __anon_2, !90
        v148 = const u64 0
        v149 = get_elem_ptr v147, ptr u64, v148, !90
        v150 = const u64 0, !90
        store v150 to v149, !90
        v151 = load v147
        br block5(v151)

        block5(v152: { u64, ( () | b256 ) }):
        ret { u64, ( () | b256 ) } v152
    }

    fn slot_calculator_31(slot !2232: b256, offset !2233: u64) -> { b256, u64, u64 }, !2234 {
        local { b256, u64, u64 } __anon_0
        local bool __matched_value_1
        local u64 last_slot
        local u64 number_of_slots
        local mut u256 offset_slot
        local u64 place_in_slot
        local u64 size_of_t

        entry(slot: b256, offset: u64):
        v0 = get_local ptr u64, size_of_t, !458
        v1 = const u64 8, !460
        v2 = mul offset, v1, !461
        br block6(v2), !461

        block6(v3: u64):
        v4 = get_local ptr u64, size_of_t, !464
        v5 = const u64 32
        v6 = add v3, v5, !466
        br block7(v6), !466

        block7(v7: u64):
        v8 = const u64 31, !469
        v9 = add v7, v8, !470
        br block8(v9), !470

        block8(v10: u64):
        v11 = const u64 5, !473
        v12 = rsh v10, v11, !474
        br block9(v12), !474

        block9(v13: u64):
        v14 = get_local ptr u64, last_slot, !477
        v15 = const u64 4, !479
        v16 = mod offset, v15, !480
        br block10(v16), !480

        block10(v17: u64):
        v18 = get_local ptr u64, place_in_slot, !483
        v19 = get_local ptr bool, __matched_value_1, !485
        v20 = get_local ptr bool, __matched_value_1, !487
        v21 = const bool true
        v22 = const bool true, !489
        v23 = cmp eq v21 v22, !490
        br block11(v23), !490

        block11(v24: bool):
        cbr v24, block0(), block1(), !490

        block0():
        v25 = get_local ptr u64, place_in_slot, !494
        v26 = const u64 8, !496
        v27 = mul v17, v26, !497
        br block12(v27), !497

        block12(v28: u64):
        v29 = get_local ptr u64, size_of_t, !500
        v30 = add v28, v5, !502
        br block13(v30), !502

        block13(v31: u64):
        v32 = const u64 31, !505
        v33 = add v31, v32, !506
        br block14(v33), !506

        block14(v34: u64):
        v35 = const u64 5, !509
        v36 = rsh v34, v35, !510
        br block15(v36), !510

        block15(v37: u64):
        br block5(v37)

        block1():
        v38 = get_local ptr bool, __matched_value_1, !487
        v39 = const bool false, !515
        v40 = cmp eq v21 v39, !516
        br block16(v40), !516

        block16(v41: bool):
        cbr v41, block2(), block3(), !516

        block2():
        v42 = const u64 1, !520
        br block4(v42)

        block3():
        v43 = const u64 14757395258967588866, !485
        revert v43, !485

        block4(v44: u64):
        br block5(v44)

        block5(v45: u64):
        v46 = get_local ptr u64, number_of_slots, !524
        v47 = asm(input: slot) -> u256 input, !2235 {
        }
        br block17(v47), !526

        block17(v48: u256):
        v49 = get_local ptr u256, offset_slot, !530
        store v48 to v49, !530
        v50 = get_local ptr u256, offset_slot, !533
        v51 = load v50
        v52 = get_local ptr u64, last_slot, !536
        v53 = call as_u256_40(v13), !538
        v54 = get_local ptr u64, number_of_slots, !540
        v55 = call as_u256_40(v45), !542
        v56 = sub v53, v55, !544
        br block18(v56), !544

        block18(v57: u256):
        v58 = add v51, v57, !547
        br block19(v58), !547

        block19(v59: u256):
        v60 = get_local ptr u256, offset_slot, !547
        store v59 to v60, !547
        v61 = get_local ptr u256, offset_slot, !552
        v62 = load v61
        v63 = asm(input: v62) -> b256 input, !2236 {
        }
        br block20(v63), !555

        block20(v64: b256):
        v65 = get_local ptr u64, number_of_slots, !559
        v66 = get_local ptr u64, place_in_slot, !561
        v67 = get_local ptr { b256, u64, u64 }, __anon_0, !563
        v68 = const u64 0
        v69 = get_elem_ptr v67, ptr b256, v68, !563
        store v64 to v69, !563
        v70 = const u64 1
        v71 = get_elem_ptr v67, ptr u64, v70, !563
        store v45 to v71, !563
        v72 = const u64 2
        v73 = get_elem_ptr v67, ptr u64, v72, !563
        store v17 to v73, !563
        v74 = load v67
        ret { b256, u64, u64 } v74
    }

    pub fn rsh_32(self !2237: u64, other !2238: u64) -> u64, !2239 {
        entry(self: u64, other: u64):
        v0 = rsh self, other
        ret u64 v0
    }

    pub fn add_33(self !2240: u64, other !2241: u64) -> u64, !2242 {
        entry(self: u64, other: u64):
        v0 = add self, other
        ret u64 v0
    }

    pub fn multiply_34(self !2243: u64, other !2244: u64) -> u64, !2245 {
        entry(self: u64, other: u64):
        v0 = mul self, other
        ret u64 v0
    }

    pub fn modulo_35(self !2246: u64, other !2247: u64) -> u64, !2248 {
        entry(self: u64, other: u64):
        v0 = mod self, other
        ret u64 v0
    }

    pub fn eq_36(self !2249: bool, other !2250: bool) -> bool, !2251 {
        entry(self: bool, other: bool):
        v0 = cmp eq self other
        ret bool v0
    }

    pub fn as_u256_37(self !2252: b256) -> u256, !2253 {
        entry(self: b256):
        v0 = asm(input: self) -> u256 input, !527 {
        }
        ret u256 v0
    }

    pub fn add_38(self !2254: u256, other !2255: u256) -> u256, !2256 {
        entry(self: u256, other: u256):
        v0 = add self, other
        ret u256 v0
    }

    pub fn subtract_39(self !2257: u256, other !2258: u256) -> u256, !2259 {
        entry(self: u256, other: u256):
        v0 = sub self, other
        ret u256 v0
    }

    pub fn as_u256_40(self !2260: u64) -> u256, !2261 {
        local { u64, u64, u64, u64 } __anon_0
        local { u64, u64, u64, u64 } input

        entry(self: u64):
        v0 = get_local ptr { u64, u64, u64, u64 }, __anon_0, !2262
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr u64, v1, !2262
        v3 = const u64 0, !2263
        store v3 to v2, !2262
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4, !2262
        v6 = const u64 0, !2264
        store v6 to v5, !2262
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr u64, v7, !2262
        v9 = const u64 0, !2265
        store v9 to v8, !2262
        v10 = const u64 3
        v11 = get_elem_ptr v0, ptr u64, v10, !2262
        store self to v11, !2262
        v12 = load v0
        v13 = get_local ptr { u64, u64, u64, u64 }, input, !2266
        store v12 to v13, !2266
        v14 = get_local ptr { u64, u64, u64, u64 }, input, !2267
        v15 = asm(input: v14) -> u256 input, !2268 {
        }
        ret u256 v15
    }

    pub fn as_b256_41(self !2269: u256) -> b256, !2270 {
        entry(self: u256):
        v0 = asm(input: self) -> b256 input, !556 {
        }
        ret b256 v0
    }

    pub fn alloc_42(count !2271: u64) -> u64, !2272 {
        entry(count: u64):
        v0 = const u64 8
        v1 = mul v0, count, !601
        br block0(v1), !601

        block0(v2: u64):
        v3 = asm(size: v2, ptr) -> u64 ptr, !604 {
            aloc   size, !606
            move   ptr hp, !607
        }
        ret u64 v3
    }

    pub fn read_43(self !2273: u64) -> b256, !2274 {
        entry(self: u64):
        v0 = const bool true
        cbr v0, block0(), block1(), !637

        block0():
        v1 = asm(ptr: self) -> b256 ptr, !639 {
        }
        br block5(v1)

        block1():
        v2 = const u64 32
        v3 = const u64 1, !642
        v4 = cmp eq v2 v3
        cbr v4, block2(), block3(), !644

        block2():
        v5 = asm(ptr: self, val) -> b256 val, !646 {
            lb     val ptr i0, !648
        }
        br block4(v5)

        block3():
        v6 = asm(ptr: self, val) -> b256 val, !650 {
            lw     val ptr i0, !652
        }
        br block4(v6)

        block4(v7: b256):
        br block5(v7)

        block5(v8: b256):
        ret b256 v8
    }

    pub fn add_44(self !2275: u64, count !2276: u64) -> u64, !2277 {
        entry(self: u64, count: u64):
        v0 = const u64 8
        v1 = mul v0, count
        v2 = add self, v1
        ret u64 v2
    }

    pub fn slot_45(self !2279: { b256, u64, b256 }) -> b256, !2280 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !2281
        v4 = load v3
        ret b256 v4
    }

    pub fn offset_46(self !2282: { b256, u64, b256 }) -> u64, !2283 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 1
        v3 = get_elem_ptr v1, ptr u64, v2, !2284
        v4 = load v3
        ret u64 v4
    }

    pub fn write_47(self !2285: { b256, u64, b256 }, value !2286: u64) -> (), !2288 {
        local bool _
        local bool __
        local { b256, u64, u64 } __anon_0
        local bool __matched_value_1
        local { b256, u64, u64 } __tuple_1
        local { b256, u64, u64 } __tuple_1_
        local b256 key_for_storage
        local b256 key_for_storage_
        local u64 last_slot
        local u64 number_of_slots
        local u64 number_of_slots0
        local b256 offset_slot
        local mut u256 offset_slot0
        local u64 padded_value
        local u64 place_in_slot
        local u64 place_in_slot0
        local u64 size_of_t

        entry(self: { b256, u64, b256 }, value: u64):
        v0 = call slot_51(self), !811
        v1 = call offset_46(self), !813
        v2 = const u64 8
        v3 = const u64 0, !815
        v4 = cmp eq v2 v3, !2289
        br write_48_block3(v4), !2290

        write_48_block3(v5: bool):
        cbr v5, write_48_block0(), write_48_block1(), !2291

        write_48_block0():
        v6 = const unit (), !821
        br block0(v6), !2292

        write_48_block1():
        v7 = const unit ()
        br write_48_block2(v7), !816

        write_48_block2(v8: ()):
        v9 = get_local ptr u64, size_of_t, !2293
        v10 = const u64 8, !460
        v11 = mul v1, v10, !2294
        br write_48_slot_calculator_49_block6(v11), !2295

        write_48_slot_calculator_49_block6(v12: u64):
        v13 = get_local ptr u64, size_of_t, !2296
        v14 = const u64 8
        v15 = add v12, v14, !2297
        br write_48_slot_calculator_49_block7(v15), !2298

        write_48_slot_calculator_49_block7(v16: u64):
        v17 = const u64 31, !469
        v18 = add v16, v17, !2299
        br write_48_slot_calculator_49_block8(v18), !2300

        write_48_slot_calculator_49_block8(v19: u64):
        v20 = const u64 5, !473
        v21 = rsh v19, v20, !2301
        br write_48_slot_calculator_49_block9(v21), !2302

        write_48_slot_calculator_49_block9(v22: u64):
        v23 = get_local ptr u64, last_slot, !2303
        v24 = const u64 4, !479
        v25 = mod v1, v24, !2304
        br write_48_slot_calculator_49_block10(v25), !2305

        write_48_slot_calculator_49_block10(v26: u64):
        v27 = get_local ptr u64, place_in_slot0, !2306
        v28 = get_local ptr bool, __matched_value_1, !2307
        v29 = get_local ptr bool, __matched_value_1, !2308
        v30 = const bool false
        v31 = const bool true, !489
        v32 = cmp eq v30 v31, !2309
        br write_48_slot_calculator_49_block11(v32), !2310

        write_48_slot_calculator_49_block11(v33: bool):
        cbr v33, write_48_slot_calculator_49_block0(), write_48_slot_calculator_49_block1(), !2311

        write_48_slot_calculator_49_block0():
        v34 = get_local ptr u64, place_in_slot0, !2312
        v35 = const u64 8, !496
        v36 = mul v26, v35, !2313
        br write_48_slot_calculator_49_block12(v36), !2314

        write_48_slot_calculator_49_block12(v37: u64):
        v38 = get_local ptr u64, size_of_t, !2315
        v39 = add v37, v14, !2316
        br write_48_slot_calculator_49_block13(v39), !2317

        write_48_slot_calculator_49_block13(v40: u64):
        v41 = const u64 31, !505
        v42 = add v40, v41, !2318
        br write_48_slot_calculator_49_block14(v42), !2319

        write_48_slot_calculator_49_block14(v43: u64):
        v44 = const u64 5, !509
        v45 = rsh v43, v44, !2320
        br write_48_slot_calculator_49_block15(v45), !2321

        write_48_slot_calculator_49_block15(v46: u64):
        br write_48_slot_calculator_49_block5(v46), !2322

        write_48_slot_calculator_49_block1():
        v47 = get_local ptr bool, __matched_value_1, !2323
        v48 = const bool false, !515
        v49 = cmp eq v30 v48, !2324
        br write_48_slot_calculator_49_block16(v49), !2325

        write_48_slot_calculator_49_block16(v50: bool):
        cbr v50, write_48_slot_calculator_49_block2(), write_48_slot_calculator_49_block3(), !2326

        write_48_slot_calculator_49_block2():
        v51 = const u64 1, !520
        br write_48_slot_calculator_49_block4(v51), !2327

        write_48_slot_calculator_49_block3():
        v52 = const u64 14757395258967588866, !485
        revert v52, !2328

        write_48_slot_calculator_49_block4(v53: u64):
        br write_48_slot_calculator_49_block5(v53), !2329

        write_48_slot_calculator_49_block5(v54: u64):
        v55 = get_local ptr u64, number_of_slots0, !2330
        v56 = asm(input: v0) -> u256 input, !2331 {
        }
        br write_48_slot_calculator_49_block17(v56), !2332

        write_48_slot_calculator_49_block17(v57: u256):
        v58 = get_local ptr u256, offset_slot0, !2333
        store v57 to v58, !2334
        v59 = get_local ptr u256, offset_slot0, !2335
        v60 = load v59, !2336
        v61 = get_local ptr u64, last_slot, !2337
        v62 = call as_u256_40(v22), !2338
        v63 = get_local ptr u64, number_of_slots0, !2339
        v64 = call as_u256_40(v54), !2340
        v65 = sub v62, v64, !2341
        br write_48_slot_calculator_49_block18(v65), !2342

        write_48_slot_calculator_49_block18(v66: u256):
        v67 = add v60, v66, !2343
        br write_48_slot_calculator_49_block19(v67), !2344

        write_48_slot_calculator_49_block19(v68: u256):
        v69 = get_local ptr u256, offset_slot0, !2345
        store v68 to v69, !2346
        v70 = get_local ptr u256, offset_slot0, !2347
        v71 = load v70, !2348
        v72 = asm(input: v71) -> b256 input, !2349 {
        }
        br write_48_slot_calculator_49_block20(v72), !2350

        write_48_slot_calculator_49_block20(v73: b256):
        v74 = get_local ptr u64, number_of_slots0, !2351
        v75 = get_local ptr u64, place_in_slot0, !2352
        v76 = get_local ptr { b256, u64, u64 }, __anon_0, !2353
        v77 = const u64 0
        v78 = get_elem_ptr v76, ptr b256, v77, !2354
        store v73 to v78, !2355
        v79 = const u64 1
        v80 = get_elem_ptr v76, ptr u64, v79, !2356
        store v54 to v80, !2357
        v81 = const u64 2
        v82 = get_elem_ptr v76, ptr u64, v81, !2358
        store v26 to v82, !2359
        v83 = load v76, !2360
        br write_48_block4(v83), !2361

        write_48_block4(v84: { b256, u64, u64 }):
        v85 = get_local ptr { b256, u64, u64 }, __tuple_1, !2362
        store v84 to v85, !2363
        v86 = get_local ptr { b256, u64, u64 }, __tuple_1, !2364
        v87 = load v86, !816
        v88 = get_local ptr { b256, u64, u64 }, __tuple_1_, !2365
        store v87 to v88, !2366
        v89 = get_local ptr { b256, u64, u64 }, __tuple_1_, !2367
        v90 = const u64 0
        v91 = get_elem_ptr v89, ptr b256, v90, !2368
        v92 = load v91, !816
        v93 = get_local ptr b256, offset_slot, !2369
        store v92 to v93, !2370
        v94 = get_local ptr { b256, u64, u64 }, __tuple_1_, !2371
        v95 = const u64 1
        v96 = get_elem_ptr v94, ptr u64, v95, !2372
        v97 = load v96, !816
        v98 = get_local ptr u64, number_of_slots, !2373
        v99 = get_local ptr { b256, u64, u64 }, __tuple_1_, !2374
        v100 = const u64 2
        v101 = get_elem_ptr v99, ptr u64, v100, !2375
        v102 = load v101, !816
        v103 = get_local ptr u64, place_in_slot, !2376
        v104 = get_local ptr u64, number_of_slots, !2377
        v105 = const u64 32, !916
        v106 = mul v97, v105, !2378
        br write_48_block5(v106), !2379

        write_48_block5(v107: u64):
        v108 = const u64 8
        v109 = mul v108, v107, !2380
        br write_48_alloc_42_block0(v109), !2381

        write_48_alloc_42_block0(v110: u64):
        v111 = asm(size: v110, ptr) -> u64 ptr, !2382 {
            aloc   size, !606
            move   ptr hp, !607
        }
        br write_48_block6(v111), !2383

        write_48_block6(v112: u64):
        v113 = get_local ptr u64, padded_value, !2384
        v114 = get_local ptr b256, offset_slot, !2385
        v115 = load v114, !816
        v116 = get_local ptr u64, padded_value, !2386
        v117 = get_local ptr u64, number_of_slots, !2387
        v118 = get_local ptr b256, key_for_storage, !2388
        store v115 to v118, !2389
        v119 = int_to_ptr v112 to ptr b256, !2390
        v120 = state_load_quad_word v119, key v118, v97, !2391
        v121 = get_local ptr bool, _, !2392
        v122 = get_local ptr u64, padded_value, !2393
        v123 = get_local ptr u64, place_in_slot, !2394
        v124 = const u64 8
        v125 = mul v124, v102, !2395
        v126 = add v112, v125, !2396
        br write_48_block7(v126), !2397

        write_48_block7(v127: u64):
        v128 = const bool false
        cbr v128, write_48_write_50_block0(), write_48_write_50_block1(), !2398

        write_48_write_50_block0():
        v129 = const u64 8
        v130 = asm(dst: v127, src: value, count: v129) {
            mcp    dst src count, !952
        }
        v131 = const unit ()
        br write_48_write_50_block5(v131), !2399

        write_48_write_50_block1():
        v132 = const u64 8
        v133 = const u64 1, !954
        v134 = cmp eq v132 v133, !2400
        cbr v134, write_48_write_50_block2(), write_48_write_50_block3(), !2401

        write_48_write_50_block2():
        v135 = asm(ptr: v127, val: value) {
            sb     ptr val i0, !958
        }
        v136 = const unit ()
        br write_48_write_50_block4(v136), !2402

        write_48_write_50_block3():
        v137 = asm(ptr: v127, val: value) {
            sw     ptr val i0, !960
        }
        v138 = const unit ()
        br write_48_write_50_block4(v138), !2403

        write_48_write_50_block4(v139: ()):
        br write_48_write_50_block5(v139), !2404

        write_48_write_50_block5(v140: ()):
        v141 = const unit ()
        br write_48_block8(v141), !2405

        write_48_block8(v142: ()):
        v143 = get_local ptr b256, offset_slot, !2406
        v144 = load v143, !816
        v145 = get_local ptr u64, padded_value, !2407
        v146 = get_local ptr u64, number_of_slots, !2408
        v147 = get_local ptr b256, key_for_storage_, !2409
        store v144 to v147, !2410
        v148 = int_to_ptr v112 to ptr b256, !2411
        v149 = state_store_quad_word v148, key v147, v97, !2412
        v150 = get_local ptr bool, __, !2413
        v151 = const unit ()
        br block0(v151), !816

        block0(v152: ()):
        v153 = const unit ()
        ret () v153
    }

    pub fn write_48(slot !2414: b256, offset !2415: u64, value !2416: u64) -> (), !2418 {
        local bool _
        local bool __
        local { b256, u64, u64 } __anon_0
        local bool __matched_value_1
        local { b256, u64, u64 } __tuple_1
        local { b256, u64, u64 } __tuple_1_
        local b256 key_for_storage
        local b256 key_for_storage_
        local u64 last_slot
        local u64 number_of_slots
        local u64 number_of_slots0
        local b256 offset_slot
        local mut u256 offset_slot0
        local u64 padded_value
        local u64 place_in_slot
        local u64 place_in_slot0
        local u64 size_of_t

        entry(slot: b256, offset: u64, value: u64):
        v0 = const u64 8
        v1 = const u64 0, !815
        v2 = cmp eq v0 v1, !817
        br block3(v2), !817

        block3(v3: bool):
        cbr v3, block0(), block1(), !817

        block0():
        v4 = const unit (), !821
        ret () v4, !821

        block1():
        v5 = const unit ()
        br block2(v5)

        block2(v6: ()):
        v7 = get_local ptr u64, size_of_t, !2419
        v8 = const u64 8, !460
        v9 = mul offset, v8, !2420
        br slot_calculator_49_block6(v9), !2421

        slot_calculator_49_block6(v10: u64):
        v11 = get_local ptr u64, size_of_t, !2422
        v12 = const u64 8
        v13 = add v10, v12, !2423
        br slot_calculator_49_block7(v13), !2424

        slot_calculator_49_block7(v14: u64):
        v15 = const u64 31, !469
        v16 = add v14, v15, !2425
        br slot_calculator_49_block8(v16), !2426

        slot_calculator_49_block8(v17: u64):
        v18 = const u64 5, !473
        v19 = rsh v17, v18, !2427
        br slot_calculator_49_block9(v19), !2428

        slot_calculator_49_block9(v20: u64):
        v21 = get_local ptr u64, last_slot, !2429
        v22 = const u64 4, !479
        v23 = mod offset, v22, !2430
        br slot_calculator_49_block10(v23), !2431

        slot_calculator_49_block10(v24: u64):
        v25 = get_local ptr u64, place_in_slot0, !2432
        v26 = get_local ptr bool, __matched_value_1, !2433
        v27 = get_local ptr bool, __matched_value_1, !2434
        v28 = const bool false
        v29 = const bool true, !489
        v30 = cmp eq v28 v29, !2435
        br slot_calculator_49_block11(v30), !2436

        slot_calculator_49_block11(v31: bool):
        cbr v31, slot_calculator_49_block0(), slot_calculator_49_block1(), !2437

        slot_calculator_49_block0():
        v32 = get_local ptr u64, place_in_slot0, !2438
        v33 = const u64 8, !496
        v34 = mul v24, v33, !2439
        br slot_calculator_49_block12(v34), !2440

        slot_calculator_49_block12(v35: u64):
        v36 = get_local ptr u64, size_of_t, !2441
        v37 = add v35, v12, !2442
        br slot_calculator_49_block13(v37), !2443

        slot_calculator_49_block13(v38: u64):
        v39 = const u64 31, !505
        v40 = add v38, v39, !2444
        br slot_calculator_49_block14(v40), !2445

        slot_calculator_49_block14(v41: u64):
        v42 = const u64 5, !509
        v43 = rsh v41, v42, !2446
        br slot_calculator_49_block15(v43), !2447

        slot_calculator_49_block15(v44: u64):
        br slot_calculator_49_block5(v44), !824

        slot_calculator_49_block1():
        v45 = get_local ptr bool, __matched_value_1, !2448
        v46 = const bool false, !515
        v47 = cmp eq v28 v46, !2449
        br slot_calculator_49_block16(v47), !2450

        slot_calculator_49_block16(v48: bool):
        cbr v48, slot_calculator_49_block2(), slot_calculator_49_block3(), !2451

        slot_calculator_49_block2():
        v49 = const u64 1, !520
        br slot_calculator_49_block4(v49), !824

        slot_calculator_49_block3():
        v50 = const u64 14757395258967588866, !485
        revert v50, !2452

        slot_calculator_49_block4(v51: u64):
        br slot_calculator_49_block5(v51), !824

        slot_calculator_49_block5(v52: u64):
        v53 = get_local ptr u64, number_of_slots0, !2453
        v54 = asm(input: slot) -> u256 input, !2454 {
        }
        br slot_calculator_49_block17(v54), !2455

        slot_calculator_49_block17(v55: u256):
        v56 = get_local ptr u256, offset_slot0, !2456
        store v55 to v56, !2457
        v57 = get_local ptr u256, offset_slot0, !2458
        v58 = load v57, !824
        v59 = get_local ptr u64, last_slot, !2459
        v60 = call as_u256_40(v20), !2460
        v61 = get_local ptr u64, number_of_slots0, !2461
        v62 = call as_u256_40(v52), !2462
        v63 = sub v60, v62, !2463
        br slot_calculator_49_block18(v63), !2464

        slot_calculator_49_block18(v64: u256):
        v65 = add v58, v64, !2465
        br slot_calculator_49_block19(v65), !2466

        slot_calculator_49_block19(v66: u256):
        v67 = get_local ptr u256, offset_slot0, !2467
        store v66 to v67, !2468
        v68 = get_local ptr u256, offset_slot0, !2469
        v69 = load v68, !824
        v70 = asm(input: v69) -> b256 input, !2470 {
        }
        br slot_calculator_49_block20(v70), !2471

        slot_calculator_49_block20(v71: b256):
        v72 = get_local ptr u64, number_of_slots0, !2472
        v73 = get_local ptr u64, place_in_slot0, !2473
        v74 = get_local ptr { b256, u64, u64 }, __anon_0, !2474
        v75 = const u64 0
        v76 = get_elem_ptr v74, ptr b256, v75, !2475
        store v71 to v76, !2476
        v77 = const u64 1
        v78 = get_elem_ptr v74, ptr u64, v77, !2477
        store v52 to v78, !2478
        v79 = const u64 2
        v80 = get_elem_ptr v74, ptr u64, v79, !2479
        store v24 to v80, !2480
        v81 = load v74, !824
        br block4(v81), !824

        block4(v82: { b256, u64, u64 }):
        v83 = get_local ptr { b256, u64, u64 }, __tuple_1, !894
        store v82 to v83, !894
        v84 = get_local ptr { b256, u64, u64 }, __tuple_1, !894
        v85 = load v84
        v86 = get_local ptr { b256, u64, u64 }, __tuple_1_, !894
        store v85 to v86, !894
        v87 = get_local ptr { b256, u64, u64 }, __tuple_1_, !894
        v88 = const u64 0
        v89 = get_elem_ptr v87, ptr b256, v88, !894
        v90 = load v89
        v91 = get_local ptr b256, offset_slot, !894
        store v90 to v91, !894
        v92 = get_local ptr { b256, u64, u64 }, __tuple_1_, !894
        v93 = const u64 1
        v94 = get_elem_ptr v92, ptr u64, v93, !894
        v95 = load v94
        v96 = get_local ptr u64, number_of_slots, !894
        v97 = get_local ptr { b256, u64, u64 }, __tuple_1_, !894
        v98 = const u64 2
        v99 = get_elem_ptr v97, ptr u64, v98, !894
        v100 = load v99
        v101 = get_local ptr u64, place_in_slot, !894
        v102 = get_local ptr u64, number_of_slots, !914
        v103 = const u64 32, !916
        v104 = mul v95, v103, !917
        br block5(v104), !917

        block5(v105: u64):
        v106 = const u64 8
        v107 = mul v106, v105, !2481
        br alloc_42_block0(v107), !2482

        alloc_42_block0(v108: u64):
        v109 = asm(size: v108, ptr) -> u64 ptr, !2483 {
            aloc   size, !606
            move   ptr hp, !607
        }
        br block6(v109), !920

        block6(v110: u64):
        v111 = get_local ptr u64, padded_value, !925
        v112 = get_local ptr b256, offset_slot, !927
        v113 = load v112
        v114 = get_local ptr u64, padded_value, !930
        v115 = get_local ptr u64, number_of_slots, !932
        v116 = get_local ptr b256, key_for_storage, !934
        store v113 to v116, !934
        v117 = int_to_ptr v110 to ptr b256, !934
        v118 = state_load_quad_word v117, key v116, v95, !934
        v119 = get_local ptr bool, _, !939
        v120 = get_local ptr u64, padded_value, !941
        v121 = get_local ptr u64, place_in_slot, !943
        v122 = const u64 8
        v123 = mul v122, v100, !945
        v124 = add v110, v123, !945
        br block7(v124), !945

        block7(v125: u64):
        v126 = const bool false
        cbr v126, write_50_block0(), write_50_block1(), !2484

        write_50_block0():
        v127 = const u64 8
        v128 = asm(dst: v125, src: value, count: v127) {
            mcp    dst src count, !952
        }
        v129 = const unit ()
        br write_50_block5(v129), !949

        write_50_block1():
        v130 = const u64 8
        v131 = const u64 1, !954
        v132 = cmp eq v130 v131, !949
        cbr v132, write_50_block2(), write_50_block3(), !2485

        write_50_block2():
        v133 = asm(ptr: v125, val: value) {
            sb     ptr val i0, !958
        }
        v134 = const unit ()
        br write_50_block4(v134), !949

        write_50_block3():
        v135 = asm(ptr: v125, val: value) {
            sw     ptr val i0, !960
        }
        v136 = const unit ()
        br write_50_block4(v136), !949

        write_50_block4(v137: ()):
        br write_50_block5(v137), !949

        write_50_block5(v138: ()):
        v139 = const unit ()
        br block8(v139), !949

        block8(v140: ()):
        v141 = get_local ptr b256, offset_slot, !964
        v142 = load v141
        v143 = get_local ptr u64, padded_value, !967
        v144 = get_local ptr u64, number_of_slots, !969
        v145 = get_local ptr b256, key_for_storage_, !971
        store v142 to v145, !971
        v146 = int_to_ptr v110 to ptr b256, !971
        v147 = state_store_quad_word v146, key v145, v95, !971
        v148 = get_local ptr bool, __, !976
        v149 = const unit ()
        ret () v149
    }

    fn slot_calculator_49(slot !2232: b256, offset !2233: u64) -> { b256, u64, u64 }, !2234 {
        local { b256, u64, u64 } __anon_0
        local bool __matched_value_1
        local u64 last_slot
        local u64 number_of_slots
        local mut u256 offset_slot
        local u64 place_in_slot
        local u64 size_of_t

        entry(slot: b256, offset: u64):
        v0 = get_local ptr u64, size_of_t, !458
        v1 = const u64 8, !460
        v2 = mul offset, v1, !461
        br block6(v2), !461

        block6(v3: u64):
        v4 = get_local ptr u64, size_of_t, !464
        v5 = const u64 8
        v6 = add v3, v5, !466
        br block7(v6), !466

        block7(v7: u64):
        v8 = const u64 31, !469
        v9 = add v7, v8, !470
        br block8(v9), !470

        block8(v10: u64):
        v11 = const u64 5, !473
        v12 = rsh v10, v11, !474
        br block9(v12), !474

        block9(v13: u64):
        v14 = get_local ptr u64, last_slot, !477
        v15 = const u64 4, !479
        v16 = mod offset, v15, !480
        br block10(v16), !480

        block10(v17: u64):
        v18 = get_local ptr u64, place_in_slot, !483
        v19 = get_local ptr bool, __matched_value_1, !485
        v20 = get_local ptr bool, __matched_value_1, !487
        v21 = const bool false
        v22 = const bool true, !489
        v23 = cmp eq v21 v22, !490
        br block11(v23), !490

        block11(v24: bool):
        cbr v24, block0(), block1(), !490

        block0():
        v25 = get_local ptr u64, place_in_slot, !494
        v26 = const u64 8, !496
        v27 = mul v17, v26, !497
        br block12(v27), !497

        block12(v28: u64):
        v29 = get_local ptr u64, size_of_t, !500
        v30 = add v28, v5, !502
        br block13(v30), !502

        block13(v31: u64):
        v32 = const u64 31, !505
        v33 = add v31, v32, !506
        br block14(v33), !506

        block14(v34: u64):
        v35 = const u64 5, !509
        v36 = rsh v34, v35, !510
        br block15(v36), !510

        block15(v37: u64):
        br block5(v37)

        block1():
        v38 = get_local ptr bool, __matched_value_1, !487
        v39 = const bool false, !515
        v40 = cmp eq v21 v39, !516
        br block16(v40), !516

        block16(v41: bool):
        cbr v41, block2(), block3(), !516

        block2():
        v42 = const u64 1, !520
        br block4(v42)

        block3():
        v43 = const u64 14757395258967588866, !485
        revert v43, !485

        block4(v44: u64):
        br block5(v44)

        block5(v45: u64):
        v46 = get_local ptr u64, number_of_slots, !524
        v47 = asm(input: slot) -> u256 input, !2486 {
        }
        br block17(v47), !526

        block17(v48: u256):
        v49 = get_local ptr u256, offset_slot, !530
        store v48 to v49, !530
        v50 = get_local ptr u256, offset_slot, !533
        v51 = load v50
        v52 = get_local ptr u64, last_slot, !536
        v53 = call as_u256_40(v13), !538
        v54 = get_local ptr u64, number_of_slots, !540
        v55 = call as_u256_40(v45), !542
        v56 = sub v53, v55, !544
        br block18(v56), !544

        block18(v57: u256):
        v58 = add v51, v57, !547
        br block19(v58), !547

        block19(v59: u256):
        v60 = get_local ptr u256, offset_slot, !547
        store v59 to v60, !547
        v61 = get_local ptr u256, offset_slot, !552
        v62 = load v61
        v63 = asm(input: v62) -> b256 input, !2487 {
        }
        br block20(v63), !555

        block20(v64: b256):
        v65 = get_local ptr u64, number_of_slots, !559
        v66 = get_local ptr u64, place_in_slot, !561
        v67 = get_local ptr { b256, u64, u64 }, __anon_0, !563
        v68 = const u64 0
        v69 = get_elem_ptr v67, ptr b256, v68, !563
        store v64 to v69, !563
        v70 = const u64 1
        v71 = get_elem_ptr v67, ptr u64, v70, !563
        store v45 to v71, !563
        v72 = const u64 2
        v73 = get_elem_ptr v67, ptr u64, v72, !563
        store v17 to v73, !563
        v74 = load v67
        ret { b256, u64, u64 } v74
    }

    pub fn write_50(self !2488: u64, val !2489: u64) -> (), !2490 {
        entry(self: u64, val: u64):
        v0 = const bool false
        cbr v0, block0(), block1(), !950

        block0():
        v1 = const u64 8
        v2 = asm(dst: self, src: val, count: v1) {
            mcp    dst src count, !952
        }
        v3 = const unit ()
        br block5(v3)

        block1():
        v4 = const u64 8
        v5 = const u64 1, !954
        v6 = cmp eq v4 v5
        cbr v6, block2(), block3(), !956

        block2():
        v7 = asm(ptr: self, val: val) {
            sb     ptr val i0, !958
        }
        v8 = const unit ()
        br block4(v8)

        block3():
        v9 = asm(ptr: self, val: val) {
            sw     ptr val i0, !960
        }
        v10 = const unit ()
        br block4(v10)

        block4(v11: ()):
        br block5(v11)

        block5(v12: ()):
        v13 = const unit ()
        ret () v13
    }

    pub fn slot_51(self !2279: { b256, u64, b256 }) -> b256, !2280 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !2281
        v4 = load v3
        ret b256 v4
    }

    pub fn offset_52(self !2282: { b256, u64, b256 }) -> u64, !2283 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 1
        v3 = get_elem_ptr v1, ptr u64, v2, !2284
        v4 = load v3
        ret u64 v4
    }
}

// IR: [simplify-cfg] Simplify the control flow graph (CFG)
contract {
    pub entry fn set_data_if_owner<c626c6e2>(new_value !1: u64) -> (), !4 {
        local bool _
        local bool __
        local { b256, u64, b256 } __anon_0
        local { u64, ( { b256 } | { b256 } ) } __anon_00
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_000
        local { u64, ( () | { b256 } ) } __anon_0000
        local { u64 } __anon_00000
        local { b256, u64, u64 } __anon_0001
        local { u64, ( () | b256 ) } __anon_001
        local { u64, ( () | { b256 } ) } __anon_01
        local { b256, u64, b256 } __anon_02
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __anon_03
        local { b256, u64, u64 } __anon_04
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_1
        local { u64, ( { b256 } | { u64 } ) } __anon_10
        local { u64 } __anon_100
        local { u64, ( () | { b256 } ) } __anon_11
        local { u64, ( () | b256 ) } __anon_12
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64 } __anon_20
        local { u64, ( () | b256 ) } __anon_21
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { u64 } ) } __anon_30
        local { u64, ( { b256 } | { b256 } ) } __anon_4
        local { u64, ( { b256 } | { u64 } ) } __anon_40
        local { u64 } __anon_5
        local { u64, ( { b256 } | { u64 } ) } __matched_value_1
        local u8 __matched_value_10
        local bool __matched_value_11
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __matched_value_12
        local bool __matched_value_13
        local { u64 } __matched_value_2
        local { u64, ( () | { b256 } ) } __matched_value_3
        local { u64 } __matched_value_30
        local { u64, ( () | { b256 } ) } __matched_value_31
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __matched_value_32
        local { u64, ( () | b256 ) } __matched_value_4
        local { u64 } __matched_value_6
        local { b256, u64, u64 } __tuple_1
        local { b256, u64, u64 } __tuple_1_
        local { b256, u64, u64 } __tuple_2
        local { b256, u64, u64 } __tuple_2_
        local { b256 } addr1
        local { b256 } addr2
        local { b256 } address
        local mut { u64, ( () | { b256 } ) } candidate
        local { u64 } err
        local mut u64 i
        local { b256 } id1
        local { b256 } id2
        local { u64, ( { b256 } | { b256 } ) } inner_value
        local b256 inner_value0
        local u64 inputs
        local b256 key_for_storage
        local b256 key_for_storage0
        local b256 key_for_storage_
        local u64 last_slot
        local u64 last_slot0
        local u64 number_of_slots
        local u64 number_of_slots0
        local u64 number_of_slots00
        local u64 number_of_slots1
        local b256 offset_slot
        local mut u256 offset_slot0
        local mut u256 offset_slot00
        local b256 offset_slot1
        local { b256 } owner
        local { u64, ( () | { b256 } ) } owner_of_input
        local u64 padded_value
        local u64 place_in_slot
        local u64 place_in_slot0
        local u64 place_in_slot00
        local u64 place_in_slot1
        local u64 result_ptr
        local u64 size_of_t
        local u64 size_of_t0
        local { u64 } type_of_input

        entry(new_value: u64):
        v0 = asm(r1) -> bool r1, !11 {
            gm     r1 i1, !12
        }
        cbr v0, only_owner_0_msg_sender_10_block0(), only_owner_0_msg_sender_10_block7(), !13

        only_owner_0_msg_sender_10_block0():
        v1 = const u64 0, !15
        v2 = gtf v1, 1, !21
        v3 = bitcast v2 to u8, !22
        v4 = get_local ptr u8, __matched_value_10, !24
        v5 = get_local ptr u8, __matched_value_10, !25
        v6 = const u8 0, !26
        v7 = cmp eq v3 v6, !28
        cbr v7, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1(), !29

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0():
        v8 = get_local ptr { u64 }, __anon_00000, !31
        v9 = const u64 0
        v10 = get_elem_ptr v8, ptr u64, v9, !32
        v11 = const u64 0, !30
        store v11 to v10, !33
        v12 = load v8, !34
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v12), !35

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1():
        v13 = get_local ptr u8, __matched_value_10, !36
        v14 = const u8 1, !37
        v15 = cmp eq v3 v14, !39
        cbr v15, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3(), !40

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2():
        v16 = get_local ptr { u64 }, __anon_100, !41
        v17 = const u64 0
        v18 = get_elem_ptr v16, ptr u64, v17, !42
        v19 = const u64 1, !30
        store v19 to v18, !43
        v20 = load v16, !44
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v20), !45

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3():
        v21 = const u64 0, !46
        revert v21, !50

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v22: { u64 }):
        v23 = get_local ptr { u64 }, __matched_value_30, !52
        store v22 to v23, !53
        v24 = get_local ptr { u64 }, __matched_value_30, !54
        v25 = const u64 0
        v26 = get_elem_ptr v24, ptr u64, v25, !55
        v27 = load v26, !56
        v28 = const u64 0, !19
        v29 = cmp eq v27 v28, !58
        cbr v29, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1(), !59

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0():
        v30 = const u64 0, !60
        v31 = gtf v30, 5, !62
        v32 = bitcast v31 to u64, !63
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v32), !64

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1():
        v33 = get_local ptr { u64 }, __matched_value_30, !65
        v34 = const u64 0
        v35 = get_elem_ptr v33, ptr u64, v34, !66
        v36 = load v35, !67
        v37 = const u64 1, !19
        v38 = cmp eq v36 v37, !69
        cbr v38, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3(), !70

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2():
        v39 = const u64 0, !71
        v40 = gtf v39, 259, !73
        v41 = bitcast v40 to u64, !74
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v41), !75

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3():
        v42 = const u64 14757395258967588866, !51
        revert v42, !76

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v43: u64):
        v44 = get_local ptr u64, inputs, !78
        v45 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0000, !81
        v46 = const u64 0
        v47 = get_elem_ptr v45, ptr u64, v46, !82
        v48 = const u64 0, !80
        store v48 to v47, !83
        v49 = load v45, !84
        v50 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !86
        store v49 to v50, !87
        v51 = get_local ptr u64, i, !89
        v52 = const u64 0, !90
        br only_owner_0_msg_sender_10_caller_address_12_while(v52), !91

        only_owner_0_msg_sender_10_caller_address_12_while(v53: u64):
        v54 = get_local ptr u64, i, !93
        v55 = get_local ptr u64, inputs, !95
        v56 = cmp lt v53 v43, !97
        cbr v56, only_owner_0_msg_sender_10_caller_address_12_while_body(), only_owner_0_msg_sender_10_caller_address_12_end_while(), !98

        only_owner_0_msg_sender_10_caller_address_12_while_body():
        v57 = get_local ptr u64, i, !100
        v58 = asm(input: v53) -> u64 input, !104 {
        }
        v59 = call input_type_17(v58), !106
        v60 = get_local ptr { u64 }, type_of_input, !108
        store v59 to v60, !109
        v61 = get_local ptr { u64 }, type_of_input, !111
        v62 = load v61, !112
        v63 = get_local ptr { u64 }, __matched_value_2, !114
        store v62 to v63, !115
        v64 = get_local ptr { u64 }, __matched_value_2, !116
        v65 = const u64 0
        v66 = get_elem_ptr v64, ptr u64, v65, !117
        v67 = load v66, !118
        v68 = const u64 0, !110
        v69 = cmp eq v67 v68, !120
        v70 = const unit (), !121
        cbr v69, only_owner_0_msg_sender_10_caller_address_12_block5(v70), only_owner_0_msg_sender_10_caller_address_12_block1(), !122

        only_owner_0_msg_sender_10_caller_address_12_block1():
        v71 = get_local ptr { u64 }, __matched_value_2, !123
        v72 = const u64 0
        v73 = get_elem_ptr v71, ptr u64, v72, !124
        v74 = load v73, !125
        v75 = const u64 2, !110
        v76 = cmp eq v74 v75, !127
        v77 = const unit (), !128
        cbr v76, only_owner_0_msg_sender_10_caller_address_12_block5(v77), only_owner_0_msg_sender_10_caller_address_12_block3(), !129

        only_owner_0_msg_sender_10_caller_address_12_block3():
        v78 = get_local ptr u64, i, !131
        v79 = const u64 1, !132
        v80 = call add_19(v53, v79), !134
        v81 = get_local ptr u64, i, !135
        br only_owner_0_msg_sender_10_caller_address_12_while(v80), !136

        only_owner_0_msg_sender_10_caller_address_12_block5(v82: ()):
        v83 = get_local ptr u64, i, !138
        v84 = asm(input: v53) -> u64 input, !140 {
        }
        v85 = call input_type_17(v84), !143
        v86 = get_local ptr { u64 }, __matched_value_6, !145
        store v85 to v86, !146
        v87 = get_local ptr { u64 }, __matched_value_6, !147
        v88 = const u64 0
        v89 = get_elem_ptr v87, ptr u64, v88, !148
        v90 = load v89, !149
        v91 = const u64 0, !142
        v92 = cmp eq v90 v91, !151
        cbr v92, only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0(), only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1(), !152

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0():
        v93 = get_local ptr { u64, ( () | { b256 } ) }, __anon_01, !153
        v94 = const u64 0
        v95 = get_elem_ptr v93, ptr u64, v94, !154
        v96 = const u64 1, !80
        store v96 to v95, !155
        v97 = gtf v84, 515, !157
        v98 = int_to_ptr v97 to ptr b256, !158
        v99 = load v98, !159
        v100 = call from_22(v99), !161
        v101 = const u64 1
        v102 = const u64 1
        v103 = get_elem_ptr v93, ptr { b256 }, v101, v102, !162
        store v100 to v103, !163
        v104 = load v93, !164
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v104), !165

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1():
        v105 = get_local ptr { u64, ( () | { b256 } ) }, __anon_11, !166
        v106 = const u64 0
        v107 = get_elem_ptr v105, ptr u64, v106, !167
        v108 = const u64 0, !80
        store v108 to v107, !168
        v109 = load v105, !169
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v109), !170

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v110: { u64, ( () | { b256 } ) }):
        v111 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !172
        store v110 to v111, !173
        v112 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !175
        v113 = load v112, !176
        v114 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !179
        store v113 to v114, !180
        v115 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !182
        v116 = const u64 0
        v117 = get_elem_ptr v115, ptr u64, v116, !183
        v118 = load v117, !184
        v119 = const u64 1, !181
        v120 = cmp eq v118 v119, !186
        v121 = const bool false, !187
        cbr v120, only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v121), only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1(), !188

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1():
        v122 = const bool true, !189
        br only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v122), !190

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v123: bool):
        cbr v123, only_owner_0_msg_sender_10_caller_address_12_block6(), only_owner_0_msg_sender_10_caller_address_12_block7(), !191

        only_owner_0_msg_sender_10_caller_address_12_block6():
        v124 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !193
        v125 = load v124, !194
        v126 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !196
        store v125 to v126, !197
        v127 = get_local ptr u64, i, !199
        v128 = const u64 1, !200
        v129 = call add_19(v53, v128), !202
        v130 = get_local ptr u64, i, !203
        br only_owner_0_msg_sender_10_caller_address_12_while(v129), !204

        only_owner_0_msg_sender_10_caller_address_12_block7():
        v131 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !206
        v132 = load v131, !207
        v133 = call unwrap_24(v132), !209
        v134 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !211
        v135 = load v134, !212
        v136 = call unwrap_24(v135), !214
        v137 = call eq_6(v133, v136), !216
        cbr v137, only_owner_0_msg_sender_10_caller_address_12_block9(), only_owner_0_msg_sender_10_caller_address_12_block10(), !217

        only_owner_0_msg_sender_10_caller_address_12_block9():
        v138 = get_local ptr u64, i, !219
        v139 = const u64 1, !220
        v140 = call add_19(v53, v139), !222
        v141 = get_local ptr u64, i, !223
        br only_owner_0_msg_sender_10_caller_address_12_while(v140), !224

        only_owner_0_msg_sender_10_caller_address_12_block10():
        v142 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_10, !227
        v143 = const u64 0
        v144 = get_elem_ptr v142, ptr u64, v143, !228
        v145 = const u64 1, !226
        store v145 to v144, !229
        v146 = get_local ptr { u64 }, __anon_20, !231
        v147 = const u64 0
        v148 = get_elem_ptr v146, ptr u64, v147, !232
        v149 = const u64 0, !230
        store v149 to v148, !233
        v150 = load v146, !234
        v151 = const u64 1
        v152 = const u64 1
        v153 = get_elem_ptr v142, ptr { u64 }, v151, v152, !235
        store v150 to v153, !236
        v154 = load v142, !237
        br only_owner_0_msg_sender_10_block10(v154), !239

        only_owner_0_msg_sender_10_caller_address_12_end_while():
        v155 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !241
        v156 = load v155, !242
        v157 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !244
        store v156 to v157, !245
        v158 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !246
        v159 = const u64 0
        v160 = get_elem_ptr v158, ptr u64, v159, !247
        v161 = load v160, !248
        v162 = const u64 1, !240
        v163 = cmp eq v161 v162, !250
        cbr v163, only_owner_0_msg_sender_10_caller_address_12_block12(), only_owner_0_msg_sender_10_caller_address_12_block13(), !251

        only_owner_0_msg_sender_10_caller_address_12_block12():
        v164 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !252
        v165 = const u64 1
        v166 = const u64 1
        v167 = get_elem_ptr v164, ptr { b256 }, v165, v166, !253
        v168 = load v167, !254
        v169 = get_local ptr { b256 }, address, !256
        store v168 to v169, !257
        v170 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_30, !258
        v171 = const u64 0
        v172 = get_elem_ptr v170, ptr u64, v171, !259
        v173 = const u64 0, !226
        store v173 to v172, !260
        v174 = get_local ptr { b256 }, address, !262
        v175 = load v174, !263
        v176 = const u64 1
        v177 = const u64 0
        v178 = get_elem_ptr v170, ptr { b256 }, v176, v177, !264
        store v175 to v178, !265
        v179 = load v170, !266
        br only_owner_0_msg_sender_10_caller_address_12_block17(v179), !267

        only_owner_0_msg_sender_10_caller_address_12_block13():
        v180 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !268
        v181 = const u64 0
        v182 = get_elem_ptr v180, ptr u64, v181, !269
        v183 = load v182, !270
        v184 = const u64 0, !240
        v185 = cmp eq v183 v184, !272
        cbr v185, only_owner_0_msg_sender_10_caller_address_12_block14(), only_owner_0_msg_sender_10_caller_address_12_block15(), !273

        only_owner_0_msg_sender_10_caller_address_12_block14():
        v186 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_40, !274
        v187 = const u64 0
        v188 = get_elem_ptr v186, ptr u64, v187, !275
        v189 = const u64 1, !226
        store v189 to v188, !276
        v190 = get_local ptr { u64 }, __anon_5, !277
        v191 = const u64 0
        v192 = get_elem_ptr v190, ptr u64, v191, !278
        v193 = const u64 1, !230
        store v193 to v192, !279
        v194 = load v190, !280
        v195 = const u64 1
        v196 = const u64 1
        v197 = get_elem_ptr v186, ptr { u64 }, v195, v196, !281
        store v194 to v197, !282
        v198 = load v186, !283
        br only_owner_0_msg_sender_10_caller_address_12_block17(v198), !284

        only_owner_0_msg_sender_10_caller_address_12_block15():
        v199 = const u64 14757395258967588866, !243
        revert v199, !285

        only_owner_0_msg_sender_10_caller_address_12_block17(v200: { u64, ( { b256 } | { u64 } ) }):
        br only_owner_0_msg_sender_10_block10(v200), !286

        only_owner_0_msg_sender_10_block10(v201: { u64, ( { b256 } | { u64 } ) }):
        v202 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !288
        store v201 to v202, !289
        v203 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !290
        v204 = const u64 0
        v205 = get_elem_ptr v203, ptr u64, v204, !291
        v206 = load v205, !292
        v207 = const u64 1, !16
        v208 = cmp eq v206 v207, !294
        cbr v208, only_owner_0_msg_sender_10_block1(), only_owner_0_msg_sender_10_block2(), !295

        only_owner_0_msg_sender_10_block1():
        v209 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !296
        v210 = const u64 1
        v211 = const u64 1
        v212 = get_elem_ptr v209, ptr { u64 }, v210, v211, !297
        v213 = load v212, !298
        v214 = get_local ptr { u64 }, err, !300
        store v213 to v214, !301
        v215 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_000, !302
        v216 = const u64 0
        v217 = get_elem_ptr v215, ptr u64, v216, !303
        v218 = const u64 1, !226
        store v218 to v217, !304
        v219 = get_local ptr { u64 }, err, !306
        v220 = load v219, !307
        v221 = const u64 1
        v222 = const u64 1
        v223 = get_elem_ptr v215, ptr { u64 }, v221, v222, !308
        store v220 to v223, !309
        v224 = load v215, !310
        br only_owner_0_msg_sender_10_block6(v224), !311

        only_owner_0_msg_sender_10_block2():
        v225 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !312
        v226 = const u64 0
        v227 = get_elem_ptr v225, ptr u64, v226, !313
        v228 = load v227, !314
        v229 = const u64 0, !16
        v230 = cmp eq v228 v229, !316
        cbr v230, only_owner_0_msg_sender_10_block3(), only_owner_0_msg_sender_10_block4(), !317

        only_owner_0_msg_sender_10_block3():
        v231 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !318
        v232 = const u64 1
        v233 = const u64 0
        v234 = get_elem_ptr v231, ptr { b256 }, v232, v233, !319
        v235 = load v234, !320
        v236 = get_local ptr { b256 }, owner, !322
        store v235 to v236, !323
        v237 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_1, !324
        v238 = const u64 0
        v239 = get_elem_ptr v237, ptr u64, v238, !325
        v240 = const u64 0, !226
        store v240 to v239, !326
        v241 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !329
        v242 = const u64 0
        v243 = get_elem_ptr v241, ptr u64, v242, !330
        v244 = const u64 0, !328
        store v244 to v243, !331
        v245 = get_local ptr { b256 }, owner, !333
        v246 = load v245, !334
        v247 = const u64 1
        v248 = const u64 0
        v249 = get_elem_ptr v241, ptr { b256 }, v247, v248, !335
        store v246 to v249, !336
        v250 = load v241, !337
        v251 = const u64 1
        v252 = const u64 0
        v253 = get_elem_ptr v237, ptr { u64, ( { b256 } | { b256 } ) }, v251, v252, !338
        store v250 to v253, !339
        v254 = load v237, !340
        br only_owner_0_msg_sender_10_block6(v254), !341

        only_owner_0_msg_sender_10_block4():
        v255 = const u64 14757395258967588866, !287
        revert v255, !342

        only_owner_0_msg_sender_10_block6(v256: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        br only_owner_0_msg_sender_10_block8(v256), !343

        only_owner_0_msg_sender_10_block7():
        v257 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_3, !344
        v258 = const u64 0
        v259 = get_elem_ptr v257, ptr u64, v258, !345
        v260 = const u64 0, !226
        store v260 to v259, !346
        v261 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_4, !347
        v262 = const u64 0
        v263 = get_elem_ptr v261, ptr u64, v262, !348
        v264 = const u64 1, !328
        store v264 to v263, !349
        v265 = asm(r1) -> b256 r1, !352 {
            gm     r1 i2, !353
        }
        v266 = call from_22(v265), !355
        v267 = const u64 1
        v268 = const u64 1
        v269 = get_elem_ptr v261, ptr { b256 }, v267, v268, !356
        store v266 to v269, !357
        v270 = load v261, !358
        v271 = const u64 1
        v272 = const u64 0
        v273 = get_elem_ptr v257, ptr { u64, ( { b256 } | { b256 } ) }, v271, v272, !359
        store v270 to v273, !360
        v274 = load v257, !361
        br only_owner_0_msg_sender_10_block8(v274), !362

        only_owner_0_msg_sender_10_block8(v275: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v276 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !365
        store v275 to v276, !366
        v277 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !368
        v278 = const u64 0
        v279 = get_elem_ptr v277, ptr u64, v278, !369
        v280 = load v279, !370
        v281 = const u64 0, !367
        v282 = cmp eq v280 v281, !372
        cbr v282, only_owner_0_unwrap_9_block0(), only_owner_0_unwrap_9_block1(), !373

        only_owner_0_unwrap_9_block0():
        v283 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !374
        v284 = const u64 1
        v285 = const u64 0
        v286 = get_elem_ptr v283, ptr { u64, ( { b256 } | { b256 } ) }, v284, v285, !375
        v287 = load v286, !376
        v288 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !378
        store v287 to v288, !379
        v289 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !381
        v290 = load v289, !382
        v291 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_00, !383
        v292 = const u64 0
        v293 = get_elem_ptr v291, ptr u64, v292, !384
        v294 = const u64 0, !328
        store v294 to v293, !385
        v295 = get_local ptr { b256, u64, b256 }, __anon_02, !388
        v296 = const u64 0
        v297 = get_elem_ptr v295, ptr b256, v296, !389
        v298 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !387
        store v298 to v297, !390
        v299 = const u64 1
        v300 = get_elem_ptr v295, ptr u64, v299, !391
        v301 = const u64 0
        store v301 to v300, !392
        v302 = const u64 2
        v303 = get_elem_ptr v295, ptr b256, v302, !393
        v304 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !387
        store v304 to v303, !394
        v305 = load v295, !395
        v306 = call slot_51(v305), !399
        v307 = call offset_46(v305), !401
        v308 = const u64 32
        v309 = const u64 0, !403
        v310 = cmp eq v308 v309, !406
        cbr v310, only_owner_0_get_owner_27_read_28_read_30_block0(), only_owner_0_get_owner_27_read_28_read_30_block1(), !407

        only_owner_0_unwrap_9_block1():
        v311 = const u64 0, !408
        revert v311, !410

        only_owner_0_get_owner_27_read_28_read_30_block0():
        v312 = get_local ptr { u64, ( () | b256 ) }, __anon_001, !411
        v313 = const u64 0
        v314 = get_elem_ptr v312, ptr u64, v313, !412
        v315 = const u64 0, !80
        store v315 to v314, !413
        v316 = load v312, !414
        br only_owner_0_get_owner_27_read_28_block0(v316), !416

        only_owner_0_get_owner_27_read_28_read_30_block1():
        v317 = get_local ptr u64, size_of_t, !419
        v318 = const u64 8, !420
        v319 = mul v307, v318, !422
        v320 = get_local ptr u64, size_of_t, !424
        v321 = const u64 32
        v322 = add v319, v321, !426
        v323 = const u64 31, !427
        v324 = add v322, v323, !429
        v325 = const u64 5, !430
        v326 = rsh v324, v325, !432
        v327 = get_local ptr u64, last_slot, !434
        v328 = const u64 4, !435
        v329 = mod v307, v328, !437
        v330 = get_local ptr u64, place_in_slot0, !439
        v331 = get_local ptr bool, __matched_value_11, !441
        v332 = get_local ptr bool, __matched_value_11, !443
        v333 = const bool true
        v334 = const bool true, !444
        v335 = cmp eq v333 v334, !446
        cbr v335, only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block0(), only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block1(), !447

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block0():
        v336 = get_local ptr u64, place_in_slot0, !449
        v337 = const u64 8, !450
        v338 = mul v329, v337, !452
        v339 = get_local ptr u64, size_of_t, !454
        v340 = add v338, v321, !456
        v341 = const u64 31, !457
        v342 = add v340, v341, !459
        v343 = const u64 5, !460
        v344 = rsh v342, v343, !462
        br only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block5(v344), !463

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block1():
        v345 = get_local ptr bool, __matched_value_11, !464
        v346 = const bool false, !465
        v347 = cmp eq v333 v346, !467
        v348 = const u64 1, !468
        cbr v347, only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block5(v348), only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block3(), !469

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block3():
        v349 = const u64 14757395258967588866, !440
        revert v349, !470

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block5(v350: u64):
        v351 = get_local ptr u64, number_of_slots0, !472
        v352 = asm(input: v306) -> u256 input, !475 {
        }
        v353 = get_local ptr u256, offset_slot0, !477
        store v352 to v353, !478
        v354 = get_local ptr u256, offset_slot0, !480
        v355 = load v354, !481
        v356 = get_local ptr u64, last_slot, !483
        v357 = call as_u256_40(v326), !485
        v358 = get_local ptr u64, number_of_slots0, !487
        v359 = call as_u256_40(v350), !489
        v360 = sub v357, v359, !491
        v361 = add v355, v360, !493
        v362 = get_local ptr u256, offset_slot0, !494
        store v361 to v362, !495
        v363 = get_local ptr u256, offset_slot0, !497
        v364 = load v363, !498
        v365 = asm(input: v364) -> b256 input, !501 {
        }
        v366 = get_local ptr u64, number_of_slots0, !503
        v367 = get_local ptr u64, place_in_slot0, !505
        v368 = get_local ptr { b256, u64, u64 }, __anon_0001, !507
        v369 = const u64 0
        v370 = get_elem_ptr v368, ptr b256, v369, !508
        store v365 to v370, !509
        v371 = const u64 1
        v372 = get_elem_ptr v368, ptr u64, v371, !510
        store v350 to v372, !511
        v373 = const u64 2
        v374 = get_elem_ptr v368, ptr u64, v373, !512
        store v329 to v374, !513
        v375 = load v368, !514
        v376 = get_local ptr { b256, u64, u64 }, __tuple_2, !516
        store v375 to v376, !517
        v377 = get_local ptr { b256, u64, u64 }, __tuple_2, !518
        v378 = load v377, !519
        v379 = get_local ptr { b256, u64, u64 }, __tuple_2_, !520
        store v378 to v379, !521
        v380 = get_local ptr { b256, u64, u64 }, __tuple_2_, !522
        v381 = const u64 0
        v382 = get_elem_ptr v380, ptr b256, v381, !523
        v383 = load v382, !524
        v384 = get_local ptr b256, offset_slot, !525
        store v383 to v384, !526
        v385 = get_local ptr { b256, u64, u64 }, __tuple_2_, !527
        v386 = const u64 1
        v387 = get_elem_ptr v385, ptr u64, v386, !528
        v388 = load v387, !529
        v389 = get_local ptr u64, number_of_slots, !530
        v390 = get_local ptr { b256, u64, u64 }, __tuple_2_, !531
        v391 = const u64 2
        v392 = get_elem_ptr v390, ptr u64, v391, !532
        v393 = load v392, !533
        v394 = get_local ptr u64, place_in_slot, !534
        v395 = get_local ptr u64, number_of_slots, !536
        v396 = const u64 32, !537
        v397 = mul v388, v396, !539
        v398 = const u64 8
        v399 = mul v398, v397, !543
        v400 = asm(size: v399, ptr) -> u64 ptr, !545 {
            aloc   size, !546
            move   ptr hp, !547
        }
        v401 = get_local ptr u64, result_ptr, !549
        v402 = get_local ptr b256, offset_slot, !551
        v403 = load v402, !552
        v404 = get_local ptr u64, result_ptr, !554
        v405 = get_local ptr u64, number_of_slots, !556
        v406 = get_local ptr b256, key_for_storage, !558
        store v403 to v406, !559
        v407 = int_to_ptr v400 to ptr b256, !560
        v408 = state_load_quad_word v407, key v406, v388, !561
        cbr v408, only_owner_0_get_owner_27_read_28_read_30_block3(), only_owner_0_get_owner_27_read_28_read_30_block4(), !562

        only_owner_0_get_owner_27_read_28_read_30_block3():
        v409 = get_local ptr { u64, ( () | b256 ) }, __anon_12, !563
        v410 = const u64 0
        v411 = get_elem_ptr v409, ptr u64, v410, !564
        v412 = const u64 1, !80
        store v412 to v411, !565
        v413 = get_local ptr u64, result_ptr, !567
        v414 = get_local ptr u64, place_in_slot, !569
        v415 = const u64 8
        v416 = mul v415, v393, !571
        v417 = add v400, v416, !572
        v418 = const bool true
        cbr v418, only_owner_0_get_owner_27_read_28_read_30_read_43_block0(), only_owner_0_get_owner_27_read_28_read_30_read_43_block1(), !576

        only_owner_0_get_owner_27_read_28_read_30_read_43_block0():
        v419 = asm(ptr: v417) -> b256 ptr, !578 {
        }
        br only_owner_0_get_owner_27_read_28_read_30_read_43_block5(v419), !579

        only_owner_0_get_owner_27_read_28_read_30_read_43_block1():
        v420 = const u64 32
        v421 = const u64 1, !580
        v422 = cmp eq v420 v421, !581
        cbr v422, only_owner_0_get_owner_27_read_28_read_30_read_43_block2(), only_owner_0_get_owner_27_read_28_read_30_read_43_block3(), !583

        only_owner_0_get_owner_27_read_28_read_30_read_43_block2():
        v423 = asm(ptr: v417, val) -> b256 val, !585 {
            lb     val ptr i0, !586
        }
        br only_owner_0_get_owner_27_read_28_read_30_read_43_block4(v423), !587

        only_owner_0_get_owner_27_read_28_read_30_read_43_block3():
        v424 = asm(ptr: v417, val) -> b256 val, !589 {
            lw     val ptr i0, !590
        }
        br only_owner_0_get_owner_27_read_28_read_30_read_43_block4(v424), !591

        only_owner_0_get_owner_27_read_28_read_30_read_43_block4(v425: b256):
        br only_owner_0_get_owner_27_read_28_read_30_read_43_block5(v425), !592

        only_owner_0_get_owner_27_read_28_read_30_read_43_block5(v426: b256):
        v427 = const u64 1
        v428 = const u64 1
        v429 = get_elem_ptr v409, ptr b256, v427, v428, !593
        store v426 to v429, !594
        v430 = load v409, !595
        br only_owner_0_get_owner_27_read_28_read_30_block5(v430), !596

        only_owner_0_get_owner_27_read_28_read_30_block4():
        v431 = get_local ptr { u64, ( () | b256 ) }, __anon_21, !597
        v432 = const u64 0
        v433 = get_elem_ptr v431, ptr u64, v432, !598
        v434 = const u64 0, !80
        store v434 to v433, !599
        v435 = load v431, !600
        br only_owner_0_get_owner_27_read_28_read_30_block5(v435), !601

        only_owner_0_get_owner_27_read_28_read_30_block5(v436: { u64, ( () | b256 ) }):
        br only_owner_0_get_owner_27_read_28_block0(v436), !602

        only_owner_0_get_owner_27_read_28_block0(v437: { u64, ( () | b256 ) }):
        v438 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !605
        store v437 to v438, !606
        v439 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !608
        v440 = const u64 0
        v441 = get_elem_ptr v439, ptr u64, v440, !609
        v442 = load v441, !610
        v443 = const u64 1, !607
        v444 = cmp eq v442 v443, !612
        cbr v444, only_owner_0_get_owner_27_read_28_unwrap_29_block0(), only_owner_0_get_owner_27_read_28_unwrap_29_block1(), !613

        only_owner_0_get_owner_27_read_28_unwrap_29_block0():
        v445 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !614
        v446 = const u64 1
        v447 = const u64 1
        v448 = get_elem_ptr v445, ptr b256, v446, v447, !615
        v449 = load v448, !616
        v450 = get_local ptr b256, inner_value0, !618
        store v449 to v450, !619
        v451 = get_local ptr b256, inner_value0, !621
        v452 = load v451, !622
        v453 = call from_22(v452), !624
        v454 = const u64 1
        v455 = const u64 0
        v456 = get_elem_ptr v291, ptr { b256 }, v454, v455, !625
        store v453 to v456, !626
        v457 = load v291, !5
        v458 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_03, !629
        v459 = const u64 0
        v460 = get_elem_ptr v458, ptr { u64, ( { b256 } | { b256 } ) }, v459, !630
        store v290 to v460, !631
        v461 = const u64 1
        v462 = get_elem_ptr v458, ptr { u64, ( { b256 } | { b256 } ) }, v461, !632
        store v457 to v462, !633
        v463 = load v458, !634
        v464 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !636
        store v463 to v464, !637
        v465 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !638
        v466 = const u64 0
        v467 = get_elem_ptr v465, ptr { u64, ( { b256 } | { b256 } ) }, v466, !640
        v468 = const u64 0
        v469 = get_elem_ptr v467, ptr u64, v468, !641
        v470 = load v469, !642
        v471 = const u64 0, !639
        v472 = cmp eq v470 v471, !644
        cbr v472, only_owner_0_eq_4_block0(), only_owner_0_eq_4_block1(v472), !645

        only_owner_0_get_owner_27_read_28_unwrap_29_block1():
        v473 = const u64 0, !646
        revert v473, !648

        only_owner_0_eq_4_block0():
        v474 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !649
        v475 = const u64 1
        v476 = get_elem_ptr v474, ptr { u64, ( { b256 } | { b256 } ) }, v475, !650
        v477 = const u64 0
        v478 = get_elem_ptr v476, ptr u64, v477, !651
        v479 = load v478, !652
        v480 = const u64 0, !639
        v481 = cmp eq v479 v480, !653
        br only_owner_0_eq_4_block1(v481), !654

        only_owner_0_eq_4_block1(v482: bool):
        cbr v482, only_owner_0_eq_4_block2(), only_owner_0_eq_4_block3(), !655

        only_owner_0_eq_4_block2():
        v483 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !656
        v484 = const u64 0
        v485 = get_elem_ptr v483, ptr { u64, ( { b256 } | { b256 } ) }, v484, !657
        v486 = const u64 1
        v487 = const u64 0
        v488 = get_elem_ptr v485, ptr { b256 }, v486, v487, !658
        v489 = load v488, !659
        v490 = get_local ptr { b256 }, addr1, !661
        store v489 to v490, !662
        v491 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !663
        v492 = const u64 1
        v493 = get_elem_ptr v491, ptr { u64, ( { b256 } | { b256 } ) }, v492, !664
        v494 = const u64 1
        v495 = const u64 0
        v496 = get_elem_ptr v493, ptr { b256 }, v494, v495, !665
        v497 = load v496, !666
        v498 = get_local ptr { b256 }, addr2, !668
        store v497 to v498, !669
        v499 = get_local ptr { b256 }, addr1, !671
        v500 = load v499, !672
        v501 = get_local ptr { b256 }, addr2, !674
        v502 = load v501, !675
        v503 = call eq_6(v500, v502), !677
        br only_owner_0_eq_4_block9(v503), !678

        only_owner_0_eq_4_block3():
        v504 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !679
        v505 = const u64 0
        v506 = get_elem_ptr v504, ptr { u64, ( { b256 } | { b256 } ) }, v505, !681
        v507 = const u64 0
        v508 = get_elem_ptr v506, ptr u64, v507, !682
        v509 = load v508, !683
        v510 = const u64 1, !680
        v511 = cmp eq v509 v510, !685
        cbr v511, only_owner_0_eq_4_block4(), only_owner_0_eq_4_block5(v511), !686

        only_owner_0_eq_4_block4():
        v512 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !687
        v513 = const u64 1
        v514 = get_elem_ptr v512, ptr { u64, ( { b256 } | { b256 } ) }, v513, !688
        v515 = const u64 0
        v516 = get_elem_ptr v514, ptr u64, v515, !689
        v517 = load v516, !690
        v518 = const u64 1, !680
        v519 = cmp eq v517 v518, !691
        br only_owner_0_eq_4_block5(v519), !692

        only_owner_0_eq_4_block5(v520: bool):
        v521 = const bool false, !693
        cbr v520, only_owner_0_eq_4_block6(), only_owner_0_eq_4_block8(v521), !694

        only_owner_0_eq_4_block6():
        v522 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !695
        v523 = const u64 0
        v524 = get_elem_ptr v522, ptr { u64, ( { b256 } | { b256 } ) }, v523, !696
        v525 = const u64 1
        v526 = const u64 1
        v527 = get_elem_ptr v524, ptr { b256 }, v525, v526, !697
        v528 = load v527, !698
        v529 = get_local ptr { b256 }, id1, !700
        store v528 to v529, !701
        v530 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !702
        v531 = const u64 1
        v532 = get_elem_ptr v530, ptr { u64, ( { b256 } | { b256 } ) }, v531, !703
        v533 = const u64 1
        v534 = const u64 1
        v535 = get_elem_ptr v532, ptr { b256 }, v533, v534, !704
        v536 = load v535, !705
        v537 = get_local ptr { b256 }, id2, !707
        store v536 to v537, !708
        v538 = get_local ptr { b256 }, id1, !710
        v539 = load v538, !711
        v540 = get_local ptr { b256 }, id2, !713
        v541 = load v540, !714
        v542 = call eq_6(v539, v541), !716
        br only_owner_0_eq_4_block8(v542), !717

        only_owner_0_eq_4_block8(v543: bool):
        br only_owner_0_eq_4_block9(v543), !718

        only_owner_0_eq_4_block9(v544: bool):
        v545 = const bool false, !720
        v546 = cmp eq v544 v545, !724
        cbr v546, only_owner_0_assert_1_block0(), only_owner_0_assert_1_block1(), !725

        only_owner_0_assert_1_block0():
        v547 = const u64 18446744073709486084, !727
        revert v547, !729

        only_owner_0_assert_1_block1():
        v548 = get_local ptr { b256, u64, b256 }, __anon_0, !730
        v549 = const u64 0
        v550 = get_elem_ptr v548, ptr b256, v549
        v551 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c, !730
        store v551 to v550, !730
        v552 = const u64 1
        v553 = get_elem_ptr v548, ptr u64, v552
        v554 = const u64 0
        store v554 to v553, !730
        v555 = const u64 2
        v556 = get_elem_ptr v548, ptr b256, v555
        v557 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c, !730
        store v557 to v556, !730
        v558 = load v548
        v559 = call slot_51(v558), !733
        v560 = call offset_46(v558), !735
        v561 = const u64 8
        v562 = const u64 0, !736
        v563 = cmp eq v561 v562, !739
        v564 = const unit (), !740
        cbr v563, write_47_block0(v564), write_47_write_48_block1(), !741

        write_47_write_48_block1():
        v565 = get_local ptr u64, size_of_t0, !743
        v566 = const u64 8, !420
        v567 = mul v560, v566, !744
        v568 = get_local ptr u64, size_of_t0, !745
        v569 = const u64 8
        v570 = add v567, v569, !746
        v571 = const u64 31, !427
        v572 = add v570, v571, !747
        v573 = const u64 5, !430
        v574 = rsh v572, v573, !748
        v575 = get_local ptr u64, last_slot0, !749
        v576 = const u64 4, !435
        v577 = mod v560, v576, !750
        v578 = get_local ptr u64, place_in_slot00, !751
        v579 = get_local ptr bool, __matched_value_13, !752
        v580 = get_local ptr bool, __matched_value_13, !753
        v581 = const bool false
        v582 = const bool true, !444
        v583 = cmp eq v581 v582, !754
        cbr v583, write_47_write_48_slot_calculator_49_block0(), write_47_write_48_slot_calculator_49_block1(), !755

        write_47_write_48_slot_calculator_49_block0():
        v584 = get_local ptr u64, place_in_slot00, !756
        v585 = const u64 8, !450
        v586 = mul v577, v585, !757
        v587 = get_local ptr u64, size_of_t0, !758
        v588 = add v586, v569, !759
        v589 = const u64 31, !457
        v590 = add v588, v589, !760
        v591 = const u64 5, !460
        v592 = rsh v590, v591, !761
        br write_47_write_48_slot_calculator_49_block5(v592), !762

        write_47_write_48_slot_calculator_49_block1():
        v593 = get_local ptr bool, __matched_value_13, !763
        v594 = const bool false, !465
        v595 = cmp eq v581 v594, !764
        v596 = const u64 1, !468
        cbr v595, write_47_write_48_slot_calculator_49_block5(v596), write_47_write_48_slot_calculator_49_block3(), !765

        write_47_write_48_slot_calculator_49_block3():
        v597 = const u64 14757395258967588866, !440
        revert v597, !766

        write_47_write_48_slot_calculator_49_block5(v598: u64):
        v599 = get_local ptr u64, number_of_slots00, !767
        v600 = asm(input: v559) -> u256 input, !768 {
        }
        v601 = get_local ptr u256, offset_slot00, !769
        store v600 to v601, !770
        v602 = get_local ptr u256, offset_slot00, !771
        v603 = load v602, !772
        v604 = get_local ptr u64, last_slot0, !773
        v605 = call as_u256_40(v574), !774
        v606 = get_local ptr u64, number_of_slots00, !775
        v607 = call as_u256_40(v598), !776
        v608 = sub v605, v607, !777
        v609 = add v603, v608, !778
        v610 = get_local ptr u256, offset_slot00, !779
        store v609 to v610, !780
        v611 = get_local ptr u256, offset_slot00, !781
        v612 = load v611, !782
        v613 = asm(input: v612) -> b256 input, !783 {
        }
        v614 = get_local ptr u64, number_of_slots00, !784
        v615 = get_local ptr u64, place_in_slot00, !785
        v616 = get_local ptr { b256, u64, u64 }, __anon_04, !786
        v617 = const u64 0
        v618 = get_elem_ptr v616, ptr b256, v617, !787
        store v613 to v618, !788
        v619 = const u64 1
        v620 = get_elem_ptr v616, ptr u64, v619, !789
        store v598 to v620, !790
        v621 = const u64 2
        v622 = get_elem_ptr v616, ptr u64, v621, !791
        store v577 to v622, !792
        v623 = load v616, !793
        v624 = get_local ptr { b256, u64, u64 }, __tuple_1, !795
        store v623 to v624, !796
        v625 = get_local ptr { b256, u64, u64 }, __tuple_1, !797
        v626 = load v625, !798
        v627 = get_local ptr { b256, u64, u64 }, __tuple_1_, !799
        store v626 to v627, !800
        v628 = get_local ptr { b256, u64, u64 }, __tuple_1_, !801
        v629 = const u64 0
        v630 = get_elem_ptr v628, ptr b256, v629, !802
        v631 = load v630, !803
        v632 = get_local ptr b256, offset_slot1, !804
        store v631 to v632, !805
        v633 = get_local ptr { b256, u64, u64 }, __tuple_1_, !806
        v634 = const u64 1
        v635 = get_elem_ptr v633, ptr u64, v634, !807
        v636 = load v635, !808
        v637 = get_local ptr u64, number_of_slots1, !809
        v638 = get_local ptr { b256, u64, u64 }, __tuple_1_, !810
        v639 = const u64 2
        v640 = get_elem_ptr v638, ptr u64, v639, !811
        v641 = load v640, !812
        v642 = get_local ptr u64, place_in_slot1, !813
        v643 = get_local ptr u64, number_of_slots1, !815
        v644 = const u64 32, !816
        v645 = mul v636, v644, !818
        v646 = mul v398, v645, !820
        v647 = asm(size: v646, ptr) -> u64 ptr, !821 {
            aloc   size, !546
            move   ptr hp, !547
        }
        v648 = get_local ptr u64, padded_value, !823
        v649 = get_local ptr b256, offset_slot1, !825
        v650 = load v649, !826
        v651 = get_local ptr u64, padded_value, !828
        v652 = get_local ptr u64, number_of_slots1, !830
        v653 = get_local ptr b256, key_for_storage0, !832
        store v650 to v653, !833
        v654 = int_to_ptr v647 to ptr b256, !834
        v655 = state_load_quad_word v654, key v653, v636, !835
        v656 = get_local ptr bool, _, !837
        v657 = get_local ptr u64, padded_value, !839
        v658 = get_local ptr u64, place_in_slot1, !841
        v659 = mul v415, v641, !843
        v660 = add v647, v659, !844
        v661 = const bool false
        cbr v661, write_47_write_48_write_50_block0(), write_47_write_48_write_50_block1(), !847

        write_47_write_48_write_50_block0():
        v662 = const u64 8
        v663 = asm(dst: v660, src: new_value, count: v662) {
            mcp    dst src count, !848
        }
        v664 = const unit ()
        br write_47_write_48_write_50_block5(v664), !849

        write_47_write_48_write_50_block1():
        v665 = const u64 8
        v666 = const u64 1, !850
        v667 = cmp eq v665 v666, !851
        cbr v667, write_47_write_48_write_50_block2(), write_47_write_48_write_50_block3(), !853

        write_47_write_48_write_50_block2():
        v668 = asm(ptr: v660, val: new_value) {
            sb     ptr val i0, !854
        }
        v669 = const unit ()
        br write_47_write_48_write_50_block4(v669), !855

        write_47_write_48_write_50_block3():
        v670 = asm(ptr: v660, val: new_value) {
            sw     ptr val i0, !856
        }
        v671 = const unit ()
        br write_47_write_48_write_50_block4(v671), !857

        write_47_write_48_write_50_block4(v672: ()):
        br write_47_write_48_write_50_block5(v672), !858

        write_47_write_48_write_50_block5(v673: ()):
        v674 = get_local ptr b256, offset_slot1, !860
        v675 = load v674, !861
        v676 = get_local ptr u64, padded_value, !863
        v677 = get_local ptr u64, number_of_slots1, !865
        v678 = get_local ptr b256, key_for_storage_, !867
        store v675 to v678, !868
        v679 = int_to_ptr v647 to ptr b256, !869
        v680 = state_store_quad_word v679, key v678, v636, !870
        v681 = get_local ptr bool, __, !872
        v682 = const unit ()
        br write_47_block0(v682), !873

        write_47_block0(v683: ()):
        v684 = const unit ()
        ret () v684
    }

    pub fn only_owner_0() -> (), !876 {
        local { u64, ( { b256 } | { b256 } ) } __anon_0
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_00
        local { u64, ( () | { b256 } ) } __anon_000
        local { u64 } __anon_0000
        local { b256, u64, u64 } __anon_0001
        local { u64, ( () | b256 ) } __anon_001
        local { u64, ( () | { b256 } ) } __anon_01
        local { b256, u64, b256 } __anon_02
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __anon_03
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_1
        local { u64, ( { b256 } | { u64 } ) } __anon_10
        local { u64 } __anon_100
        local { u64, ( () | { b256 } ) } __anon_11
        local { u64, ( () | b256 ) } __anon_12
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64 } __anon_20
        local { u64, ( () | b256 ) } __anon_21
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { u64 } ) } __anon_30
        local { u64, ( { b256 } | { b256 } ) } __anon_4
        local { u64, ( { b256 } | { u64 } ) } __anon_40
        local { u64 } __anon_5
        local { u64, ( { b256 } | { u64 } ) } __matched_value_1
        local u8 __matched_value_10
        local bool __matched_value_11
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __matched_value_12
        local { u64 } __matched_value_2
        local { u64, ( () | { b256 } ) } __matched_value_3
        local { u64 } __matched_value_30
        local { u64, ( () | { b256 } ) } __matched_value_31
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __matched_value_32
        local { u64, ( () | b256 ) } __matched_value_4
        local { u64 } __matched_value_6
        local { b256, u64, u64 } __tuple_2
        local { b256, u64, u64 } __tuple_2_
        local { b256 } addr1
        local { b256 } addr2
        local { b256 } address
        local mut { u64, ( () | { b256 } ) } candidate
        local { u64 } err
        local mut u64 i
        local { b256 } id1
        local { b256 } id2
        local { u64, ( { b256 } | { b256 } ) } inner_value
        local b256 inner_value0
        local u64 inputs
        local b256 key_for_storage
        local u64 last_slot
        local u64 number_of_slots
        local u64 number_of_slots0
        local b256 offset_slot
        local mut u256 offset_slot0
        local { b256 } owner
        local { u64, ( () | { b256 } ) } owner_of_input
        local u64 place_in_slot
        local u64 place_in_slot0
        local u64 result_ptr
        local u64 size_of_t
        local { u64 } type_of_input

        entry():
        v0 = asm(r1) -> bool r1, !877 {
            gm     r1 i1, !12
        }
        cbr v0, msg_sender_10_block0(), msg_sender_10_block7(), !878

        msg_sender_10_block0():
        v1 = const u64 0, !15
        v2 = gtf v1, 1, !879
        v3 = bitcast v2 to u8, !880
        v4 = get_local ptr u8, __matched_value_10, !881
        v5 = get_local ptr u8, __matched_value_10, !882
        v6 = const u8 0, !26
        v7 = cmp eq v3 v6, !883
        cbr v7, msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0(), msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1(), !884

        msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0():
        v8 = get_local ptr { u64 }, __anon_0000, !885
        v9 = const u64 0
        v10 = get_elem_ptr v8, ptr u64, v9, !886
        v11 = const u64 0, !30
        store v11 to v10, !887
        v12 = load v8, !888
        br msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v12), !889

        msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1():
        v13 = get_local ptr u8, __matched_value_10, !890
        v14 = const u8 1, !37
        v15 = cmp eq v3 v14, !891
        cbr v15, msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2(), msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3(), !892

        msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2():
        v16 = get_local ptr { u64 }, __anon_100, !893
        v17 = const u64 0
        v18 = get_elem_ptr v16, ptr u64, v17, !894
        v19 = const u64 1, !30
        store v19 to v18, !895
        v20 = load v16, !896
        br msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v20), !897

        msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3():
        v21 = const u64 0, !46
        revert v21, !898

        msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v22: { u64 }):
        v23 = get_local ptr { u64 }, __matched_value_30, !899
        store v22 to v23, !900
        v24 = get_local ptr { u64 }, __matched_value_30, !901
        v25 = const u64 0
        v26 = get_elem_ptr v24, ptr u64, v25, !902
        v27 = load v26, !903
        v28 = const u64 0, !19
        v29 = cmp eq v27 v28, !904
        cbr v29, msg_sender_10_caller_address_12_input_count_13_block0(), msg_sender_10_caller_address_12_input_count_13_block1(), !905

        msg_sender_10_caller_address_12_input_count_13_block0():
        v30 = const u64 0, !60
        v31 = gtf v30, 5, !906
        v32 = bitcast v31 to u64, !907
        br msg_sender_10_caller_address_12_input_count_13_block5(v32), !908

        msg_sender_10_caller_address_12_input_count_13_block1():
        v33 = get_local ptr { u64 }, __matched_value_30, !909
        v34 = const u64 0
        v35 = get_elem_ptr v33, ptr u64, v34, !910
        v36 = load v35, !911
        v37 = const u64 1, !19
        v38 = cmp eq v36 v37, !912
        cbr v38, msg_sender_10_caller_address_12_input_count_13_block2(), msg_sender_10_caller_address_12_input_count_13_block3(), !913

        msg_sender_10_caller_address_12_input_count_13_block2():
        v39 = const u64 0, !71
        v40 = gtf v39, 259, !914
        v41 = bitcast v40 to u64, !915
        br msg_sender_10_caller_address_12_input_count_13_block5(v41), !916

        msg_sender_10_caller_address_12_input_count_13_block3():
        v42 = const u64 14757395258967588866, !51
        revert v42, !917

        msg_sender_10_caller_address_12_input_count_13_block5(v43: u64):
        v44 = get_local ptr u64, inputs, !918
        v45 = get_local ptr { u64, ( () | { b256 } ) }, __anon_000, !919
        v46 = const u64 0
        v47 = get_elem_ptr v45, ptr u64, v46, !920
        v48 = const u64 0, !80
        store v48 to v47, !921
        v49 = load v45, !922
        v50 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !923
        store v49 to v50, !924
        v51 = get_local ptr u64, i, !925
        v52 = const u64 0, !90
        br msg_sender_10_caller_address_12_while(v52), !926

        msg_sender_10_caller_address_12_while(v53: u64):
        v54 = get_local ptr u64, i, !927
        v55 = get_local ptr u64, inputs, !928
        v56 = cmp lt v53 v43, !929
        cbr v56, msg_sender_10_caller_address_12_while_body(), msg_sender_10_caller_address_12_end_while(), !930

        msg_sender_10_caller_address_12_while_body():
        v57 = get_local ptr u64, i, !931
        v58 = asm(input: v53) -> u64 input, !932 {
        }
        v59 = call input_type_17(v58), !933
        v60 = get_local ptr { u64 }, type_of_input, !934
        store v59 to v60, !935
        v61 = get_local ptr { u64 }, type_of_input, !936
        v62 = load v61, !937
        v63 = get_local ptr { u64 }, __matched_value_2, !938
        store v62 to v63, !939
        v64 = get_local ptr { u64 }, __matched_value_2, !940
        v65 = const u64 0
        v66 = get_elem_ptr v64, ptr u64, v65, !941
        v67 = load v66, !942
        v68 = const u64 0, !110
        v69 = cmp eq v67 v68, !943
        v70 = const unit (), !121
        cbr v69, msg_sender_10_caller_address_12_block5(v70), msg_sender_10_caller_address_12_block1(), !944

        msg_sender_10_caller_address_12_block1():
        v71 = get_local ptr { u64 }, __matched_value_2, !945
        v72 = const u64 0
        v73 = get_elem_ptr v71, ptr u64, v72, !946
        v74 = load v73, !947
        v75 = const u64 2, !110
        v76 = cmp eq v74 v75, !948
        v77 = const unit (), !128
        cbr v76, msg_sender_10_caller_address_12_block5(v77), msg_sender_10_caller_address_12_block3(), !949

        msg_sender_10_caller_address_12_block3():
        v78 = get_local ptr u64, i, !950
        v79 = const u64 1, !132
        v80 = call add_19(v53, v79), !951
        v81 = get_local ptr u64, i, !952
        br msg_sender_10_caller_address_12_while(v80), !953

        msg_sender_10_caller_address_12_block5(v82: ()):
        v83 = get_local ptr u64, i, !954
        v84 = asm(input: v53) -> u64 input, !955 {
        }
        v85 = call input_type_17(v84), !956
        v86 = get_local ptr { u64 }, __matched_value_6, !957
        store v85 to v86, !958
        v87 = get_local ptr { u64 }, __matched_value_6, !959
        v88 = const u64 0
        v89 = get_elem_ptr v87, ptr u64, v88, !960
        v90 = load v89, !961
        v91 = const u64 0, !142
        v92 = cmp eq v90 v91, !962
        cbr v92, msg_sender_10_caller_address_12_input_coin_owner_21_block0(), msg_sender_10_caller_address_12_input_coin_owner_21_block1(), !963

        msg_sender_10_caller_address_12_input_coin_owner_21_block0():
        v93 = get_local ptr { u64, ( () | { b256 } ) }, __anon_01, !964
        v94 = const u64 0
        v95 = get_elem_ptr v93, ptr u64, v94, !965
        v96 = const u64 1, !80
        store v96 to v95, !966
        v97 = gtf v84, 515, !967
        v98 = int_to_ptr v97 to ptr b256, !968
        v99 = load v98, !969
        v100 = call from_22(v99), !970
        v101 = const u64 1
        v102 = const u64 1
        v103 = get_elem_ptr v93, ptr { b256 }, v101, v102, !971
        store v100 to v103, !972
        v104 = load v93, !973
        br msg_sender_10_caller_address_12_input_coin_owner_21_block2(v104), !974

        msg_sender_10_caller_address_12_input_coin_owner_21_block1():
        v105 = get_local ptr { u64, ( () | { b256 } ) }, __anon_11, !975
        v106 = const u64 0
        v107 = get_elem_ptr v105, ptr u64, v106, !976
        v108 = const u64 0, !80
        store v108 to v107, !977
        v109 = load v105, !978
        br msg_sender_10_caller_address_12_input_coin_owner_21_block2(v109), !979

        msg_sender_10_caller_address_12_input_coin_owner_21_block2(v110: { u64, ( () | { b256 } ) }):
        v111 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !980
        store v110 to v111, !981
        v112 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !982
        v113 = load v112, !983
        v114 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !984
        store v113 to v114, !985
        v115 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !986
        v116 = const u64 0
        v117 = get_elem_ptr v115, ptr u64, v116, !987
        v118 = load v117, !988
        v119 = const u64 1, !181
        v120 = cmp eq v118 v119, !989
        v121 = const bool false, !187
        cbr v120, msg_sender_10_caller_address_12_is_none_23_block2(v121), msg_sender_10_caller_address_12_is_none_23_block1(), !990

        msg_sender_10_caller_address_12_is_none_23_block1():
        v122 = const bool true, !189
        br msg_sender_10_caller_address_12_is_none_23_block2(v122), !991

        msg_sender_10_caller_address_12_is_none_23_block2(v123: bool):
        cbr v123, msg_sender_10_caller_address_12_block6(), msg_sender_10_caller_address_12_block7(), !992

        msg_sender_10_caller_address_12_block6():
        v124 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !993
        v125 = load v124, !994
        v126 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !995
        store v125 to v126, !996
        v127 = get_local ptr u64, i, !997
        v128 = const u64 1, !200
        v129 = call add_19(v53, v128), !998
        v130 = get_local ptr u64, i, !999
        br msg_sender_10_caller_address_12_while(v129), !1000

        msg_sender_10_caller_address_12_block7():
        v131 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !1001
        v132 = load v131, !1002
        v133 = call unwrap_24(v132), !1003
        v134 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !1004
        v135 = load v134, !1005
        v136 = call unwrap_24(v135), !1006
        v137 = call eq_6(v133, v136), !1007
        cbr v137, msg_sender_10_caller_address_12_block9(), msg_sender_10_caller_address_12_block10(), !1008

        msg_sender_10_caller_address_12_block9():
        v138 = get_local ptr u64, i, !1009
        v139 = const u64 1, !220
        v140 = call add_19(v53, v139), !1010
        v141 = get_local ptr u64, i, !1011
        br msg_sender_10_caller_address_12_while(v140), !1012

        msg_sender_10_caller_address_12_block10():
        v142 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_10, !1013
        v143 = const u64 0
        v144 = get_elem_ptr v142, ptr u64, v143, !1014
        v145 = const u64 1, !226
        store v145 to v144, !1015
        v146 = get_local ptr { u64 }, __anon_20, !1016
        v147 = const u64 0
        v148 = get_elem_ptr v146, ptr u64, v147, !1017
        v149 = const u64 0, !230
        store v149 to v148, !1018
        v150 = load v146, !1019
        v151 = const u64 1
        v152 = const u64 1
        v153 = get_elem_ptr v142, ptr { u64 }, v151, v152, !1020
        store v150 to v153, !1021
        v154 = load v142, !1022
        br msg_sender_10_block10(v154), !1023

        msg_sender_10_caller_address_12_end_while():
        v155 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !1024
        v156 = load v155, !1025
        v157 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !1026
        store v156 to v157, !1027
        v158 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !1028
        v159 = const u64 0
        v160 = get_elem_ptr v158, ptr u64, v159, !1029
        v161 = load v160, !1030
        v162 = const u64 1, !240
        v163 = cmp eq v161 v162, !1031
        cbr v163, msg_sender_10_caller_address_12_block12(), msg_sender_10_caller_address_12_block13(), !1032

        msg_sender_10_caller_address_12_block12():
        v164 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !1033
        v165 = const u64 1
        v166 = const u64 1
        v167 = get_elem_ptr v164, ptr { b256 }, v165, v166, !1034
        v168 = load v167, !1035
        v169 = get_local ptr { b256 }, address, !1036
        store v168 to v169, !1037
        v170 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_30, !1038
        v171 = const u64 0
        v172 = get_elem_ptr v170, ptr u64, v171, !1039
        v173 = const u64 0, !226
        store v173 to v172, !1040
        v174 = get_local ptr { b256 }, address, !1041
        v175 = load v174, !1042
        v176 = const u64 1
        v177 = const u64 0
        v178 = get_elem_ptr v170, ptr { b256 }, v176, v177, !1043
        store v175 to v178, !1044
        v179 = load v170, !1045
        br msg_sender_10_caller_address_12_block17(v179), !1046

        msg_sender_10_caller_address_12_block13():
        v180 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !1047
        v181 = const u64 0
        v182 = get_elem_ptr v180, ptr u64, v181, !1048
        v183 = load v182, !1049
        v184 = const u64 0, !240
        v185 = cmp eq v183 v184, !1050
        cbr v185, msg_sender_10_caller_address_12_block14(), msg_sender_10_caller_address_12_block15(), !1051

        msg_sender_10_caller_address_12_block14():
        v186 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_40, !1052
        v187 = const u64 0
        v188 = get_elem_ptr v186, ptr u64, v187, !1053
        v189 = const u64 1, !226
        store v189 to v188, !1054
        v190 = get_local ptr { u64 }, __anon_5, !1055
        v191 = const u64 0
        v192 = get_elem_ptr v190, ptr u64, v191, !1056
        v193 = const u64 1, !230
        store v193 to v192, !1057
        v194 = load v190, !1058
        v195 = const u64 1
        v196 = const u64 1
        v197 = get_elem_ptr v186, ptr { u64 }, v195, v196, !1059
        store v194 to v197, !1060
        v198 = load v186, !1061
        br msg_sender_10_caller_address_12_block17(v198), !1062

        msg_sender_10_caller_address_12_block15():
        v199 = const u64 14757395258967588866, !243
        revert v199, !1063

        msg_sender_10_caller_address_12_block17(v200: { u64, ( { b256 } | { u64 } ) }):
        br msg_sender_10_block10(v200), !1064

        msg_sender_10_block10(v201: { u64, ( { b256 } | { u64 } ) }):
        v202 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !1065
        store v201 to v202, !1066
        v203 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !1067
        v204 = const u64 0
        v205 = get_elem_ptr v203, ptr u64, v204, !1068
        v206 = load v205, !7
        v207 = const u64 1, !16
        v208 = cmp eq v206 v207, !1069
        cbr v208, msg_sender_10_block1(), msg_sender_10_block2(), !1070

        msg_sender_10_block1():
        v209 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !1071
        v210 = const u64 1
        v211 = const u64 1
        v212 = get_elem_ptr v209, ptr { u64 }, v210, v211, !7
        v213 = load v212, !7
        v214 = get_local ptr { u64 }, err, !1072
        store v213 to v214, !1073
        v215 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_00, !1074
        v216 = const u64 0
        v217 = get_elem_ptr v215, ptr u64, v216, !1075
        v218 = const u64 1, !226
        store v218 to v217, !1076
        v219 = get_local ptr { u64 }, err, !1077
        v220 = load v219, !7
        v221 = const u64 1
        v222 = const u64 1
        v223 = get_elem_ptr v215, ptr { u64 }, v221, v222, !1078
        store v220 to v223, !1079
        v224 = load v215, !7
        br msg_sender_10_block6(v224), !7

        msg_sender_10_block2():
        v225 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !1080
        v226 = const u64 0
        v227 = get_elem_ptr v225, ptr u64, v226, !1081
        v228 = load v227, !7
        v229 = const u64 0, !16
        v230 = cmp eq v228 v229, !1082
        cbr v230, msg_sender_10_block3(), msg_sender_10_block4(), !1083

        msg_sender_10_block3():
        v231 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !1084
        v232 = const u64 1
        v233 = const u64 0
        v234 = get_elem_ptr v231, ptr { b256 }, v232, v233, !7
        v235 = load v234, !7
        v236 = get_local ptr { b256 }, owner, !1085
        store v235 to v236, !1086
        v237 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_1, !1087
        v238 = const u64 0
        v239 = get_elem_ptr v237, ptr u64, v238, !1088
        v240 = const u64 0, !226
        store v240 to v239, !1089
        v241 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !1090
        v242 = const u64 0
        v243 = get_elem_ptr v241, ptr u64, v242, !1091
        v244 = const u64 0, !328
        store v244 to v243, !1092
        v245 = get_local ptr { b256 }, owner, !1093
        v246 = load v245, !7
        v247 = const u64 1
        v248 = const u64 0
        v249 = get_elem_ptr v241, ptr { b256 }, v247, v248, !1094
        store v246 to v249, !1095
        v250 = load v241, !7
        v251 = const u64 1
        v252 = const u64 0
        v253 = get_elem_ptr v237, ptr { u64, ( { b256 } | { b256 } ) }, v251, v252, !1096
        store v250 to v253, !1097
        v254 = load v237, !7
        br msg_sender_10_block6(v254), !7

        msg_sender_10_block4():
        v255 = const u64 14757395258967588866, !287
        revert v255, !1098

        msg_sender_10_block6(v256: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        br msg_sender_10_block8(v256), !7

        msg_sender_10_block7():
        v257 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_3, !1099
        v258 = const u64 0
        v259 = get_elem_ptr v257, ptr u64, v258, !1100
        v260 = const u64 0, !226
        store v260 to v259, !1101
        v261 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_4, !1102
        v262 = const u64 0
        v263 = get_elem_ptr v261, ptr u64, v262, !1103
        v264 = const u64 1, !328
        store v264 to v263, !1104
        v265 = asm(r1) -> b256 r1, !1105 {
            gm     r1 i2, !353
        }
        v266 = call from_22(v265), !1106
        v267 = const u64 1
        v268 = const u64 1
        v269 = get_elem_ptr v261, ptr { b256 }, v267, v268, !1107
        store v266 to v269, !1108
        v270 = load v261, !7
        v271 = const u64 1
        v272 = const u64 0
        v273 = get_elem_ptr v257, ptr { u64, ( { b256 } | { b256 } ) }, v271, v272, !1109
        store v270 to v273, !1110
        v274 = load v257, !7
        br msg_sender_10_block8(v274), !7

        msg_sender_10_block8(v275: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v276 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !1111
        store v275 to v276, !1112
        v277 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !1113
        v278 = const u64 0
        v279 = get_elem_ptr v277, ptr u64, v278, !1114
        v280 = load v279, !363
        v281 = const u64 0, !367
        v282 = cmp eq v280 v281, !1115
        cbr v282, unwrap_9_block0(), unwrap_9_block1(), !1116

        unwrap_9_block0():
        v283 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !1117
        v284 = const u64 1
        v285 = const u64 0
        v286 = get_elem_ptr v283, ptr { u64, ( { b256 } | { b256 } ) }, v284, v285, !363
        v287 = load v286, !363
        v288 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !1118
        store v287 to v288, !1119
        v289 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !1120
        v290 = load v289, !363
        v291 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_0, !328
        v292 = const u64 0
        v293 = get_elem_ptr v291, ptr u64, v292, !328
        v294 = const u64 0, !328
        store v294 to v293, !328
        v295 = get_local ptr { b256, u64, b256 }, __anon_02, !1121
        v296 = const u64 0
        v297 = get_elem_ptr v295, ptr b256, v296, !386
        v298 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !387
        store v298 to v297, !1122
        v299 = const u64 1
        v300 = get_elem_ptr v295, ptr u64, v299, !386
        v301 = const u64 0
        store v301 to v300, !1123
        v302 = const u64 2
        v303 = get_elem_ptr v295, ptr b256, v302, !386
        v304 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !387
        store v304 to v303, !1124
        v305 = load v295, !386
        v306 = call slot_51(v305), !1125
        v307 = call offset_46(v305), !1126
        v308 = const u64 32
        v309 = const u64 0, !403
        v310 = cmp eq v308 v309, !1127
        cbr v310, get_owner_27_read_28_read_30_block0(), get_owner_27_read_28_read_30_block1(), !1128

        unwrap_9_block1():
        v311 = const u64 0, !408
        revert v311, !1129

        get_owner_27_read_28_read_30_block0():
        v312 = get_local ptr { u64, ( () | b256 ) }, __anon_001, !1130
        v313 = const u64 0
        v314 = get_elem_ptr v312, ptr u64, v313, !1131
        v315 = const u64 0, !80
        store v315 to v314, !1132
        v316 = load v312, !1133
        br get_owner_27_read_28_block0(v316), !1134

        get_owner_27_read_28_read_30_block1():
        v317 = get_local ptr u64, size_of_t, !1135
        v318 = const u64 8, !420
        v319 = mul v307, v318, !1136
        v320 = get_local ptr u64, size_of_t, !1137
        v321 = const u64 32
        v322 = add v319, v321, !1138
        v323 = const u64 31, !427
        v324 = add v322, v323, !1139
        v325 = const u64 5, !430
        v326 = rsh v324, v325, !1140
        v327 = get_local ptr u64, last_slot, !1141
        v328 = const u64 4, !435
        v329 = mod v307, v328, !1142
        v330 = get_local ptr u64, place_in_slot0, !1143
        v331 = get_local ptr bool, __matched_value_11, !1144
        v332 = get_local ptr bool, __matched_value_11, !1145
        v333 = const bool true
        v334 = const bool true, !444
        v335 = cmp eq v333 v334, !1146
        cbr v335, get_owner_27_read_28_read_30_slot_calculator_31_block0(), get_owner_27_read_28_read_30_slot_calculator_31_block1(), !1147

        get_owner_27_read_28_read_30_slot_calculator_31_block0():
        v336 = get_local ptr u64, place_in_slot0, !1148
        v337 = const u64 8, !450
        v338 = mul v329, v337, !1149
        v339 = get_local ptr u64, size_of_t, !1150
        v340 = add v338, v321, !1151
        v341 = const u64 31, !457
        v342 = add v340, v341, !1152
        v343 = const u64 5, !460
        v344 = rsh v342, v343, !1153
        br get_owner_27_read_28_read_30_slot_calculator_31_block5(v344), !1154

        get_owner_27_read_28_read_30_slot_calculator_31_block1():
        v345 = get_local ptr bool, __matched_value_11, !1155
        v346 = const bool false, !465
        v347 = cmp eq v333 v346, !1156
        v348 = const u64 1, !468
        cbr v347, get_owner_27_read_28_read_30_slot_calculator_31_block5(v348), get_owner_27_read_28_read_30_slot_calculator_31_block3(), !1157

        get_owner_27_read_28_read_30_slot_calculator_31_block3():
        v349 = const u64 14757395258967588866, !440
        revert v349, !1158

        get_owner_27_read_28_read_30_slot_calculator_31_block5(v350: u64):
        v351 = get_local ptr u64, number_of_slots0, !1159
        v352 = asm(input: v306) -> u256 input, !1160 {
        }
        v353 = get_local ptr u256, offset_slot0, !1161
        store v352 to v353, !1162
        v354 = get_local ptr u256, offset_slot0, !1163
        v355 = load v354, !1164
        v356 = get_local ptr u64, last_slot, !1165
        v357 = call as_u256_40(v326), !1166
        v358 = get_local ptr u64, number_of_slots0, !1167
        v359 = call as_u256_40(v350), !1168
        v360 = sub v357, v359, !1169
        v361 = add v355, v360, !1170
        v362 = get_local ptr u256, offset_slot0, !1171
        store v361 to v362, !1172
        v363 = get_local ptr u256, offset_slot0, !1173
        v364 = load v363, !1174
        v365 = asm(input: v364) -> b256 input, !1175 {
        }
        v366 = get_local ptr u64, number_of_slots0, !1176
        v367 = get_local ptr u64, place_in_slot0, !1177
        v368 = get_local ptr { b256, u64, u64 }, __anon_0001, !1178
        v369 = const u64 0
        v370 = get_elem_ptr v368, ptr b256, v369, !1179
        store v365 to v370, !1180
        v371 = const u64 1
        v372 = get_elem_ptr v368, ptr u64, v371, !1181
        store v350 to v372, !1182
        v373 = const u64 2
        v374 = get_elem_ptr v368, ptr u64, v373, !1183
        store v329 to v374, !1184
        v375 = load v368, !1185
        v376 = get_local ptr { b256, u64, u64 }, __tuple_2, !1186
        store v375 to v376, !1187
        v377 = get_local ptr { b256, u64, u64 }, __tuple_2, !1188
        v378 = load v377, !1189
        v379 = get_local ptr { b256, u64, u64 }, __tuple_2_, !1190
        store v378 to v379, !1191
        v380 = get_local ptr { b256, u64, u64 }, __tuple_2_, !1192
        v381 = const u64 0
        v382 = get_elem_ptr v380, ptr b256, v381, !1193
        v383 = load v382, !1194
        v384 = get_local ptr b256, offset_slot, !1195
        store v383 to v384, !1196
        v385 = get_local ptr { b256, u64, u64 }, __tuple_2_, !1197
        v386 = const u64 1
        v387 = get_elem_ptr v385, ptr u64, v386, !1198
        v388 = load v387, !1199
        v389 = get_local ptr u64, number_of_slots, !1200
        v390 = get_local ptr { b256, u64, u64 }, __tuple_2_, !1201
        v391 = const u64 2
        v392 = get_elem_ptr v390, ptr u64, v391, !1202
        v393 = load v392, !1203
        v394 = get_local ptr u64, place_in_slot, !1204
        v395 = get_local ptr u64, number_of_slots, !1205
        v396 = const u64 32, !537
        v397 = mul v388, v396, !1206
        v398 = const u64 8
        v399 = mul v398, v397, !1207
        v400 = asm(size: v399, ptr) -> u64 ptr, !1208 {
            aloc   size, !546
            move   ptr hp, !547
        }
        v401 = get_local ptr u64, result_ptr, !1209
        v402 = get_local ptr b256, offset_slot, !1210
        v403 = load v402, !1211
        v404 = get_local ptr u64, result_ptr, !1212
        v405 = get_local ptr u64, number_of_slots, !1213
        v406 = get_local ptr b256, key_for_storage, !1214
        store v403 to v406, !1215
        v407 = int_to_ptr v400 to ptr b256, !1216
        v408 = state_load_quad_word v407, key v406, v388, !1217
        cbr v408, get_owner_27_read_28_read_30_block3(), get_owner_27_read_28_read_30_block4(), !1218

        get_owner_27_read_28_read_30_block3():
        v409 = get_local ptr { u64, ( () | b256 ) }, __anon_12, !1219
        v410 = const u64 0
        v411 = get_elem_ptr v409, ptr u64, v410, !1220
        v412 = const u64 1, !80
        store v412 to v411, !1221
        v413 = get_local ptr u64, result_ptr, !1222
        v414 = get_local ptr u64, place_in_slot, !1223
        v415 = const u64 8
        v416 = mul v415, v393, !1224
        v417 = add v400, v416, !1225
        v418 = const bool true
        cbr v418, get_owner_27_read_28_read_30_read_43_block0(), get_owner_27_read_28_read_30_read_43_block1(), !1226

        get_owner_27_read_28_read_30_read_43_block0():
        v419 = asm(ptr: v417) -> b256 ptr, !1227 {
        }
        br get_owner_27_read_28_read_30_read_43_block5(v419), !1228

        get_owner_27_read_28_read_30_read_43_block1():
        v420 = const u64 32
        v421 = const u64 1, !580
        v422 = cmp eq v420 v421, !1229
        cbr v422, get_owner_27_read_28_read_30_read_43_block2(), get_owner_27_read_28_read_30_read_43_block3(), !1230

        get_owner_27_read_28_read_30_read_43_block2():
        v423 = asm(ptr: v417, val) -> b256 val, !1231 {
            lb     val ptr i0, !586
        }
        br get_owner_27_read_28_read_30_read_43_block4(v423), !1232

        get_owner_27_read_28_read_30_read_43_block3():
        v424 = asm(ptr: v417, val) -> b256 val, !1233 {
            lw     val ptr i0, !590
        }
        br get_owner_27_read_28_read_30_read_43_block4(v424), !1234

        get_owner_27_read_28_read_30_read_43_block4(v425: b256):
        br get_owner_27_read_28_read_30_read_43_block5(v425), !1235

        get_owner_27_read_28_read_30_read_43_block5(v426: b256):
        v427 = const u64 1
        v428 = const u64 1
        v429 = get_elem_ptr v409, ptr b256, v427, v428, !1236
        store v426 to v429, !1237
        v430 = load v409, !1238
        br get_owner_27_read_28_read_30_block5(v430), !1239

        get_owner_27_read_28_read_30_block4():
        v431 = get_local ptr { u64, ( () | b256 ) }, __anon_21, !1240
        v432 = const u64 0
        v433 = get_elem_ptr v431, ptr u64, v432, !1241
        v434 = const u64 0, !80
        store v434 to v433, !1242
        v435 = load v431, !1243
        br get_owner_27_read_28_read_30_block5(v435), !1244

        get_owner_27_read_28_read_30_block5(v436: { u64, ( () | b256 ) }):
        br get_owner_27_read_28_block0(v436), !1245

        get_owner_27_read_28_block0(v437: { u64, ( () | b256 ) }):
        v438 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !1246
        store v437 to v438, !1247
        v439 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !1248
        v440 = const u64 0
        v441 = get_elem_ptr v439, ptr u64, v440, !1249
        v442 = load v441, !1250
        v443 = const u64 1, !607
        v444 = cmp eq v442 v443, !1251
        cbr v444, get_owner_27_read_28_unwrap_29_block0(), get_owner_27_read_28_unwrap_29_block1(), !1252

        get_owner_27_read_28_unwrap_29_block0():
        v445 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !1253
        v446 = const u64 1
        v447 = const u64 1
        v448 = get_elem_ptr v445, ptr b256, v446, v447, !1254
        v449 = load v448, !1255
        v450 = get_local ptr b256, inner_value0, !1256
        store v449 to v450, !1257
        v451 = get_local ptr b256, inner_value0, !1258
        v452 = load v451, !1259
        v453 = call from_22(v452), !623
        v454 = const u64 1
        v455 = const u64 0
        v456 = get_elem_ptr v291, ptr { b256 }, v454, v455, !328
        store v453 to v456, !328
        v457 = load v291
        v458 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_03, !1260
        v459 = const u64 0
        v460 = get_elem_ptr v458, ptr { u64, ( { b256 } | { b256 } ) }, v459, !1261
        store v290 to v460, !1262
        v461 = const u64 1
        v462 = get_elem_ptr v458, ptr { u64, ( { b256 } | { b256 } ) }, v461, !1263
        store v457 to v462, !1264
        v463 = load v458, !627
        v464 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !1265
        store v463 to v464, !1266
        v465 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !1267
        v466 = const u64 0
        v467 = get_elem_ptr v465, ptr { u64, ( { b256 } | { b256 } ) }, v466, !1268
        v468 = const u64 0
        v469 = get_elem_ptr v467, ptr u64, v468, !1269
        v470 = load v469, !627
        v471 = const u64 0, !639
        v472 = cmp eq v470 v471, !1270
        cbr v472, eq_4_block0(), eq_4_block1(v472), !1271

        get_owner_27_read_28_unwrap_29_block1():
        v473 = const u64 0, !646
        revert v473, !1272

        eq_4_block0():
        v474 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !1273
        v475 = const u64 1
        v476 = get_elem_ptr v474, ptr { u64, ( { b256 } | { b256 } ) }, v475, !1274
        v477 = const u64 0
        v478 = get_elem_ptr v476, ptr u64, v477, !1275
        v479 = load v478, !627
        v480 = const u64 0, !639
        v481 = cmp eq v479 v480, !1276
        br eq_4_block1(v481), !1277

        eq_4_block1(v482: bool):
        cbr v482, eq_4_block2(), eq_4_block3(), !1278

        eq_4_block2():
        v483 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !1279
        v484 = const u64 0
        v485 = get_elem_ptr v483, ptr { u64, ( { b256 } | { b256 } ) }, v484, !1280
        v486 = const u64 1
        v487 = const u64 0
        v488 = get_elem_ptr v485, ptr { b256 }, v486, v487, !627
        v489 = load v488, !627
        v490 = get_local ptr { b256 }, addr1, !1281
        store v489 to v490, !1282
        v491 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !1283
        v492 = const u64 1
        v493 = get_elem_ptr v491, ptr { u64, ( { b256 } | { b256 } ) }, v492, !1284
        v494 = const u64 1
        v495 = const u64 0
        v496 = get_elem_ptr v493, ptr { b256 }, v494, v495, !627
        v497 = load v496, !627
        v498 = get_local ptr { b256 }, addr2, !1285
        store v497 to v498, !1286
        v499 = get_local ptr { b256 }, addr1, !1287
        v500 = load v499, !627
        v501 = get_local ptr { b256 }, addr2, !1288
        v502 = load v501, !627
        v503 = call eq_6(v500, v502), !1289
        br eq_4_block9(v503), !627

        eq_4_block3():
        v504 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !1290
        v505 = const u64 0
        v506 = get_elem_ptr v504, ptr { u64, ( { b256 } | { b256 } ) }, v505, !1291
        v507 = const u64 0
        v508 = get_elem_ptr v506, ptr u64, v507, !1292
        v509 = load v508, !627
        v510 = const u64 1, !680
        v511 = cmp eq v509 v510, !1293
        cbr v511, eq_4_block4(), eq_4_block5(v511), !1294

        eq_4_block4():
        v512 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !1295
        v513 = const u64 1
        v514 = get_elem_ptr v512, ptr { u64, ( { b256 } | { b256 } ) }, v513, !1296
        v515 = const u64 0
        v516 = get_elem_ptr v514, ptr u64, v515, !1297
        v517 = load v516, !627
        v518 = const u64 1, !680
        v519 = cmp eq v517 v518, !1298
        br eq_4_block5(v519), !1299

        eq_4_block5(v520: bool):
        v521 = const bool false, !693
        cbr v520, eq_4_block6(), eq_4_block8(v521), !1300

        eq_4_block6():
        v522 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !1301
        v523 = const u64 0
        v524 = get_elem_ptr v522, ptr { u64, ( { b256 } | { b256 } ) }, v523, !1302
        v525 = const u64 1
        v526 = const u64 1
        v527 = get_elem_ptr v524, ptr { b256 }, v525, v526, !627
        v528 = load v527, !627
        v529 = get_local ptr { b256 }, id1, !1303
        store v528 to v529, !1304
        v530 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !1305
        v531 = const u64 1
        v532 = get_elem_ptr v530, ptr { u64, ( { b256 } | { b256 } ) }, v531, !1306
        v533 = const u64 1
        v534 = const u64 1
        v535 = get_elem_ptr v532, ptr { b256 }, v533, v534, !627
        v536 = load v535, !627
        v537 = get_local ptr { b256 }, id2, !1307
        store v536 to v537, !1308
        v538 = get_local ptr { b256 }, id1, !1309
        v539 = load v538, !627
        v540 = get_local ptr { b256 }, id2, !1310
        v541 = load v540, !627
        v542 = call eq_6(v539, v541), !1311
        br eq_4_block8(v542), !627

        eq_4_block8(v543: bool):
        br eq_4_block9(v543), !627

        eq_4_block9(v544: bool):
        v545 = const bool false, !720
        v546 = cmp eq v544 v545, !1312
        cbr v546, assert_1_block0(), assert_1_block1(), !1313

        assert_1_block0():
        v547 = const u64 18446744073709486084, !727
        revert v547, !1314

        assert_1_block1():
        v548 = const unit ()
        ret () v548
    }

    pub fn assert_1(condition !1315: bool) -> (), !1316 {
        entry(condition: bool):
        v0 = const bool false, !720
        v1 = cmp eq condition v0, !723
        cbr v1, block0(), block1(), !723

        block0():
        v2 = const u64 18446744073709486084, !727
        revert v2, !1317

        block1():
        v3 = const unit ()
        ret () v3
    }

    pub fn not_2(self !1318: bool) -> bool, !1319 {
        entry(self: bool):
        v0 = const bool false, !720
        v1 = cmp eq self v0
        ret bool v1
    }

    pub fn revert_3(code !1320: u64) -> never, !1321 {
        entry(code: u64):
        revert code, !49
    }

    pub fn eq_4(self !1322: { u64, ( { b256 } | { b256 } ) }, other !1323: { u64, ( { b256 } | { b256 } ) }) -> bool, !1324 {
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __anon_0
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __matched_value_1
        local { b256 } addr1
        local { b256 } addr2
        local { b256 } id1
        local { b256 } id2

        entry(self: { u64, ( { b256 } | { b256 } ) }, other: { u64, ( { b256 } | { b256 } ) }):
        v0 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_0, !628
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr { u64, ( { b256 } | { b256 } ) }, v1, !628
        store self to v2, !628
        v3 = const u64 1
        v4 = get_elem_ptr v0, ptr { u64, ( { b256 } | { b256 } ) }, v3, !628
        store other to v4, !628
        v5 = load v0
        v6 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !635
        store v5 to v6, !635
        v7 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !628
        v8 = const u64 0
        v9 = get_elem_ptr v7, ptr { u64, ( { b256 } | { b256 } ) }, v8, !639
        v10 = const u64 0
        v11 = get_elem_ptr v9, ptr u64, v10, !639
        v12 = load v11
        v13 = const u64 0, !639
        v14 = cmp eq v12 v13, !643
        cbr v14, block0(), block1(v14), !643

        block0():
        v15 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !628
        v16 = const u64 1
        v17 = get_elem_ptr v15, ptr { u64, ( { b256 } | { b256 } ) }, v16, !639
        v18 = const u64 0
        v19 = get_elem_ptr v17, ptr u64, v18, !639
        v20 = load v19
        v21 = const u64 0, !639
        v22 = cmp eq v20 v21, !643
        br block1(v22), !643

        block1(v23: bool):
        cbr v23, block2(), block3(), !643

        block2():
        v24 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !628
        v25 = const u64 0
        v26 = get_elem_ptr v24, ptr { u64, ( { b256 } | { b256 } ) }, v25, !639
        v27 = const u64 1
        v28 = const u64 0
        v29 = get_elem_ptr v26, ptr { b256 }, v27, v28
        v30 = load v29
        v31 = get_local ptr { b256 }, addr1, !660
        store v30 to v31, !660
        v32 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !628
        v33 = const u64 1
        v34 = get_elem_ptr v32, ptr { u64, ( { b256 } | { b256 } ) }, v33, !639
        v35 = const u64 1
        v36 = const u64 0
        v37 = get_elem_ptr v34, ptr { b256 }, v35, v36
        v38 = load v37
        v39 = get_local ptr { b256 }, addr2, !667
        store v38 to v39, !667
        v40 = get_local ptr { b256 }, addr1, !670
        v41 = load v40
        v42 = get_local ptr { b256 }, addr2, !673
        v43 = load v42
        v44 = call eq_6(v41, v43), !676
        br block9(v44)

        block3():
        v45 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !628
        v46 = const u64 0
        v47 = get_elem_ptr v45, ptr { u64, ( { b256 } | { b256 } ) }, v46, !680
        v48 = const u64 0
        v49 = get_elem_ptr v47, ptr u64, v48, !680
        v50 = load v49
        v51 = const u64 1, !680
        v52 = cmp eq v50 v51, !684
        cbr v52, block4(), block5(v52), !684

        block4():
        v53 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !628
        v54 = const u64 1
        v55 = get_elem_ptr v53, ptr { u64, ( { b256 } | { b256 } ) }, v54, !680
        v56 = const u64 0
        v57 = get_elem_ptr v55, ptr u64, v56, !680
        v58 = load v57
        v59 = const u64 1, !680
        v60 = cmp eq v58 v59, !684
        br block5(v60), !684

        block5(v61: bool):
        v62 = const bool false, !693
        cbr v61, block6(), block8(v62), !684

        block6():
        v63 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !628
        v64 = const u64 0
        v65 = get_elem_ptr v63, ptr { u64, ( { b256 } | { b256 } ) }, v64, !680
        v66 = const u64 1
        v67 = const u64 1
        v68 = get_elem_ptr v65, ptr { b256 }, v66, v67
        v69 = load v68
        v70 = get_local ptr { b256 }, id1, !699
        store v69 to v70, !699
        v71 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_1, !628
        v72 = const u64 1
        v73 = get_elem_ptr v71, ptr { u64, ( { b256 } | { b256 } ) }, v72, !680
        v74 = const u64 1
        v75 = const u64 1
        v76 = get_elem_ptr v73, ptr { b256 }, v74, v75
        v77 = load v76
        v78 = get_local ptr { b256 }, id2, !706
        store v77 to v78, !706
        v79 = get_local ptr { b256 }, id1, !709
        v80 = load v79
        v81 = get_local ptr { b256 }, id2, !712
        v82 = load v81
        v83 = call eq_6(v80, v82), !715
        br block8(v83)

        block8(v84: bool):
        br block9(v84)

        block9(v85: bool):
        ret bool v85
    }

    pub fn eq_5(self !1325: u64, other !1326: u64) -> bool, !1327 {
        entry(self: u64, other: u64):
        v0 = cmp eq self other
        ret bool v0
    }

    pub fn eq_6(self !1329: { b256 }, other !1330: { b256 }) -> bool, !1331 {
        entry(self: { b256 }, other: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !1332
        v4 = load v3
        v5 = ptr_to_int other to u64
        v6 = int_to_ptr v5 to ptr { b256 }
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr b256, v7, !1332
        v9 = load v8
        v10 = cmp eq v4 v9, !1333
        ret bool v10
    }

    pub fn eq_7(self !1334: b256, other !1335: b256) -> bool, !1336 {
        entry(self: b256, other: b256):
        v0 = cmp eq self other
        ret bool v0
    }

    pub fn eq_8(self !1338: { b256 }, other !1339: { b256 }) -> bool, !1340 {
        entry(self: { b256 }, other: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !1341
        v4 = load v3
        v5 = ptr_to_int other to u64
        v6 = int_to_ptr v5 to ptr { b256 }
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr b256, v7, !1341
        v9 = load v8
        v10 = cmp eq v4 v9, !1342
        ret bool v10
    }

    pub fn unwrap_9(self !1343: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }) -> { u64, ( { b256 } | { b256 } ) }, !1344 {
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __matched_value_3
        local { u64, ( { b256 } | { b256 } ) } inner_value

        entry(self: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v0 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_3, !364
        store self to v0, !364
        v1 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_3, !367
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !367
        v4 = load v3
        v5 = const u64 0, !367
        v6 = cmp eq v4 v5, !371
        cbr v6, block0(), block1(), !371

        block0():
        v7 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_3, !367
        v8 = const u64 1
        v9 = const u64 0
        v10 = get_elem_ptr v7, ptr { u64, ( { b256 } | { b256 } ) }, v8, v9
        v11 = load v10
        v12 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !377
        store v11 to v12, !377
        v13 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !380
        v14 = load v13
        ret { u64, ( { b256 } | { b256 } ) } v14

        block1():
        v15 = const u64 0, !408
        revert v15, !1345
    }

    pub fn msg_sender_10() -> { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, !1346 {
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_0
        local { u64, ( () | { b256 } ) } __anon_00
        local { u64 } __anon_000
        local { u64, ( () | { b256 } ) } __anon_01
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_1
        local { u64, ( { b256 } | { u64 } ) } __anon_10
        local { u64 } __anon_100
        local { u64, ( () | { b256 } ) } __anon_11
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64 } __anon_20
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { u64 } ) } __anon_30
        local { u64, ( { b256 } | { b256 } ) } __anon_4
        local { u64, ( { b256 } | { u64 } ) } __anon_40
        local { u64 } __anon_5
        local { u64, ( { b256 } | { u64 } ) } __matched_value_1
        local u8 __matched_value_10
        local { u64 } __matched_value_2
        local { u64, ( () | { b256 } ) } __matched_value_3
        local { u64 } __matched_value_30
        local { u64, ( () | { b256 } ) } __matched_value_31
        local { u64 } __matched_value_6
        local { b256 } address
        local mut { u64, ( () | { b256 } ) } candidate
        local { u64 } err
        local mut u64 i
        local u64 inputs
        local { b256 } owner
        local { u64, ( () | { b256 } ) } owner_of_input
        local { u64 } type_of_input

        entry():
        v0 = asm(r1) -> bool r1, !1347 {
            gm     r1 i1, !12
        }
        cbr v0, block0(), block7(), !9

        block0():
        v1 = const u64 0, !15
        v2 = gtf v1, 1, !1348
        v3 = bitcast v2 to u8, !1349
        v4 = get_local ptr u8, __matched_value_10, !1350
        v5 = get_local ptr u8, __matched_value_10, !1351
        v6 = const u8 0, !26
        v7 = cmp eq v3 v6, !1352
        cbr v7, caller_address_12_input_count_13_tx_type_14_block0(), caller_address_12_input_count_13_tx_type_14_block1(), !1353

        caller_address_12_input_count_13_tx_type_14_block0():
        v8 = get_local ptr { u64 }, __anon_000, !1354
        v9 = const u64 0
        v10 = get_elem_ptr v8, ptr u64, v9, !1355
        v11 = const u64 0, !30
        store v11 to v10, !1356
        v12 = load v8, !1357
        br caller_address_12_input_count_13_tx_type_14_block5(v12), !1358

        caller_address_12_input_count_13_tx_type_14_block1():
        v13 = get_local ptr u8, __matched_value_10, !1359
        v14 = const u8 1, !37
        v15 = cmp eq v3 v14, !1360
        cbr v15, caller_address_12_input_count_13_tx_type_14_block2(), caller_address_12_input_count_13_tx_type_14_block3(), !1361

        caller_address_12_input_count_13_tx_type_14_block2():
        v16 = get_local ptr { u64 }, __anon_100, !1362
        v17 = const u64 0
        v18 = get_elem_ptr v16, ptr u64, v17, !1363
        v19 = const u64 1, !30
        store v19 to v18, !1364
        v20 = load v16, !1365
        br caller_address_12_input_count_13_tx_type_14_block5(v20), !1366

        caller_address_12_input_count_13_tx_type_14_block3():
        v21 = const u64 0, !46
        revert v21, !1367

        caller_address_12_input_count_13_tx_type_14_block5(v22: { u64 }):
        v23 = get_local ptr { u64 }, __matched_value_30, !1368
        store v22 to v23, !1369
        v24 = get_local ptr { u64 }, __matched_value_30, !1370
        v25 = const u64 0
        v26 = get_elem_ptr v24, ptr u64, v25, !1371
        v27 = load v26, !1372
        v28 = const u64 0, !19
        v29 = cmp eq v27 v28, !1373
        cbr v29, caller_address_12_input_count_13_block0(), caller_address_12_input_count_13_block1(), !1374

        caller_address_12_input_count_13_block0():
        v30 = const u64 0, !60
        v31 = gtf v30, 5, !1375
        v32 = bitcast v31 to u64, !1376
        br caller_address_12_input_count_13_block5(v32), !1377

        caller_address_12_input_count_13_block1():
        v33 = get_local ptr { u64 }, __matched_value_30, !1378
        v34 = const u64 0
        v35 = get_elem_ptr v33, ptr u64, v34, !1379
        v36 = load v35, !1380
        v37 = const u64 1, !19
        v38 = cmp eq v36 v37, !1381
        cbr v38, caller_address_12_input_count_13_block2(), caller_address_12_input_count_13_block3(), !1382

        caller_address_12_input_count_13_block2():
        v39 = const u64 0, !71
        v40 = gtf v39, 259, !1383
        v41 = bitcast v40 to u64, !1384
        br caller_address_12_input_count_13_block5(v41), !1385

        caller_address_12_input_count_13_block3():
        v42 = const u64 14757395258967588866, !51
        revert v42, !1386

        caller_address_12_input_count_13_block5(v43: u64):
        v44 = get_local ptr u64, inputs, !1387
        v45 = get_local ptr { u64, ( () | { b256 } ) }, __anon_00, !1388
        v46 = const u64 0
        v47 = get_elem_ptr v45, ptr u64, v46, !1389
        v48 = const u64 0, !80
        store v48 to v47, !1390
        v49 = load v45, !16
        v50 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !1391
        store v49 to v50, !1392
        v51 = get_local ptr u64, i, !1393
        v52 = const u64 0, !90
        br caller_address_12_while(v52), !16

        caller_address_12_while(v53: u64):
        v54 = get_local ptr u64, i, !1394
        v55 = get_local ptr u64, inputs, !1395
        v56 = cmp lt v53 v43, !1396
        cbr v56, caller_address_12_while_body(), caller_address_12_end_while(), !16

        caller_address_12_while_body():
        v57 = get_local ptr u64, i, !1397
        v58 = asm(input: v53) -> u64 input, !1398 {
        }
        v59 = call input_type_17(v58), !1399
        v60 = get_local ptr { u64 }, type_of_input, !1400
        store v59 to v60, !1401
        v61 = get_local ptr { u64 }, type_of_input, !1402
        v62 = load v61, !16
        v63 = get_local ptr { u64 }, __matched_value_2, !1403
        store v62 to v63, !1404
        v64 = get_local ptr { u64 }, __matched_value_2, !1405
        v65 = const u64 0
        v66 = get_elem_ptr v64, ptr u64, v65, !1406
        v67 = load v66, !16
        v68 = const u64 0, !110
        v69 = cmp eq v67 v68, !1407
        v70 = const unit (), !121
        cbr v69, caller_address_12_block5(v70), caller_address_12_block1(), !1408

        caller_address_12_block1():
        v71 = get_local ptr { u64 }, __matched_value_2, !1409
        v72 = const u64 0
        v73 = get_elem_ptr v71, ptr u64, v72, !1410
        v74 = load v73, !16
        v75 = const u64 2, !110
        v76 = cmp eq v74 v75, !1411
        v77 = const unit (), !128
        cbr v76, caller_address_12_block5(v77), caller_address_12_block3(), !1412

        caller_address_12_block3():
        v78 = get_local ptr u64, i, !1413
        v79 = const u64 1, !132
        v80 = call add_19(v53, v79), !1414
        v81 = get_local ptr u64, i, !1415
        br caller_address_12_while(v80), !16

        caller_address_12_block5(v82: ()):
        v83 = get_local ptr u64, i, !1416
        v84 = asm(input: v53) -> u64 input, !1417 {
        }
        v85 = call input_type_17(v84), !1418
        v86 = get_local ptr { u64 }, __matched_value_6, !1419
        store v85 to v86, !1420
        v87 = get_local ptr { u64 }, __matched_value_6, !1421
        v88 = const u64 0
        v89 = get_elem_ptr v87, ptr u64, v88, !1422
        v90 = load v89, !1423
        v91 = const u64 0, !142
        v92 = cmp eq v90 v91, !1424
        cbr v92, caller_address_12_input_coin_owner_21_block0(), caller_address_12_input_coin_owner_21_block1(), !1425

        caller_address_12_input_coin_owner_21_block0():
        v93 = get_local ptr { u64, ( () | { b256 } ) }, __anon_01, !1426
        v94 = const u64 0
        v95 = get_elem_ptr v93, ptr u64, v94, !1427
        v96 = const u64 1, !80
        store v96 to v95, !1428
        v97 = gtf v84, 515, !1429
        v98 = int_to_ptr v97 to ptr b256, !1430
        v99 = load v98, !1431
        v100 = call from_22(v99), !1432
        v101 = const u64 1
        v102 = const u64 1
        v103 = get_elem_ptr v93, ptr { b256 }, v101, v102, !1433
        store v100 to v103, !1434
        v104 = load v93, !1435
        br caller_address_12_input_coin_owner_21_block2(v104), !1436

        caller_address_12_input_coin_owner_21_block1():
        v105 = get_local ptr { u64, ( () | { b256 } ) }, __anon_11, !1437
        v106 = const u64 0
        v107 = get_elem_ptr v105, ptr u64, v106, !1438
        v108 = const u64 0, !80
        store v108 to v107, !1439
        v109 = load v105, !1440
        br caller_address_12_input_coin_owner_21_block2(v109), !1441

        caller_address_12_input_coin_owner_21_block2(v110: { u64, ( () | { b256 } ) }):
        v111 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !1442
        store v110 to v111, !1443
        v112 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !1444
        v113 = load v112, !16
        v114 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !1445
        store v113 to v114, !1446
        v115 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !1447
        v116 = const u64 0
        v117 = get_elem_ptr v115, ptr u64, v116, !1448
        v118 = load v117, !1449
        v119 = const u64 1, !181
        v120 = cmp eq v118 v119, !1450
        v121 = const bool false, !187
        cbr v120, caller_address_12_is_none_23_block2(v121), caller_address_12_is_none_23_block1(), !1451

        caller_address_12_is_none_23_block1():
        v122 = const bool true, !189
        br caller_address_12_is_none_23_block2(v122), !1452

        caller_address_12_is_none_23_block2(v123: bool):
        cbr v123, caller_address_12_block6(), caller_address_12_block7(), !1453

        caller_address_12_block6():
        v124 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !1454
        v125 = load v124, !16
        v126 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !1455
        store v125 to v126, !1456
        v127 = get_local ptr u64, i, !1457
        v128 = const u64 1, !200
        v129 = call add_19(v53, v128), !1458
        v130 = get_local ptr u64, i, !1459
        br caller_address_12_while(v129), !16

        caller_address_12_block7():
        v131 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !1460
        v132 = load v131, !16
        v133 = call unwrap_24(v132), !1461
        v134 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !1462
        v135 = load v134, !16
        v136 = call unwrap_24(v135), !1463
        v137 = call eq_6(v133, v136), !1464
        cbr v137, caller_address_12_block9(), caller_address_12_block10(), !1465

        caller_address_12_block9():
        v138 = get_local ptr u64, i, !1466
        v139 = const u64 1, !220
        v140 = call add_19(v53, v139), !1467
        v141 = get_local ptr u64, i, !1468
        br caller_address_12_while(v140), !16

        caller_address_12_block10():
        v142 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_10, !1469
        v143 = const u64 0
        v144 = get_elem_ptr v142, ptr u64, v143, !1470
        v145 = const u64 1, !226
        store v145 to v144, !1471
        v146 = get_local ptr { u64 }, __anon_20, !1472
        v147 = const u64 0
        v148 = get_elem_ptr v146, ptr u64, v147, !1473
        v149 = const u64 0, !230
        store v149 to v148, !1474
        v150 = load v146, !16
        v151 = const u64 1
        v152 = const u64 1
        v153 = get_elem_ptr v142, ptr { u64 }, v151, v152, !1475
        store v150 to v153, !1476
        v154 = load v142, !16
        br block10(v154), !1477

        caller_address_12_end_while():
        v155 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !1478
        v156 = load v155, !16
        v157 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !1479
        store v156 to v157, !1480
        v158 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !1481
        v159 = const u64 0
        v160 = get_elem_ptr v158, ptr u64, v159, !1482
        v161 = load v160, !16
        v162 = const u64 1, !240
        v163 = cmp eq v161 v162, !1483
        cbr v163, caller_address_12_block12(), caller_address_12_block13(), !1484

        caller_address_12_block12():
        v164 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !1485
        v165 = const u64 1
        v166 = const u64 1
        v167 = get_elem_ptr v164, ptr { b256 }, v165, v166, !16
        v168 = load v167, !16
        v169 = get_local ptr { b256 }, address, !1486
        store v168 to v169, !1487
        v170 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_30, !1488
        v171 = const u64 0
        v172 = get_elem_ptr v170, ptr u64, v171, !1489
        v173 = const u64 0, !226
        store v173 to v172, !1490
        v174 = get_local ptr { b256 }, address, !1491
        v175 = load v174, !16
        v176 = const u64 1
        v177 = const u64 0
        v178 = get_elem_ptr v170, ptr { b256 }, v176, v177, !1492
        store v175 to v178, !1493
        v179 = load v170, !16
        br caller_address_12_block17(v179), !16

        caller_address_12_block13():
        v180 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !1494
        v181 = const u64 0
        v182 = get_elem_ptr v180, ptr u64, v181, !1495
        v183 = load v182, !16
        v184 = const u64 0, !240
        v185 = cmp eq v183 v184, !1496
        cbr v185, caller_address_12_block14(), caller_address_12_block15(), !1497

        caller_address_12_block14():
        v186 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_40, !1498
        v187 = const u64 0
        v188 = get_elem_ptr v186, ptr u64, v187, !1499
        v189 = const u64 1, !226
        store v189 to v188, !1500
        v190 = get_local ptr { u64 }, __anon_5, !1501
        v191 = const u64 0
        v192 = get_elem_ptr v190, ptr u64, v191, !1502
        v193 = const u64 1, !230
        store v193 to v192, !1503
        v194 = load v190, !16
        v195 = const u64 1
        v196 = const u64 1
        v197 = get_elem_ptr v186, ptr { u64 }, v195, v196, !1504
        store v194 to v197, !1505
        v198 = load v186, !16
        br caller_address_12_block17(v198), !16

        caller_address_12_block15():
        v199 = const u64 14757395258967588866, !243
        revert v199, !1506

        caller_address_12_block17(v200: { u64, ( { b256 } | { u64 } ) }):
        br block10(v200), !16

        block10(v201: { u64, ( { b256 } | { u64 } ) }):
        v202 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !287
        store v201 to v202, !287
        v203 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !16
        v204 = const u64 0
        v205 = get_elem_ptr v203, ptr u64, v204, !16
        v206 = load v205
        v207 = const u64 1, !16
        v208 = cmp eq v206 v207, !293
        cbr v208, block1(), block2(), !293

        block1():
        v209 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !16
        v210 = const u64 1
        v211 = const u64 1
        v212 = get_elem_ptr v209, ptr { u64 }, v210, v211
        v213 = load v212
        v214 = get_local ptr { u64 }, err, !299
        store v213 to v214, !299
        v215 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_0, !226
        v216 = const u64 0
        v217 = get_elem_ptr v215, ptr u64, v216, !226
        v218 = const u64 1, !226
        store v218 to v217, !226
        v219 = get_local ptr { u64 }, err, !305
        v220 = load v219
        v221 = const u64 1
        v222 = const u64 1
        v223 = get_elem_ptr v215, ptr { u64 }, v221, v222, !226
        store v220 to v223, !226
        v224 = load v215
        br block6(v224)

        block2():
        v225 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !16
        v226 = const u64 0
        v227 = get_elem_ptr v225, ptr u64, v226, !16
        v228 = load v227
        v229 = const u64 0, !16
        v230 = cmp eq v228 v229, !315
        cbr v230, block3(), block4(), !315

        block3():
        v231 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !16
        v232 = const u64 1
        v233 = const u64 0
        v234 = get_elem_ptr v231, ptr { b256 }, v232, v233
        v235 = load v234
        v236 = get_local ptr { b256 }, owner, !321
        store v235 to v236, !321
        v237 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_1, !226
        v238 = const u64 0
        v239 = get_elem_ptr v237, ptr u64, v238, !226
        v240 = const u64 0, !226
        store v240 to v239, !226
        v241 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !328
        v242 = const u64 0
        v243 = get_elem_ptr v241, ptr u64, v242, !328
        v244 = const u64 0, !328
        store v244 to v243, !328
        v245 = get_local ptr { b256 }, owner, !332
        v246 = load v245
        v247 = const u64 1
        v248 = const u64 0
        v249 = get_elem_ptr v241, ptr { b256 }, v247, v248, !328
        store v246 to v249, !328
        v250 = load v241
        v251 = const u64 1
        v252 = const u64 0
        v253 = get_elem_ptr v237, ptr { u64, ( { b256 } | { b256 } ) }, v251, v252, !226
        store v250 to v253, !226
        v254 = load v237
        br block6(v254)

        block4():
        v255 = const u64 14757395258967588866, !287
        revert v255, !287

        block6(v256: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        br block8(v256)

        block7():
        v257 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_3, !226
        v258 = const u64 0
        v259 = get_elem_ptr v257, ptr u64, v258, !226
        v260 = const u64 0, !226
        store v260 to v259, !226
        v261 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_4, !328
        v262 = const u64 0
        v263 = get_elem_ptr v261, ptr u64, v262, !328
        v264 = const u64 1, !328
        store v264 to v263, !328
        v265 = asm(r1) -> b256 r1, !1507 {
            gm     r1 i2, !353
        }
        v266 = call from_22(v265), !1508
        v267 = const u64 1
        v268 = const u64 1
        v269 = get_elem_ptr v261, ptr { b256 }, v267, v268, !328
        store v266 to v269, !328
        v270 = load v261
        v271 = const u64 1
        v272 = const u64 0
        v273 = get_elem_ptr v257, ptr { u64, ( { b256 } | { b256 } ) }, v271, v272, !226
        store v270 to v273, !226
        v274 = load v257
        br block8(v274)

        block8(v275: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        ret { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } v275
    }

    pub fn caller_is_external_11() -> bool, !1509 {
        entry():
        v0 = asm(r1) -> bool r1, !10 {
            gm     r1 i1, !12
        }
        ret bool v0
    }

    pub fn caller_address_12() -> { u64, ( { b256 } | { u64 } ) }, !1510 {
        local { u64, ( () | { b256 } ) } __anon_0
        local { u64 } __anon_00
        local { u64, ( () | { b256 } ) } __anon_01
        local { u64, ( { b256 } | { u64 } ) } __anon_1
        local { u64 } __anon_10
        local { u64, ( () | { b256 } ) } __anon_11
        local { u64 } __anon_2
        local { u64, ( { b256 } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { u64 } ) } __anon_4
        local { u64 } __anon_5
        local u8 __matched_value_1
        local { u64 } __matched_value_2
        local { u64, ( () | { b256 } ) } __matched_value_3
        local { u64 } __matched_value_30
        local { u64, ( () | { b256 } ) } __matched_value_31
        local { u64 } __matched_value_6
        local { b256 } address
        local mut { u64, ( () | { b256 } ) } candidate
        local mut u64 i
        local u64 inputs
        local { u64, ( () | { b256 } ) } owner_of_input
        local { u64 } type_of_input

        entry():
        v0 = const u64 0, !15
        v1 = gtf v0, 1, !1511
        v2 = bitcast v1 to u8, !1512
        v3 = get_local ptr u8, __matched_value_1, !1513
        v4 = get_local ptr u8, __matched_value_1, !1514
        v5 = const u8 0, !26
        v6 = cmp eq v2 v5, !1515
        cbr v6, input_count_13_tx_type_14_block0(), input_count_13_tx_type_14_block1(), !1516

        input_count_13_tx_type_14_block0():
        v7 = get_local ptr { u64 }, __anon_00, !1517
        v8 = const u64 0
        v9 = get_elem_ptr v7, ptr u64, v8, !1518
        v10 = const u64 0, !30
        store v10 to v9, !1519
        v11 = load v7, !1520
        br input_count_13_tx_type_14_block5(v11), !1521

        input_count_13_tx_type_14_block1():
        v12 = get_local ptr u8, __matched_value_1, !1522
        v13 = const u8 1, !37
        v14 = cmp eq v2 v13, !1523
        cbr v14, input_count_13_tx_type_14_block2(), input_count_13_tx_type_14_block3(), !1524

        input_count_13_tx_type_14_block2():
        v15 = get_local ptr { u64 }, __anon_10, !1525
        v16 = const u64 0
        v17 = get_elem_ptr v15, ptr u64, v16, !1526
        v18 = const u64 1, !30
        store v18 to v17, !1527
        v19 = load v15, !1528
        br input_count_13_tx_type_14_block5(v19), !1529

        input_count_13_tx_type_14_block3():
        v20 = const u64 0, !46
        revert v20, !1530

        input_count_13_tx_type_14_block5(v21: { u64 }):
        v22 = get_local ptr { u64 }, __matched_value_30, !1531
        store v21 to v22, !1532
        v23 = get_local ptr { u64 }, __matched_value_30, !1533
        v24 = const u64 0
        v25 = get_elem_ptr v23, ptr u64, v24, !1534
        v26 = load v25, !17
        v27 = const u64 0, !19
        v28 = cmp eq v26 v27, !1535
        cbr v28, input_count_13_block0(), input_count_13_block1(), !1536

        input_count_13_block0():
        v29 = const u64 0, !60
        v30 = gtf v29, 5, !1537
        v31 = bitcast v30 to u64, !1538
        br input_count_13_block5(v31), !17

        input_count_13_block1():
        v32 = get_local ptr { u64 }, __matched_value_30, !1539
        v33 = const u64 0
        v34 = get_elem_ptr v32, ptr u64, v33, !1540
        v35 = load v34, !17
        v36 = const u64 1, !19
        v37 = cmp eq v35 v36, !1541
        cbr v37, input_count_13_block2(), input_count_13_block3(), !1542

        input_count_13_block2():
        v38 = const u64 0, !71
        v39 = gtf v38, 259, !1543
        v40 = bitcast v39 to u64, !1544
        br input_count_13_block5(v40), !17

        input_count_13_block3():
        v41 = const u64 14757395258967588866, !51
        revert v41, !1545

        input_count_13_block5(v42: u64):
        v43 = get_local ptr u64, inputs, !77
        v44 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0, !80
        v45 = const u64 0
        v46 = get_elem_ptr v44, ptr u64, v45, !80
        v47 = const u64 0, !80
        store v47 to v46, !80
        v48 = load v44
        v49 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !85
        store v48 to v49, !85
        v50 = get_local ptr u64, i, !88
        v51 = const u64 0, !90
        br while(v51)

        while(v52: u64):
        v53 = get_local ptr u64, i, !92
        v54 = get_local ptr u64, inputs, !94
        v55 = cmp lt v52 v42, !96
        cbr v55, while_body(), end_while()

        while_body():
        v56 = get_local ptr u64, i, !99
        v57 = asm(input: v52) -> u64 input, !1546 {
        }
        v58 = call input_type_17(v57), !105
        v59 = get_local ptr { u64 }, type_of_input, !107
        store v58 to v59, !107
        v60 = get_local ptr { u64 }, type_of_input, !110
        v61 = load v60
        v62 = get_local ptr { u64 }, __matched_value_2, !113
        store v61 to v62, !113
        v63 = get_local ptr { u64 }, __matched_value_2, !110
        v64 = const u64 0
        v65 = get_elem_ptr v63, ptr u64, v64, !110
        v66 = load v65
        v67 = const u64 0, !110
        v68 = cmp eq v66 v67, !119
        v69 = const unit (), !121
        cbr v68, block5(v69), block1(), !119

        block1():
        v70 = get_local ptr { u64 }, __matched_value_2, !110
        v71 = const u64 0
        v72 = get_elem_ptr v70, ptr u64, v71, !110
        v73 = load v72
        v74 = const u64 2, !110
        v75 = cmp eq v73 v74, !126
        v76 = const unit (), !128
        cbr v75, block5(v76), block3(), !126

        block3():
        v77 = get_local ptr u64, i, !130
        v78 = const u64 1, !132
        v79 = call add_19(v52, v78), !133
        v80 = get_local ptr u64, i, !133
        br while(v79)

        block5(v81: ()):
        v82 = get_local ptr u64, i, !137
        v83 = asm(input: v52) -> u64 input, !1547 {
        }
        v84 = call input_type_17(v83), !1548
        v85 = get_local ptr { u64 }, __matched_value_6, !1549
        store v84 to v85, !1550
        v86 = get_local ptr { u64 }, __matched_value_6, !1551
        v87 = const u64 0
        v88 = get_elem_ptr v86, ptr u64, v87, !1552
        v89 = load v88, !141
        v90 = const u64 0, !142
        v91 = cmp eq v89 v90, !1553
        cbr v91, input_coin_owner_21_block0(), input_coin_owner_21_block1(), !1554

        input_coin_owner_21_block0():
        v92 = get_local ptr { u64, ( () | { b256 } ) }, __anon_01, !1555
        v93 = const u64 0
        v94 = get_elem_ptr v92, ptr u64, v93, !1556
        v95 = const u64 1, !80
        store v95 to v94, !1557
        v96 = gtf v83, 515, !1558
        v97 = int_to_ptr v96 to ptr b256, !1559
        v98 = load v97, !141
        v99 = call from_22(v98), !1560
        v100 = const u64 1
        v101 = const u64 1
        v102 = get_elem_ptr v92, ptr { b256 }, v100, v101, !1561
        store v99 to v102, !1562
        v103 = load v92, !141
        br input_coin_owner_21_block2(v103), !141

        input_coin_owner_21_block1():
        v104 = get_local ptr { u64, ( () | { b256 } ) }, __anon_11, !1563
        v105 = const u64 0
        v106 = get_elem_ptr v104, ptr u64, v105, !1564
        v107 = const u64 0, !80
        store v107 to v106, !1565
        v108 = load v104, !141
        br input_coin_owner_21_block2(v108), !141

        input_coin_owner_21_block2(v109: { u64, ( () | { b256 } ) }):
        v110 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !171
        store v109 to v110, !171
        v111 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !174
        v112 = load v111
        v113 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !1566
        store v112 to v113, !1567
        v114 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !1568
        v115 = const u64 0
        v116 = get_elem_ptr v114, ptr u64, v115, !1569
        v117 = load v116, !177
        v118 = const u64 1, !181
        v119 = cmp eq v117 v118, !1570
        v120 = const bool false, !187
        cbr v119, is_none_23_block2(v120), is_none_23_block1(), !1571

        is_none_23_block1():
        v121 = const bool true, !189
        br is_none_23_block2(v121), !177

        is_none_23_block2(v122: bool):
        cbr v122, block6(), block7(), !177

        block6():
        v123 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !192
        v124 = load v123
        v125 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !195
        store v124 to v125, !195
        v126 = get_local ptr u64, i, !198
        v127 = const u64 1, !200
        v128 = call add_19(v52, v127), !201
        v129 = get_local ptr u64, i, !201
        br while(v128)

        block7():
        v130 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !205
        v131 = load v130
        v132 = call unwrap_24(v131), !208
        v133 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !210
        v134 = load v133
        v135 = call unwrap_24(v134), !213
        v136 = call eq_6(v132, v135), !215
        cbr v136, block9(), block10(), !215

        block9():
        v137 = get_local ptr u64, i, !218
        v138 = const u64 1, !220
        v139 = call add_19(v52, v138), !221
        v140 = get_local ptr u64, i, !221
        br while(v139)

        block10():
        v141 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_1, !226
        v142 = const u64 0
        v143 = get_elem_ptr v141, ptr u64, v142, !226
        v144 = const u64 1, !226
        store v144 to v143, !226
        v145 = get_local ptr { u64 }, __anon_2, !230
        v146 = const u64 0
        v147 = get_elem_ptr v145, ptr u64, v146, !230
        v148 = const u64 0, !230
        store v148 to v147, !230
        v149 = load v145
        v150 = const u64 1
        v151 = const u64 1
        v152 = get_elem_ptr v141, ptr { u64 }, v150, v151, !226
        store v149 to v152, !226
        v153 = load v141
        ret { u64, ( { b256 } | { u64 } ) } v153, !238

        end_while():
        v154 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !240
        v155 = load v154
        v156 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !243
        store v155 to v156, !243
        v157 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !240
        v158 = const u64 0
        v159 = get_elem_ptr v157, ptr u64, v158, !240
        v160 = load v159
        v161 = const u64 1, !240
        v162 = cmp eq v160 v161, !249
        cbr v162, block12(), block13(), !249

        block12():
        v163 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !240
        v164 = const u64 1
        v165 = const u64 1
        v166 = get_elem_ptr v163, ptr { b256 }, v164, v165
        v167 = load v166
        v168 = get_local ptr { b256 }, address, !255
        store v167 to v168, !255
        v169 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_3, !226
        v170 = const u64 0
        v171 = get_elem_ptr v169, ptr u64, v170, !226
        v172 = const u64 0, !226
        store v172 to v171, !226
        v173 = get_local ptr { b256 }, address, !261
        v174 = load v173
        v175 = const u64 1
        v176 = const u64 0
        v177 = get_elem_ptr v169, ptr { b256 }, v175, v176, !226
        store v174 to v177, !226
        v178 = load v169
        br block17(v178)

        block13():
        v179 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !240
        v180 = const u64 0
        v181 = get_elem_ptr v179, ptr u64, v180, !240
        v182 = load v181
        v183 = const u64 0, !240
        v184 = cmp eq v182 v183, !271
        cbr v184, block14(), block15(), !271

        block14():
        v185 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_4, !226
        v186 = const u64 0
        v187 = get_elem_ptr v185, ptr u64, v186, !226
        v188 = const u64 1, !226
        store v188 to v187, !226
        v189 = get_local ptr { u64 }, __anon_5, !230
        v190 = const u64 0
        v191 = get_elem_ptr v189, ptr u64, v190, !230
        v192 = const u64 1, !230
        store v192 to v191, !230
        v193 = load v189
        v194 = const u64 1
        v195 = const u64 1
        v196 = get_elem_ptr v185, ptr { u64 }, v194, v195, !226
        store v193 to v196, !226
        v197 = load v185
        br block17(v197)

        block15():
        v198 = const u64 14757395258967588866, !243
        revert v198, !243

        block17(v199: { u64, ( { b256 } | { u64 } ) }):
        ret { u64, ( { b256 } | { u64 } ) } v199
    }

    pub fn input_count_13() -> u64, !1572 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local u8 __matched_value_1
        local { u64 } __matched_value_3

        entry():
        v0 = const u64 0, !15
        v1 = gtf v0, 1, !1573
        v2 = bitcast v1 to u8, !1574
        v3 = get_local ptr u8, __matched_value_1, !1575
        v4 = get_local ptr u8, __matched_value_1, !1576
        v5 = const u8 0, !26
        v6 = cmp eq v2 v5, !1577
        cbr v6, tx_type_14_block0(), tx_type_14_block1(), !1578

        tx_type_14_block0():
        v7 = get_local ptr { u64 }, __anon_0, !1579
        v8 = const u64 0
        v9 = get_elem_ptr v7, ptr u64, v8, !1580
        v10 = const u64 0, !30
        store v10 to v9, !1581
        v11 = load v7, !19
        br tx_type_14_block5(v11), !19

        tx_type_14_block1():
        v12 = get_local ptr u8, __matched_value_1, !1582
        v13 = const u8 1, !37
        v14 = cmp eq v2 v13, !1583
        cbr v14, tx_type_14_block2(), tx_type_14_block3(), !1584

        tx_type_14_block2():
        v15 = get_local ptr { u64 }, __anon_1, !1585
        v16 = const u64 0
        v17 = get_elem_ptr v15, ptr u64, v16, !1586
        v18 = const u64 1, !30
        store v18 to v17, !1587
        v19 = load v15, !19
        br tx_type_14_block5(v19), !19

        tx_type_14_block3():
        v20 = const u64 0, !46
        revert v20, !1588

        tx_type_14_block5(v21: { u64 }):
        v22 = get_local ptr { u64 }, __matched_value_3, !51
        store v21 to v22, !51
        v23 = get_local ptr { u64 }, __matched_value_3, !19
        v24 = const u64 0
        v25 = get_elem_ptr v23, ptr u64, v24, !19
        v26 = load v25
        v27 = const u64 0, !19
        v28 = cmp eq v26 v27, !57
        cbr v28, block0(), block1(), !57

        block0():
        v29 = const u64 0, !60
        v30 = gtf v29, 5, !61
        v31 = bitcast v30 to u64, !61
        br block5(v31)

        block1():
        v32 = get_local ptr { u64 }, __matched_value_3, !19
        v33 = const u64 0
        v34 = get_elem_ptr v32, ptr u64, v33, !19
        v35 = load v34
        v36 = const u64 1, !19
        v37 = cmp eq v35 v36, !68
        cbr v37, block2(), block3(), !68

        block2():
        v38 = const u64 0, !71
        v39 = gtf v38, 259, !72
        v40 = bitcast v39 to u64, !72
        br block5(v40)

        block3():
        v41 = const u64 14757395258967588866, !51
        revert v41, !51

        block5(v42: u64):
        ret u64 v42
    }

    pub fn tx_type_14() -> { u64 }, !1589 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local u8 __matched_value_1

        entry():
        v0 = const u64 0, !15
        v1 = gtf v0, 1, !20
        v2 = bitcast v1 to u8, !20
        v3 = get_local ptr u8, __matched_value_1, !23
        v4 = get_local ptr u8, __matched_value_1, !20
        v5 = const u8 0, !26
        v6 = cmp eq v2 v5, !27
        cbr v6, block0(), block1(), !27

        block0():
        v7 = get_local ptr { u64 }, __anon_0, !30
        v8 = const u64 0
        v9 = get_elem_ptr v7, ptr u64, v8, !30
        v10 = const u64 0, !30
        store v10 to v9, !30
        v11 = load v7
        br block5(v11)

        block1():
        v12 = get_local ptr u8, __matched_value_1, !20
        v13 = const u8 1, !37
        v14 = cmp eq v2 v13, !38
        cbr v14, block2(), block3(), !38

        block2():
        v15 = get_local ptr { u64 }, __anon_1, !30
        v16 = const u64 0
        v17 = get_elem_ptr v15, ptr u64, v16, !30
        v18 = const u64 1, !30
        store v18 to v17, !30
        v19 = load v15
        br block5(v19)

        block3():
        v20 = const u64 0, !46
        revert v20, !1590

        block5(v21: { u64 }):
        ret { u64 } v21
    }

    pub fn eq_15(self !1591: u8, other !1592: u8) -> bool, !1593 {
        entry(self: u8, other: u8):
        v0 = cmp eq self other
        ret bool v0
    }

    pub fn lt_16(self !1594: u64, other !1595: u64) -> bool, !1596 {
        entry(self: u64, other: u64):
        v0 = cmp lt self other
        ret bool v0
    }

    pub fn input_type_17(index !1597: u64) -> { u64 }, !1598 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local u8 __matched_value_2

        entry(index: u64):
        v0 = gtf index, 512, !1599
        v1 = bitcast v0 to u8, !1599
        v2 = get_local ptr u8, __matched_value_2, !1600
        v3 = get_local ptr u8, __matched_value_2, !1599
        v4 = const u8 0, !1601
        v5 = cmp eq v1 v4, !1602
        cbr v5, block0(), block1(), !1602

        block0():
        v6 = get_local ptr { u64 }, __anon_0, !1603
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr u64, v7, !1603
        v9 = const u64 0, !1603
        store v9 to v8, !1603
        v10 = load v6
        br block8(v10)

        block1():
        v11 = get_local ptr u8, __matched_value_2, !1599
        v12 = const u8 1, !1604
        v13 = cmp eq v1 v12, !1605
        cbr v13, block2(), block3(), !1605

        block2():
        v14 = get_local ptr { u64 }, __anon_1, !1603
        v15 = const u64 0
        v16 = get_elem_ptr v14, ptr u64, v15, !1603
        v17 = const u64 1, !1603
        store v17 to v16, !1603
        v18 = load v14
        br block7(v18)

        block3():
        v19 = get_local ptr u8, __matched_value_2, !1599
        v20 = const u8 2, !1606
        v21 = cmp eq v1 v20, !1607
        cbr v21, block4(), block5(), !1607

        block4():
        v22 = get_local ptr { u64 }, __anon_2, !1603
        v23 = const u64 0
        v24 = get_elem_ptr v22, ptr u64, v23, !1603
        v25 = const u64 2, !1603
        store v25 to v24, !1603
        v26 = load v22
        br block7(v26)

        block5():
        v27 = const u64 0, !1608
        revert v27, !1610

        block7(v28: { u64 }):
        br block8(v28)

        block8(v29: { u64 }):
        ret { u64 } v29
    }

    pub fn as_u64_18(self !1611: u64) -> u64, !1612 {
        entry(self: u64):
        v0 = asm(input: self) -> u64 input, !103 {
        }
        ret u64 v0
    }

    pub fn add_19(self !1613: u64, other !1614: u64) -> u64, !1615 {
        local u64 res

        entry(self: u64, other: u64):
        v0 = add self, other
        v1 = get_local ptr u64, res, !1616
        v2 = get_local ptr u64, res, !1617
        v3 = const u64 65535, !1619
        v4 = cmp gt v0 v3
        cbr v4, block0(), block1(), !1620

        block0():
        v5 = const u64 0, !1621
        revert v5, !1622

        block1():
        v6 = get_local ptr u64, res, !1623
        ret u64 v0
    }

    pub fn max_20() -> u64, !1624 {
        entry():
        v0 = const u64 65535, !1619
        ret u64 v0
    }

    pub fn input_coin_owner_21(index !1625: u64) -> { u64, ( () | { b256 } ) }, !1626 {
        local { u64, ( () | { b256 } ) } __anon_0
        local { u64, ( () | { b256 } ) } __anon_1
        local { u64 } __matched_value_6

        entry(index: u64):
        v0 = call input_type_17(index), !142
        v1 = get_local ptr { u64 }, __matched_value_6, !144
        store v0 to v1, !144
        v2 = get_local ptr { u64 }, __matched_value_6, !142
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !142
        v5 = load v4
        v6 = const u64 0, !142
        v7 = cmp eq v5 v6, !150
        cbr v7, block0(), block1(), !150

        block0():
        v8 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0, !80
        v9 = const u64 0
        v10 = get_elem_ptr v8, ptr u64, v9, !80
        v11 = const u64 1, !80
        store v11 to v10, !80
        v12 = gtf index, 515, !156
        v13 = int_to_ptr v12 to ptr b256, !156
        v14 = load v13
        v15 = call from_22(v14), !160
        v16 = const u64 1
        v17 = const u64 1
        v18 = get_elem_ptr v8, ptr { b256 }, v16, v17, !80
        store v15 to v18, !80
        v19 = load v8
        br block2(v19)

        block1():
        v20 = get_local ptr { u64, ( () | { b256 } ) }, __anon_1, !80
        v21 = const u64 0
        v22 = get_elem_ptr v20, ptr u64, v21, !80
        v23 = const u64 0, !80
        store v23 to v22, !80
        v24 = load v20
        br block2(v24)

        block2(v25: { u64, ( () | { b256 } ) }):
        ret { u64, ( () | { b256 } ) } v25
    }

    pub fn from_22(bits !1627: b256) -> { b256 }, !1628 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !1629
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !1629
        v3 = load v0
        ret { b256 } v3
    }

    pub fn is_none_23(self !1630: { u64, ( () | { b256 } ) }) -> bool, !1631 {
        local { u64, ( () | { b256 } ) } __matched_value_3

        entry(self: { u64, ( () | { b256 } ) }):
        v0 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !178
        store self to v0, !178
        v1 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !181
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !181
        v4 = load v3
        v5 = const u64 1, !181
        v6 = cmp eq v4 v5, !185
        v7 = const bool false, !187
        cbr v6, block2(v7), block1(), !185

        block1():
        v8 = const bool true, !189
        br block2(v8)

        block2(v9: bool):
        ret bool v9
    }

    pub fn unwrap_24(self !1632: { u64, ( () | { b256 } ) }) -> { b256 }, !1633 {
        local { u64, ( () | { b256 } ) } __matched_value_4
        local { b256 } inner_value

        entry(self: { u64, ( () | { b256 } ) }):
        v0 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !604
        store self to v0, !604
        v1 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !607
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !607
        v4 = load v3
        v5 = const u64 1, !607
        v6 = cmp eq v4 v5, !611
        cbr v6, block0(), block1(), !611

        block0():
        v7 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !607
        v8 = const u64 1
        v9 = const u64 1
        v10 = get_elem_ptr v7, ptr { b256 }, v8, v9
        v11 = load v10
        v12 = get_local ptr { b256 }, inner_value, !617
        store v11 to v12, !617
        v13 = get_local ptr { b256 }, inner_value, !620
        v14 = load v13
        ret { b256 } v14

        block1():
        v15 = const u64 0, !646
        revert v15, !1634
    }

    pub fn caller_contract_id_25() -> { b256 }, !1635 {
        entry():
        v0 = asm(r1) -> b256 r1, !351 {
            gm     r1 i2, !353
        }
        v1 = call from_22(v0), !354
        ret { b256 } v1
    }

    pub fn from_26(bits !1636: b256) -> { b256 }, !1637 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !1638
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !1638
        v3 = load v0
        ret { b256 } v3
    }

    pub fn get_owner_27() -> b256, !1640 {
        local { b256, u64, b256 } __anon_0
        local { u64, ( () | b256 ) } __anon_00
        local { b256, u64, u64 } __anon_000
        local { u64, ( () | b256 ) } __anon_1
        local { u64, ( () | b256 ) } __anon_2
        local bool __matched_value_1
        local { u64, ( () | b256 ) } __matched_value_4
        local { b256, u64, u64 } __tuple_2
        local { b256, u64, u64 } __tuple_2_
        local b256 inner_value
        local b256 key_for_storage
        local u64 last_slot
        local u64 number_of_slots
        local u64 number_of_slots0
        local b256 offset_slot
        local mut u256 offset_slot0
        local u64 place_in_slot
        local u64 place_in_slot0
        local u64 result_ptr
        local u64 size_of_t

        entry():
        v0 = get_local ptr { b256, u64, b256 }, __anon_0, !387
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        v3 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !387
        store v3 to v2, !387
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4
        v6 = const u64 0
        store v6 to v5, !387
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr b256, v7
        v9 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !387
        store v9 to v8, !387
        v10 = load v0
        v11 = call slot_51(v10), !1641
        v12 = call offset_46(v10), !1642
        v13 = const u64 32
        v14 = const u64 0, !403
        v15 = cmp eq v13 v14, !1643
        cbr v15, read_28_read_30_block0(), read_28_read_30_block1(), !1644

        read_28_read_30_block0():
        v16 = get_local ptr { u64, ( () | b256 ) }, __anon_00, !1645
        v17 = const u64 0
        v18 = get_elem_ptr v16, ptr u64, v17, !1646
        v19 = const u64 0, !80
        store v19 to v18, !1647
        v20 = load v16, !1648
        br read_28_block0(v20), !1649

        read_28_read_30_block1():
        v21 = get_local ptr u64, size_of_t, !1650
        v22 = const u64 8, !420
        v23 = mul v12, v22, !1651
        v24 = get_local ptr u64, size_of_t, !1652
        v25 = const u64 32
        v26 = add v23, v25, !1653
        v27 = const u64 31, !427
        v28 = add v26, v27, !1654
        v29 = const u64 5, !430
        v30 = rsh v28, v29, !1655
        v31 = get_local ptr u64, last_slot, !1656
        v32 = const u64 4, !435
        v33 = mod v12, v32, !1657
        v34 = get_local ptr u64, place_in_slot0, !1658
        v35 = get_local ptr bool, __matched_value_1, !1659
        v36 = get_local ptr bool, __matched_value_1, !1660
        v37 = const bool true
        v38 = const bool true, !444
        v39 = cmp eq v37 v38, !1661
        cbr v39, read_28_read_30_slot_calculator_31_block0(), read_28_read_30_slot_calculator_31_block1(), !1662

        read_28_read_30_slot_calculator_31_block0():
        v40 = get_local ptr u64, place_in_slot0, !1663
        v41 = const u64 8, !450
        v42 = mul v33, v41, !1664
        v43 = get_local ptr u64, size_of_t, !1665
        v44 = add v42, v25, !1666
        v45 = const u64 31, !457
        v46 = add v44, v45, !1667
        v47 = const u64 5, !460
        v48 = rsh v46, v47, !1668
        br read_28_read_30_slot_calculator_31_block5(v48), !1669

        read_28_read_30_slot_calculator_31_block1():
        v49 = get_local ptr bool, __matched_value_1, !1670
        v50 = const bool false, !465
        v51 = cmp eq v37 v50, !1671
        v52 = const u64 1, !468
        cbr v51, read_28_read_30_slot_calculator_31_block5(v52), read_28_read_30_slot_calculator_31_block3(), !1672

        read_28_read_30_slot_calculator_31_block3():
        v53 = const u64 14757395258967588866, !440
        revert v53, !1673

        read_28_read_30_slot_calculator_31_block5(v54: u64):
        v55 = get_local ptr u64, number_of_slots0, !1674
        v56 = asm(input: v11) -> u256 input, !1675 {
        }
        v57 = get_local ptr u256, offset_slot0, !1676
        store v56 to v57, !1677
        v58 = get_local ptr u256, offset_slot0, !1678
        v59 = load v58, !1679
        v60 = get_local ptr u64, last_slot, !1680
        v61 = call as_u256_40(v30), !1681
        v62 = get_local ptr u64, number_of_slots0, !1682
        v63 = call as_u256_40(v54), !1683
        v64 = sub v61, v63, !1684
        v65 = add v59, v64, !1685
        v66 = get_local ptr u256, offset_slot0, !1686
        store v65 to v66, !1687
        v67 = get_local ptr u256, offset_slot0, !1688
        v68 = load v67, !1689
        v69 = asm(input: v68) -> b256 input, !1690 {
        }
        v70 = get_local ptr u64, number_of_slots0, !1691
        v71 = get_local ptr u64, place_in_slot0, !1692
        v72 = get_local ptr { b256, u64, u64 }, __anon_000, !1693
        v73 = const u64 0
        v74 = get_elem_ptr v72, ptr b256, v73, !1694
        store v69 to v74, !1695
        v75 = const u64 1
        v76 = get_elem_ptr v72, ptr u64, v75, !1696
        store v54 to v76, !1697
        v77 = const u64 2
        v78 = get_elem_ptr v72, ptr u64, v77, !1698
        store v33 to v78, !1699
        v79 = load v72, !1700
        v80 = get_local ptr { b256, u64, u64 }, __tuple_2, !1701
        store v79 to v80, !1702
        v81 = get_local ptr { b256, u64, u64 }, __tuple_2, !1703
        v82 = load v81, !1704
        v83 = get_local ptr { b256, u64, u64 }, __tuple_2_, !1705
        store v82 to v83, !1706
        v84 = get_local ptr { b256, u64, u64 }, __tuple_2_, !1707
        v85 = const u64 0
        v86 = get_elem_ptr v84, ptr b256, v85, !1708
        v87 = load v86, !1709
        v88 = get_local ptr b256, offset_slot, !1710
        store v87 to v88, !1711
        v89 = get_local ptr { b256, u64, u64 }, __tuple_2_, !1712
        v90 = const u64 1
        v91 = get_elem_ptr v89, ptr u64, v90, !1713
        v92 = load v91, !1714
        v93 = get_local ptr u64, number_of_slots, !1715
        v94 = get_local ptr { b256, u64, u64 }, __tuple_2_, !1716
        v95 = const u64 2
        v96 = get_elem_ptr v94, ptr u64, v95, !1717
        v97 = load v96, !1718
        v98 = get_local ptr u64, place_in_slot, !1719
        v99 = get_local ptr u64, number_of_slots, !1720
        v100 = const u64 32, !537
        v101 = mul v92, v100, !1721
        v102 = const u64 8
        v103 = mul v102, v101, !1722
        v104 = asm(size: v103, ptr) -> u64 ptr, !1723 {
            aloc   size, !546
            move   ptr hp, !547
        }
        v105 = get_local ptr u64, result_ptr, !1724
        v106 = get_local ptr b256, offset_slot, !1725
        v107 = load v106, !1726
        v108 = get_local ptr u64, result_ptr, !1727
        v109 = get_local ptr u64, number_of_slots, !1728
        v110 = get_local ptr b256, key_for_storage, !1729
        store v107 to v110, !1730
        v111 = int_to_ptr v104 to ptr b256, !1731
        v112 = state_load_quad_word v111, key v110, v92, !1732
        cbr v112, read_28_read_30_block3(), read_28_read_30_block4(), !1733

        read_28_read_30_block3():
        v113 = get_local ptr { u64, ( () | b256 ) }, __anon_1, !1734
        v114 = const u64 0
        v115 = get_elem_ptr v113, ptr u64, v114, !1735
        v116 = const u64 1, !80
        store v116 to v115, !1736
        v117 = get_local ptr u64, result_ptr, !1737
        v118 = get_local ptr u64, place_in_slot, !1738
        v119 = const u64 8
        v120 = mul v119, v97, !1739
        v121 = add v104, v120, !1740
        v122 = const bool true
        cbr v122, read_28_read_30_read_43_block0(), read_28_read_30_read_43_block1(), !1741

        read_28_read_30_read_43_block0():
        v123 = asm(ptr: v121) -> b256 ptr, !1742 {
        }
        br read_28_read_30_read_43_block5(v123), !1743

        read_28_read_30_read_43_block1():
        v124 = const u64 32
        v125 = const u64 1, !580
        v126 = cmp eq v124 v125, !1744
        cbr v126, read_28_read_30_read_43_block2(), read_28_read_30_read_43_block3(), !1745

        read_28_read_30_read_43_block2():
        v127 = asm(ptr: v121, val) -> b256 val, !1746 {
            lb     val ptr i0, !586
        }
        br read_28_read_30_read_43_block4(v127), !1747

        read_28_read_30_read_43_block3():
        v128 = asm(ptr: v121, val) -> b256 val, !1748 {
            lw     val ptr i0, !590
        }
        br read_28_read_30_read_43_block4(v128), !1749

        read_28_read_30_read_43_block4(v129: b256):
        br read_28_read_30_read_43_block5(v129), !1750

        read_28_read_30_read_43_block5(v130: b256):
        v131 = const u64 1
        v132 = const u64 1
        v133 = get_elem_ptr v113, ptr b256, v131, v132, !1751
        store v130 to v133, !1752
        v134 = load v113, !1753
        br read_28_read_30_block5(v134), !1754

        read_28_read_30_block4():
        v135 = get_local ptr { u64, ( () | b256 ) }, __anon_2, !1755
        v136 = const u64 0
        v137 = get_elem_ptr v135, ptr u64, v136, !1756
        v138 = const u64 0, !80
        store v138 to v137, !1757
        v139 = load v135, !1758
        br read_28_read_30_block5(v139), !1759

        read_28_read_30_block5(v140: { u64, ( () | b256 ) }):
        br read_28_block0(v140), !1760

        read_28_block0(v141: { u64, ( () | b256 ) }):
        v142 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !1761
        store v141 to v142, !1762
        v143 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !1763
        v144 = const u64 0
        v145 = get_elem_ptr v143, ptr u64, v144, !1764
        v146 = load v145, !1765
        v147 = const u64 1, !607
        v148 = cmp eq v146 v147, !1766
        cbr v148, read_28_unwrap_29_block0(), read_28_unwrap_29_block1(), !1767

        read_28_unwrap_29_block0():
        v149 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !1768
        v150 = const u64 1
        v151 = const u64 1
        v152 = get_elem_ptr v149, ptr b256, v150, v151, !1769
        v153 = load v152, !1770
        v154 = get_local ptr b256, inner_value, !1771
        store v153 to v154, !1772
        v155 = get_local ptr b256, inner_value, !1773
        v156 = load v155, !1774
        ret b256 v156

        read_28_unwrap_29_block1():
        v157 = const u64 0, !646
        revert v157, !1775
    }

    pub fn read_28(self !1776: { b256, u64, b256 }) -> b256, !1778 {
        local { u64, ( () | b256 ) } __anon_0
        local { b256, u64, u64 } __anon_00
        local { u64, ( () | b256 ) } __anon_1
        local { u64, ( () | b256 ) } __anon_2
        local bool __matched_value_1
        local { u64, ( () | b256 ) } __matched_value_4
        local { b256, u64, u64 } __tuple_2
        local { b256, u64, u64 } __tuple_2_
        local b256 inner_value
        local b256 key_for_storage
        local u64 last_slot
        local u64 number_of_slots
        local u64 number_of_slots0
        local b256 offset_slot
        local mut u256 offset_slot0
        local u64 place_in_slot
        local u64 place_in_slot0
        local u64 result_ptr
        local u64 size_of_t

        entry(self: { b256, u64, b256 }):
        v0 = call slot_51(self), !398
        v1 = call offset_46(self), !400
        v2 = const u64 32
        v3 = const u64 0, !403
        v4 = cmp eq v2 v3, !1779
        cbr v4, read_30_block0(), read_30_block1(), !1780

        read_30_block0():
        v5 = get_local ptr { u64, ( () | b256 ) }, __anon_0, !1781
        v6 = const u64 0
        v7 = get_elem_ptr v5, ptr u64, v6, !1782
        v8 = const u64 0, !80
        store v8 to v7, !1783
        v9 = load v5, !404
        br block0(v9), !1784

        read_30_block1():
        v10 = get_local ptr u64, size_of_t, !1785
        v11 = const u64 8, !420
        v12 = mul v1, v11, !1786
        v13 = get_local ptr u64, size_of_t, !1787
        v14 = const u64 32
        v15 = add v12, v14, !1788
        v16 = const u64 31, !427
        v17 = add v15, v16, !1789
        v18 = const u64 5, !430
        v19 = rsh v17, v18, !1790
        v20 = get_local ptr u64, last_slot, !1791
        v21 = const u64 4, !435
        v22 = mod v1, v21, !1792
        v23 = get_local ptr u64, place_in_slot0, !1793
        v24 = get_local ptr bool, __matched_value_1, !1794
        v25 = get_local ptr bool, __matched_value_1, !1795
        v26 = const bool true
        v27 = const bool true, !444
        v28 = cmp eq v26 v27, !1796
        cbr v28, read_30_slot_calculator_31_block0(), read_30_slot_calculator_31_block1(), !1797

        read_30_slot_calculator_31_block0():
        v29 = get_local ptr u64, place_in_slot0, !1798
        v30 = const u64 8, !450
        v31 = mul v22, v30, !1799
        v32 = get_local ptr u64, size_of_t, !1800
        v33 = add v31, v14, !1801
        v34 = const u64 31, !457
        v35 = add v33, v34, !1802
        v36 = const u64 5, !460
        v37 = rsh v35, v36, !1803
        br read_30_slot_calculator_31_block5(v37), !1804

        read_30_slot_calculator_31_block1():
        v38 = get_local ptr bool, __matched_value_1, !1805
        v39 = const bool false, !465
        v40 = cmp eq v26 v39, !1806
        v41 = const u64 1, !468
        cbr v40, read_30_slot_calculator_31_block5(v41), read_30_slot_calculator_31_block3(), !1807

        read_30_slot_calculator_31_block3():
        v42 = const u64 14757395258967588866, !440
        revert v42, !1808

        read_30_slot_calculator_31_block5(v43: u64):
        v44 = get_local ptr u64, number_of_slots0, !1809
        v45 = asm(input: v0) -> u256 input, !1810 {
        }
        v46 = get_local ptr u256, offset_slot0, !1811
        store v45 to v46, !1812
        v47 = get_local ptr u256, offset_slot0, !1813
        v48 = load v47, !1814
        v49 = get_local ptr u64, last_slot, !1815
        v50 = call as_u256_40(v19), !1816
        v51 = get_local ptr u64, number_of_slots0, !1817
        v52 = call as_u256_40(v43), !1818
        v53 = sub v50, v52, !1819
        v54 = add v48, v53, !1820
        v55 = get_local ptr u256, offset_slot0, !1821
        store v54 to v55, !1822
        v56 = get_local ptr u256, offset_slot0, !1823
        v57 = load v56, !1824
        v58 = asm(input: v57) -> b256 input, !1825 {
        }
        v59 = get_local ptr u64, number_of_slots0, !1826
        v60 = get_local ptr u64, place_in_slot0, !1827
        v61 = get_local ptr { b256, u64, u64 }, __anon_00, !1828
        v62 = const u64 0
        v63 = get_elem_ptr v61, ptr b256, v62, !1829
        store v58 to v63, !1830
        v64 = const u64 1
        v65 = get_elem_ptr v61, ptr u64, v64, !1831
        store v43 to v65, !1832
        v66 = const u64 2
        v67 = get_elem_ptr v61, ptr u64, v66, !1833
        store v22 to v67, !1834
        v68 = load v61, !1835
        v69 = get_local ptr { b256, u64, u64 }, __tuple_2, !1836
        store v68 to v69, !1837
        v70 = get_local ptr { b256, u64, u64 }, __tuple_2, !1838
        v71 = load v70, !404
        v72 = get_local ptr { b256, u64, u64 }, __tuple_2_, !1839
        store v71 to v72, !1840
        v73 = get_local ptr { b256, u64, u64 }, __tuple_2_, !1841
        v74 = const u64 0
        v75 = get_elem_ptr v73, ptr b256, v74, !1842
        v76 = load v75, !404
        v77 = get_local ptr b256, offset_slot, !1843
        store v76 to v77, !1844
        v78 = get_local ptr { b256, u64, u64 }, __tuple_2_, !1845
        v79 = const u64 1
        v80 = get_elem_ptr v78, ptr u64, v79, !1846
        v81 = load v80, !404
        v82 = get_local ptr u64, number_of_slots, !1847
        v83 = get_local ptr { b256, u64, u64 }, __tuple_2_, !1848
        v84 = const u64 2
        v85 = get_elem_ptr v83, ptr u64, v84, !1849
        v86 = load v85, !404
        v87 = get_local ptr u64, place_in_slot, !1850
        v88 = get_local ptr u64, number_of_slots, !1851
        v89 = const u64 32, !537
        v90 = mul v81, v89, !1852
        v91 = const u64 8
        v92 = mul v91, v90, !1853
        v93 = asm(size: v92, ptr) -> u64 ptr, !1854 {
            aloc   size, !546
            move   ptr hp, !547
        }
        v94 = get_local ptr u64, result_ptr, !1855
        v95 = get_local ptr b256, offset_slot, !1856
        v96 = load v95, !404
        v97 = get_local ptr u64, result_ptr, !1857
        v98 = get_local ptr u64, number_of_slots, !1858
        v99 = get_local ptr b256, key_for_storage, !1859
        store v96 to v99, !1860
        v100 = int_to_ptr v93 to ptr b256, !1861
        v101 = state_load_quad_word v100, key v99, v81, !1862
        cbr v101, read_30_block3(), read_30_block4(), !1863

        read_30_block3():
        v102 = get_local ptr { u64, ( () | b256 ) }, __anon_1, !1864
        v103 = const u64 0
        v104 = get_elem_ptr v102, ptr u64, v103, !1865
        v105 = const u64 1, !80
        store v105 to v104, !1866
        v106 = get_local ptr u64, result_ptr, !1867
        v107 = get_local ptr u64, place_in_slot, !1868
        v108 = const u64 8
        v109 = mul v108, v86, !1869
        v110 = add v93, v109, !1870
        v111 = const bool true
        cbr v111, read_30_read_43_block0(), read_30_read_43_block1(), !1871

        read_30_read_43_block0():
        v112 = asm(ptr: v110) -> b256 ptr, !1872 {
        }
        br read_30_read_43_block5(v112), !1873

        read_30_read_43_block1():
        v113 = const u64 32
        v114 = const u64 1, !580
        v115 = cmp eq v113 v114, !1874
        cbr v115, read_30_read_43_block2(), read_30_read_43_block3(), !1875

        read_30_read_43_block2():
        v116 = asm(ptr: v110, val) -> b256 val, !1876 {
            lb     val ptr i0, !586
        }
        br read_30_read_43_block4(v116), !1877

        read_30_read_43_block3():
        v117 = asm(ptr: v110, val) -> b256 val, !1878 {
            lw     val ptr i0, !590
        }
        br read_30_read_43_block4(v117), !1879

        read_30_read_43_block4(v118: b256):
        br read_30_read_43_block5(v118), !1880

        read_30_read_43_block5(v119: b256):
        v120 = const u64 1
        v121 = const u64 1
        v122 = get_elem_ptr v102, ptr b256, v120, v121, !1881
        store v119 to v122, !1882
        v123 = load v102, !404
        br read_30_block5(v123), !404

        read_30_block4():
        v124 = get_local ptr { u64, ( () | b256 ) }, __anon_2, !1883
        v125 = const u64 0
        v126 = get_elem_ptr v124, ptr u64, v125, !1884
        v127 = const u64 0, !80
        store v127 to v126, !1885
        v128 = load v124, !404
        br read_30_block5(v128), !404

        read_30_block5(v129: { u64, ( () | b256 ) }):
        br block0(v129), !404

        block0(v130: { u64, ( () | b256 ) }):
        v131 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !1886
        store v130 to v131, !1887
        v132 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !1888
        v133 = const u64 0
        v134 = get_elem_ptr v132, ptr u64, v133, !1889
        v135 = load v134, !603
        v136 = const u64 1, !607
        v137 = cmp eq v135 v136, !1890
        cbr v137, unwrap_29_block0(), unwrap_29_block1(), !1891

        unwrap_29_block0():
        v138 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !1892
        v139 = const u64 1
        v140 = const u64 1
        v141 = get_elem_ptr v138, ptr b256, v139, v140, !603
        v142 = load v141, !603
        v143 = get_local ptr b256, inner_value, !1893
        store v142 to v143, !1894
        v144 = get_local ptr b256, inner_value, !1895
        v145 = load v144, !603
        ret b256 v145

        unwrap_29_block1():
        v146 = const u64 0, !646
        revert v146, !1896
    }

    pub fn unwrap_29(self !1632: { u64, ( () | b256 ) }) -> b256, !1633 {
        local { u64, ( () | b256 ) } __matched_value_4
        local b256 inner_value

        entry(self: { u64, ( () | b256 ) }):
        v0 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !604
        store self to v0, !604
        v1 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !607
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !607
        v4 = load v3
        v5 = const u64 1, !607
        v6 = cmp eq v4 v5, !611
        cbr v6, block0(), block1(), !611

        block0():
        v7 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !607
        v8 = const u64 1
        v9 = const u64 1
        v10 = get_elem_ptr v7, ptr b256, v8, v9
        v11 = load v10
        v12 = get_local ptr b256, inner_value, !617
        store v11 to v12, !617
        v13 = get_local ptr b256, inner_value, !620
        v14 = load v13
        ret b256 v14

        block1():
        v15 = const u64 0, !646
        revert v15, !1897
    }

    pub fn read_30(slot !1898: b256, offset !1899: u64) -> { u64, ( () | b256 ) }, !1901 {
        local { u64, ( () | b256 ) } __anon_0
        local { b256, u64, u64 } __anon_00
        local { u64, ( () | b256 ) } __anon_1
        local { u64, ( () | b256 ) } __anon_2
        local bool __matched_value_1
        local { b256, u64, u64 } __tuple_2
        local { b256, u64, u64 } __tuple_2_
        local b256 key_for_storage
        local u64 last_slot
        local u64 number_of_slots
        local u64 number_of_slots0
        local b256 offset_slot
        local mut u256 offset_slot0
        local u64 place_in_slot
        local u64 place_in_slot0
        local u64 result_ptr
        local u64 size_of_t

        entry(slot: b256, offset: u64):
        v0 = const u64 32
        v1 = const u64 0, !403
        v2 = cmp eq v0 v1, !405
        cbr v2, block0(), block1(), !405

        block0():
        v3 = get_local ptr { u64, ( () | b256 ) }, __anon_0, !80
        v4 = const u64 0
        v5 = get_elem_ptr v3, ptr u64, v4, !80
        v6 = const u64 0, !80
        store v6 to v5, !80
        v7 = load v3
        ret { u64, ( () | b256 ) } v7, !415

        block1():
        v8 = get_local ptr u64, size_of_t, !1902
        v9 = const u64 8, !420
        v10 = mul offset, v9, !1903
        v11 = get_local ptr u64, size_of_t, !1904
        v12 = const u64 32
        v13 = add v10, v12, !1905
        v14 = const u64 31, !427
        v15 = add v13, v14, !1906
        v16 = const u64 5, !430
        v17 = rsh v15, v16, !1907
        v18 = get_local ptr u64, last_slot, !1908
        v19 = const u64 4, !435
        v20 = mod offset, v19, !1909
        v21 = get_local ptr u64, place_in_slot0, !1910
        v22 = get_local ptr bool, __matched_value_1, !1911
        v23 = get_local ptr bool, __matched_value_1, !1912
        v24 = const bool true
        v25 = const bool true, !444
        v26 = cmp eq v24 v25, !1913
        cbr v26, slot_calculator_31_block0(), slot_calculator_31_block1(), !1914

        slot_calculator_31_block0():
        v27 = get_local ptr u64, place_in_slot0, !1915
        v28 = const u64 8, !450
        v29 = mul v20, v28, !1916
        v30 = get_local ptr u64, size_of_t, !1917
        v31 = add v29, v12, !1918
        v32 = const u64 31, !457
        v33 = add v31, v32, !1919
        v34 = const u64 5, !460
        v35 = rsh v33, v34, !1920
        br slot_calculator_31_block5(v35), !417

        slot_calculator_31_block1():
        v36 = get_local ptr bool, __matched_value_1, !1921
        v37 = const bool false, !465
        v38 = cmp eq v24 v37, !1922
        v39 = const u64 1, !468
        cbr v38, slot_calculator_31_block5(v39), slot_calculator_31_block3(), !1923

        slot_calculator_31_block3():
        v40 = const u64 14757395258967588866, !440
        revert v40, !1924

        slot_calculator_31_block5(v41: u64):
        v42 = get_local ptr u64, number_of_slots0, !1925
        v43 = asm(input: slot) -> u256 input, !1926 {
        }
        v44 = get_local ptr u256, offset_slot0, !1927
        store v43 to v44, !1928
        v45 = get_local ptr u256, offset_slot0, !1929
        v46 = load v45, !417
        v47 = get_local ptr u64, last_slot, !1930
        v48 = call as_u256_40(v17), !1931
        v49 = get_local ptr u64, number_of_slots0, !1932
        v50 = call as_u256_40(v41), !1933
        v51 = sub v48, v50, !1934
        v52 = add v46, v51, !1935
        v53 = get_local ptr u256, offset_slot0, !1936
        store v52 to v53, !1937
        v54 = get_local ptr u256, offset_slot0, !1938
        v55 = load v54, !417
        v56 = asm(input: v55) -> b256 input, !1939 {
        }
        v57 = get_local ptr u64, number_of_slots0, !1940
        v58 = get_local ptr u64, place_in_slot0, !1941
        v59 = get_local ptr { b256, u64, u64 }, __anon_00, !1942
        v60 = const u64 0
        v61 = get_elem_ptr v59, ptr b256, v60, !1943
        store v56 to v61, !1944
        v62 = const u64 1
        v63 = get_elem_ptr v59, ptr u64, v62, !1945
        store v41 to v63, !1946
        v64 = const u64 2
        v65 = get_elem_ptr v59, ptr u64, v64, !1947
        store v20 to v65, !1948
        v66 = load v59, !417
        v67 = get_local ptr { b256, u64, u64 }, __tuple_2, !515
        store v66 to v67, !515
        v68 = get_local ptr { b256, u64, u64 }, __tuple_2, !515
        v69 = load v68
        v70 = get_local ptr { b256, u64, u64 }, __tuple_2_, !515
        store v69 to v70, !515
        v71 = get_local ptr { b256, u64, u64 }, __tuple_2_, !515
        v72 = const u64 0
        v73 = get_elem_ptr v71, ptr b256, v72, !515
        v74 = load v73
        v75 = get_local ptr b256, offset_slot, !515
        store v74 to v75, !515
        v76 = get_local ptr { b256, u64, u64 }, __tuple_2_, !515
        v77 = const u64 1
        v78 = get_elem_ptr v76, ptr u64, v77, !515
        v79 = load v78
        v80 = get_local ptr u64, number_of_slots, !515
        v81 = get_local ptr { b256, u64, u64 }, __tuple_2_, !515
        v82 = const u64 2
        v83 = get_elem_ptr v81, ptr u64, v82, !515
        v84 = load v83
        v85 = get_local ptr u64, place_in_slot, !515
        v86 = get_local ptr u64, number_of_slots, !535
        v87 = const u64 32, !537
        v88 = mul v79, v87, !538
        v89 = const u64 8
        v90 = mul v89, v88, !1949
        v91 = asm(size: v90, ptr) -> u64 ptr, !1950 {
            aloc   size, !546
            move   ptr hp, !547
        }
        v92 = get_local ptr u64, result_ptr, !548
        v93 = get_local ptr b256, offset_slot, !550
        v94 = load v93
        v95 = get_local ptr u64, result_ptr, !553
        v96 = get_local ptr u64, number_of_slots, !555
        v97 = get_local ptr b256, key_for_storage, !557
        store v94 to v97, !557
        v98 = int_to_ptr v91 to ptr b256, !557
        v99 = state_load_quad_word v98, key v97, v79, !557
        cbr v99, block3(), block4(), !557

        block3():
        v100 = get_local ptr { u64, ( () | b256 ) }, __anon_1, !80
        v101 = const u64 0
        v102 = get_elem_ptr v100, ptr u64, v101, !80
        v103 = const u64 1, !80
        store v103 to v102, !80
        v104 = get_local ptr u64, result_ptr, !566
        v105 = get_local ptr u64, place_in_slot, !568
        v106 = const u64 8
        v107 = mul v106, v84, !570
        v108 = add v91, v107, !570
        v109 = const bool true
        cbr v109, read_43_block0(), read_43_block1(), !1951

        read_43_block0():
        v110 = asm(ptr: v108) -> b256 ptr, !1952 {
        }
        br read_43_block5(v110), !573

        read_43_block1():
        v111 = const u64 32
        v112 = const u64 1, !580
        v113 = cmp eq v111 v112, !573
        cbr v113, read_43_block2(), read_43_block3(), !1953

        read_43_block2():
        v114 = asm(ptr: v108, val) -> b256 val, !1954 {
            lb     val ptr i0, !586
        }
        br read_43_block4(v114), !573

        read_43_block3():
        v115 = asm(ptr: v108, val) -> b256 val, !1955 {
            lw     val ptr i0, !590
        }
        br read_43_block4(v115), !573

        read_43_block4(v116: b256):
        br read_43_block5(v116), !573

        read_43_block5(v117: b256):
        v118 = const u64 1
        v119 = const u64 1
        v120 = get_elem_ptr v100, ptr b256, v118, v119, !80
        store v117 to v120, !80
        v121 = load v100
        br block5(v121)

        block4():
        v122 = get_local ptr { u64, ( () | b256 ) }, __anon_2, !80
        v123 = const u64 0
        v124 = get_elem_ptr v122, ptr u64, v123, !80
        v125 = const u64 0, !80
        store v125 to v124, !80
        v126 = load v122
        br block5(v126)

        block5(v127: { u64, ( () | b256 ) }):
        ret { u64, ( () | b256 ) } v127
    }

    fn slot_calculator_31(slot !1956: b256, offset !1957: u64) -> { b256, u64, u64 }, !1958 {
        local { b256, u64, u64 } __anon_0
        local bool __matched_value_1
        local u64 last_slot
        local u64 number_of_slots
        local mut u256 offset_slot
        local u64 place_in_slot
        local u64 size_of_t

        entry(slot: b256, offset: u64):
        v0 = get_local ptr u64, size_of_t, !418
        v1 = const u64 8, !420
        v2 = mul offset, v1, !421
        v3 = get_local ptr u64, size_of_t, !423
        v4 = const u64 32
        v5 = add v2, v4, !425
        v6 = const u64 31, !427
        v7 = add v5, v6, !428
        v8 = const u64 5, !430
        v9 = rsh v7, v8, !431
        v10 = get_local ptr u64, last_slot, !433
        v11 = const u64 4, !435
        v12 = mod offset, v11, !436
        v13 = get_local ptr u64, place_in_slot, !438
        v14 = get_local ptr bool, __matched_value_1, !440
        v15 = get_local ptr bool, __matched_value_1, !442
        v16 = const bool true
        v17 = const bool true, !444
        v18 = cmp eq v16 v17, !445
        cbr v18, block0(), block1(), !445

        block0():
        v19 = get_local ptr u64, place_in_slot, !448
        v20 = const u64 8, !450
        v21 = mul v12, v20, !451
        v22 = get_local ptr u64, size_of_t, !453
        v23 = add v21, v4, !455
        v24 = const u64 31, !457
        v25 = add v23, v24, !458
        v26 = const u64 5, !460
        v27 = rsh v25, v26, !461
        br block5(v27)

        block1():
        v28 = get_local ptr bool, __matched_value_1, !442
        v29 = const bool false, !465
        v30 = cmp eq v16 v29, !466
        v31 = const u64 1, !468
        cbr v30, block5(v31), block3(), !466

        block3():
        v32 = const u64 14757395258967588866, !440
        revert v32, !440

        block5(v33: u64):
        v34 = get_local ptr u64, number_of_slots, !471
        v35 = asm(input: slot) -> u256 input, !1959 {
        }
        v36 = get_local ptr u256, offset_slot, !476
        store v35 to v36, !476
        v37 = get_local ptr u256, offset_slot, !479
        v38 = load v37
        v39 = get_local ptr u64, last_slot, !482
        v40 = call as_u256_40(v9), !484
        v41 = get_local ptr u64, number_of_slots, !486
        v42 = call as_u256_40(v33), !488
        v43 = sub v40, v42, !490
        v44 = add v38, v43, !492
        v45 = get_local ptr u256, offset_slot, !492
        store v44 to v45, !492
        v46 = get_local ptr u256, offset_slot, !496
        v47 = load v46
        v48 = asm(input: v47) -> b256 input, !1960 {
        }
        v49 = get_local ptr u64, number_of_slots, !502
        v50 = get_local ptr u64, place_in_slot, !504
        v51 = get_local ptr { b256, u64, u64 }, __anon_0, !506
        v52 = const u64 0
        v53 = get_elem_ptr v51, ptr b256, v52, !506
        store v48 to v53, !506
        v54 = const u64 1
        v55 = get_elem_ptr v51, ptr u64, v54, !506
        store v33 to v55, !506
        v56 = const u64 2
        v57 = get_elem_ptr v51, ptr u64, v56, !506
        store v12 to v57, !506
        v58 = load v51
        ret { b256, u64, u64 } v58
    }

    pub fn rsh_32(self !1961: u64, other !1962: u64) -> u64, !1963 {
        entry(self: u64, other: u64):
        v0 = rsh self, other
        ret u64 v0
    }

    pub fn add_33(self !1964: u64, other !1965: u64) -> u64, !1966 {
        entry(self: u64, other: u64):
        v0 = add self, other
        ret u64 v0
    }

    pub fn multiply_34(self !1967: u64, other !1968: u64) -> u64, !1969 {
        entry(self: u64, other: u64):
        v0 = mul self, other
        ret u64 v0
    }

    pub fn modulo_35(self !1970: u64, other !1971: u64) -> u64, !1972 {
        entry(self: u64, other: u64):
        v0 = mod self, other
        ret u64 v0
    }

    pub fn eq_36(self !1973: bool, other !1974: bool) -> bool, !1975 {
        entry(self: bool, other: bool):
        v0 = cmp eq self other
        ret bool v0
    }

    pub fn as_u256_37(self !1976: b256) -> u256, !1977 {
        entry(self: b256):
        v0 = asm(input: self) -> u256 input, !474 {
        }
        ret u256 v0
    }

    pub fn add_38(self !1978: u256, other !1979: u256) -> u256, !1980 {
        entry(self: u256, other: u256):
        v0 = add self, other
        ret u256 v0
    }

    pub fn subtract_39(self !1981: u256, other !1982: u256) -> u256, !1983 {
        entry(self: u256, other: u256):
        v0 = sub self, other
        ret u256 v0
    }

    pub fn as_u256_40(self !1984: u64) -> u256, !1985 {
        local { u64, u64, u64, u64 } __anon_0
        local { u64, u64, u64, u64 } input

        entry(self: u64):
        v0 = get_local ptr { u64, u64, u64, u64 }, __anon_0, !1986
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr u64, v1, !1986
        v3 = const u64 0, !1987
        store v3 to v2, !1986
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4, !1986
        v6 = const u64 0, !1988
        store v6 to v5, !1986
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr u64, v7, !1986
        v9 = const u64 0, !1989
        store v9 to v8, !1986
        v10 = const u64 3
        v11 = get_elem_ptr v0, ptr u64, v10, !1986
        store self to v11, !1986
        v12 = load v0
        v13 = get_local ptr { u64, u64, u64, u64 }, input, !1990
        store v12 to v13, !1990
        v14 = get_local ptr { u64, u64, u64, u64 }, input, !1991
        v15 = asm(input: v14) -> u256 input, !1992 {
        }
        ret u256 v15
    }

    pub fn as_b256_41(self !1993: u256) -> b256, !1994 {
        entry(self: u256):
        v0 = asm(input: self) -> b256 input, !500 {
        }
        ret b256 v0
    }

    pub fn alloc_42(count !1995: u64) -> u64, !1996 {
        entry(count: u64):
        v0 = const u64 8
        v1 = mul v0, count, !542
        v2 = asm(size: v1, ptr) -> u64 ptr, !544 {
            aloc   size, !546
            move   ptr hp, !547
        }
        ret u64 v2
    }

    pub fn read_43(self !1997: u64) -> b256, !1998 {
        entry(self: u64):
        v0 = const bool true
        cbr v0, block0(), block1(), !575

        block0():
        v1 = asm(ptr: self) -> b256 ptr, !577 {
        }
        br block5(v1)

        block1():
        v2 = const u64 32
        v3 = const u64 1, !580
        v4 = cmp eq v2 v3
        cbr v4, block2(), block3(), !582

        block2():
        v5 = asm(ptr: self, val) -> b256 val, !584 {
            lb     val ptr i0, !586
        }
        br block4(v5)

        block3():
        v6 = asm(ptr: self, val) -> b256 val, !588 {
            lw     val ptr i0, !590
        }
        br block4(v6)

        block4(v7: b256):
        br block5(v7)

        block5(v8: b256):
        ret b256 v8
    }

    pub fn add_44(self !1999: u64, count !2000: u64) -> u64, !2001 {
        entry(self: u64, count: u64):
        v0 = const u64 8
        v1 = mul v0, count
        v2 = add self, v1
        ret u64 v2
    }

    pub fn slot_45(self !2003: { b256, u64, b256 }) -> b256, !2004 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !2005
        v4 = load v3
        ret b256 v4
    }

    pub fn offset_46(self !2006: { b256, u64, b256 }) -> u64, !2007 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 1
        v3 = get_elem_ptr v1, ptr u64, v2, !2008
        v4 = load v3
        ret u64 v4
    }

    pub fn write_47(self !2009: { b256, u64, b256 }, value !2010: u64) -> (), !2012 {
        local bool _
        local bool __
        local { b256, u64, u64 } __anon_0
        local bool __matched_value_1
        local { b256, u64, u64 } __tuple_1
        local { b256, u64, u64 } __tuple_1_
        local b256 key_for_storage
        local b256 key_for_storage_
        local u64 last_slot
        local u64 number_of_slots
        local u64 number_of_slots0
        local b256 offset_slot
        local mut u256 offset_slot0
        local u64 padded_value
        local u64 place_in_slot
        local u64 place_in_slot0
        local u64 size_of_t

        entry(self: { b256, u64, b256 }, value: u64):
        v0 = call slot_51(self), !732
        v1 = call offset_46(self), !734
        v2 = const u64 8
        v3 = const u64 0, !736
        v4 = cmp eq v2 v3, !2013
        v5 = const unit (), !740
        cbr v4, block0(v5), write_48_block1(), !2014

        write_48_block1():
        v6 = get_local ptr u64, size_of_t, !2015
        v7 = const u64 8, !420
        v8 = mul v1, v7, !2016
        v9 = get_local ptr u64, size_of_t, !2017
        v10 = const u64 8
        v11 = add v8, v10, !2018
        v12 = const u64 31, !427
        v13 = add v11, v12, !2019
        v14 = const u64 5, !430
        v15 = rsh v13, v14, !2020
        v16 = get_local ptr u64, last_slot, !2021
        v17 = const u64 4, !435
        v18 = mod v1, v17, !2022
        v19 = get_local ptr u64, place_in_slot0, !2023
        v20 = get_local ptr bool, __matched_value_1, !2024
        v21 = get_local ptr bool, __matched_value_1, !2025
        v22 = const bool false
        v23 = const bool true, !444
        v24 = cmp eq v22 v23, !2026
        cbr v24, write_48_slot_calculator_49_block0(), write_48_slot_calculator_49_block1(), !2027

        write_48_slot_calculator_49_block0():
        v25 = get_local ptr u64, place_in_slot0, !2028
        v26 = const u64 8, !450
        v27 = mul v18, v26, !2029
        v28 = get_local ptr u64, size_of_t, !2030
        v29 = add v27, v10, !2031
        v30 = const u64 31, !457
        v31 = add v29, v30, !2032
        v32 = const u64 5, !460
        v33 = rsh v31, v32, !2033
        br write_48_slot_calculator_49_block5(v33), !2034

        write_48_slot_calculator_49_block1():
        v34 = get_local ptr bool, __matched_value_1, !2035
        v35 = const bool false, !465
        v36 = cmp eq v22 v35, !2036
        v37 = const u64 1, !468
        cbr v36, write_48_slot_calculator_49_block5(v37), write_48_slot_calculator_49_block3(), !2037

        write_48_slot_calculator_49_block3():
        v38 = const u64 14757395258967588866, !440
        revert v38, !2038

        write_48_slot_calculator_49_block5(v39: u64):
        v40 = get_local ptr u64, number_of_slots0, !2039
        v41 = asm(input: v0) -> u256 input, !2040 {
        }
        v42 = get_local ptr u256, offset_slot0, !2041
        store v41 to v42, !2042
        v43 = get_local ptr u256, offset_slot0, !2043
        v44 = load v43, !2044
        v45 = get_local ptr u64, last_slot, !2045
        v46 = call as_u256_40(v15), !2046
        v47 = get_local ptr u64, number_of_slots0, !2047
        v48 = call as_u256_40(v39), !2048
        v49 = sub v46, v48, !2049
        v50 = add v44, v49, !2050
        v51 = get_local ptr u256, offset_slot0, !2051
        store v50 to v51, !2052
        v52 = get_local ptr u256, offset_slot0, !2053
        v53 = load v52, !2054
        v54 = asm(input: v53) -> b256 input, !2055 {
        }
        v55 = get_local ptr u64, number_of_slots0, !2056
        v56 = get_local ptr u64, place_in_slot0, !2057
        v57 = get_local ptr { b256, u64, u64 }, __anon_0, !2058
        v58 = const u64 0
        v59 = get_elem_ptr v57, ptr b256, v58, !2059
        store v54 to v59, !2060
        v60 = const u64 1
        v61 = get_elem_ptr v57, ptr u64, v60, !2061
        store v39 to v61, !2062
        v62 = const u64 2
        v63 = get_elem_ptr v57, ptr u64, v62, !2063
        store v18 to v63, !2064
        v64 = load v57, !2065
        v65 = get_local ptr { b256, u64, u64 }, __tuple_1, !2066
        store v64 to v65, !2067
        v66 = get_local ptr { b256, u64, u64 }, __tuple_1, !2068
        v67 = load v66, !737
        v68 = get_local ptr { b256, u64, u64 }, __tuple_1_, !2069
        store v67 to v68, !2070
        v69 = get_local ptr { b256, u64, u64 }, __tuple_1_, !2071
        v70 = const u64 0
        v71 = get_elem_ptr v69, ptr b256, v70, !2072
        v72 = load v71, !737
        v73 = get_local ptr b256, offset_slot, !2073
        store v72 to v73, !2074
        v74 = get_local ptr { b256, u64, u64 }, __tuple_1_, !2075
        v75 = const u64 1
        v76 = get_elem_ptr v74, ptr u64, v75, !2076
        v77 = load v76, !737
        v78 = get_local ptr u64, number_of_slots, !2077
        v79 = get_local ptr { b256, u64, u64 }, __tuple_1_, !2078
        v80 = const u64 2
        v81 = get_elem_ptr v79, ptr u64, v80, !2079
        v82 = load v81, !737
        v83 = get_local ptr u64, place_in_slot, !2080
        v84 = get_local ptr u64, number_of_slots, !2081
        v85 = const u64 32, !816
        v86 = mul v77, v85, !2082
        v87 = const u64 8
        v88 = mul v87, v86, !2083
        v89 = asm(size: v88, ptr) -> u64 ptr, !2084 {
            aloc   size, !546
            move   ptr hp, !547
        }
        v90 = get_local ptr u64, padded_value, !2085
        v91 = get_local ptr b256, offset_slot, !2086
        v92 = load v91, !737
        v93 = get_local ptr u64, padded_value, !2087
        v94 = get_local ptr u64, number_of_slots, !2088
        v95 = get_local ptr b256, key_for_storage, !2089
        store v92 to v95, !2090
        v96 = int_to_ptr v89 to ptr b256, !2091
        v97 = state_load_quad_word v96, key v95, v77, !2092
        v98 = get_local ptr bool, _, !2093
        v99 = get_local ptr u64, padded_value, !2094
        v100 = get_local ptr u64, place_in_slot, !2095
        v101 = const u64 8
        v102 = mul v101, v82, !2096
        v103 = add v89, v102, !2097
        v104 = const bool false
        cbr v104, write_48_write_50_block0(), write_48_write_50_block1(), !2098

        write_48_write_50_block0():
        v105 = const u64 8
        v106 = asm(dst: v103, src: value, count: v105) {
            mcp    dst src count, !848
        }
        v107 = const unit ()
        br write_48_write_50_block5(v107), !2099

        write_48_write_50_block1():
        v108 = const u64 8
        v109 = const u64 1, !850
        v110 = cmp eq v108 v109, !2100
        cbr v110, write_48_write_50_block2(), write_48_write_50_block3(), !2101

        write_48_write_50_block2():
        v111 = asm(ptr: v103, val: value) {
            sb     ptr val i0, !854
        }
        v112 = const unit ()
        br write_48_write_50_block4(v112), !2102

        write_48_write_50_block3():
        v113 = asm(ptr: v103, val: value) {
            sw     ptr val i0, !856
        }
        v114 = const unit ()
        br write_48_write_50_block4(v114), !2103

        write_48_write_50_block4(v115: ()):
        br write_48_write_50_block5(v115), !2104

        write_48_write_50_block5(v116: ()):
        v117 = get_local ptr b256, offset_slot, !2105
        v118 = load v117, !737
        v119 = get_local ptr u64, padded_value, !2106
        v120 = get_local ptr u64, number_of_slots, !2107
        v121 = get_local ptr b256, key_for_storage_, !2108
        store v118 to v121, !2109
        v122 = int_to_ptr v89 to ptr b256, !2110
        v123 = state_store_quad_word v122, key v121, v77, !2111
        v124 = get_local ptr bool, __, !2112
        v125 = const unit ()
        br block0(v125), !737

        block0(v126: ()):
        v127 = const unit ()
        ret () v127
    }

    pub fn write_48(slot !2113: b256, offset !2114: u64, value !2115: u64) -> (), !2117 {
        local bool _
        local bool __
        local { b256, u64, u64 } __anon_0
        local bool __matched_value_1
        local { b256, u64, u64 } __tuple_1
        local { b256, u64, u64 } __tuple_1_
        local b256 key_for_storage
        local b256 key_for_storage_
        local u64 last_slot
        local u64 number_of_slots
        local u64 number_of_slots0
        local b256 offset_slot
        local mut u256 offset_slot0
        local u64 padded_value
        local u64 place_in_slot
        local u64 place_in_slot0
        local u64 size_of_t

        entry(slot: b256, offset: u64, value: u64):
        v0 = const u64 8
        v1 = const u64 0, !736
        v2 = cmp eq v0 v1, !738
        cbr v2, block0(), block1(), !738

        block0():
        v3 = const unit (), !740
        ret () v3, !740

        block1():
        v4 = get_local ptr u64, size_of_t, !2118
        v5 = const u64 8, !420
        v6 = mul offset, v5, !2119
        v7 = get_local ptr u64, size_of_t, !2120
        v8 = const u64 8
        v9 = add v6, v8, !2121
        v10 = const u64 31, !427
        v11 = add v9, v10, !2122
        v12 = const u64 5, !430
        v13 = rsh v11, v12, !2123
        v14 = get_local ptr u64, last_slot, !2124
        v15 = const u64 4, !435
        v16 = mod offset, v15, !2125
        v17 = get_local ptr u64, place_in_slot0, !2126
        v18 = get_local ptr bool, __matched_value_1, !2127
        v19 = get_local ptr bool, __matched_value_1, !2128
        v20 = const bool false
        v21 = const bool true, !444
        v22 = cmp eq v20 v21, !2129
        cbr v22, slot_calculator_49_block0(), slot_calculator_49_block1(), !2130

        slot_calculator_49_block0():
        v23 = get_local ptr u64, place_in_slot0, !2131
        v24 = const u64 8, !450
        v25 = mul v16, v24, !2132
        v26 = get_local ptr u64, size_of_t, !2133
        v27 = add v25, v8, !2134
        v28 = const u64 31, !457
        v29 = add v27, v28, !2135
        v30 = const u64 5, !460
        v31 = rsh v29, v30, !2136
        br slot_calculator_49_block5(v31), !742

        slot_calculator_49_block1():
        v32 = get_local ptr bool, __matched_value_1, !2137
        v33 = const bool false, !465
        v34 = cmp eq v20 v33, !2138
        v35 = const u64 1, !468
        cbr v34, slot_calculator_49_block5(v35), slot_calculator_49_block3(), !2139

        slot_calculator_49_block3():
        v36 = const u64 14757395258967588866, !440
        revert v36, !2140

        slot_calculator_49_block5(v37: u64):
        v38 = get_local ptr u64, number_of_slots0, !2141
        v39 = asm(input: slot) -> u256 input, !2142 {
        }
        v40 = get_local ptr u256, offset_slot0, !2143
        store v39 to v40, !2144
        v41 = get_local ptr u256, offset_slot0, !2145
        v42 = load v41, !742
        v43 = get_local ptr u64, last_slot, !2146
        v44 = call as_u256_40(v13), !2147
        v45 = get_local ptr u64, number_of_slots0, !2148
        v46 = call as_u256_40(v37), !2149
        v47 = sub v44, v46, !2150
        v48 = add v42, v47, !2151
        v49 = get_local ptr u256, offset_slot0, !2152
        store v48 to v49, !2153
        v50 = get_local ptr u256, offset_slot0, !2154
        v51 = load v50, !742
        v52 = asm(input: v51) -> b256 input, !2155 {
        }
        v53 = get_local ptr u64, number_of_slots0, !2156
        v54 = get_local ptr u64, place_in_slot0, !2157
        v55 = get_local ptr { b256, u64, u64 }, __anon_0, !2158
        v56 = const u64 0
        v57 = get_elem_ptr v55, ptr b256, v56, !2159
        store v52 to v57, !2160
        v58 = const u64 1
        v59 = get_elem_ptr v55, ptr u64, v58, !2161
        store v37 to v59, !2162
        v60 = const u64 2
        v61 = get_elem_ptr v55, ptr u64, v60, !2163
        store v16 to v61, !2164
        v62 = load v55, !742
        v63 = get_local ptr { b256, u64, u64 }, __tuple_1, !794
        store v62 to v63, !794
        v64 = get_local ptr { b256, u64, u64 }, __tuple_1, !794
        v65 = load v64
        v66 = get_local ptr { b256, u64, u64 }, __tuple_1_, !794
        store v65 to v66, !794
        v67 = get_local ptr { b256, u64, u64 }, __tuple_1_, !794
        v68 = const u64 0
        v69 = get_elem_ptr v67, ptr b256, v68, !794
        v70 = load v69
        v71 = get_local ptr b256, offset_slot, !794
        store v70 to v71, !794
        v72 = get_local ptr { b256, u64, u64 }, __tuple_1_, !794
        v73 = const u64 1
        v74 = get_elem_ptr v72, ptr u64, v73, !794
        v75 = load v74
        v76 = get_local ptr u64, number_of_slots, !794
        v77 = get_local ptr { b256, u64, u64 }, __tuple_1_, !794
        v78 = const u64 2
        v79 = get_elem_ptr v77, ptr u64, v78, !794
        v80 = load v79
        v81 = get_local ptr u64, place_in_slot, !794
        v82 = get_local ptr u64, number_of_slots, !814
        v83 = const u64 32, !816
        v84 = mul v75, v83, !817
        v85 = const u64 8
        v86 = mul v85, v84, !2165
        v87 = asm(size: v86, ptr) -> u64 ptr, !2166 {
            aloc   size, !546
            move   ptr hp, !547
        }
        v88 = get_local ptr u64, padded_value, !822
        v89 = get_local ptr b256, offset_slot, !824
        v90 = load v89
        v91 = get_local ptr u64, padded_value, !827
        v92 = get_local ptr u64, number_of_slots, !829
        v93 = get_local ptr b256, key_for_storage, !831
        store v90 to v93, !831
        v94 = int_to_ptr v87 to ptr b256, !831
        v95 = state_load_quad_word v94, key v93, v75, !831
        v96 = get_local ptr bool, _, !836
        v97 = get_local ptr u64, padded_value, !838
        v98 = get_local ptr u64, place_in_slot, !840
        v99 = const u64 8
        v100 = mul v99, v80, !842
        v101 = add v87, v100, !842
        v102 = const bool false
        cbr v102, write_50_block0(), write_50_block1(), !2167

        write_50_block0():
        v103 = const u64 8
        v104 = asm(dst: v101, src: value, count: v103) {
            mcp    dst src count, !848
        }
        v105 = const unit ()
        br write_50_block5(v105), !845

        write_50_block1():
        v106 = const u64 8
        v107 = const u64 1, !850
        v108 = cmp eq v106 v107, !845
        cbr v108, write_50_block2(), write_50_block3(), !2168

        write_50_block2():
        v109 = asm(ptr: v101, val: value) {
            sb     ptr val i0, !854
        }
        v110 = const unit ()
        br write_50_block4(v110), !845

        write_50_block3():
        v111 = asm(ptr: v101, val: value) {
            sw     ptr val i0, !856
        }
        v112 = const unit ()
        br write_50_block4(v112), !845

        write_50_block4(v113: ()):
        br write_50_block5(v113), !845

        write_50_block5(v114: ()):
        v115 = get_local ptr b256, offset_slot, !859
        v116 = load v115
        v117 = get_local ptr u64, padded_value, !862
        v118 = get_local ptr u64, number_of_slots, !864
        v119 = get_local ptr b256, key_for_storage_, !866
        store v116 to v119, !866
        v120 = int_to_ptr v87 to ptr b256, !866
        v121 = state_store_quad_word v120, key v119, v75, !866
        v122 = get_local ptr bool, __, !871
        v123 = const unit ()
        ret () v123
    }

    fn slot_calculator_49(slot !1956: b256, offset !1957: u64) -> { b256, u64, u64 }, !1958 {
        local { b256, u64, u64 } __anon_0
        local bool __matched_value_1
        local u64 last_slot
        local u64 number_of_slots
        local mut u256 offset_slot
        local u64 place_in_slot
        local u64 size_of_t

        entry(slot: b256, offset: u64):
        v0 = get_local ptr u64, size_of_t, !418
        v1 = const u64 8, !420
        v2 = mul offset, v1, !421
        v3 = get_local ptr u64, size_of_t, !423
        v4 = const u64 8
        v5 = add v2, v4, !425
        v6 = const u64 31, !427
        v7 = add v5, v6, !428
        v8 = const u64 5, !430
        v9 = rsh v7, v8, !431
        v10 = get_local ptr u64, last_slot, !433
        v11 = const u64 4, !435
        v12 = mod offset, v11, !436
        v13 = get_local ptr u64, place_in_slot, !438
        v14 = get_local ptr bool, __matched_value_1, !440
        v15 = get_local ptr bool, __matched_value_1, !442
        v16 = const bool false
        v17 = const bool true, !444
        v18 = cmp eq v16 v17, !445
        cbr v18, block0(), block1(), !445

        block0():
        v19 = get_local ptr u64, place_in_slot, !448
        v20 = const u64 8, !450
        v21 = mul v12, v20, !451
        v22 = get_local ptr u64, size_of_t, !453
        v23 = add v21, v4, !455
        v24 = const u64 31, !457
        v25 = add v23, v24, !458
        v26 = const u64 5, !460
        v27 = rsh v25, v26, !461
        br block5(v27)

        block1():
        v28 = get_local ptr bool, __matched_value_1, !442
        v29 = const bool false, !465
        v30 = cmp eq v16 v29, !466
        v31 = const u64 1, !468
        cbr v30, block5(v31), block3(), !466

        block3():
        v32 = const u64 14757395258967588866, !440
        revert v32, !440

        block5(v33: u64):
        v34 = get_local ptr u64, number_of_slots, !471
        v35 = asm(input: slot) -> u256 input, !2169 {
        }
        v36 = get_local ptr u256, offset_slot, !476
        store v35 to v36, !476
        v37 = get_local ptr u256, offset_slot, !479
        v38 = load v37
        v39 = get_local ptr u64, last_slot, !482
        v40 = call as_u256_40(v9), !484
        v41 = get_local ptr u64, number_of_slots, !486
        v42 = call as_u256_40(v33), !488
        v43 = sub v40, v42, !490
        v44 = add v38, v43, !492
        v45 = get_local ptr u256, offset_slot, !492
        store v44 to v45, !492
        v46 = get_local ptr u256, offset_slot, !496
        v47 = load v46
        v48 = asm(input: v47) -> b256 input, !2170 {
        }
        v49 = get_local ptr u64, number_of_slots, !502
        v50 = get_local ptr u64, place_in_slot, !504
        v51 = get_local ptr { b256, u64, u64 }, __anon_0, !506
        v52 = const u64 0
        v53 = get_elem_ptr v51, ptr b256, v52, !506
        store v48 to v53, !506
        v54 = const u64 1
        v55 = get_elem_ptr v51, ptr u64, v54, !506
        store v33 to v55, !506
        v56 = const u64 2
        v57 = get_elem_ptr v51, ptr u64, v56, !506
        store v12 to v57, !506
        v58 = load v51
        ret { b256, u64, u64 } v58
    }

    pub fn write_50(self !2171: u64, val !2172: u64) -> (), !2173 {
        entry(self: u64, val: u64):
        v0 = const bool false
        cbr v0, block0(), block1(), !846

        block0():
        v1 = const u64 8
        v2 = asm(dst: self, src: val, count: v1) {
            mcp    dst src count, !848
        }
        v3 = const unit ()
        br block5(v3)

        block1():
        v4 = const u64 8
        v5 = const u64 1, !850
        v6 = cmp eq v4 v5
        cbr v6, block2(), block3(), !852

        block2():
        v7 = asm(ptr: self, val: val) {
            sb     ptr val i0, !854
        }
        v8 = const unit ()
        br block4(v8)

        block3():
        v9 = asm(ptr: self, val: val) {
            sw     ptr val i0, !856
        }
        v10 = const unit ()
        br block4(v10)

        block4(v11: ()):
        br block5(v11)

        block5(v12: ()):
        v13 = const unit ()
        ret () v13
    }

    pub fn slot_51(self !2003: { b256, u64, b256 }) -> b256, !2004 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !2005
        v4 = load v3
        ret b256 v4
    }

    pub fn offset_52(self !2006: { b256, u64, b256 }) -> u64, !2007 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 1
        v3 = get_elem_ptr v1, ptr u64, v2, !2008
        v4 = load v3
        ret u64 v4
    }
}

// IR: [fn-dce] Dead function elimination
contract {
    pub entry fn set_data_if_owner<c626c6e2>(new_value !1: u64) -> (), !4 {
        local bool _
        local bool __
        local { b256, u64, b256 } __anon_0
        local { u64, ( { b256 } | { b256 } ) } __anon_00
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_000
        local { u64, ( () | { b256 } ) } __anon_0000
        local { u64 } __anon_00000
        local { b256, u64, u64 } __anon_0001
        local { u64, ( () | b256 ) } __anon_001
        local { u64, ( () | { b256 } ) } __anon_01
        local { b256, u64, b256 } __anon_02
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __anon_03
        local { b256, u64, u64 } __anon_04
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_1
        local { u64, ( { b256 } | { u64 } ) } __anon_10
        local { u64 } __anon_100
        local { u64, ( () | { b256 } ) } __anon_11
        local { u64, ( () | b256 ) } __anon_12
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64 } __anon_20
        local { u64, ( () | b256 ) } __anon_21
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { u64 } ) } __anon_30
        local { u64, ( { b256 } | { b256 } ) } __anon_4
        local { u64, ( { b256 } | { u64 } ) } __anon_40
        local { u64 } __anon_5
        local { u64, ( { b256 } | { u64 } ) } __matched_value_1
        local u8 __matched_value_10
        local bool __matched_value_11
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __matched_value_12
        local bool __matched_value_13
        local { u64 } __matched_value_2
        local { u64, ( () | { b256 } ) } __matched_value_3
        local { u64 } __matched_value_30
        local { u64, ( () | { b256 } ) } __matched_value_31
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __matched_value_32
        local { u64, ( () | b256 ) } __matched_value_4
        local { u64 } __matched_value_6
        local { b256, u64, u64 } __tuple_1
        local { b256, u64, u64 } __tuple_1_
        local { b256, u64, u64 } __tuple_2
        local { b256, u64, u64 } __tuple_2_
        local { b256 } addr1
        local { b256 } addr2
        local { b256 } address
        local mut { u64, ( () | { b256 } ) } candidate
        local { u64 } err
        local mut u64 i
        local { b256 } id1
        local { b256 } id2
        local { u64, ( { b256 } | { b256 } ) } inner_value
        local b256 inner_value0
        local u64 inputs
        local b256 key_for_storage
        local b256 key_for_storage0
        local b256 key_for_storage_
        local u64 last_slot
        local u64 last_slot0
        local u64 number_of_slots
        local u64 number_of_slots0
        local u64 number_of_slots00
        local u64 number_of_slots1
        local b256 offset_slot
        local mut u256 offset_slot0
        local mut u256 offset_slot00
        local b256 offset_slot1
        local { b256 } owner
        local { u64, ( () | { b256 } ) } owner_of_input
        local u64 padded_value
        local u64 place_in_slot
        local u64 place_in_slot0
        local u64 place_in_slot00
        local u64 place_in_slot1
        local u64 result_ptr
        local u64 size_of_t
        local u64 size_of_t0
        local { u64 } type_of_input

        entry(new_value: u64):
        v0 = asm(r1) -> bool r1, !11 {
            gm     r1 i1, !12
        }
        cbr v0, only_owner_0_msg_sender_10_block0(), only_owner_0_msg_sender_10_block7(), !13

        only_owner_0_msg_sender_10_block0():
        v1 = const u64 0, !15
        v2 = gtf v1, 1, !21
        v3 = bitcast v2 to u8, !22
        v4 = get_local ptr u8, __matched_value_10, !24
        v5 = get_local ptr u8, __matched_value_10, !25
        v6 = const u8 0, !26
        v7 = cmp eq v3 v6, !28
        cbr v7, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1(), !29

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0():
        v8 = get_local ptr { u64 }, __anon_00000, !31
        v9 = const u64 0
        v10 = get_elem_ptr v8, ptr u64, v9, !32
        v11 = const u64 0, !30
        store v11 to v10, !33
        v12 = load v8, !34
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v12), !35

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1():
        v13 = get_local ptr u8, __matched_value_10, !36
        v14 = const u8 1, !37
        v15 = cmp eq v3 v14, !39
        cbr v15, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3(), !40

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2():
        v16 = get_local ptr { u64 }, __anon_100, !41
        v17 = const u64 0
        v18 = get_elem_ptr v16, ptr u64, v17, !42
        v19 = const u64 1, !30
        store v19 to v18, !43
        v20 = load v16, !44
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v20), !45

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3():
        v21 = const u64 0, !46
        revert v21, !50

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v22: { u64 }):
        v23 = get_local ptr { u64 }, __matched_value_30, !52
        store v22 to v23, !53
        v24 = get_local ptr { u64 }, __matched_value_30, !54
        v25 = const u64 0
        v26 = get_elem_ptr v24, ptr u64, v25, !55
        v27 = load v26, !56
        v28 = const u64 0, !19
        v29 = cmp eq v27 v28, !58
        cbr v29, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1(), !59

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0():
        v30 = const u64 0, !60
        v31 = gtf v30, 5, !62
        v32 = bitcast v31 to u64, !63
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v32), !64

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1():
        v33 = get_local ptr { u64 }, __matched_value_30, !65
        v34 = const u64 0
        v35 = get_elem_ptr v33, ptr u64, v34, !66
        v36 = load v35, !67
        v37 = const u64 1, !19
        v38 = cmp eq v36 v37, !69
        cbr v38, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3(), !70

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2():
        v39 = const u64 0, !71
        v40 = gtf v39, 259, !73
        v41 = bitcast v40 to u64, !74
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v41), !75

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3():
        v42 = const u64 14757395258967588866, !51
        revert v42, !76

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v43: u64):
        v44 = get_local ptr u64, inputs, !78
        v45 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0000, !81
        v46 = const u64 0
        v47 = get_elem_ptr v45, ptr u64, v46, !82
        v48 = const u64 0, !80
        store v48 to v47, !83
        v49 = load v45, !84
        v50 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !86
        store v49 to v50, !87
        v51 = get_local ptr u64, i, !89
        v52 = const u64 0, !90
        br only_owner_0_msg_sender_10_caller_address_12_while(v52), !91

        only_owner_0_msg_sender_10_caller_address_12_while(v53: u64):
        v54 = get_local ptr u64, i, !93
        v55 = get_local ptr u64, inputs, !95
        v56 = cmp lt v53 v43, !97
        cbr v56, only_owner_0_msg_sender_10_caller_address_12_while_body(), only_owner_0_msg_sender_10_caller_address_12_end_while(), !98

        only_owner_0_msg_sender_10_caller_address_12_while_body():
        v57 = get_local ptr u64, i, !100
        v58 = asm(input: v53) -> u64 input, !104 {
        }
        v59 = call input_type_17(v58), !106
        v60 = get_local ptr { u64 }, type_of_input, !108
        store v59 to v60, !109
        v61 = get_local ptr { u64 }, type_of_input, !111
        v62 = load v61, !112
        v63 = get_local ptr { u64 }, __matched_value_2, !114
        store v62 to v63, !115
        v64 = get_local ptr { u64 }, __matched_value_2, !116
        v65 = const u64 0
        v66 = get_elem_ptr v64, ptr u64, v65, !117
        v67 = load v66, !118
        v68 = const u64 0, !110
        v69 = cmp eq v67 v68, !120
        v70 = const unit (), !121
        cbr v69, only_owner_0_msg_sender_10_caller_address_12_block5(v70), only_owner_0_msg_sender_10_caller_address_12_block1(), !122

        only_owner_0_msg_sender_10_caller_address_12_block1():
        v71 = get_local ptr { u64 }, __matched_value_2, !123
        v72 = const u64 0
        v73 = get_elem_ptr v71, ptr u64, v72, !124
        v74 = load v73, !125
        v75 = const u64 2, !110
        v76 = cmp eq v74 v75, !127
        v77 = const unit (), !128
        cbr v76, only_owner_0_msg_sender_10_caller_address_12_block5(v77), only_owner_0_msg_sender_10_caller_address_12_block3(), !129

        only_owner_0_msg_sender_10_caller_address_12_block3():
        v78 = get_local ptr u64, i, !131
        v79 = const u64 1, !132
        v80 = call add_19(v53, v79), !134
        v81 = get_local ptr u64, i, !135
        br only_owner_0_msg_sender_10_caller_address_12_while(v80), !136

        only_owner_0_msg_sender_10_caller_address_12_block5(v82: ()):
        v83 = get_local ptr u64, i, !138
        v84 = asm(input: v53) -> u64 input, !140 {
        }
        v85 = call input_type_17(v84), !143
        v86 = get_local ptr { u64 }, __matched_value_6, !145
        store v85 to v86, !146
        v87 = get_local ptr { u64 }, __matched_value_6, !147
        v88 = const u64 0
        v89 = get_elem_ptr v87, ptr u64, v88, !148
        v90 = load v89, !149
        v91 = const u64 0, !142
        v92 = cmp eq v90 v91, !151
        cbr v92, only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0(), only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1(), !152

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0():
        v93 = get_local ptr { u64, ( () | { b256 } ) }, __anon_01, !153
        v94 = const u64 0
        v95 = get_elem_ptr v93, ptr u64, v94, !154
        v96 = const u64 1, !80
        store v96 to v95, !155
        v97 = gtf v84, 515, !157
        v98 = int_to_ptr v97 to ptr b256, !158
        v99 = load v98, !159
        v100 = call from_22(v99), !161
        v101 = const u64 1
        v102 = const u64 1
        v103 = get_elem_ptr v93, ptr { b256 }, v101, v102, !162
        store v100 to v103, !163
        v104 = load v93, !164
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v104), !165

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1():
        v105 = get_local ptr { u64, ( () | { b256 } ) }, __anon_11, !166
        v106 = const u64 0
        v107 = get_elem_ptr v105, ptr u64, v106, !167
        v108 = const u64 0, !80
        store v108 to v107, !168
        v109 = load v105, !169
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v109), !170

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v110: { u64, ( () | { b256 } ) }):
        v111 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !172
        store v110 to v111, !173
        v112 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !175
        v113 = load v112, !176
        v114 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !179
        store v113 to v114, !180
        v115 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !182
        v116 = const u64 0
        v117 = get_elem_ptr v115, ptr u64, v116, !183
        v118 = load v117, !184
        v119 = const u64 1, !181
        v120 = cmp eq v118 v119, !186
        v121 = const bool false, !187
        cbr v120, only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v121), only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1(), !188

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1():
        v122 = const bool true, !189
        br only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v122), !190

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v123: bool):
        cbr v123, only_owner_0_msg_sender_10_caller_address_12_block6(), only_owner_0_msg_sender_10_caller_address_12_block7(), !191

        only_owner_0_msg_sender_10_caller_address_12_block6():
        v124 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !193
        v125 = load v124, !194
        v126 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !196
        store v125 to v126, !197
        v127 = get_local ptr u64, i, !199
        v128 = const u64 1, !200
        v129 = call add_19(v53, v128), !202
        v130 = get_local ptr u64, i, !203
        br only_owner_0_msg_sender_10_caller_address_12_while(v129), !204

        only_owner_0_msg_sender_10_caller_address_12_block7():
        v131 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !206
        v132 = load v131, !207
        v133 = call unwrap_24(v132), !209
        v134 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !211
        v135 = load v134, !212
        v136 = call unwrap_24(v135), !214
        v137 = call eq_6(v133, v136), !216
        cbr v137, only_owner_0_msg_sender_10_caller_address_12_block9(), only_owner_0_msg_sender_10_caller_address_12_block10(), !217

        only_owner_0_msg_sender_10_caller_address_12_block9():
        v138 = get_local ptr u64, i, !219
        v139 = const u64 1, !220
        v140 = call add_19(v53, v139), !222
        v141 = get_local ptr u64, i, !223
        br only_owner_0_msg_sender_10_caller_address_12_while(v140), !224

        only_owner_0_msg_sender_10_caller_address_12_block10():
        v142 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_10, !227
        v143 = const u64 0
        v144 = get_elem_ptr v142, ptr u64, v143, !228
        v145 = const u64 1, !226
        store v145 to v144, !229
        v146 = get_local ptr { u64 }, __anon_20, !231
        v147 = const u64 0
        v148 = get_elem_ptr v146, ptr u64, v147, !232
        v149 = const u64 0, !230
        store v149 to v148, !233
        v150 = load v146, !234
        v151 = const u64 1
        v152 = const u64 1
        v153 = get_elem_ptr v142, ptr { u64 }, v151, v152, !235
        store v150 to v153, !236
        v154 = load v142, !237
        br only_owner_0_msg_sender_10_block10(v154), !239

        only_owner_0_msg_sender_10_caller_address_12_end_while():
        v155 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !241
        v156 = load v155, !242
        v157 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !244
        store v156 to v157, !245
        v158 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !246
        v159 = const u64 0
        v160 = get_elem_ptr v158, ptr u64, v159, !247
        v161 = load v160, !248
        v162 = const u64 1, !240
        v163 = cmp eq v161 v162, !250
        cbr v163, only_owner_0_msg_sender_10_caller_address_12_block12(), only_owner_0_msg_sender_10_caller_address_12_block13(), !251

        only_owner_0_msg_sender_10_caller_address_12_block12():
        v164 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !252
        v165 = const u64 1
        v166 = const u64 1
        v167 = get_elem_ptr v164, ptr { b256 }, v165, v166, !253
        v168 = load v167, !254
        v169 = get_local ptr { b256 }, address, !256
        store v168 to v169, !257
        v170 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_30, !258
        v171 = const u64 0
        v172 = get_elem_ptr v170, ptr u64, v171, !259
        v173 = const u64 0, !226
        store v173 to v172, !260
        v174 = get_local ptr { b256 }, address, !262
        v175 = load v174, !263
        v176 = const u64 1
        v177 = const u64 0
        v178 = get_elem_ptr v170, ptr { b256 }, v176, v177, !264
        store v175 to v178, !265
        v179 = load v170, !266
        br only_owner_0_msg_sender_10_caller_address_12_block17(v179), !267

        only_owner_0_msg_sender_10_caller_address_12_block13():
        v180 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !268
        v181 = const u64 0
        v182 = get_elem_ptr v180, ptr u64, v181, !269
        v183 = load v182, !270
        v184 = const u64 0, !240
        v185 = cmp eq v183 v184, !272
        cbr v185, only_owner_0_msg_sender_10_caller_address_12_block14(), only_owner_0_msg_sender_10_caller_address_12_block15(), !273

        only_owner_0_msg_sender_10_caller_address_12_block14():
        v186 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_40, !274
        v187 = const u64 0
        v188 = get_elem_ptr v186, ptr u64, v187, !275
        v189 = const u64 1, !226
        store v189 to v188, !276
        v190 = get_local ptr { u64 }, __anon_5, !277
        v191 = const u64 0
        v192 = get_elem_ptr v190, ptr u64, v191, !278
        v193 = const u64 1, !230
        store v193 to v192, !279
        v194 = load v190, !280
        v195 = const u64 1
        v196 = const u64 1
        v197 = get_elem_ptr v186, ptr { u64 }, v195, v196, !281
        store v194 to v197, !282
        v198 = load v186, !283
        br only_owner_0_msg_sender_10_caller_address_12_block17(v198), !284

        only_owner_0_msg_sender_10_caller_address_12_block15():
        v199 = const u64 14757395258967588866, !243
        revert v199, !285

        only_owner_0_msg_sender_10_caller_address_12_block17(v200: { u64, ( { b256 } | { u64 } ) }):
        br only_owner_0_msg_sender_10_block10(v200), !286

        only_owner_0_msg_sender_10_block10(v201: { u64, ( { b256 } | { u64 } ) }):
        v202 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !288
        store v201 to v202, !289
        v203 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !290
        v204 = const u64 0
        v205 = get_elem_ptr v203, ptr u64, v204, !291
        v206 = load v205, !292
        v207 = const u64 1, !16
        v208 = cmp eq v206 v207, !294
        cbr v208, only_owner_0_msg_sender_10_block1(), only_owner_0_msg_sender_10_block2(), !295

        only_owner_0_msg_sender_10_block1():
        v209 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !296
        v210 = const u64 1
        v211 = const u64 1
        v212 = get_elem_ptr v209, ptr { u64 }, v210, v211, !297
        v213 = load v212, !298
        v214 = get_local ptr { u64 }, err, !300
        store v213 to v214, !301
        v215 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_000, !302
        v216 = const u64 0
        v217 = get_elem_ptr v215, ptr u64, v216, !303
        v218 = const u64 1, !226
        store v218 to v217, !304
        v219 = get_local ptr { u64 }, err, !306
        v220 = load v219, !307
        v221 = const u64 1
        v222 = const u64 1
        v223 = get_elem_ptr v215, ptr { u64 }, v221, v222, !308
        store v220 to v223, !309
        v224 = load v215, !310
        br only_owner_0_msg_sender_10_block6(v224), !311

        only_owner_0_msg_sender_10_block2():
        v225 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !312
        v226 = const u64 0
        v227 = get_elem_ptr v225, ptr u64, v226, !313
        v228 = load v227, !314
        v229 = const u64 0, !16
        v230 = cmp eq v228 v229, !316
        cbr v230, only_owner_0_msg_sender_10_block3(), only_owner_0_msg_sender_10_block4(), !317

        only_owner_0_msg_sender_10_block3():
        v231 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !318
        v232 = const u64 1
        v233 = const u64 0
        v234 = get_elem_ptr v231, ptr { b256 }, v232, v233, !319
        v235 = load v234, !320
        v236 = get_local ptr { b256 }, owner, !322
        store v235 to v236, !323
        v237 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_1, !324
        v238 = const u64 0
        v239 = get_elem_ptr v237, ptr u64, v238, !325
        v240 = const u64 0, !226
        store v240 to v239, !326
        v241 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !329
        v242 = const u64 0
        v243 = get_elem_ptr v241, ptr u64, v242, !330
        v244 = const u64 0, !328
        store v244 to v243, !331
        v245 = get_local ptr { b256 }, owner, !333
        v246 = load v245, !334
        v247 = const u64 1
        v248 = const u64 0
        v249 = get_elem_ptr v241, ptr { b256 }, v247, v248, !335
        store v246 to v249, !336
        v250 = load v241, !337
        v251 = const u64 1
        v252 = const u64 0
        v253 = get_elem_ptr v237, ptr { u64, ( { b256 } | { b256 } ) }, v251, v252, !338
        store v250 to v253, !339
        v254 = load v237, !340
        br only_owner_0_msg_sender_10_block6(v254), !341

        only_owner_0_msg_sender_10_block4():
        v255 = const u64 14757395258967588866, !287
        revert v255, !342

        only_owner_0_msg_sender_10_block6(v256: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        br only_owner_0_msg_sender_10_block8(v256), !343

        only_owner_0_msg_sender_10_block7():
        v257 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_3, !344
        v258 = const u64 0
        v259 = get_elem_ptr v257, ptr u64, v258, !345
        v260 = const u64 0, !226
        store v260 to v259, !346
        v261 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_4, !347
        v262 = const u64 0
        v263 = get_elem_ptr v261, ptr u64, v262, !348
        v264 = const u64 1, !328
        store v264 to v263, !349
        v265 = asm(r1) -> b256 r1, !352 {
            gm     r1 i2, !353
        }
        v266 = call from_22(v265), !355
        v267 = const u64 1
        v268 = const u64 1
        v269 = get_elem_ptr v261, ptr { b256 }, v267, v268, !356
        store v266 to v269, !357
        v270 = load v261, !358
        v271 = const u64 1
        v272 = const u64 0
        v273 = get_elem_ptr v257, ptr { u64, ( { b256 } | { b256 } ) }, v271, v272, !359
        store v270 to v273, !360
        v274 = load v257, !361
        br only_owner_0_msg_sender_10_block8(v274), !362

        only_owner_0_msg_sender_10_block8(v275: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v276 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !365
        store v275 to v276, !366
        v277 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !368
        v278 = const u64 0
        v279 = get_elem_ptr v277, ptr u64, v278, !369
        v280 = load v279, !370
        v281 = const u64 0, !367
        v282 = cmp eq v280 v281, !372
        cbr v282, only_owner_0_unwrap_9_block0(), only_owner_0_unwrap_9_block1(), !373

        only_owner_0_unwrap_9_block0():
        v283 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !374
        v284 = const u64 1
        v285 = const u64 0
        v286 = get_elem_ptr v283, ptr { u64, ( { b256 } | { b256 } ) }, v284, v285, !375
        v287 = load v286, !376
        v288 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !378
        store v287 to v288, !379
        v289 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !381
        v290 = load v289, !382
        v291 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_00, !383
        v292 = const u64 0
        v293 = get_elem_ptr v291, ptr u64, v292, !384
        v294 = const u64 0, !328
        store v294 to v293, !385
        v295 = get_local ptr { b256, u64, b256 }, __anon_02, !388
        v296 = const u64 0
        v297 = get_elem_ptr v295, ptr b256, v296, !389
        v298 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !387
        store v298 to v297, !390
        v299 = const u64 1
        v300 = get_elem_ptr v295, ptr u64, v299, !391
        v301 = const u64 0
        store v301 to v300, !392
        v302 = const u64 2
        v303 = get_elem_ptr v295, ptr b256, v302, !393
        v304 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !387
        store v304 to v303, !394
        v305 = load v295, !395
        v306 = call slot_51(v305), !399
        v307 = call offset_46(v305), !401
        v308 = const u64 32
        v309 = const u64 0, !403
        v310 = cmp eq v308 v309, !406
        cbr v310, only_owner_0_get_owner_27_read_28_read_30_block0(), only_owner_0_get_owner_27_read_28_read_30_block1(), !407

        only_owner_0_unwrap_9_block1():
        v311 = const u64 0, !408
        revert v311, !410

        only_owner_0_get_owner_27_read_28_read_30_block0():
        v312 = get_local ptr { u64, ( () | b256 ) }, __anon_001, !411
        v313 = const u64 0
        v314 = get_elem_ptr v312, ptr u64, v313, !412
        v315 = const u64 0, !80
        store v315 to v314, !413
        v316 = load v312, !414
        br only_owner_0_get_owner_27_read_28_block0(v316), !416

        only_owner_0_get_owner_27_read_28_read_30_block1():
        v317 = get_local ptr u64, size_of_t, !419
        v318 = const u64 8, !420
        v319 = mul v307, v318, !422
        v320 = get_local ptr u64, size_of_t, !424
        v321 = const u64 32
        v322 = add v319, v321, !426
        v323 = const u64 31, !427
        v324 = add v322, v323, !429
        v325 = const u64 5, !430
        v326 = rsh v324, v325, !432
        v327 = get_local ptr u64, last_slot, !434
        v328 = const u64 4, !435
        v329 = mod v307, v328, !437
        v330 = get_local ptr u64, place_in_slot0, !439
        v331 = get_local ptr bool, __matched_value_11, !441
        v332 = get_local ptr bool, __matched_value_11, !443
        v333 = const bool true
        v334 = const bool true, !444
        v335 = cmp eq v333 v334, !446
        cbr v335, only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block0(), only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block1(), !447

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block0():
        v336 = get_local ptr u64, place_in_slot0, !449
        v337 = const u64 8, !450
        v338 = mul v329, v337, !452
        v339 = get_local ptr u64, size_of_t, !454
        v340 = add v338, v321, !456
        v341 = const u64 31, !457
        v342 = add v340, v341, !459
        v343 = const u64 5, !460
        v344 = rsh v342, v343, !462
        br only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block5(v344), !463

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block1():
        v345 = get_local ptr bool, __matched_value_11, !464
        v346 = const bool false, !465
        v347 = cmp eq v333 v346, !467
        v348 = const u64 1, !468
        cbr v347, only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block5(v348), only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block3(), !469

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block3():
        v349 = const u64 14757395258967588866, !440
        revert v349, !470

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block5(v350: u64):
        v351 = get_local ptr u64, number_of_slots0, !472
        v352 = asm(input: v306) -> u256 input, !475 {
        }
        v353 = get_local ptr u256, offset_slot0, !477
        store v352 to v353, !478
        v354 = get_local ptr u256, offset_slot0, !480
        v355 = load v354, !481
        v356 = get_local ptr u64, last_slot, !483
        v357 = call as_u256_40(v326), !485
        v358 = get_local ptr u64, number_of_slots0, !487
        v359 = call as_u256_40(v350), !489
        v360 = sub v357, v359, !491
        v361 = add v355, v360, !493
        v362 = get_local ptr u256, offset_slot0, !494
        store v361 to v362, !495
        v363 = get_local ptr u256, offset_slot0, !497
        v364 = load v363, !498
        v365 = asm(input: v364) -> b256 input, !501 {
        }
        v366 = get_local ptr u64, number_of_slots0, !503
        v367 = get_local ptr u64, place_in_slot0, !505
        v368 = get_local ptr { b256, u64, u64 }, __anon_0001, !507
        v369 = const u64 0
        v370 = get_elem_ptr v368, ptr b256, v369, !508
        store v365 to v370, !509
        v371 = const u64 1
        v372 = get_elem_ptr v368, ptr u64, v371, !510
        store v350 to v372, !511
        v373 = const u64 2
        v374 = get_elem_ptr v368, ptr u64, v373, !512
        store v329 to v374, !513
        v375 = load v368, !514
        v376 = get_local ptr { b256, u64, u64 }, __tuple_2, !516
        store v375 to v376, !517
        v377 = get_local ptr { b256, u64, u64 }, __tuple_2, !518
        v378 = load v377, !519
        v379 = get_local ptr { b256, u64, u64 }, __tuple_2_, !520
        store v378 to v379, !521
        v380 = get_local ptr { b256, u64, u64 }, __tuple_2_, !522
        v381 = const u64 0
        v382 = get_elem_ptr v380, ptr b256, v381, !523
        v383 = load v382, !524
        v384 = get_local ptr b256, offset_slot, !525
        store v383 to v384, !526
        v385 = get_local ptr { b256, u64, u64 }, __tuple_2_, !527
        v386 = const u64 1
        v387 = get_elem_ptr v385, ptr u64, v386, !528
        v388 = load v387, !529
        v389 = get_local ptr u64, number_of_slots, !530
        v390 = get_local ptr { b256, u64, u64 }, __tuple_2_, !531
        v391 = const u64 2
        v392 = get_elem_ptr v390, ptr u64, v391, !532
        v393 = load v392, !533
        v394 = get_local ptr u64, place_in_slot, !534
        v395 = get_local ptr u64, number_of_slots, !536
        v396 = const u64 32, !537
        v397 = mul v388, v396, !539
        v398 = const u64 8
        v399 = mul v398, v397, !543
        v400 = asm(size: v399, ptr) -> u64 ptr, !545 {
            aloc   size, !546
            move   ptr hp, !547
        }
        v401 = get_local ptr u64, result_ptr, !549
        v402 = get_local ptr b256, offset_slot, !551
        v403 = load v402, !552
        v404 = get_local ptr u64, result_ptr, !554
        v405 = get_local ptr u64, number_of_slots, !556
        v406 = get_local ptr b256, key_for_storage, !558
        store v403 to v406, !559
        v407 = int_to_ptr v400 to ptr b256, !560
        v408 = state_load_quad_word v407, key v406, v388, !561
        cbr v408, only_owner_0_get_owner_27_read_28_read_30_block3(), only_owner_0_get_owner_27_read_28_read_30_block4(), !562

        only_owner_0_get_owner_27_read_28_read_30_block3():
        v409 = get_local ptr { u64, ( () | b256 ) }, __anon_12, !563
        v410 = const u64 0
        v411 = get_elem_ptr v409, ptr u64, v410, !564
        v412 = const u64 1, !80
        store v412 to v411, !565
        v413 = get_local ptr u64, result_ptr, !567
        v414 = get_local ptr u64, place_in_slot, !569
        v415 = const u64 8
        v416 = mul v415, v393, !571
        v417 = add v400, v416, !572
        v418 = const bool true
        cbr v418, only_owner_0_get_owner_27_read_28_read_30_read_43_block0(), only_owner_0_get_owner_27_read_28_read_30_read_43_block1(), !576

        only_owner_0_get_owner_27_read_28_read_30_read_43_block0():
        v419 = asm(ptr: v417) -> b256 ptr, !578 {
        }
        br only_owner_0_get_owner_27_read_28_read_30_read_43_block5(v419), !579

        only_owner_0_get_owner_27_read_28_read_30_read_43_block1():
        v420 = const u64 32
        v421 = const u64 1, !580
        v422 = cmp eq v420 v421, !581
        cbr v422, only_owner_0_get_owner_27_read_28_read_30_read_43_block2(), only_owner_0_get_owner_27_read_28_read_30_read_43_block3(), !583

        only_owner_0_get_owner_27_read_28_read_30_read_43_block2():
        v423 = asm(ptr: v417, val) -> b256 val, !585 {
            lb     val ptr i0, !586
        }
        br only_owner_0_get_owner_27_read_28_read_30_read_43_block4(v423), !587

        only_owner_0_get_owner_27_read_28_read_30_read_43_block3():
        v424 = asm(ptr: v417, val) -> b256 val, !589 {
            lw     val ptr i0, !590
        }
        br only_owner_0_get_owner_27_read_28_read_30_read_43_block4(v424), !591

        only_owner_0_get_owner_27_read_28_read_30_read_43_block4(v425: b256):
        br only_owner_0_get_owner_27_read_28_read_30_read_43_block5(v425), !592

        only_owner_0_get_owner_27_read_28_read_30_read_43_block5(v426: b256):
        v427 = const u64 1
        v428 = const u64 1
        v429 = get_elem_ptr v409, ptr b256, v427, v428, !593
        store v426 to v429, !594
        v430 = load v409, !595
        br only_owner_0_get_owner_27_read_28_read_30_block5(v430), !596

        only_owner_0_get_owner_27_read_28_read_30_block4():
        v431 = get_local ptr { u64, ( () | b256 ) }, __anon_21, !597
        v432 = const u64 0
        v433 = get_elem_ptr v431, ptr u64, v432, !598
        v434 = const u64 0, !80
        store v434 to v433, !599
        v435 = load v431, !600
        br only_owner_0_get_owner_27_read_28_read_30_block5(v435), !601

        only_owner_0_get_owner_27_read_28_read_30_block5(v436: { u64, ( () | b256 ) }):
        br only_owner_0_get_owner_27_read_28_block0(v436), !602

        only_owner_0_get_owner_27_read_28_block0(v437: { u64, ( () | b256 ) }):
        v438 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !605
        store v437 to v438, !606
        v439 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !608
        v440 = const u64 0
        v441 = get_elem_ptr v439, ptr u64, v440, !609
        v442 = load v441, !610
        v443 = const u64 1, !607
        v444 = cmp eq v442 v443, !612
        cbr v444, only_owner_0_get_owner_27_read_28_unwrap_29_block0(), only_owner_0_get_owner_27_read_28_unwrap_29_block1(), !613

        only_owner_0_get_owner_27_read_28_unwrap_29_block0():
        v445 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !614
        v446 = const u64 1
        v447 = const u64 1
        v448 = get_elem_ptr v445, ptr b256, v446, v447, !615
        v449 = load v448, !616
        v450 = get_local ptr b256, inner_value0, !618
        store v449 to v450, !619
        v451 = get_local ptr b256, inner_value0, !621
        v452 = load v451, !622
        v453 = call from_22(v452), !624
        v454 = const u64 1
        v455 = const u64 0
        v456 = get_elem_ptr v291, ptr { b256 }, v454, v455, !625
        store v453 to v456, !626
        v457 = load v291, !5
        v458 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_03, !629
        v459 = const u64 0
        v460 = get_elem_ptr v458, ptr { u64, ( { b256 } | { b256 } ) }, v459, !630
        store v290 to v460, !631
        v461 = const u64 1
        v462 = get_elem_ptr v458, ptr { u64, ( { b256 } | { b256 } ) }, v461, !632
        store v457 to v462, !633
        v463 = load v458, !634
        v464 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !636
        store v463 to v464, !637
        v465 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !638
        v466 = const u64 0
        v467 = get_elem_ptr v465, ptr { u64, ( { b256 } | { b256 } ) }, v466, !640
        v468 = const u64 0
        v469 = get_elem_ptr v467, ptr u64, v468, !641
        v470 = load v469, !642
        v471 = const u64 0, !639
        v472 = cmp eq v470 v471, !644
        cbr v472, only_owner_0_eq_4_block0(), only_owner_0_eq_4_block1(v472), !645

        only_owner_0_get_owner_27_read_28_unwrap_29_block1():
        v473 = const u64 0, !646
        revert v473, !648

        only_owner_0_eq_4_block0():
        v474 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !649
        v475 = const u64 1
        v476 = get_elem_ptr v474, ptr { u64, ( { b256 } | { b256 } ) }, v475, !650
        v477 = const u64 0
        v478 = get_elem_ptr v476, ptr u64, v477, !651
        v479 = load v478, !652
        v480 = const u64 0, !639
        v481 = cmp eq v479 v480, !653
        br only_owner_0_eq_4_block1(v481), !654

        only_owner_0_eq_4_block1(v482: bool):
        cbr v482, only_owner_0_eq_4_block2(), only_owner_0_eq_4_block3(), !655

        only_owner_0_eq_4_block2():
        v483 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !656
        v484 = const u64 0
        v485 = get_elem_ptr v483, ptr { u64, ( { b256 } | { b256 } ) }, v484, !657
        v486 = const u64 1
        v487 = const u64 0
        v488 = get_elem_ptr v485, ptr { b256 }, v486, v487, !658
        v489 = load v488, !659
        v490 = get_local ptr { b256 }, addr1, !661
        store v489 to v490, !662
        v491 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !663
        v492 = const u64 1
        v493 = get_elem_ptr v491, ptr { u64, ( { b256 } | { b256 } ) }, v492, !664
        v494 = const u64 1
        v495 = const u64 0
        v496 = get_elem_ptr v493, ptr { b256 }, v494, v495, !665
        v497 = load v496, !666
        v498 = get_local ptr { b256 }, addr2, !668
        store v497 to v498, !669
        v499 = get_local ptr { b256 }, addr1, !671
        v500 = load v499, !672
        v501 = get_local ptr { b256 }, addr2, !674
        v502 = load v501, !675
        v503 = call eq_6(v500, v502), !677
        br only_owner_0_eq_4_block9(v503), !678

        only_owner_0_eq_4_block3():
        v504 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !679
        v505 = const u64 0
        v506 = get_elem_ptr v504, ptr { u64, ( { b256 } | { b256 } ) }, v505, !681
        v507 = const u64 0
        v508 = get_elem_ptr v506, ptr u64, v507, !682
        v509 = load v508, !683
        v510 = const u64 1, !680
        v511 = cmp eq v509 v510, !685
        cbr v511, only_owner_0_eq_4_block4(), only_owner_0_eq_4_block5(v511), !686

        only_owner_0_eq_4_block4():
        v512 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !687
        v513 = const u64 1
        v514 = get_elem_ptr v512, ptr { u64, ( { b256 } | { b256 } ) }, v513, !688
        v515 = const u64 0
        v516 = get_elem_ptr v514, ptr u64, v515, !689
        v517 = load v516, !690
        v518 = const u64 1, !680
        v519 = cmp eq v517 v518, !691
        br only_owner_0_eq_4_block5(v519), !692

        only_owner_0_eq_4_block5(v520: bool):
        v521 = const bool false, !693
        cbr v520, only_owner_0_eq_4_block6(), only_owner_0_eq_4_block8(v521), !694

        only_owner_0_eq_4_block6():
        v522 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !695
        v523 = const u64 0
        v524 = get_elem_ptr v522, ptr { u64, ( { b256 } | { b256 } ) }, v523, !696
        v525 = const u64 1
        v526 = const u64 1
        v527 = get_elem_ptr v524, ptr { b256 }, v525, v526, !697
        v528 = load v527, !698
        v529 = get_local ptr { b256 }, id1, !700
        store v528 to v529, !701
        v530 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !702
        v531 = const u64 1
        v532 = get_elem_ptr v530, ptr { u64, ( { b256 } | { b256 } ) }, v531, !703
        v533 = const u64 1
        v534 = const u64 1
        v535 = get_elem_ptr v532, ptr { b256 }, v533, v534, !704
        v536 = load v535, !705
        v537 = get_local ptr { b256 }, id2, !707
        store v536 to v537, !708
        v538 = get_local ptr { b256 }, id1, !710
        v539 = load v538, !711
        v540 = get_local ptr { b256 }, id2, !713
        v541 = load v540, !714
        v542 = call eq_6(v539, v541), !716
        br only_owner_0_eq_4_block8(v542), !717

        only_owner_0_eq_4_block8(v543: bool):
        br only_owner_0_eq_4_block9(v543), !718

        only_owner_0_eq_4_block9(v544: bool):
        v545 = const bool false, !720
        v546 = cmp eq v544 v545, !724
        cbr v546, only_owner_0_assert_1_block0(), only_owner_0_assert_1_block1(), !725

        only_owner_0_assert_1_block0():
        v547 = const u64 18446744073709486084, !727
        revert v547, !729

        only_owner_0_assert_1_block1():
        v548 = get_local ptr { b256, u64, b256 }, __anon_0, !730
        v549 = const u64 0
        v550 = get_elem_ptr v548, ptr b256, v549
        v551 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c, !730
        store v551 to v550, !730
        v552 = const u64 1
        v553 = get_elem_ptr v548, ptr u64, v552
        v554 = const u64 0
        store v554 to v553, !730
        v555 = const u64 2
        v556 = get_elem_ptr v548, ptr b256, v555
        v557 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c, !730
        store v557 to v556, !730
        v558 = load v548
        v559 = call slot_51(v558), !733
        v560 = call offset_46(v558), !735
        v561 = const u64 8
        v562 = const u64 0, !736
        v563 = cmp eq v561 v562, !739
        v564 = const unit (), !740
        cbr v563, write_47_block0(v564), write_47_write_48_block1(), !741

        write_47_write_48_block1():
        v565 = get_local ptr u64, size_of_t0, !743
        v566 = const u64 8, !420
        v567 = mul v560, v566, !744
        v568 = get_local ptr u64, size_of_t0, !745
        v569 = const u64 8
        v570 = add v567, v569, !746
        v571 = const u64 31, !427
        v572 = add v570, v571, !747
        v573 = const u64 5, !430
        v574 = rsh v572, v573, !748
        v575 = get_local ptr u64, last_slot0, !749
        v576 = const u64 4, !435
        v577 = mod v560, v576, !750
        v578 = get_local ptr u64, place_in_slot00, !751
        v579 = get_local ptr bool, __matched_value_13, !752
        v580 = get_local ptr bool, __matched_value_13, !753
        v581 = const bool false
        v582 = const bool true, !444
        v583 = cmp eq v581 v582, !754
        cbr v583, write_47_write_48_slot_calculator_49_block0(), write_47_write_48_slot_calculator_49_block1(), !755

        write_47_write_48_slot_calculator_49_block0():
        v584 = get_local ptr u64, place_in_slot00, !756
        v585 = const u64 8, !450
        v586 = mul v577, v585, !757
        v587 = get_local ptr u64, size_of_t0, !758
        v588 = add v586, v569, !759
        v589 = const u64 31, !457
        v590 = add v588, v589, !760
        v591 = const u64 5, !460
        v592 = rsh v590, v591, !761
        br write_47_write_48_slot_calculator_49_block5(v592), !762

        write_47_write_48_slot_calculator_49_block1():
        v593 = get_local ptr bool, __matched_value_13, !763
        v594 = const bool false, !465
        v595 = cmp eq v581 v594, !764
        v596 = const u64 1, !468
        cbr v595, write_47_write_48_slot_calculator_49_block5(v596), write_47_write_48_slot_calculator_49_block3(), !765

        write_47_write_48_slot_calculator_49_block3():
        v597 = const u64 14757395258967588866, !440
        revert v597, !766

        write_47_write_48_slot_calculator_49_block5(v598: u64):
        v599 = get_local ptr u64, number_of_slots00, !767
        v600 = asm(input: v559) -> u256 input, !768 {
        }
        v601 = get_local ptr u256, offset_slot00, !769
        store v600 to v601, !770
        v602 = get_local ptr u256, offset_slot00, !771
        v603 = load v602, !772
        v604 = get_local ptr u64, last_slot0, !773
        v605 = call as_u256_40(v574), !774
        v606 = get_local ptr u64, number_of_slots00, !775
        v607 = call as_u256_40(v598), !776
        v608 = sub v605, v607, !777
        v609 = add v603, v608, !778
        v610 = get_local ptr u256, offset_slot00, !779
        store v609 to v610, !780
        v611 = get_local ptr u256, offset_slot00, !781
        v612 = load v611, !782
        v613 = asm(input: v612) -> b256 input, !783 {
        }
        v614 = get_local ptr u64, number_of_slots00, !784
        v615 = get_local ptr u64, place_in_slot00, !785
        v616 = get_local ptr { b256, u64, u64 }, __anon_04, !786
        v617 = const u64 0
        v618 = get_elem_ptr v616, ptr b256, v617, !787
        store v613 to v618, !788
        v619 = const u64 1
        v620 = get_elem_ptr v616, ptr u64, v619, !789
        store v598 to v620, !790
        v621 = const u64 2
        v622 = get_elem_ptr v616, ptr u64, v621, !791
        store v577 to v622, !792
        v623 = load v616, !793
        v624 = get_local ptr { b256, u64, u64 }, __tuple_1, !795
        store v623 to v624, !796
        v625 = get_local ptr { b256, u64, u64 }, __tuple_1, !797
        v626 = load v625, !798
        v627 = get_local ptr { b256, u64, u64 }, __tuple_1_, !799
        store v626 to v627, !800
        v628 = get_local ptr { b256, u64, u64 }, __tuple_1_, !801
        v629 = const u64 0
        v630 = get_elem_ptr v628, ptr b256, v629, !802
        v631 = load v630, !803
        v632 = get_local ptr b256, offset_slot1, !804
        store v631 to v632, !805
        v633 = get_local ptr { b256, u64, u64 }, __tuple_1_, !806
        v634 = const u64 1
        v635 = get_elem_ptr v633, ptr u64, v634, !807
        v636 = load v635, !808
        v637 = get_local ptr u64, number_of_slots1, !809
        v638 = get_local ptr { b256, u64, u64 }, __tuple_1_, !810
        v639 = const u64 2
        v640 = get_elem_ptr v638, ptr u64, v639, !811
        v641 = load v640, !812
        v642 = get_local ptr u64, place_in_slot1, !813
        v643 = get_local ptr u64, number_of_slots1, !815
        v644 = const u64 32, !816
        v645 = mul v636, v644, !818
        v646 = mul v398, v645, !820
        v647 = asm(size: v646, ptr) -> u64 ptr, !821 {
            aloc   size, !546
            move   ptr hp, !547
        }
        v648 = get_local ptr u64, padded_value, !823
        v649 = get_local ptr b256, offset_slot1, !825
        v650 = load v649, !826
        v651 = get_local ptr u64, padded_value, !828
        v652 = get_local ptr u64, number_of_slots1, !830
        v653 = get_local ptr b256, key_for_storage0, !832
        store v650 to v653, !833
        v654 = int_to_ptr v647 to ptr b256, !834
        v655 = state_load_quad_word v654, key v653, v636, !835
        v656 = get_local ptr bool, _, !837
        v657 = get_local ptr u64, padded_value, !839
        v658 = get_local ptr u64, place_in_slot1, !841
        v659 = mul v415, v641, !843
        v660 = add v647, v659, !844
        v661 = const bool false
        cbr v661, write_47_write_48_write_50_block0(), write_47_write_48_write_50_block1(), !847

        write_47_write_48_write_50_block0():
        v662 = const u64 8
        v663 = asm(dst: v660, src: new_value, count: v662) {
            mcp    dst src count, !848
        }
        v664 = const unit ()
        br write_47_write_48_write_50_block5(v664), !849

        write_47_write_48_write_50_block1():
        v665 = const u64 8
        v666 = const u64 1, !850
        v667 = cmp eq v665 v666, !851
        cbr v667, write_47_write_48_write_50_block2(), write_47_write_48_write_50_block3(), !853

        write_47_write_48_write_50_block2():
        v668 = asm(ptr: v660, val: new_value) {
            sb     ptr val i0, !854
        }
        v669 = const unit ()
        br write_47_write_48_write_50_block4(v669), !855

        write_47_write_48_write_50_block3():
        v670 = asm(ptr: v660, val: new_value) {
            sw     ptr val i0, !856
        }
        v671 = const unit ()
        br write_47_write_48_write_50_block4(v671), !857

        write_47_write_48_write_50_block4(v672: ()):
        br write_47_write_48_write_50_block5(v672), !858

        write_47_write_48_write_50_block5(v673: ()):
        v674 = get_local ptr b256, offset_slot1, !860
        v675 = load v674, !861
        v676 = get_local ptr u64, padded_value, !863
        v677 = get_local ptr u64, number_of_slots1, !865
        v678 = get_local ptr b256, key_for_storage_, !867
        store v675 to v678, !868
        v679 = int_to_ptr v647 to ptr b256, !869
        v680 = state_store_quad_word v679, key v678, v636, !870
        v681 = get_local ptr bool, __, !872
        v682 = const unit ()
        br write_47_block0(v682), !873

        write_47_block0(v683: ()):
        v684 = const unit ()
        ret () v684
    }

    pub fn eq_6(self !875: { b256 }, other !876: { b256 }) -> bool, !877 {
        entry(self: { b256 }, other: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !878
        v4 = load v3
        v5 = ptr_to_int other to u64
        v6 = int_to_ptr v5 to ptr { b256 }
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr b256, v7, !878
        v9 = load v8
        v10 = cmp eq v4 v9, !879
        ret bool v10
    }

    pub fn input_type_17(index !880: u64) -> { u64 }, !881 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local u8 __matched_value_2

        entry(index: u64):
        v0 = gtf index, 512, !882
        v1 = bitcast v0 to u8, !882
        v2 = get_local ptr u8, __matched_value_2, !883
        v3 = get_local ptr u8, __matched_value_2, !882
        v4 = const u8 0, !884
        v5 = cmp eq v1 v4, !885
        cbr v5, block0(), block1(), !885

        block0():
        v6 = get_local ptr { u64 }, __anon_0, !886
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr u64, v7, !886
        v9 = const u64 0, !886
        store v9 to v8, !886
        v10 = load v6
        br block8(v10)

        block1():
        v11 = get_local ptr u8, __matched_value_2, !882
        v12 = const u8 1, !887
        v13 = cmp eq v1 v12, !888
        cbr v13, block2(), block3(), !888

        block2():
        v14 = get_local ptr { u64 }, __anon_1, !886
        v15 = const u64 0
        v16 = get_elem_ptr v14, ptr u64, v15, !886
        v17 = const u64 1, !886
        store v17 to v16, !886
        v18 = load v14
        br block7(v18)

        block3():
        v19 = get_local ptr u8, __matched_value_2, !882
        v20 = const u8 2, !889
        v21 = cmp eq v1 v20, !890
        cbr v21, block4(), block5(), !890

        block4():
        v22 = get_local ptr { u64 }, __anon_2, !886
        v23 = const u64 0
        v24 = get_elem_ptr v22, ptr u64, v23, !886
        v25 = const u64 2, !886
        store v25 to v24, !886
        v26 = load v22
        br block7(v26)

        block5():
        v27 = const u64 0, !891
        revert v27, !893

        block7(v28: { u64 }):
        br block8(v28)

        block8(v29: { u64 }):
        ret { u64 } v29
    }

    pub fn add_19(self !894: u64, other !895: u64) -> u64, !896 {
        local u64 res

        entry(self: u64, other: u64):
        v0 = add self, other
        v1 = get_local ptr u64, res, !897
        v2 = get_local ptr u64, res, !898
        v3 = const u64 65535, !900
        v4 = cmp gt v0 v3
        cbr v4, block0(), block1(), !901

        block0():
        v5 = const u64 0, !902
        revert v5, !903

        block1():
        v6 = get_local ptr u64, res, !904
        ret u64 v0
    }

    pub fn from_22(bits !905: b256) -> { b256 }, !906 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !907
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !907
        v3 = load v0
        ret { b256 } v3
    }

    pub fn unwrap_24(self !908: { u64, ( () | { b256 } ) }) -> { b256 }, !909 {
        local { u64, ( () | { b256 } ) } __matched_value_4
        local { b256 } inner_value

        entry(self: { u64, ( () | { b256 } ) }):
        v0 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !604
        store self to v0, !604
        v1 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !607
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !607
        v4 = load v3
        v5 = const u64 1, !607
        v6 = cmp eq v4 v5, !611
        cbr v6, block0(), block1(), !611

        block0():
        v7 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !607
        v8 = const u64 1
        v9 = const u64 1
        v10 = get_elem_ptr v7, ptr { b256 }, v8, v9
        v11 = load v10
        v12 = get_local ptr { b256 }, inner_value, !617
        store v11 to v12, !617
        v13 = get_local ptr { b256 }, inner_value, !620
        v14 = load v13
        ret { b256 } v14

        block1():
        v15 = const u64 0, !646
        revert v15, !910
    }

    pub fn as_u256_40(self !911: u64) -> u256, !912 {
        local { u64, u64, u64, u64 } __anon_0
        local { u64, u64, u64, u64 } input

        entry(self: u64):
        v0 = get_local ptr { u64, u64, u64, u64 }, __anon_0, !913
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr u64, v1, !913
        v3 = const u64 0, !914
        store v3 to v2, !913
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4, !913
        v6 = const u64 0, !915
        store v6 to v5, !913
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr u64, v7, !913
        v9 = const u64 0, !916
        store v9 to v8, !913
        v10 = const u64 3
        v11 = get_elem_ptr v0, ptr u64, v10, !913
        store self to v11, !913
        v12 = load v0
        v13 = get_local ptr { u64, u64, u64, u64 }, input, !917
        store v12 to v13, !917
        v14 = get_local ptr { u64, u64, u64, u64 }, input, !918
        v15 = asm(input: v14) -> u256 input, !919 {
        }
        ret u256 v15
    }

    pub fn offset_46(self !921: { b256, u64, b256 }) -> u64, !922 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 1
        v3 = get_elem_ptr v1, ptr u64, v2, !923
        v4 = load v3
        ret u64 v4
    }

    pub fn slot_51(self !924: { b256, u64, b256 }) -> b256, !925 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !926
        v4 = load v3
        ret b256 v4
    }
}

// IR: [const-folding] Constant folding
contract {
    pub entry fn set_data_if_owner<c626c6e2>(new_value !1: u64) -> (), !4 {
        local bool _
        local bool __
        local { b256, u64, b256 } __anon_0
        local { u64, ( { b256 } | { b256 } ) } __anon_00
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_000
        local { u64, ( () | { b256 } ) } __anon_0000
        local { u64 } __anon_00000
        local { b256, u64, u64 } __anon_0001
        local { u64, ( () | b256 ) } __anon_001
        local { u64, ( () | { b256 } ) } __anon_01
        local { b256, u64, b256 } __anon_02
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __anon_03
        local { b256, u64, u64 } __anon_04
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_1
        local { u64, ( { b256 } | { u64 } ) } __anon_10
        local { u64 } __anon_100
        local { u64, ( () | { b256 } ) } __anon_11
        local { u64, ( () | b256 ) } __anon_12
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64 } __anon_20
        local { u64, ( () | b256 ) } __anon_21
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { u64 } ) } __anon_30
        local { u64, ( { b256 } | { b256 } ) } __anon_4
        local { u64, ( { b256 } | { u64 } ) } __anon_40
        local { u64 } __anon_5
        local { u64, ( { b256 } | { u64 } ) } __matched_value_1
        local u8 __matched_value_10
        local bool __matched_value_11
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __matched_value_12
        local bool __matched_value_13
        local { u64 } __matched_value_2
        local { u64, ( () | { b256 } ) } __matched_value_3
        local { u64 } __matched_value_30
        local { u64, ( () | { b256 } ) } __matched_value_31
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __matched_value_32
        local { u64, ( () | b256 ) } __matched_value_4
        local { u64 } __matched_value_6
        local { b256, u64, u64 } __tuple_1
        local { b256, u64, u64 } __tuple_1_
        local { b256, u64, u64 } __tuple_2
        local { b256, u64, u64 } __tuple_2_
        local { b256 } addr1
        local { b256 } addr2
        local { b256 } address
        local mut { u64, ( () | { b256 } ) } candidate
        local { u64 } err
        local mut u64 i
        local { b256 } id1
        local { b256 } id2
        local { u64, ( { b256 } | { b256 } ) } inner_value
        local b256 inner_value0
        local u64 inputs
        local b256 key_for_storage
        local b256 key_for_storage0
        local b256 key_for_storage_
        local u64 last_slot
        local u64 last_slot0
        local u64 number_of_slots
        local u64 number_of_slots0
        local u64 number_of_slots00
        local u64 number_of_slots1
        local b256 offset_slot
        local mut u256 offset_slot0
        local mut u256 offset_slot00
        local b256 offset_slot1
        local { b256 } owner
        local { u64, ( () | { b256 } ) } owner_of_input
        local u64 padded_value
        local u64 place_in_slot
        local u64 place_in_slot0
        local u64 place_in_slot00
        local u64 place_in_slot1
        local u64 result_ptr
        local u64 size_of_t
        local u64 size_of_t0
        local { u64 } type_of_input

        entry(new_value: u64):
        v0 = asm(r1) -> bool r1, !11 {
            gm     r1 i1, !12
        }
        cbr v0, only_owner_0_msg_sender_10_block0(), only_owner_0_msg_sender_10_block7(), !13

        only_owner_0_msg_sender_10_block0():
        v1 = const u64 0, !15
        v2 = gtf v1, 1, !21
        v3 = bitcast v2 to u8, !22
        v4 = get_local ptr u8, __matched_value_10, !24
        v5 = get_local ptr u8, __matched_value_10, !25
        v6 = const u8 0, !26
        v7 = cmp eq v3 v6, !28
        cbr v7, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1(), !29

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0():
        v8 = get_local ptr { u64 }, __anon_00000, !31
        v9 = const u64 0
        v10 = get_elem_ptr v8, ptr u64, v9, !32
        v11 = const u64 0, !30
        store v11 to v10, !33
        v12 = load v8, !34
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v12), !35

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1():
        v13 = get_local ptr u8, __matched_value_10, !36
        v14 = const u8 1, !37
        v15 = cmp eq v3 v14, !39
        cbr v15, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3(), !40

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2():
        v16 = get_local ptr { u64 }, __anon_100, !41
        v17 = const u64 0
        v18 = get_elem_ptr v16, ptr u64, v17, !42
        v19 = const u64 1, !30
        store v19 to v18, !43
        v20 = load v16, !44
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v20), !45

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3():
        v21 = const u64 0, !46
        revert v21, !50

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v22: { u64 }):
        v23 = get_local ptr { u64 }, __matched_value_30, !52
        store v22 to v23, !53
        v24 = get_local ptr { u64 }, __matched_value_30, !54
        v25 = const u64 0
        v26 = get_elem_ptr v24, ptr u64, v25, !55
        v27 = load v26, !56
        v28 = const u64 0, !19
        v29 = cmp eq v27 v28, !58
        cbr v29, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1(), !59

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0():
        v30 = const u64 0, !60
        v31 = gtf v30, 5, !62
        v32 = bitcast v31 to u64, !63
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v32), !64

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1():
        v33 = get_local ptr { u64 }, __matched_value_30, !65
        v34 = const u64 0
        v35 = get_elem_ptr v33, ptr u64, v34, !66
        v36 = load v35, !67
        v37 = const u64 1, !19
        v38 = cmp eq v36 v37, !69
        cbr v38, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3(), !70

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2():
        v39 = const u64 0, !71
        v40 = gtf v39, 259, !73
        v41 = bitcast v40 to u64, !74
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v41), !75

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3():
        v42 = const u64 14757395258967588866, !51
        revert v42, !76

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v43: u64):
        v44 = get_local ptr u64, inputs, !78
        v45 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0000, !81
        v46 = const u64 0
        v47 = get_elem_ptr v45, ptr u64, v46, !82
        v48 = const u64 0, !80
        store v48 to v47, !83
        v49 = load v45, !84
        v50 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !86
        store v49 to v50, !87
        v51 = get_local ptr u64, i, !89
        v52 = const u64 0, !90
        br only_owner_0_msg_sender_10_caller_address_12_while(v52), !91

        only_owner_0_msg_sender_10_caller_address_12_while(v53: u64):
        v54 = get_local ptr u64, i, !93
        v55 = get_local ptr u64, inputs, !95
        v56 = cmp lt v53 v43, !97
        cbr v56, only_owner_0_msg_sender_10_caller_address_12_while_body(), only_owner_0_msg_sender_10_caller_address_12_end_while(), !98

        only_owner_0_msg_sender_10_caller_address_12_while_body():
        v57 = get_local ptr u64, i, !100
        v58 = asm(input: v53) -> u64 input, !104 {
        }
        v59 = call input_type_17(v58), !106
        v60 = get_local ptr { u64 }, type_of_input, !108
        store v59 to v60, !109
        v61 = get_local ptr { u64 }, type_of_input, !111
        v62 = load v61, !112
        v63 = get_local ptr { u64 }, __matched_value_2, !114
        store v62 to v63, !115
        v64 = get_local ptr { u64 }, __matched_value_2, !116
        v65 = const u64 0
        v66 = get_elem_ptr v64, ptr u64, v65, !117
        v67 = load v66, !118
        v68 = const u64 0, !110
        v69 = cmp eq v67 v68, !120
        v70 = const unit (), !121
        cbr v69, only_owner_0_msg_sender_10_caller_address_12_block5(v70), only_owner_0_msg_sender_10_caller_address_12_block1(), !122

        only_owner_0_msg_sender_10_caller_address_12_block1():
        v71 = get_local ptr { u64 }, __matched_value_2, !123
        v72 = const u64 0
        v73 = get_elem_ptr v71, ptr u64, v72, !124
        v74 = load v73, !125
        v75 = const u64 2, !110
        v76 = cmp eq v74 v75, !127
        v77 = const unit (), !128
        cbr v76, only_owner_0_msg_sender_10_caller_address_12_block5(v77), only_owner_0_msg_sender_10_caller_address_12_block3(), !129

        only_owner_0_msg_sender_10_caller_address_12_block3():
        v78 = get_local ptr u64, i, !131
        v79 = const u64 1, !132
        v80 = call add_19(v53, v79), !134
        v81 = get_local ptr u64, i, !135
        br only_owner_0_msg_sender_10_caller_address_12_while(v80), !136

        only_owner_0_msg_sender_10_caller_address_12_block5(v82: ()):
        v83 = get_local ptr u64, i, !138
        v84 = asm(input: v53) -> u64 input, !140 {
        }
        v85 = call input_type_17(v84), !143
        v86 = get_local ptr { u64 }, __matched_value_6, !145
        store v85 to v86, !146
        v87 = get_local ptr { u64 }, __matched_value_6, !147
        v88 = const u64 0
        v89 = get_elem_ptr v87, ptr u64, v88, !148
        v90 = load v89, !149
        v91 = const u64 0, !142
        v92 = cmp eq v90 v91, !151
        cbr v92, only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0(), only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1(), !152

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0():
        v93 = get_local ptr { u64, ( () | { b256 } ) }, __anon_01, !153
        v94 = const u64 0
        v95 = get_elem_ptr v93, ptr u64, v94, !154
        v96 = const u64 1, !80
        store v96 to v95, !155
        v97 = gtf v84, 515, !157
        v98 = int_to_ptr v97 to ptr b256, !158
        v99 = load v98, !159
        v100 = call from_22(v99), !161
        v101 = const u64 1
        v102 = const u64 1
        v103 = get_elem_ptr v93, ptr { b256 }, v101, v102, !162
        store v100 to v103, !163
        v104 = load v93, !164
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v104), !165

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1():
        v105 = get_local ptr { u64, ( () | { b256 } ) }, __anon_11, !166
        v106 = const u64 0
        v107 = get_elem_ptr v105, ptr u64, v106, !167
        v108 = const u64 0, !80
        store v108 to v107, !168
        v109 = load v105, !169
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v109), !170

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v110: { u64, ( () | { b256 } ) }):
        v111 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !172
        store v110 to v111, !173
        v112 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !175
        v113 = load v112, !176
        v114 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !179
        store v113 to v114, !180
        v115 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !182
        v116 = const u64 0
        v117 = get_elem_ptr v115, ptr u64, v116, !183
        v118 = load v117, !184
        v119 = const u64 1, !181
        v120 = cmp eq v118 v119, !186
        v121 = const bool false, !187
        cbr v120, only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v121), only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1(), !188

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1():
        v122 = const bool true, !189
        br only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v122), !190

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v123: bool):
        cbr v123, only_owner_0_msg_sender_10_caller_address_12_block6(), only_owner_0_msg_sender_10_caller_address_12_block7(), !191

        only_owner_0_msg_sender_10_caller_address_12_block6():
        v124 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !193
        v125 = load v124, !194
        v126 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !196
        store v125 to v126, !197
        v127 = get_local ptr u64, i, !199
        v128 = const u64 1, !200
        v129 = call add_19(v53, v128), !202
        v130 = get_local ptr u64, i, !203
        br only_owner_0_msg_sender_10_caller_address_12_while(v129), !204

        only_owner_0_msg_sender_10_caller_address_12_block7():
        v131 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !206
        v132 = load v131, !207
        v133 = call unwrap_24(v132), !209
        v134 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !211
        v135 = load v134, !212
        v136 = call unwrap_24(v135), !214
        v137 = call eq_6(v133, v136), !216
        cbr v137, only_owner_0_msg_sender_10_caller_address_12_block9(), only_owner_0_msg_sender_10_caller_address_12_block10(), !217

        only_owner_0_msg_sender_10_caller_address_12_block9():
        v138 = get_local ptr u64, i, !219
        v139 = const u64 1, !220
        v140 = call add_19(v53, v139), !222
        v141 = get_local ptr u64, i, !223
        br only_owner_0_msg_sender_10_caller_address_12_while(v140), !224

        only_owner_0_msg_sender_10_caller_address_12_block10():
        v142 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_10, !227
        v143 = const u64 0
        v144 = get_elem_ptr v142, ptr u64, v143, !228
        v145 = const u64 1, !226
        store v145 to v144, !229
        v146 = get_local ptr { u64 }, __anon_20, !231
        v147 = const u64 0
        v148 = get_elem_ptr v146, ptr u64, v147, !232
        v149 = const u64 0, !230
        store v149 to v148, !233
        v150 = load v146, !234
        v151 = const u64 1
        v152 = const u64 1
        v153 = get_elem_ptr v142, ptr { u64 }, v151, v152, !235
        store v150 to v153, !236
        v154 = load v142, !237
        br only_owner_0_msg_sender_10_block10(v154), !239

        only_owner_0_msg_sender_10_caller_address_12_end_while():
        v155 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !241
        v156 = load v155, !242
        v157 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !244
        store v156 to v157, !245
        v158 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !246
        v159 = const u64 0
        v160 = get_elem_ptr v158, ptr u64, v159, !247
        v161 = load v160, !248
        v162 = const u64 1, !240
        v163 = cmp eq v161 v162, !250
        cbr v163, only_owner_0_msg_sender_10_caller_address_12_block12(), only_owner_0_msg_sender_10_caller_address_12_block13(), !251

        only_owner_0_msg_sender_10_caller_address_12_block12():
        v164 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !252
        v165 = const u64 1
        v166 = const u64 1
        v167 = get_elem_ptr v164, ptr { b256 }, v165, v166, !253
        v168 = load v167, !254
        v169 = get_local ptr { b256 }, address, !256
        store v168 to v169, !257
        v170 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_30, !258
        v171 = const u64 0
        v172 = get_elem_ptr v170, ptr u64, v171, !259
        v173 = const u64 0, !226
        store v173 to v172, !260
        v174 = get_local ptr { b256 }, address, !262
        v175 = load v174, !263
        v176 = const u64 1
        v177 = const u64 0
        v178 = get_elem_ptr v170, ptr { b256 }, v176, v177, !264
        store v175 to v178, !265
        v179 = load v170, !266
        br only_owner_0_msg_sender_10_caller_address_12_block17(v179), !267

        only_owner_0_msg_sender_10_caller_address_12_block13():
        v180 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !268
        v181 = const u64 0
        v182 = get_elem_ptr v180, ptr u64, v181, !269
        v183 = load v182, !270
        v184 = const u64 0, !240
        v185 = cmp eq v183 v184, !272
        cbr v185, only_owner_0_msg_sender_10_caller_address_12_block14(), only_owner_0_msg_sender_10_caller_address_12_block15(), !273

        only_owner_0_msg_sender_10_caller_address_12_block14():
        v186 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_40, !274
        v187 = const u64 0
        v188 = get_elem_ptr v186, ptr u64, v187, !275
        v189 = const u64 1, !226
        store v189 to v188, !276
        v190 = get_local ptr { u64 }, __anon_5, !277
        v191 = const u64 0
        v192 = get_elem_ptr v190, ptr u64, v191, !278
        v193 = const u64 1, !230
        store v193 to v192, !279
        v194 = load v190, !280
        v195 = const u64 1
        v196 = const u64 1
        v197 = get_elem_ptr v186, ptr { u64 }, v195, v196, !281
        store v194 to v197, !282
        v198 = load v186, !283
        br only_owner_0_msg_sender_10_caller_address_12_block17(v198), !284

        only_owner_0_msg_sender_10_caller_address_12_block15():
        v199 = const u64 14757395258967588866, !243
        revert v199, !285

        only_owner_0_msg_sender_10_caller_address_12_block17(v200: { u64, ( { b256 } | { u64 } ) }):
        br only_owner_0_msg_sender_10_block10(v200), !286

        only_owner_0_msg_sender_10_block10(v201: { u64, ( { b256 } | { u64 } ) }):
        v202 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !288
        store v201 to v202, !289
        v203 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !290
        v204 = const u64 0
        v205 = get_elem_ptr v203, ptr u64, v204, !291
        v206 = load v205, !292
        v207 = const u64 1, !16
        v208 = cmp eq v206 v207, !294
        cbr v208, only_owner_0_msg_sender_10_block1(), only_owner_0_msg_sender_10_block2(), !295

        only_owner_0_msg_sender_10_block1():
        v209 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !296
        v210 = const u64 1
        v211 = const u64 1
        v212 = get_elem_ptr v209, ptr { u64 }, v210, v211, !297
        v213 = load v212, !298
        v214 = get_local ptr { u64 }, err, !300
        store v213 to v214, !301
        v215 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_000, !302
        v216 = const u64 0
        v217 = get_elem_ptr v215, ptr u64, v216, !303
        v218 = const u64 1, !226
        store v218 to v217, !304
        v219 = get_local ptr { u64 }, err, !306
        v220 = load v219, !307
        v221 = const u64 1
        v222 = const u64 1
        v223 = get_elem_ptr v215, ptr { u64 }, v221, v222, !308
        store v220 to v223, !309
        v224 = load v215, !310
        br only_owner_0_msg_sender_10_block6(v224), !311

        only_owner_0_msg_sender_10_block2():
        v225 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !312
        v226 = const u64 0
        v227 = get_elem_ptr v225, ptr u64, v226, !313
        v228 = load v227, !314
        v229 = const u64 0, !16
        v230 = cmp eq v228 v229, !316
        cbr v230, only_owner_0_msg_sender_10_block3(), only_owner_0_msg_sender_10_block4(), !317

        only_owner_0_msg_sender_10_block3():
        v231 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !318
        v232 = const u64 1
        v233 = const u64 0
        v234 = get_elem_ptr v231, ptr { b256 }, v232, v233, !319
        v235 = load v234, !320
        v236 = get_local ptr { b256 }, owner, !322
        store v235 to v236, !323
        v237 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_1, !324
        v238 = const u64 0
        v239 = get_elem_ptr v237, ptr u64, v238, !325
        v240 = const u64 0, !226
        store v240 to v239, !326
        v241 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !329
        v242 = const u64 0
        v243 = get_elem_ptr v241, ptr u64, v242, !330
        v244 = const u64 0, !328
        store v244 to v243, !331
        v245 = get_local ptr { b256 }, owner, !333
        v246 = load v245, !334
        v247 = const u64 1
        v248 = const u64 0
        v249 = get_elem_ptr v241, ptr { b256 }, v247, v248, !335
        store v246 to v249, !336
        v250 = load v241, !337
        v251 = const u64 1
        v252 = const u64 0
        v253 = get_elem_ptr v237, ptr { u64, ( { b256 } | { b256 } ) }, v251, v252, !338
        store v250 to v253, !339
        v254 = load v237, !340
        br only_owner_0_msg_sender_10_block6(v254), !341

        only_owner_0_msg_sender_10_block4():
        v255 = const u64 14757395258967588866, !287
        revert v255, !342

        only_owner_0_msg_sender_10_block6(v256: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        br only_owner_0_msg_sender_10_block8(v256), !343

        only_owner_0_msg_sender_10_block7():
        v257 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_3, !344
        v258 = const u64 0
        v259 = get_elem_ptr v257, ptr u64, v258, !345
        v260 = const u64 0, !226
        store v260 to v259, !346
        v261 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_4, !347
        v262 = const u64 0
        v263 = get_elem_ptr v261, ptr u64, v262, !348
        v264 = const u64 1, !328
        store v264 to v263, !349
        v265 = asm(r1) -> b256 r1, !352 {
            gm     r1 i2, !353
        }
        v266 = call from_22(v265), !355
        v267 = const u64 1
        v268 = const u64 1
        v269 = get_elem_ptr v261, ptr { b256 }, v267, v268, !356
        store v266 to v269, !357
        v270 = load v261, !358
        v271 = const u64 1
        v272 = const u64 0
        v273 = get_elem_ptr v257, ptr { u64, ( { b256 } | { b256 } ) }, v271, v272, !359
        store v270 to v273, !360
        v274 = load v257, !361
        br only_owner_0_msg_sender_10_block8(v274), !362

        only_owner_0_msg_sender_10_block8(v275: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v276 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !365
        store v275 to v276, !366
        v277 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !368
        v278 = const u64 0
        v279 = get_elem_ptr v277, ptr u64, v278, !369
        v280 = load v279, !370
        v281 = const u64 0, !367
        v282 = cmp eq v280 v281, !372
        cbr v282, only_owner_0_unwrap_9_block0(), only_owner_0_unwrap_9_block1(), !373

        only_owner_0_unwrap_9_block0():
        v283 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !374
        v284 = const u64 1
        v285 = const u64 0
        v286 = get_elem_ptr v283, ptr { u64, ( { b256 } | { b256 } ) }, v284, v285, !375
        v287 = load v286, !376
        v288 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !378
        store v287 to v288, !379
        v289 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !381
        v290 = load v289, !382
        v291 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_00, !383
        v292 = const u64 0
        v293 = get_elem_ptr v291, ptr u64, v292, !384
        v294 = const u64 0, !328
        store v294 to v293, !385
        v295 = get_local ptr { b256, u64, b256 }, __anon_02, !388
        v296 = const u64 0
        v297 = get_elem_ptr v295, ptr b256, v296, !389
        v298 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !387
        store v298 to v297, !390
        v299 = const u64 1
        v300 = get_elem_ptr v295, ptr u64, v299, !391
        v301 = const u64 0
        store v301 to v300, !392
        v302 = const u64 2
        v303 = get_elem_ptr v295, ptr b256, v302, !393
        v304 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !387
        store v304 to v303, !394
        v305 = load v295, !395
        v306 = call slot_51(v305), !399
        v307 = call offset_46(v305), !401
        br only_owner_0_get_owner_27_read_28_read_30_block1(), !405

        only_owner_0_unwrap_9_block1():
        v308 = const u64 0, !406
        revert v308, !408

        only_owner_0_get_owner_27_read_28_read_30_block0():
        v309 = get_local ptr { u64, ( () | b256 ) }, __anon_001, !409
        v310 = const u64 0
        v311 = get_elem_ptr v309, ptr u64, v310, !410
        v312 = const u64 0, !80
        store v312 to v311, !411
        v313 = load v309, !412
        br only_owner_0_get_owner_27_read_28_block0(v313), !414

        only_owner_0_get_owner_27_read_28_read_30_block1():
        v314 = get_local ptr u64, size_of_t, !417
        v315 = const u64 8, !418
        v316 = mul v307, v315, !420
        v317 = get_local ptr u64, size_of_t, !422
        v318 = const u64 32
        v319 = add v316, v318, !424
        v320 = const u64 31, !425
        v321 = add v319, v320, !427
        v322 = const u64 5, !428
        v323 = rsh v321, v322, !430
        v324 = get_local ptr u64, last_slot, !432
        v325 = const u64 4, !433
        v326 = mod v307, v325, !435
        v327 = get_local ptr u64, place_in_slot0, !437
        v328 = get_local ptr bool, __matched_value_11, !439
        v329 = get_local ptr bool, __matched_value_11, !441
        br only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block0(), !443

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block0():
        v330 = get_local ptr u64, place_in_slot0, !445
        v331 = const u64 8, !446
        v332 = mul v326, v331, !448
        v333 = get_local ptr u64, size_of_t, !450
        v334 = add v332, v318, !452
        v335 = const u64 31, !453
        v336 = add v334, v335, !455
        v337 = const u64 5, !456
        v338 = rsh v336, v337, !458
        br only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block5(v338), !459

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block1():
        v339 = get_local ptr bool, __matched_value_11, !460
        br only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block3(), !462

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block3():
        v340 = const u64 14757395258967588866, !438
        revert v340, !463

        only_owner_0_get_owner_27_read_28_read_30_slot_calculator_31_block5(v341: u64):
        v342 = get_local ptr u64, number_of_slots0, !465
        v343 = asm(input: v306) -> u256 input, !468 {
        }
        v344 = get_local ptr u256, offset_slot0, !470
        store v343 to v344, !471
        v345 = get_local ptr u256, offset_slot0, !473
        v346 = load v345, !474
        v347 = get_local ptr u64, last_slot, !476
        v348 = call as_u256_40(v323), !478
        v349 = get_local ptr u64, number_of_slots0, !480
        v350 = call as_u256_40(v341), !482
        v351 = sub v348, v350, !484
        v352 = add v346, v351, !486
        v353 = get_local ptr u256, offset_slot0, !487
        store v352 to v353, !488
        v354 = get_local ptr u256, offset_slot0, !490
        v355 = load v354, !491
        v356 = asm(input: v355) -> b256 input, !494 {
        }
        v357 = get_local ptr u64, number_of_slots0, !496
        v358 = get_local ptr u64, place_in_slot0, !498
        v359 = get_local ptr { b256, u64, u64 }, __anon_0001, !500
        v360 = const u64 0
        v361 = get_elem_ptr v359, ptr b256, v360, !501
        store v356 to v361, !502
        v362 = const u64 1
        v363 = get_elem_ptr v359, ptr u64, v362, !503
        store v341 to v363, !504
        v364 = const u64 2
        v365 = get_elem_ptr v359, ptr u64, v364, !505
        store v326 to v365, !506
        v366 = load v359, !507
        v367 = get_local ptr { b256, u64, u64 }, __tuple_2, !509
        store v366 to v367, !510
        v368 = get_local ptr { b256, u64, u64 }, __tuple_2, !511
        v369 = load v368, !512
        v370 = get_local ptr { b256, u64, u64 }, __tuple_2_, !513
        store v369 to v370, !514
        v371 = get_local ptr { b256, u64, u64 }, __tuple_2_, !515
        v372 = const u64 0
        v373 = get_elem_ptr v371, ptr b256, v372, !516
        v374 = load v373, !517
        v375 = get_local ptr b256, offset_slot, !518
        store v374 to v375, !519
        v376 = get_local ptr { b256, u64, u64 }, __tuple_2_, !520
        v377 = const u64 1
        v378 = get_elem_ptr v376, ptr u64, v377, !521
        v379 = load v378, !522
        v380 = get_local ptr u64, number_of_slots, !523
        v381 = get_local ptr { b256, u64, u64 }, __tuple_2_, !524
        v382 = const u64 2
        v383 = get_elem_ptr v381, ptr u64, v382, !525
        v384 = load v383, !526
        v385 = get_local ptr u64, place_in_slot, !527
        v386 = get_local ptr u64, number_of_slots, !529
        v387 = const u64 32, !530
        v388 = mul v379, v387, !532
        v389 = const u64 8
        v390 = mul v389, v388, !536
        v391 = asm(size: v390, ptr) -> u64 ptr, !538 {
            aloc   size, !539
            move   ptr hp, !540
        }
        v392 = get_local ptr u64, result_ptr, !542
        v393 = get_local ptr b256, offset_slot, !544
        v394 = load v393, !545
        v395 = get_local ptr u64, result_ptr, !547
        v396 = get_local ptr u64, number_of_slots, !549
        v397 = get_local ptr b256, key_for_storage, !551
        store v394 to v397, !552
        v398 = int_to_ptr v391 to ptr b256, !553
        v399 = state_load_quad_word v398, key v397, v379, !554
        cbr v399, only_owner_0_get_owner_27_read_28_read_30_block3(), only_owner_0_get_owner_27_read_28_read_30_block4(), !555

        only_owner_0_get_owner_27_read_28_read_30_block3():
        v400 = get_local ptr { u64, ( () | b256 ) }, __anon_12, !556
        v401 = const u64 0
        v402 = get_elem_ptr v400, ptr u64, v401, !557
        v403 = const u64 1, !80
        store v403 to v402, !558
        v404 = get_local ptr u64, result_ptr, !560
        v405 = get_local ptr u64, place_in_slot, !562
        v406 = const u64 8
        v407 = mul v406, v384, !564
        v408 = add v391, v407, !565
        br only_owner_0_get_owner_27_read_28_read_30_read_43_block0(), !569

        only_owner_0_get_owner_27_read_28_read_30_read_43_block0():
        v409 = asm(ptr: v408) -> b256 ptr, !571 {
        }
        br only_owner_0_get_owner_27_read_28_read_30_read_43_block5(v409), !572

        only_owner_0_get_owner_27_read_28_read_30_read_43_block1():
        br only_owner_0_get_owner_27_read_28_read_30_read_43_block3(), !574

        only_owner_0_get_owner_27_read_28_read_30_read_43_block2():
        v410 = asm(ptr: v408, val) -> b256 val, !576 {
            lb     val ptr i0, !577
        }
        br only_owner_0_get_owner_27_read_28_read_30_read_43_block4(v410), !578

        only_owner_0_get_owner_27_read_28_read_30_read_43_block3():
        v411 = asm(ptr: v408, val) -> b256 val, !580 {
            lw     val ptr i0, !581
        }
        br only_owner_0_get_owner_27_read_28_read_30_read_43_block4(v411), !582

        only_owner_0_get_owner_27_read_28_read_30_read_43_block4(v412: b256):
        br only_owner_0_get_owner_27_read_28_read_30_read_43_block5(v412), !583

        only_owner_0_get_owner_27_read_28_read_30_read_43_block5(v413: b256):
        v414 = const u64 1
        v415 = const u64 1
        v416 = get_elem_ptr v400, ptr b256, v414, v415, !584
        store v413 to v416, !585
        v417 = load v400, !586
        br only_owner_0_get_owner_27_read_28_read_30_block5(v417), !587

        only_owner_0_get_owner_27_read_28_read_30_block4():
        v418 = get_local ptr { u64, ( () | b256 ) }, __anon_21, !588
        v419 = const u64 0
        v420 = get_elem_ptr v418, ptr u64, v419, !589
        v421 = const u64 0, !80
        store v421 to v420, !590
        v422 = load v418, !591
        br only_owner_0_get_owner_27_read_28_read_30_block5(v422), !592

        only_owner_0_get_owner_27_read_28_read_30_block5(v423: { u64, ( () | b256 ) }):
        br only_owner_0_get_owner_27_read_28_block0(v423), !593

        only_owner_0_get_owner_27_read_28_block0(v424: { u64, ( () | b256 ) }):
        v425 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !596
        store v424 to v425, !597
        v426 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !599
        v427 = const u64 0
        v428 = get_elem_ptr v426, ptr u64, v427, !600
        v429 = load v428, !601
        v430 = const u64 1, !598
        v431 = cmp eq v429 v430, !603
        cbr v431, only_owner_0_get_owner_27_read_28_unwrap_29_block0(), only_owner_0_get_owner_27_read_28_unwrap_29_block1(), !604

        only_owner_0_get_owner_27_read_28_unwrap_29_block0():
        v432 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !605
        v433 = const u64 1
        v434 = const u64 1
        v435 = get_elem_ptr v432, ptr b256, v433, v434, !606
        v436 = load v435, !607
        v437 = get_local ptr b256, inner_value0, !609
        store v436 to v437, !610
        v438 = get_local ptr b256, inner_value0, !612
        v439 = load v438, !613
        v440 = call from_22(v439), !615
        v441 = const u64 1
        v442 = const u64 0
        v443 = get_elem_ptr v291, ptr { b256 }, v441, v442, !616
        store v440 to v443, !617
        v444 = load v291, !5
        v445 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_03, !620
        v446 = const u64 0
        v447 = get_elem_ptr v445, ptr { u64, ( { b256 } | { b256 } ) }, v446, !621
        store v290 to v447, !622
        v448 = const u64 1
        v449 = get_elem_ptr v445, ptr { u64, ( { b256 } | { b256 } ) }, v448, !623
        store v444 to v449, !624
        v450 = load v445, !625
        v451 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !627
        store v450 to v451, !628
        v452 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !629
        v453 = const u64 0
        v454 = get_elem_ptr v452, ptr { u64, ( { b256 } | { b256 } ) }, v453, !631
        v455 = const u64 0
        v456 = get_elem_ptr v454, ptr u64, v455, !632
        v457 = load v456, !633
        v458 = const u64 0, !630
        v459 = cmp eq v457 v458, !635
        cbr v459, only_owner_0_eq_4_block0(), only_owner_0_eq_4_block1(v459), !636

        only_owner_0_get_owner_27_read_28_unwrap_29_block1():
        v460 = const u64 0, !637
        revert v460, !639

        only_owner_0_eq_4_block0():
        v461 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !640
        v462 = const u64 1
        v463 = get_elem_ptr v461, ptr { u64, ( { b256 } | { b256 } ) }, v462, !641
        v464 = const u64 0
        v465 = get_elem_ptr v463, ptr u64, v464, !642
        v466 = load v465, !643
        v467 = const u64 0, !630
        v468 = cmp eq v466 v467, !644
        br only_owner_0_eq_4_block1(v468), !645

        only_owner_0_eq_4_block1(v469: bool):
        cbr v469, only_owner_0_eq_4_block2(), only_owner_0_eq_4_block3(), !646

        only_owner_0_eq_4_block2():
        v470 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !647
        v471 = const u64 0
        v472 = get_elem_ptr v470, ptr { u64, ( { b256 } | { b256 } ) }, v471, !648
        v473 = const u64 1
        v474 = const u64 0
        v475 = get_elem_ptr v472, ptr { b256 }, v473, v474, !649
        v476 = load v475, !650
        v477 = get_local ptr { b256 }, addr1, !652
        store v476 to v477, !653
        v478 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !654
        v479 = const u64 1
        v480 = get_elem_ptr v478, ptr { u64, ( { b256 } | { b256 } ) }, v479, !655
        v481 = const u64 1
        v482 = const u64 0
        v483 = get_elem_ptr v480, ptr { b256 }, v481, v482, !656
        v484 = load v483, !657
        v485 = get_local ptr { b256 }, addr2, !659
        store v484 to v485, !660
        v486 = get_local ptr { b256 }, addr1, !662
        v487 = load v486, !663
        v488 = get_local ptr { b256 }, addr2, !665
        v489 = load v488, !666
        v490 = call eq_6(v487, v489), !668
        br only_owner_0_eq_4_block9(v490), !669

        only_owner_0_eq_4_block3():
        v491 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !670
        v492 = const u64 0
        v493 = get_elem_ptr v491, ptr { u64, ( { b256 } | { b256 } ) }, v492, !672
        v494 = const u64 0
        v495 = get_elem_ptr v493, ptr u64, v494, !673
        v496 = load v495, !674
        v497 = const u64 1, !671
        v498 = cmp eq v496 v497, !676
        cbr v498, only_owner_0_eq_4_block4(), only_owner_0_eq_4_block5(v498), !677

        only_owner_0_eq_4_block4():
        v499 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !678
        v500 = const u64 1
        v501 = get_elem_ptr v499, ptr { u64, ( { b256 } | { b256 } ) }, v500, !679
        v502 = const u64 0
        v503 = get_elem_ptr v501, ptr u64, v502, !680
        v504 = load v503, !681
        v505 = const u64 1, !671
        v506 = cmp eq v504 v505, !682
        br only_owner_0_eq_4_block5(v506), !683

        only_owner_0_eq_4_block5(v507: bool):
        v508 = const bool false, !684
        cbr v507, only_owner_0_eq_4_block6(), only_owner_0_eq_4_block8(v508), !685

        only_owner_0_eq_4_block6():
        v509 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !686
        v510 = const u64 0
        v511 = get_elem_ptr v509, ptr { u64, ( { b256 } | { b256 } ) }, v510, !687
        v512 = const u64 1
        v513 = const u64 1
        v514 = get_elem_ptr v511, ptr { b256 }, v512, v513, !688
        v515 = load v514, !689
        v516 = get_local ptr { b256 }, id1, !691
        store v515 to v516, !692
        v517 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !693
        v518 = const u64 1
        v519 = get_elem_ptr v517, ptr { u64, ( { b256 } | { b256 } ) }, v518, !694
        v520 = const u64 1
        v521 = const u64 1
        v522 = get_elem_ptr v519, ptr { b256 }, v520, v521, !695
        v523 = load v522, !696
        v524 = get_local ptr { b256 }, id2, !698
        store v523 to v524, !699
        v525 = get_local ptr { b256 }, id1, !701
        v526 = load v525, !702
        v527 = get_local ptr { b256 }, id2, !704
        v528 = load v527, !705
        v529 = call eq_6(v526, v528), !707
        br only_owner_0_eq_4_block8(v529), !708

        only_owner_0_eq_4_block8(v530: bool):
        br only_owner_0_eq_4_block9(v530), !709

        only_owner_0_eq_4_block9(v531: bool):
        v532 = const bool false, !711
        v533 = cmp eq v531 v532, !715
        cbr v533, only_owner_0_assert_1_block0(), only_owner_0_assert_1_block1(), !716

        only_owner_0_assert_1_block0():
        v534 = const u64 18446744073709486084, !718
        revert v534, !720

        only_owner_0_assert_1_block1():
        v535 = get_local ptr { b256, u64, b256 }, __anon_0, !721
        v536 = const u64 0
        v537 = get_elem_ptr v535, ptr b256, v536
        v538 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c, !721
        store v538 to v537, !721
        v539 = const u64 1
        v540 = get_elem_ptr v535, ptr u64, v539
        v541 = const u64 0
        store v541 to v540, !721
        v542 = const u64 2
        v543 = get_elem_ptr v535, ptr b256, v542
        v544 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c, !721
        store v544 to v543, !721
        v545 = load v535
        v546 = call slot_51(v545), !724
        v547 = call offset_46(v545), !726
        br write_47_write_48_block1(), !729

        write_47_write_48_block1():
        v548 = get_local ptr u64, size_of_t0, !731
        v549 = const u64 8, !418
        v550 = mul v547, v549, !732
        v551 = get_local ptr u64, size_of_t0, !733
        v552 = const u64 8
        v553 = add v550, v552, !734
        v554 = const u64 31, !425
        v555 = add v553, v554, !735
        v556 = const u64 5, !428
        v557 = rsh v555, v556, !736
        v558 = get_local ptr u64, last_slot0, !737
        v559 = const u64 4, !433
        v560 = mod v547, v559, !738
        v561 = get_local ptr u64, place_in_slot00, !739
        v562 = get_local ptr bool, __matched_value_13, !740
        v563 = get_local ptr bool, __matched_value_13, !741
        br write_47_write_48_slot_calculator_49_block1(), !742

        write_47_write_48_slot_calculator_49_block0():
        v564 = get_local ptr u64, place_in_slot00, !743
        v565 = const u64 8, !446
        v566 = mul v560, v565, !744
        v567 = get_local ptr u64, size_of_t0, !745
        v568 = add v566, v552, !746
        v569 = const u64 31, !453
        v570 = add v568, v569, !747
        v571 = const u64 5, !456
        v572 = rsh v570, v571, !748
        br write_47_write_48_slot_calculator_49_block5(v572), !749

        write_47_write_48_slot_calculator_49_block1():
        v573 = get_local ptr bool, __matched_value_13, !750
        v574 = const u64 1, !751
        br write_47_write_48_slot_calculator_49_block5(v574), !752

        write_47_write_48_slot_calculator_49_block3():
        v575 = const u64 14757395258967588866, !438
        revert v575, !753

        write_47_write_48_slot_calculator_49_block5(v576: u64):
        v577 = get_local ptr u64, number_of_slots00, !754
        v578 = asm(input: v546) -> u256 input, !755 {
        }
        v579 = get_local ptr u256, offset_slot00, !756
        store v578 to v579, !757
        v580 = get_local ptr u256, offset_slot00, !758
        v581 = load v580, !759
        v582 = get_local ptr u64, last_slot0, !760
        v583 = call as_u256_40(v557), !761
        v584 = get_local ptr u64, number_of_slots00, !762
        v585 = call as_u256_40(v576), !763
        v586 = sub v583, v585, !764
        v587 = add v581, v586, !765
        v588 = get_local ptr u256, offset_slot00, !766
        store v587 to v588, !767
        v589 = get_local ptr u256, offset_slot00, !768
        v590 = load v589, !769
        v591 = asm(input: v590) -> b256 input, !770 {
        }
        v592 = get_local ptr u64, number_of_slots00, !771
        v593 = get_local ptr u64, place_in_slot00, !772
        v594 = get_local ptr { b256, u64, u64 }, __anon_04, !773
        v595 = const u64 0
        v596 = get_elem_ptr v594, ptr b256, v595, !774
        store v591 to v596, !775
        v597 = const u64 1
        v598 = get_elem_ptr v594, ptr u64, v597, !776
        store v576 to v598, !777
        v599 = const u64 2
        v600 = get_elem_ptr v594, ptr u64, v599, !778
        store v560 to v600, !779
        v601 = load v594, !780
        v602 = get_local ptr { b256, u64, u64 }, __tuple_1, !782
        store v601 to v602, !783
        v603 = get_local ptr { b256, u64, u64 }, __tuple_1, !784
        v604 = load v603, !785
        v605 = get_local ptr { b256, u64, u64 }, __tuple_1_, !786
        store v604 to v605, !787
        v606 = get_local ptr { b256, u64, u64 }, __tuple_1_, !788
        v607 = const u64 0
        v608 = get_elem_ptr v606, ptr b256, v607, !789
        v609 = load v608, !790
        v610 = get_local ptr b256, offset_slot1, !791
        store v609 to v610, !792
        v611 = get_local ptr { b256, u64, u64 }, __tuple_1_, !793
        v612 = const u64 1
        v613 = get_elem_ptr v611, ptr u64, v612, !794
        v614 = load v613, !795
        v615 = get_local ptr u64, number_of_slots1, !796
        v616 = get_local ptr { b256, u64, u64 }, __tuple_1_, !797
        v617 = const u64 2
        v618 = get_elem_ptr v616, ptr u64, v617, !798
        v619 = load v618, !799
        v620 = get_local ptr u64, place_in_slot1, !800
        v621 = get_local ptr u64, number_of_slots1, !802
        v622 = const u64 32, !803
        v623 = mul v614, v622, !805
        v624 = mul v389, v623, !807
        v625 = asm(size: v624, ptr) -> u64 ptr, !808 {
            aloc   size, !539
            move   ptr hp, !540
        }
        v626 = get_local ptr u64, padded_value, !810
        v627 = get_local ptr b256, offset_slot1, !812
        v628 = load v627, !813
        v629 = get_local ptr u64, padded_value, !815
        v630 = get_local ptr u64, number_of_slots1, !817
        v631 = get_local ptr b256, key_for_storage0, !819
        store v628 to v631, !820
        v632 = int_to_ptr v625 to ptr b256, !821
        v633 = state_load_quad_word v632, key v631, v614, !822
        v634 = get_local ptr bool, _, !824
        v635 = get_local ptr u64, padded_value, !826
        v636 = get_local ptr u64, place_in_slot1, !828
        v637 = mul v406, v619, !830
        v638 = add v625, v637, !831
        br write_47_write_48_write_50_block1(), !834

        write_47_write_48_write_50_block0():
        v639 = const u64 8
        v640 = asm(dst: v638, src: new_value, count: v639) {
            mcp    dst src count, !835
        }
        v641 = const unit ()
        br write_47_write_48_write_50_block5(v641), !836

        write_47_write_48_write_50_block1():
        br write_47_write_48_write_50_block3(), !838

        write_47_write_48_write_50_block2():
        v642 = asm(ptr: v638, val: new_value) {
            sb     ptr val i0, !839
        }
        v643 = const unit ()
        br write_47_write_48_write_50_block4(v643), !840

        write_47_write_48_write_50_block3():
        v644 = asm(ptr: v638, val: new_value) {
            sw     ptr val i0, !841
        }
        v645 = const unit ()
        br write_47_write_48_write_50_block4(v645), !842

        write_47_write_48_write_50_block4(v646: ()):
        br write_47_write_48_write_50_block5(v646), !843

        write_47_write_48_write_50_block5(v647: ()):
        v648 = get_local ptr b256, offset_slot1, !845
        v649 = load v648, !846
        v650 = get_local ptr u64, padded_value, !848
        v651 = get_local ptr u64, number_of_slots1, !850
        v652 = get_local ptr b256, key_for_storage_, !852
        store v649 to v652, !853
        v653 = int_to_ptr v625 to ptr b256, !854
        v654 = state_store_quad_word v653, key v652, v614, !855
        v655 = get_local ptr bool, __, !857
        v656 = const unit ()
        br write_47_block0(v656), !858

        write_47_block0(v657: ()):
        v658 = const unit ()
        ret () v658
    }

    pub fn eq_6(self !860: { b256 }, other !861: { b256 }) -> bool, !862 {
        entry(self: { b256 }, other: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !863
        v4 = load v3
        v5 = ptr_to_int other to u64
        v6 = int_to_ptr v5 to ptr { b256 }
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr b256, v7, !863
        v9 = load v8
        v10 = cmp eq v4 v9, !864
        ret bool v10
    }

    pub fn input_type_17(index !865: u64) -> { u64 }, !866 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local u8 __matched_value_2

        entry(index: u64):
        v0 = gtf index, 512, !867
        v1 = bitcast v0 to u8, !867
        v2 = get_local ptr u8, __matched_value_2, !868
        v3 = get_local ptr u8, __matched_value_2, !867
        v4 = const u8 0, !869
        v5 = cmp eq v1 v4, !870
        cbr v5, block0(), block1(), !870

        block0():
        v6 = get_local ptr { u64 }, __anon_0, !871
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr u64, v7, !871
        v9 = const u64 0, !871
        store v9 to v8, !871
        v10 = load v6
        br block8(v10)

        block1():
        v11 = get_local ptr u8, __matched_value_2, !867
        v12 = const u8 1, !872
        v13 = cmp eq v1 v12, !873
        cbr v13, block2(), block3(), !873

        block2():
        v14 = get_local ptr { u64 }, __anon_1, !871
        v15 = const u64 0
        v16 = get_elem_ptr v14, ptr u64, v15, !871
        v17 = const u64 1, !871
        store v17 to v16, !871
        v18 = load v14
        br block7(v18)

        block3():
        v19 = get_local ptr u8, __matched_value_2, !867
        v20 = const u8 2, !874
        v21 = cmp eq v1 v20, !875
        cbr v21, block4(), block5(), !875

        block4():
        v22 = get_local ptr { u64 }, __anon_2, !871
        v23 = const u64 0
        v24 = get_elem_ptr v22, ptr u64, v23, !871
        v25 = const u64 2, !871
        store v25 to v24, !871
        v26 = load v22
        br block7(v26)

        block5():
        v27 = const u64 0, !876
        revert v27, !878

        block7(v28: { u64 }):
        br block8(v28)

        block8(v29: { u64 }):
        ret { u64 } v29
    }

    pub fn add_19(self !879: u64, other !880: u64) -> u64, !881 {
        local u64 res

        entry(self: u64, other: u64):
        v0 = add self, other
        v1 = get_local ptr u64, res, !882
        v2 = get_local ptr u64, res, !883
        v3 = const u64 65535, !885
        v4 = cmp gt v0 v3
        cbr v4, block0(), block1(), !886

        block0():
        v5 = const u64 0, !887
        revert v5, !888

        block1():
        v6 = get_local ptr u64, res, !889
        ret u64 v0
    }

    pub fn from_22(bits !890: b256) -> { b256 }, !891 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !892
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !892
        v3 = load v0
        ret { b256 } v3
    }

    pub fn unwrap_24(self !893: { u64, ( () | { b256 } ) }) -> { b256 }, !894 {
        local { u64, ( () | { b256 } ) } __matched_value_4
        local { b256 } inner_value

        entry(self: { u64, ( () | { b256 } ) }):
        v0 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !595
        store self to v0, !595
        v1 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !598
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !598
        v4 = load v3
        v5 = const u64 1, !598
        v6 = cmp eq v4 v5, !602
        cbr v6, block0(), block1(), !602

        block0():
        v7 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !598
        v8 = const u64 1
        v9 = const u64 1
        v10 = get_elem_ptr v7, ptr { b256 }, v8, v9
        v11 = load v10
        v12 = get_local ptr { b256 }, inner_value, !608
        store v11 to v12, !608
        v13 = get_local ptr { b256 }, inner_value, !611
        v14 = load v13
        ret { b256 } v14

        block1():
        v15 = const u64 0, !637
        revert v15, !895
    }

    pub fn as_u256_40(self !896: u64) -> u256, !897 {
        local { u64, u64, u64, u64 } __anon_0
        local { u64, u64, u64, u64 } input

        entry(self: u64):
        v0 = get_local ptr { u64, u64, u64, u64 }, __anon_0, !898
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr u64, v1, !898
        v3 = const u64 0, !899
        store v3 to v2, !898
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4, !898
        v6 = const u64 0, !900
        store v6 to v5, !898
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr u64, v7, !898
        v9 = const u64 0, !901
        store v9 to v8, !898
        v10 = const u64 3
        v11 = get_elem_ptr v0, ptr u64, v10, !898
        store self to v11, !898
        v12 = load v0
        v13 = get_local ptr { u64, u64, u64, u64 }, input, !902
        store v12 to v13, !902
        v14 = get_local ptr { u64, u64, u64, u64 }, input, !903
        v15 = asm(input: v14) -> u256 input, !904 {
        }
        ret u256 v15
    }

    pub fn offset_46(self !906: { b256, u64, b256 }) -> u64, !907 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 1
        v3 = get_elem_ptr v1, ptr u64, v2, !908
        v4 = load v3
        ret u64 v4
    }

    pub fn slot_51(self !909: { b256, u64, b256 }) -> b256, !910 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !911
        v4 = load v3
        ret b256 v4
    }
}

// IR: [simplify-cfg] Simplify the control flow graph (CFG)
contract {
    pub entry fn set_data_if_owner<c626c6e2>(new_value !1: u64) -> (), !4 {
        local bool _
        local bool __
        local { b256, u64, b256 } __anon_0
        local { u64, ( { b256 } | { b256 } ) } __anon_00
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_000
        local { u64, ( () | { b256 } ) } __anon_0000
        local { u64 } __anon_00000
        local { b256, u64, u64 } __anon_0001
        local { u64, ( () | b256 ) } __anon_001
        local { u64, ( () | { b256 } ) } __anon_01
        local { b256, u64, b256 } __anon_02
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __anon_03
        local { b256, u64, u64 } __anon_04
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_1
        local { u64, ( { b256 } | { u64 } ) } __anon_10
        local { u64 } __anon_100
        local { u64, ( () | { b256 } ) } __anon_11
        local { u64, ( () | b256 ) } __anon_12
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64 } __anon_20
        local { u64, ( () | b256 ) } __anon_21
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { u64 } ) } __anon_30
        local { u64, ( { b256 } | { b256 } ) } __anon_4
        local { u64, ( { b256 } | { u64 } ) } __anon_40
        local { u64 } __anon_5
        local { u64, ( { b256 } | { u64 } ) } __matched_value_1
        local u8 __matched_value_10
        local bool __matched_value_11
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __matched_value_12
        local bool __matched_value_13
        local { u64 } __matched_value_2
        local { u64, ( () | { b256 } ) } __matched_value_3
        local { u64 } __matched_value_30
        local { u64, ( () | { b256 } ) } __matched_value_31
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __matched_value_32
        local { u64, ( () | b256 ) } __matched_value_4
        local { u64 } __matched_value_6
        local { b256, u64, u64 } __tuple_1
        local { b256, u64, u64 } __tuple_1_
        local { b256, u64, u64 } __tuple_2
        local { b256, u64, u64 } __tuple_2_
        local { b256 } addr1
        local { b256 } addr2
        local { b256 } address
        local mut { u64, ( () | { b256 } ) } candidate
        local { u64 } err
        local mut u64 i
        local { b256 } id1
        local { b256 } id2
        local { u64, ( { b256 } | { b256 } ) } inner_value
        local b256 inner_value0
        local u64 inputs
        local b256 key_for_storage
        local b256 key_for_storage0
        local b256 key_for_storage_
        local u64 last_slot
        local u64 last_slot0
        local u64 number_of_slots
        local u64 number_of_slots0
        local u64 number_of_slots00
        local u64 number_of_slots1
        local b256 offset_slot
        local mut u256 offset_slot0
        local mut u256 offset_slot00
        local b256 offset_slot1
        local { b256 } owner
        local { u64, ( () | { b256 } ) } owner_of_input
        local u64 padded_value
        local u64 place_in_slot
        local u64 place_in_slot0
        local u64 place_in_slot00
        local u64 place_in_slot1
        local u64 result_ptr
        local u64 size_of_t
        local u64 size_of_t0
        local { u64 } type_of_input

        entry(new_value: u64):
        v0 = asm(r1) -> bool r1, !11 {
            gm     r1 i1, !12
        }
        cbr v0, only_owner_0_msg_sender_10_block0(), only_owner_0_msg_sender_10_block7(), !13

        only_owner_0_msg_sender_10_block0():
        v1 = const u64 0, !15
        v2 = gtf v1, 1, !21
        v3 = bitcast v2 to u8, !22
        v4 = get_local ptr u8, __matched_value_10, !24
        v5 = get_local ptr u8, __matched_value_10, !25
        v6 = const u8 0, !26
        v7 = cmp eq v3 v6, !28
        cbr v7, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1(), !29

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0():
        v8 = get_local ptr { u64 }, __anon_00000, !31
        v9 = const u64 0
        v10 = get_elem_ptr v8, ptr u64, v9, !32
        v11 = const u64 0, !30
        store v11 to v10, !33
        v12 = load v8, !34
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v12), !35

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1():
        v13 = get_local ptr u8, __matched_value_10, !36
        v14 = const u8 1, !37
        v15 = cmp eq v3 v14, !39
        cbr v15, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3(), !40

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2():
        v16 = get_local ptr { u64 }, __anon_100, !41
        v17 = const u64 0
        v18 = get_elem_ptr v16, ptr u64, v17, !42
        v19 = const u64 1, !30
        store v19 to v18, !43
        v20 = load v16, !44
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v20), !45

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3():
        v21 = const u64 0, !46
        revert v21, !50

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v22: { u64 }):
        v23 = get_local ptr { u64 }, __matched_value_30, !52
        store v22 to v23, !53
        v24 = get_local ptr { u64 }, __matched_value_30, !54
        v25 = const u64 0
        v26 = get_elem_ptr v24, ptr u64, v25, !55
        v27 = load v26, !56
        v28 = const u64 0, !19
        v29 = cmp eq v27 v28, !58
        cbr v29, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1(), !59

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0():
        v30 = const u64 0, !60
        v31 = gtf v30, 5, !62
        v32 = bitcast v31 to u64, !63
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v32), !64

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1():
        v33 = get_local ptr { u64 }, __matched_value_30, !65
        v34 = const u64 0
        v35 = get_elem_ptr v33, ptr u64, v34, !66
        v36 = load v35, !67
        v37 = const u64 1, !19
        v38 = cmp eq v36 v37, !69
        cbr v38, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3(), !70

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2():
        v39 = const u64 0, !71
        v40 = gtf v39, 259, !73
        v41 = bitcast v40 to u64, !74
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v41), !75

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3():
        v42 = const u64 14757395258967588866, !51
        revert v42, !76

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v43: u64):
        v44 = get_local ptr u64, inputs, !78
        v45 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0000, !81
        v46 = const u64 0
        v47 = get_elem_ptr v45, ptr u64, v46, !82
        v48 = const u64 0, !80
        store v48 to v47, !83
        v49 = load v45, !84
        v50 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !86
        store v49 to v50, !87
        v51 = get_local ptr u64, i, !89
        v52 = const u64 0, !90
        br only_owner_0_msg_sender_10_caller_address_12_while(v52), !91

        only_owner_0_msg_sender_10_caller_address_12_while(v53: u64):
        v54 = get_local ptr u64, i, !93
        v55 = get_local ptr u64, inputs, !95
        v56 = cmp lt v53 v43, !97
        cbr v56, only_owner_0_msg_sender_10_caller_address_12_while_body(), only_owner_0_msg_sender_10_caller_address_12_end_while(), !98

        only_owner_0_msg_sender_10_caller_address_12_while_body():
        v57 = get_local ptr u64, i, !100
        v58 = asm(input: v53) -> u64 input, !104 {
        }
        v59 = call input_type_17(v58), !106
        v60 = get_local ptr { u64 }, type_of_input, !108
        store v59 to v60, !109
        v61 = get_local ptr { u64 }, type_of_input, !111
        v62 = load v61, !112
        v63 = get_local ptr { u64 }, __matched_value_2, !114
        store v62 to v63, !115
        v64 = get_local ptr { u64 }, __matched_value_2, !116
        v65 = const u64 0
        v66 = get_elem_ptr v64, ptr u64, v65, !117
        v67 = load v66, !118
        v68 = const u64 0, !110
        v69 = cmp eq v67 v68, !120
        v70 = const unit (), !121
        cbr v69, only_owner_0_msg_sender_10_caller_address_12_block5(v70), only_owner_0_msg_sender_10_caller_address_12_block1(), !122

        only_owner_0_msg_sender_10_caller_address_12_block1():
        v71 = get_local ptr { u64 }, __matched_value_2, !123
        v72 = const u64 0
        v73 = get_elem_ptr v71, ptr u64, v72, !124
        v74 = load v73, !125
        v75 = const u64 2, !110
        v76 = cmp eq v74 v75, !127
        v77 = const unit (), !128
        cbr v76, only_owner_0_msg_sender_10_caller_address_12_block5(v77), only_owner_0_msg_sender_10_caller_address_12_block3(), !129

        only_owner_0_msg_sender_10_caller_address_12_block3():
        v78 = get_local ptr u64, i, !131
        v79 = const u64 1, !132
        v80 = call add_19(v53, v79), !134
        v81 = get_local ptr u64, i, !135
        br only_owner_0_msg_sender_10_caller_address_12_while(v80), !136

        only_owner_0_msg_sender_10_caller_address_12_block5(v82: ()):
        v83 = get_local ptr u64, i, !138
        v84 = asm(input: v53) -> u64 input, !140 {
        }
        v85 = call input_type_17(v84), !143
        v86 = get_local ptr { u64 }, __matched_value_6, !145
        store v85 to v86, !146
        v87 = get_local ptr { u64 }, __matched_value_6, !147
        v88 = const u64 0
        v89 = get_elem_ptr v87, ptr u64, v88, !148
        v90 = load v89, !149
        v91 = const u64 0, !142
        v92 = cmp eq v90 v91, !151
        cbr v92, only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0(), only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1(), !152

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0():
        v93 = get_local ptr { u64, ( () | { b256 } ) }, __anon_01, !153
        v94 = const u64 0
        v95 = get_elem_ptr v93, ptr u64, v94, !154
        v96 = const u64 1, !80
        store v96 to v95, !155
        v97 = gtf v84, 515, !157
        v98 = int_to_ptr v97 to ptr b256, !158
        v99 = load v98, !159
        v100 = call from_22(v99), !161
        v101 = const u64 1
        v102 = const u64 1
        v103 = get_elem_ptr v93, ptr { b256 }, v101, v102, !162
        store v100 to v103, !163
        v104 = load v93, !164
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v104), !165

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1():
        v105 = get_local ptr { u64, ( () | { b256 } ) }, __anon_11, !166
        v106 = const u64 0
        v107 = get_elem_ptr v105, ptr u64, v106, !167
        v108 = const u64 0, !80
        store v108 to v107, !168
        v109 = load v105, !169
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v109), !170

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v110: { u64, ( () | { b256 } ) }):
        v111 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !172
        store v110 to v111, !173
        v112 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !175
        v113 = load v112, !176
        v114 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !179
        store v113 to v114, !180
        v115 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !182
        v116 = const u64 0
        v117 = get_elem_ptr v115, ptr u64, v116, !183
        v118 = load v117, !184
        v119 = const u64 1, !181
        v120 = cmp eq v118 v119, !186
        v121 = const bool false, !187
        cbr v120, only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v121), only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1(), !188

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1():
        v122 = const bool true, !189
        br only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v122), !190

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v123: bool):
        cbr v123, only_owner_0_msg_sender_10_caller_address_12_block6(), only_owner_0_msg_sender_10_caller_address_12_block7(), !191

        only_owner_0_msg_sender_10_caller_address_12_block6():
        v124 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !193
        v125 = load v124, !194
        v126 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !196
        store v125 to v126, !197
        v127 = get_local ptr u64, i, !199
        v128 = const u64 1, !200
        v129 = call add_19(v53, v128), !202
        v130 = get_local ptr u64, i, !203
        br only_owner_0_msg_sender_10_caller_address_12_while(v129), !204

        only_owner_0_msg_sender_10_caller_address_12_block7():
        v131 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !206
        v132 = load v131, !207
        v133 = call unwrap_24(v132), !209
        v134 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !211
        v135 = load v134, !212
        v136 = call unwrap_24(v135), !214
        v137 = call eq_6(v133, v136), !216
        cbr v137, only_owner_0_msg_sender_10_caller_address_12_block9(), only_owner_0_msg_sender_10_caller_address_12_block10(), !217

        only_owner_0_msg_sender_10_caller_address_12_block9():
        v138 = get_local ptr u64, i, !219
        v139 = const u64 1, !220
        v140 = call add_19(v53, v139), !222
        v141 = get_local ptr u64, i, !223
        br only_owner_0_msg_sender_10_caller_address_12_while(v140), !224

        only_owner_0_msg_sender_10_caller_address_12_block10():
        v142 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_10, !227
        v143 = const u64 0
        v144 = get_elem_ptr v142, ptr u64, v143, !228
        v145 = const u64 1, !226
        store v145 to v144, !229
        v146 = get_local ptr { u64 }, __anon_20, !231
        v147 = const u64 0
        v148 = get_elem_ptr v146, ptr u64, v147, !232
        v149 = const u64 0, !230
        store v149 to v148, !233
        v150 = load v146, !234
        v151 = const u64 1
        v152 = const u64 1
        v153 = get_elem_ptr v142, ptr { u64 }, v151, v152, !235
        store v150 to v153, !236
        v154 = load v142, !237
        br only_owner_0_msg_sender_10_block10(v154), !239

        only_owner_0_msg_sender_10_caller_address_12_end_while():
        v155 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !241
        v156 = load v155, !242
        v157 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !244
        store v156 to v157, !245
        v158 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !246
        v159 = const u64 0
        v160 = get_elem_ptr v158, ptr u64, v159, !247
        v161 = load v160, !248
        v162 = const u64 1, !240
        v163 = cmp eq v161 v162, !250
        cbr v163, only_owner_0_msg_sender_10_caller_address_12_block12(), only_owner_0_msg_sender_10_caller_address_12_block13(), !251

        only_owner_0_msg_sender_10_caller_address_12_block12():
        v164 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !252
        v165 = const u64 1
        v166 = const u64 1
        v167 = get_elem_ptr v164, ptr { b256 }, v165, v166, !253
        v168 = load v167, !254
        v169 = get_local ptr { b256 }, address, !256
        store v168 to v169, !257
        v170 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_30, !258
        v171 = const u64 0
        v172 = get_elem_ptr v170, ptr u64, v171, !259
        v173 = const u64 0, !226
        store v173 to v172, !260
        v174 = get_local ptr { b256 }, address, !262
        v175 = load v174, !263
        v176 = const u64 1
        v177 = const u64 0
        v178 = get_elem_ptr v170, ptr { b256 }, v176, v177, !264
        store v175 to v178, !265
        v179 = load v170, !266
        br only_owner_0_msg_sender_10_caller_address_12_block17(v179), !267

        only_owner_0_msg_sender_10_caller_address_12_block13():
        v180 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !268
        v181 = const u64 0
        v182 = get_elem_ptr v180, ptr u64, v181, !269
        v183 = load v182, !270
        v184 = const u64 0, !240
        v185 = cmp eq v183 v184, !272
        cbr v185, only_owner_0_msg_sender_10_caller_address_12_block14(), only_owner_0_msg_sender_10_caller_address_12_block15(), !273

        only_owner_0_msg_sender_10_caller_address_12_block14():
        v186 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_40, !274
        v187 = const u64 0
        v188 = get_elem_ptr v186, ptr u64, v187, !275
        v189 = const u64 1, !226
        store v189 to v188, !276
        v190 = get_local ptr { u64 }, __anon_5, !277
        v191 = const u64 0
        v192 = get_elem_ptr v190, ptr u64, v191, !278
        v193 = const u64 1, !230
        store v193 to v192, !279
        v194 = load v190, !280
        v195 = const u64 1
        v196 = const u64 1
        v197 = get_elem_ptr v186, ptr { u64 }, v195, v196, !281
        store v194 to v197, !282
        v198 = load v186, !283
        br only_owner_0_msg_sender_10_caller_address_12_block17(v198), !284

        only_owner_0_msg_sender_10_caller_address_12_block15():
        v199 = const u64 14757395258967588866, !243
        revert v199, !285

        only_owner_0_msg_sender_10_caller_address_12_block17(v200: { u64, ( { b256 } | { u64 } ) }):
        br only_owner_0_msg_sender_10_block10(v200), !286

        only_owner_0_msg_sender_10_block10(v201: { u64, ( { b256 } | { u64 } ) }):
        v202 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !288
        store v201 to v202, !289
        v203 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !290
        v204 = const u64 0
        v205 = get_elem_ptr v203, ptr u64, v204, !291
        v206 = load v205, !292
        v207 = const u64 1, !16
        v208 = cmp eq v206 v207, !294
        cbr v208, only_owner_0_msg_sender_10_block1(), only_owner_0_msg_sender_10_block2(), !295

        only_owner_0_msg_sender_10_block1():
        v209 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !296
        v210 = const u64 1
        v211 = const u64 1
        v212 = get_elem_ptr v209, ptr { u64 }, v210, v211, !297
        v213 = load v212, !298
        v214 = get_local ptr { u64 }, err, !300
        store v213 to v214, !301
        v215 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_000, !302
        v216 = const u64 0
        v217 = get_elem_ptr v215, ptr u64, v216, !303
        v218 = const u64 1, !226
        store v218 to v217, !304
        v219 = get_local ptr { u64 }, err, !306
        v220 = load v219, !307
        v221 = const u64 1
        v222 = const u64 1
        v223 = get_elem_ptr v215, ptr { u64 }, v221, v222, !308
        store v220 to v223, !309
        v224 = load v215, !310
        br only_owner_0_msg_sender_10_block6(v224), !311

        only_owner_0_msg_sender_10_block2():
        v225 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !312
        v226 = const u64 0
        v227 = get_elem_ptr v225, ptr u64, v226, !313
        v228 = load v227, !314
        v229 = const u64 0, !16
        v230 = cmp eq v228 v229, !316
        cbr v230, only_owner_0_msg_sender_10_block3(), only_owner_0_msg_sender_10_block4(), !317

        only_owner_0_msg_sender_10_block3():
        v231 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !318
        v232 = const u64 1
        v233 = const u64 0
        v234 = get_elem_ptr v231, ptr { b256 }, v232, v233, !319
        v235 = load v234, !320
        v236 = get_local ptr { b256 }, owner, !322
        store v235 to v236, !323
        v237 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_1, !324
        v238 = const u64 0
        v239 = get_elem_ptr v237, ptr u64, v238, !325
        v240 = const u64 0, !226
        store v240 to v239, !326
        v241 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !329
        v242 = const u64 0
        v243 = get_elem_ptr v241, ptr u64, v242, !330
        v244 = const u64 0, !328
        store v244 to v243, !331
        v245 = get_local ptr { b256 }, owner, !333
        v246 = load v245, !334
        v247 = const u64 1
        v248 = const u64 0
        v249 = get_elem_ptr v241, ptr { b256 }, v247, v248, !335
        store v246 to v249, !336
        v250 = load v241, !337
        v251 = const u64 1
        v252 = const u64 0
        v253 = get_elem_ptr v237, ptr { u64, ( { b256 } | { b256 } ) }, v251, v252, !338
        store v250 to v253, !339
        v254 = load v237, !340
        br only_owner_0_msg_sender_10_block6(v254), !341

        only_owner_0_msg_sender_10_block4():
        v255 = const u64 14757395258967588866, !287
        revert v255, !342

        only_owner_0_msg_sender_10_block6(v256: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        br only_owner_0_msg_sender_10_block8(v256), !343

        only_owner_0_msg_sender_10_block7():
        v257 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_3, !344
        v258 = const u64 0
        v259 = get_elem_ptr v257, ptr u64, v258, !345
        v260 = const u64 0, !226
        store v260 to v259, !346
        v261 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_4, !347
        v262 = const u64 0
        v263 = get_elem_ptr v261, ptr u64, v262, !348
        v264 = const u64 1, !328
        store v264 to v263, !349
        v265 = asm(r1) -> b256 r1, !352 {
            gm     r1 i2, !353
        }
        v266 = call from_22(v265), !355
        v267 = const u64 1
        v268 = const u64 1
        v269 = get_elem_ptr v261, ptr { b256 }, v267, v268, !356
        store v266 to v269, !357
        v270 = load v261, !358
        v271 = const u64 1
        v272 = const u64 0
        v273 = get_elem_ptr v257, ptr { u64, ( { b256 } | { b256 } ) }, v271, v272, !359
        store v270 to v273, !360
        v274 = load v257, !361
        br only_owner_0_msg_sender_10_block8(v274), !362

        only_owner_0_msg_sender_10_block8(v275: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v276 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !365
        store v275 to v276, !366
        v277 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !368
        v278 = const u64 0
        v279 = get_elem_ptr v277, ptr u64, v278, !369
        v280 = load v279, !370
        v281 = const u64 0, !367
        v282 = cmp eq v280 v281, !372
        cbr v282, only_owner_0_unwrap_9_block0(), only_owner_0_unwrap_9_block1(), !373

        only_owner_0_unwrap_9_block0():
        v283 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !374
        v284 = const u64 1
        v285 = const u64 0
        v286 = get_elem_ptr v283, ptr { u64, ( { b256 } | { b256 } ) }, v284, v285, !375
        v287 = load v286, !376
        v288 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !378
        store v287 to v288, !379
        v289 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !381
        v290 = load v289, !382
        v291 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_00, !383
        v292 = const u64 0
        v293 = get_elem_ptr v291, ptr u64, v292, !384
        v294 = const u64 0, !328
        store v294 to v293, !385
        v295 = get_local ptr { b256, u64, b256 }, __anon_02, !388
        v296 = const u64 0
        v297 = get_elem_ptr v295, ptr b256, v296, !389
        v298 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !387
        store v298 to v297, !390
        v299 = const u64 1
        v300 = get_elem_ptr v295, ptr u64, v299, !391
        v301 = const u64 0
        store v301 to v300, !392
        v302 = const u64 2
        v303 = get_elem_ptr v295, ptr b256, v302, !393
        v304 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !387
        store v304 to v303, !394
        v305 = load v295, !395
        v306 = call slot_51(v305), !399
        v307 = call offset_46(v305), !401
        v308 = get_local ptr u64, size_of_t, !406
        v309 = const u64 8, !407
        v310 = mul v307, v309, !409
        v311 = get_local ptr u64, size_of_t, !411
        v312 = const u64 32
        v313 = add v310, v312, !413
        v314 = const u64 31, !414
        v315 = add v313, v314, !416
        v316 = const u64 5, !417
        v317 = rsh v315, v316, !419
        v318 = get_local ptr u64, last_slot, !421
        v319 = const u64 4, !422
        v320 = mod v307, v319, !424
        v321 = get_local ptr u64, place_in_slot0, !426
        v322 = get_local ptr bool, __matched_value_11, !428
        v323 = get_local ptr bool, __matched_value_11, !430
        v324 = get_local ptr u64, place_in_slot0, !432
        v325 = const u64 8, !433
        v326 = mul v320, v325, !435
        v327 = get_local ptr u64, size_of_t, !437
        v328 = add v326, v312, !439
        v329 = const u64 31, !440
        v330 = add v328, v329, !442
        v331 = const u64 5, !443
        v332 = rsh v330, v331, !445
        v333 = get_local ptr u64, number_of_slots0, !447
        v334 = asm(input: v306) -> u256 input, !450 {
        }
        v335 = get_local ptr u256, offset_slot0, !452
        store v334 to v335, !453
        v336 = get_local ptr u256, offset_slot0, !455
        v337 = load v336, !456
        v338 = get_local ptr u64, last_slot, !458
        v339 = call as_u256_40(v317), !460
        v340 = get_local ptr u64, number_of_slots0, !462
        v341 = call as_u256_40(v332), !464
        v342 = sub v339, v341, !466
        v343 = add v337, v342, !468
        v344 = get_local ptr u256, offset_slot0, !469
        store v343 to v344, !470
        v345 = get_local ptr u256, offset_slot0, !472
        v346 = load v345, !473
        v347 = asm(input: v346) -> b256 input, !476 {
        }
        v348 = get_local ptr u64, number_of_slots0, !478
        v349 = get_local ptr u64, place_in_slot0, !480
        v350 = get_local ptr { b256, u64, u64 }, __anon_0001, !482
        v351 = const u64 0
        v352 = get_elem_ptr v350, ptr b256, v351, !483
        store v347 to v352, !484
        v353 = const u64 1
        v354 = get_elem_ptr v350, ptr u64, v353, !485
        store v332 to v354, !486
        v355 = const u64 2
        v356 = get_elem_ptr v350, ptr u64, v355, !487
        store v320 to v356, !488
        v357 = load v350, !489
        v358 = get_local ptr { b256, u64, u64 }, __tuple_2, !491
        store v357 to v358, !492
        v359 = get_local ptr { b256, u64, u64 }, __tuple_2, !493
        v360 = load v359, !494
        v361 = get_local ptr { b256, u64, u64 }, __tuple_2_, !495
        store v360 to v361, !496
        v362 = get_local ptr { b256, u64, u64 }, __tuple_2_, !497
        v363 = const u64 0
        v364 = get_elem_ptr v362, ptr b256, v363, !498
        v365 = load v364, !499
        v366 = get_local ptr b256, offset_slot, !500
        store v365 to v366, !501
        v367 = get_local ptr { b256, u64, u64 }, __tuple_2_, !502
        v368 = const u64 1
        v369 = get_elem_ptr v367, ptr u64, v368, !503
        v370 = load v369, !504
        v371 = get_local ptr u64, number_of_slots, !505
        v372 = get_local ptr { b256, u64, u64 }, __tuple_2_, !506
        v373 = const u64 2
        v374 = get_elem_ptr v372, ptr u64, v373, !507
        v375 = load v374, !508
        v376 = get_local ptr u64, place_in_slot, !509
        v377 = get_local ptr u64, number_of_slots, !511
        v378 = const u64 32, !512
        v379 = mul v370, v378, !514
        v380 = const u64 8
        v381 = mul v380, v379, !518
        v382 = asm(size: v381, ptr) -> u64 ptr, !520 {
            aloc   size, !521
            move   ptr hp, !522
        }
        v383 = get_local ptr u64, result_ptr, !524
        v384 = get_local ptr b256, offset_slot, !526
        v385 = load v384, !527
        v386 = get_local ptr u64, result_ptr, !529
        v387 = get_local ptr u64, number_of_slots, !531
        v388 = get_local ptr b256, key_for_storage, !533
        store v385 to v388, !534
        v389 = int_to_ptr v382 to ptr b256, !535
        v390 = state_load_quad_word v389, key v388, v370, !536
        cbr v390, only_owner_0_get_owner_27_read_28_read_30_block3(), only_owner_0_get_owner_27_read_28_read_30_block4(), !537

        only_owner_0_unwrap_9_block1():
        v391 = const u64 0, !538
        revert v391, !540

        only_owner_0_get_owner_27_read_28_read_30_block3():
        v392 = get_local ptr { u64, ( () | b256 ) }, __anon_12, !541
        v393 = const u64 0
        v394 = get_elem_ptr v392, ptr u64, v393, !542
        v395 = const u64 1, !80
        store v395 to v394, !543
        v396 = get_local ptr u64, result_ptr, !545
        v397 = get_local ptr u64, place_in_slot, !547
        v398 = const u64 8
        v399 = mul v398, v375, !549
        v400 = add v382, v399, !550
        v401 = asm(ptr: v400) -> b256 ptr, !554 {
        }
        v402 = const u64 1
        v403 = const u64 1
        v404 = get_elem_ptr v392, ptr b256, v402, v403, !555
        store v401 to v404, !556
        v405 = load v392, !557
        br only_owner_0_get_owner_27_read_28_read_30_block5(v405), !558

        only_owner_0_get_owner_27_read_28_read_30_block4():
        v406 = get_local ptr { u64, ( () | b256 ) }, __anon_21, !559
        v407 = const u64 0
        v408 = get_elem_ptr v406, ptr u64, v407, !560
        v409 = const u64 0, !80
        store v409 to v408, !561
        v410 = load v406, !562
        br only_owner_0_get_owner_27_read_28_read_30_block5(v410), !563

        only_owner_0_get_owner_27_read_28_read_30_block5(v411: { u64, ( () | b256 ) }):
        v412 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !566
        store v411 to v412, !567
        v413 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !569
        v414 = const u64 0
        v415 = get_elem_ptr v413, ptr u64, v414, !570
        v416 = load v415, !571
        v417 = const u64 1, !568
        v418 = cmp eq v416 v417, !573
        cbr v418, only_owner_0_get_owner_27_read_28_unwrap_29_block0(), only_owner_0_get_owner_27_read_28_unwrap_29_block1(), !574

        only_owner_0_get_owner_27_read_28_unwrap_29_block0():
        v419 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !575
        v420 = const u64 1
        v421 = const u64 1
        v422 = get_elem_ptr v419, ptr b256, v420, v421, !576
        v423 = load v422, !577
        v424 = get_local ptr b256, inner_value0, !579
        store v423 to v424, !580
        v425 = get_local ptr b256, inner_value0, !582
        v426 = load v425, !583
        v427 = call from_22(v426), !585
        v428 = const u64 1
        v429 = const u64 0
        v430 = get_elem_ptr v291, ptr { b256 }, v428, v429, !586
        store v427 to v430, !587
        v431 = load v291, !5
        v432 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_03, !590
        v433 = const u64 0
        v434 = get_elem_ptr v432, ptr { u64, ( { b256 } | { b256 } ) }, v433, !591
        store v290 to v434, !592
        v435 = const u64 1
        v436 = get_elem_ptr v432, ptr { u64, ( { b256 } | { b256 } ) }, v435, !593
        store v431 to v436, !594
        v437 = load v432, !595
        v438 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !597
        store v437 to v438, !598
        v439 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !599
        v440 = const u64 0
        v441 = get_elem_ptr v439, ptr { u64, ( { b256 } | { b256 } ) }, v440, !601
        v442 = const u64 0
        v443 = get_elem_ptr v441, ptr u64, v442, !602
        v444 = load v443, !603
        v445 = const u64 0, !600
        v446 = cmp eq v444 v445, !605
        cbr v446, only_owner_0_eq_4_block0(), only_owner_0_eq_4_block1(v446), !606

        only_owner_0_get_owner_27_read_28_unwrap_29_block1():
        v447 = const u64 0, !607
        revert v447, !609

        only_owner_0_eq_4_block0():
        v448 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !610
        v449 = const u64 1
        v450 = get_elem_ptr v448, ptr { u64, ( { b256 } | { b256 } ) }, v449, !611
        v451 = const u64 0
        v452 = get_elem_ptr v450, ptr u64, v451, !612
        v453 = load v452, !613
        v454 = const u64 0, !600
        v455 = cmp eq v453 v454, !614
        br only_owner_0_eq_4_block1(v455), !615

        only_owner_0_eq_4_block1(v456: bool):
        cbr v456, only_owner_0_eq_4_block2(), only_owner_0_eq_4_block3(), !616

        only_owner_0_eq_4_block2():
        v457 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !617
        v458 = const u64 0
        v459 = get_elem_ptr v457, ptr { u64, ( { b256 } | { b256 } ) }, v458, !618
        v460 = const u64 1
        v461 = const u64 0
        v462 = get_elem_ptr v459, ptr { b256 }, v460, v461, !619
        v463 = load v462, !620
        v464 = get_local ptr { b256 }, addr1, !622
        store v463 to v464, !623
        v465 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !624
        v466 = const u64 1
        v467 = get_elem_ptr v465, ptr { u64, ( { b256 } | { b256 } ) }, v466, !625
        v468 = const u64 1
        v469 = const u64 0
        v470 = get_elem_ptr v467, ptr { b256 }, v468, v469, !626
        v471 = load v470, !627
        v472 = get_local ptr { b256 }, addr2, !629
        store v471 to v472, !630
        v473 = get_local ptr { b256 }, addr1, !632
        v474 = load v473, !633
        v475 = get_local ptr { b256 }, addr2, !635
        v476 = load v475, !636
        v477 = call eq_6(v474, v476), !638
        br only_owner_0_eq_4_block9(v477), !639

        only_owner_0_eq_4_block3():
        v478 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !640
        v479 = const u64 0
        v480 = get_elem_ptr v478, ptr { u64, ( { b256 } | { b256 } ) }, v479, !642
        v481 = const u64 0
        v482 = get_elem_ptr v480, ptr u64, v481, !643
        v483 = load v482, !644
        v484 = const u64 1, !641
        v485 = cmp eq v483 v484, !646
        cbr v485, only_owner_0_eq_4_block4(), only_owner_0_eq_4_block5(v485), !647

        only_owner_0_eq_4_block4():
        v486 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !648
        v487 = const u64 1
        v488 = get_elem_ptr v486, ptr { u64, ( { b256 } | { b256 } ) }, v487, !649
        v489 = const u64 0
        v490 = get_elem_ptr v488, ptr u64, v489, !650
        v491 = load v490, !651
        v492 = const u64 1, !641
        v493 = cmp eq v491 v492, !652
        br only_owner_0_eq_4_block5(v493), !653

        only_owner_0_eq_4_block5(v494: bool):
        v495 = const bool false, !654
        cbr v494, only_owner_0_eq_4_block6(), only_owner_0_eq_4_block8(v495), !655

        only_owner_0_eq_4_block6():
        v496 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !656
        v497 = const u64 0
        v498 = get_elem_ptr v496, ptr { u64, ( { b256 } | { b256 } ) }, v497, !657
        v499 = const u64 1
        v500 = const u64 1
        v501 = get_elem_ptr v498, ptr { b256 }, v499, v500, !658
        v502 = load v501, !659
        v503 = get_local ptr { b256 }, id1, !661
        store v502 to v503, !662
        v504 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !663
        v505 = const u64 1
        v506 = get_elem_ptr v504, ptr { u64, ( { b256 } | { b256 } ) }, v505, !664
        v507 = const u64 1
        v508 = const u64 1
        v509 = get_elem_ptr v506, ptr { b256 }, v507, v508, !665
        v510 = load v509, !666
        v511 = get_local ptr { b256 }, id2, !668
        store v510 to v511, !669
        v512 = get_local ptr { b256 }, id1, !671
        v513 = load v512, !672
        v514 = get_local ptr { b256 }, id2, !674
        v515 = load v514, !675
        v516 = call eq_6(v513, v515), !677
        br only_owner_0_eq_4_block8(v516), !678

        only_owner_0_eq_4_block8(v517: bool):
        br only_owner_0_eq_4_block9(v517), !679

        only_owner_0_eq_4_block9(v518: bool):
        v519 = const bool false, !681
        v520 = cmp eq v518 v519, !685
        cbr v520, only_owner_0_assert_1_block0(), only_owner_0_assert_1_block1(), !686

        only_owner_0_assert_1_block0():
        v521 = const u64 18446744073709486084, !688
        revert v521, !690

        only_owner_0_assert_1_block1():
        v522 = get_local ptr { b256, u64, b256 }, __anon_0, !691
        v523 = const u64 0
        v524 = get_elem_ptr v522, ptr b256, v523
        v525 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c, !691
        store v525 to v524, !691
        v526 = const u64 1
        v527 = get_elem_ptr v522, ptr u64, v526
        v528 = const u64 0
        store v528 to v527, !691
        v529 = const u64 2
        v530 = get_elem_ptr v522, ptr b256, v529
        v531 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c, !691
        store v531 to v530, !691
        v532 = load v522
        v533 = call slot_51(v532), !694
        v534 = call offset_46(v532), !696
        v535 = get_local ptr u64, size_of_t0, !699
        v536 = const u64 8, !407
        v537 = mul v534, v536, !700
        v538 = get_local ptr u64, size_of_t0, !701
        v539 = const u64 8
        v540 = add v537, v539, !702
        v541 = const u64 31, !414
        v542 = add v540, v541, !703
        v543 = const u64 5, !417
        v544 = rsh v542, v543, !704
        v545 = get_local ptr u64, last_slot0, !705
        v546 = const u64 4, !422
        v547 = mod v534, v546, !706
        v548 = get_local ptr u64, place_in_slot00, !707
        v549 = get_local ptr bool, __matched_value_13, !708
        v550 = get_local ptr bool, __matched_value_13, !709
        v551 = get_local ptr bool, __matched_value_13, !710
        v552 = get_local ptr u64, number_of_slots00, !711
        v553 = asm(input: v533) -> u256 input, !712 {
        }
        v554 = get_local ptr u256, offset_slot00, !713
        store v553 to v554, !714
        v555 = get_local ptr u256, offset_slot00, !715
        v556 = load v555, !716
        v557 = get_local ptr u64, last_slot0, !717
        v558 = call as_u256_40(v544), !718
        v559 = get_local ptr u64, number_of_slots00, !719
        v560 = const u64 1, !720
        v561 = call as_u256_40(v560), !721
        v562 = sub v558, v561, !722
        v563 = add v556, v562, !723
        v564 = get_local ptr u256, offset_slot00, !724
        store v563 to v564, !725
        v565 = get_local ptr u256, offset_slot00, !726
        v566 = load v565, !727
        v567 = asm(input: v566) -> b256 input, !728 {
        }
        v568 = get_local ptr u64, number_of_slots00, !729
        v569 = get_local ptr u64, place_in_slot00, !730
        v570 = get_local ptr { b256, u64, u64 }, __anon_04, !731
        v571 = const u64 0
        v572 = get_elem_ptr v570, ptr b256, v571, !732
        store v567 to v572, !733
        v573 = const u64 1
        v574 = get_elem_ptr v570, ptr u64, v573, !734
        store v560 to v574, !735
        v575 = const u64 2
        v576 = get_elem_ptr v570, ptr u64, v575, !736
        store v547 to v576, !737
        v577 = load v570, !738
        v578 = get_local ptr { b256, u64, u64 }, __tuple_1, !740
        store v577 to v578, !741
        v579 = get_local ptr { b256, u64, u64 }, __tuple_1, !742
        v580 = load v579, !743
        v581 = get_local ptr { b256, u64, u64 }, __tuple_1_, !744
        store v580 to v581, !745
        v582 = get_local ptr { b256, u64, u64 }, __tuple_1_, !746
        v583 = const u64 0
        v584 = get_elem_ptr v582, ptr b256, v583, !747
        v585 = load v584, !748
        v586 = get_local ptr b256, offset_slot1, !749
        store v585 to v586, !750
        v587 = get_local ptr { b256, u64, u64 }, __tuple_1_, !751
        v588 = const u64 1
        v589 = get_elem_ptr v587, ptr u64, v588, !752
        v590 = load v589, !753
        v591 = get_local ptr u64, number_of_slots1, !754
        v592 = get_local ptr { b256, u64, u64 }, __tuple_1_, !755
        v593 = const u64 2
        v594 = get_elem_ptr v592, ptr u64, v593, !756
        v595 = load v594, !757
        v596 = get_local ptr u64, place_in_slot1, !758
        v597 = get_local ptr u64, number_of_slots1, !760
        v598 = const u64 32, !761
        v599 = mul v590, v598, !763
        v600 = mul v380, v599, !765
        v601 = asm(size: v600, ptr) -> u64 ptr, !766 {
            aloc   size, !521
            move   ptr hp, !522
        }
        v602 = get_local ptr u64, padded_value, !768
        v603 = get_local ptr b256, offset_slot1, !770
        v604 = load v603, !771
        v605 = get_local ptr u64, padded_value, !773
        v606 = get_local ptr u64, number_of_slots1, !775
        v607 = get_local ptr b256, key_for_storage0, !777
        store v604 to v607, !778
        v608 = int_to_ptr v601 to ptr b256, !779
        v609 = state_load_quad_word v608, key v607, v590, !780
        v610 = get_local ptr bool, _, !782
        v611 = get_local ptr u64, padded_value, !784
        v612 = get_local ptr u64, place_in_slot1, !786
        v613 = mul v398, v595, !788
        v614 = add v601, v613, !789
        v615 = asm(ptr: v614, val: new_value) {
            sw     ptr val i0, !790
        }
        v616 = get_local ptr b256, offset_slot1, !792
        v617 = load v616, !793
        v618 = get_local ptr u64, padded_value, !795
        v619 = get_local ptr u64, number_of_slots1, !797
        v620 = get_local ptr b256, key_for_storage_, !799
        store v617 to v620, !800
        v621 = int_to_ptr v601 to ptr b256, !801
        v622 = state_store_quad_word v621, key v620, v590, !802
        v623 = get_local ptr bool, __, !804
        v624 = const unit ()
        ret () v624
    }

    pub fn eq_6(self !806: { b256 }, other !807: { b256 }) -> bool, !808 {
        entry(self: { b256 }, other: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !809
        v4 = load v3
        v5 = ptr_to_int other to u64
        v6 = int_to_ptr v5 to ptr { b256 }
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr b256, v7, !809
        v9 = load v8
        v10 = cmp eq v4 v9, !810
        ret bool v10
    }

    pub fn input_type_17(index !811: u64) -> { u64 }, !812 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local u8 __matched_value_2

        entry(index: u64):
        v0 = gtf index, 512, !813
        v1 = bitcast v0 to u8, !813
        v2 = get_local ptr u8, __matched_value_2, !814
        v3 = get_local ptr u8, __matched_value_2, !813
        v4 = const u8 0, !815
        v5 = cmp eq v1 v4, !816
        cbr v5, block0(), block1(), !816

        block0():
        v6 = get_local ptr { u64 }, __anon_0, !817
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr u64, v7, !817
        v9 = const u64 0, !817
        store v9 to v8, !817
        v10 = load v6
        br block8(v10)

        block1():
        v11 = get_local ptr u8, __matched_value_2, !813
        v12 = const u8 1, !818
        v13 = cmp eq v1 v12, !819
        cbr v13, block2(), block3(), !819

        block2():
        v14 = get_local ptr { u64 }, __anon_1, !817
        v15 = const u64 0
        v16 = get_elem_ptr v14, ptr u64, v15, !817
        v17 = const u64 1, !817
        store v17 to v16, !817
        v18 = load v14
        br block7(v18)

        block3():
        v19 = get_local ptr u8, __matched_value_2, !813
        v20 = const u8 2, !820
        v21 = cmp eq v1 v20, !821
        cbr v21, block4(), block5(), !821

        block4():
        v22 = get_local ptr { u64 }, __anon_2, !817
        v23 = const u64 0
        v24 = get_elem_ptr v22, ptr u64, v23, !817
        v25 = const u64 2, !817
        store v25 to v24, !817
        v26 = load v22
        br block7(v26)

        block5():
        v27 = const u64 0, !822
        revert v27, !824

        block7(v28: { u64 }):
        br block8(v28)

        block8(v29: { u64 }):
        ret { u64 } v29
    }

    pub fn add_19(self !825: u64, other !826: u64) -> u64, !827 {
        local u64 res

        entry(self: u64, other: u64):
        v0 = add self, other
        v1 = get_local ptr u64, res, !828
        v2 = get_local ptr u64, res, !829
        v3 = const u64 65535, !831
        v4 = cmp gt v0 v3
        cbr v4, block0(), block1(), !832

        block0():
        v5 = const u64 0, !833
        revert v5, !834

        block1():
        v6 = get_local ptr u64, res, !835
        ret u64 v0
    }

    pub fn from_22(bits !836: b256) -> { b256 }, !837 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !838
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !838
        v3 = load v0
        ret { b256 } v3
    }

    pub fn unwrap_24(self !839: { u64, ( () | { b256 } ) }) -> { b256 }, !840 {
        local { u64, ( () | { b256 } ) } __matched_value_4
        local { b256 } inner_value

        entry(self: { u64, ( () | { b256 } ) }):
        v0 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !565
        store self to v0, !565
        v1 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !568
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !568
        v4 = load v3
        v5 = const u64 1, !568
        v6 = cmp eq v4 v5, !572
        cbr v6, block0(), block1(), !572

        block0():
        v7 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !568
        v8 = const u64 1
        v9 = const u64 1
        v10 = get_elem_ptr v7, ptr { b256 }, v8, v9
        v11 = load v10
        v12 = get_local ptr { b256 }, inner_value, !578
        store v11 to v12, !578
        v13 = get_local ptr { b256 }, inner_value, !581
        v14 = load v13
        ret { b256 } v14

        block1():
        v15 = const u64 0, !607
        revert v15, !841
    }

    pub fn as_u256_40(self !842: u64) -> u256, !843 {
        local { u64, u64, u64, u64 } __anon_0
        local { u64, u64, u64, u64 } input

        entry(self: u64):
        v0 = get_local ptr { u64, u64, u64, u64 }, __anon_0, !844
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr u64, v1, !844
        v3 = const u64 0, !845
        store v3 to v2, !844
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4, !844
        v6 = const u64 0, !846
        store v6 to v5, !844
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr u64, v7, !844
        v9 = const u64 0, !847
        store v9 to v8, !844
        v10 = const u64 3
        v11 = get_elem_ptr v0, ptr u64, v10, !844
        store self to v11, !844
        v12 = load v0
        v13 = get_local ptr { u64, u64, u64, u64 }, input, !848
        store v12 to v13, !848
        v14 = get_local ptr { u64, u64, u64, u64 }, input, !849
        v15 = asm(input: v14) -> u256 input, !850 {
        }
        ret u256 v15
    }

    pub fn offset_46(self !852: { b256, u64, b256 }) -> u64, !853 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 1
        v3 = get_elem_ptr v1, ptr u64, v2, !854
        v4 = load v3
        ret u64 v4
    }

    pub fn slot_51(self !855: { b256, u64, b256 }) -> b256, !856 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !857
        v4 = load v3
        ret b256 v4
    }
}

// IR: [dce] Dead code elimination
contract {
    pub entry fn set_data_if_owner<c626c6e2>(new_value !1: u64) -> (), !4 {
        local { b256, u64, b256 } __anon_0
        local { u64, ( { b256 } | { b256 } ) } __anon_00
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_000
        local { u64, ( () | { b256 } ) } __anon_0000
        local { u64 } __anon_00000
        local { b256, u64, u64 } __anon_0001
        local { u64, ( () | { b256 } ) } __anon_01
        local { b256, u64, b256 } __anon_02
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __anon_03
        local { b256, u64, u64 } __anon_04
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_1
        local { u64, ( { b256 } | { u64 } ) } __anon_10
        local { u64 } __anon_100
        local { u64, ( () | { b256 } ) } __anon_11
        local { u64, ( () | b256 ) } __anon_12
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64 } __anon_20
        local { u64, ( () | b256 ) } __anon_21
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { u64 } ) } __anon_30
        local { u64, ( { b256 } | { b256 } ) } __anon_4
        local { u64, ( { b256 } | { u64 } ) } __anon_40
        local { u64 } __anon_5
        local { u64, ( { b256 } | { u64 } ) } __matched_value_1
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __matched_value_12
        local { u64 } __matched_value_2
        local { u64, ( () | { b256 } ) } __matched_value_3
        local { u64 } __matched_value_30
        local { u64, ( () | { b256 } ) } __matched_value_31
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __matched_value_32
        local { u64, ( () | b256 ) } __matched_value_4
        local { u64 } __matched_value_6
        local { b256, u64, u64 } __tuple_1
        local { b256, u64, u64 } __tuple_1_
        local { b256, u64, u64 } __tuple_2
        local { b256, u64, u64 } __tuple_2_
        local { b256 } addr1
        local { b256 } addr2
        local { b256 } address
        local mut { u64, ( () | { b256 } ) } candidate
        local { u64 } err
        local { b256 } id1
        local { b256 } id2
        local { u64, ( { b256 } | { b256 } ) } inner_value
        local b256 inner_value0
        local b256 key_for_storage
        local b256 key_for_storage0
        local b256 key_for_storage_
        local b256 offset_slot
        local mut u256 offset_slot0
        local mut u256 offset_slot00
        local b256 offset_slot1
        local { b256 } owner
        local { u64, ( () | { b256 } ) } owner_of_input
        local { u64 } type_of_input

        entry(new_value: u64):
        v0 = asm(r1) -> bool r1, !11 {
            gm     r1 i1, !12
        }
        cbr v0, only_owner_0_msg_sender_10_block0(), only_owner_0_msg_sender_10_block7(), !13

        only_owner_0_msg_sender_10_block0():
        v1 = const u64 0, !15
        v2 = gtf v1, 1, !21
        v3 = bitcast v2 to u8, !22
        v4 = const u8 0, !23
        v5 = cmp eq v3 v4, !25
        cbr v5, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1(), !26

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0():
        v6 = get_local ptr { u64 }, __anon_00000, !28
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr u64, v7, !29
        v9 = const u64 0, !27
        store v9 to v8, !30
        v10 = load v6, !31
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v10), !32

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1():
        v11 = const u8 1, !33
        v12 = cmp eq v3 v11, !35
        cbr v12, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3(), !36

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2():
        v13 = get_local ptr { u64 }, __anon_100, !37
        v14 = const u64 0
        v15 = get_elem_ptr v13, ptr u64, v14, !38
        v16 = const u64 1, !27
        store v16 to v15, !39
        v17 = load v13, !40
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v17), !41

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3():
        v18 = const u64 0, !42
        revert v18, !46

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v19: { u64 }):
        v20 = get_local ptr { u64 }, __matched_value_30, !48
        store v19 to v20, !49
        v21 = get_local ptr { u64 }, __matched_value_30, !50
        v22 = const u64 0
        v23 = get_elem_ptr v21, ptr u64, v22, !51
        v24 = load v23, !52
        v25 = const u64 0, !19
        v26 = cmp eq v24 v25, !54
        cbr v26, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1(), !55

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0():
        v27 = const u64 0, !56
        v28 = gtf v27, 5, !58
        v29 = bitcast v28 to u64, !59
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v29), !60

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1():
        v30 = get_local ptr { u64 }, __matched_value_30, !61
        v31 = const u64 0
        v32 = get_elem_ptr v30, ptr u64, v31, !62
        v33 = load v32, !63
        v34 = const u64 1, !19
        v35 = cmp eq v33 v34, !65
        cbr v35, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3(), !66

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2():
        v36 = const u64 0, !67
        v37 = gtf v36, 259, !69
        v38 = bitcast v37 to u64, !70
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v38), !71

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3():
        v39 = const u64 14757395258967588866, !47
        revert v39, !72

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v40: u64):
        v41 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0000, !75
        v42 = const u64 0
        v43 = get_elem_ptr v41, ptr u64, v42, !76
        v44 = const u64 0, !74
        store v44 to v43, !77
        v45 = load v41, !78
        v46 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !80
        store v45 to v46, !81
        v47 = const u64 0, !82
        br only_owner_0_msg_sender_10_caller_address_12_while(v47), !83

        only_owner_0_msg_sender_10_caller_address_12_while(v48: u64):
        v49 = cmp lt v48 v40, !85
        cbr v49, only_owner_0_msg_sender_10_caller_address_12_while_body(), only_owner_0_msg_sender_10_caller_address_12_end_while(), !86

        only_owner_0_msg_sender_10_caller_address_12_while_body():
        v50 = asm(input: v48) -> u64 input, !90 {
        }
        v51 = call input_type_17(v50), !92
        v52 = get_local ptr { u64 }, type_of_input, !94
        store v51 to v52, !95
        v53 = get_local ptr { u64 }, type_of_input, !97
        v54 = load v53, !98
        v55 = get_local ptr { u64 }, __matched_value_2, !100
        store v54 to v55, !101
        v56 = get_local ptr { u64 }, __matched_value_2, !102
        v57 = const u64 0
        v58 = get_elem_ptr v56, ptr u64, v57, !103
        v59 = load v58, !104
        v60 = const u64 0, !96
        v61 = cmp eq v59 v60, !106
        v62 = const unit (), !107
        cbr v61, only_owner_0_msg_sender_10_caller_address_12_block5(v62), only_owner_0_msg_sender_10_caller_address_12_block1(), !108

        only_owner_0_msg_sender_10_caller_address_12_block1():
        v63 = get_local ptr { u64 }, __matched_value_2, !109
        v64 = const u64 0
        v65 = get_elem_ptr v63, ptr u64, v64, !110
        v66 = load v65, !111
        v67 = const u64 2, !96
        v68 = cmp eq v66 v67, !113
        v69 = const unit (), !114
        cbr v68, only_owner_0_msg_sender_10_caller_address_12_block5(v69), only_owner_0_msg_sender_10_caller_address_12_block3(), !115

        only_owner_0_msg_sender_10_caller_address_12_block3():
        v70 = const u64 1, !116
        v71 = call add_19(v48, v70), !118
        br only_owner_0_msg_sender_10_caller_address_12_while(v71), !119

        only_owner_0_msg_sender_10_caller_address_12_block5(v72: ()):
        v73 = asm(input: v48) -> u64 input, !121 {
        }
        v74 = call input_type_17(v73), !124
        v75 = get_local ptr { u64 }, __matched_value_6, !126
        store v74 to v75, !127
        v76 = get_local ptr { u64 }, __matched_value_6, !128
        v77 = const u64 0
        v78 = get_elem_ptr v76, ptr u64, v77, !129
        v79 = load v78, !130
        v80 = const u64 0, !123
        v81 = cmp eq v79 v80, !132
        cbr v81, only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0(), only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1(), !133

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0():
        v82 = get_local ptr { u64, ( () | { b256 } ) }, __anon_01, !134
        v83 = const u64 0
        v84 = get_elem_ptr v82, ptr u64, v83, !135
        v85 = const u64 1, !74
        store v85 to v84, !136
        v86 = gtf v73, 515, !138
        v87 = int_to_ptr v86 to ptr b256, !139
        v88 = load v87, !140
        v89 = call from_22(v88), !142
        v90 = const u64 1
        v91 = const u64 1
        v92 = get_elem_ptr v82, ptr { b256 }, v90, v91, !143
        store v89 to v92, !144
        v93 = load v82, !145
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v93), !146

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1():
        v94 = get_local ptr { u64, ( () | { b256 } ) }, __anon_11, !147
        v95 = const u64 0
        v96 = get_elem_ptr v94, ptr u64, v95, !148
        v97 = const u64 0, !74
        store v97 to v96, !149
        v98 = load v94, !150
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v98), !151

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v99: { u64, ( () | { b256 } ) }):
        v100 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !153
        store v99 to v100, !154
        v101 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !156
        v102 = load v101, !157
        v103 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !160
        store v102 to v103, !161
        v104 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !163
        v105 = const u64 0
        v106 = get_elem_ptr v104, ptr u64, v105, !164
        v107 = load v106, !165
        v108 = const u64 1, !162
        v109 = cmp eq v107 v108, !167
        v110 = const bool false, !168
        cbr v109, only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v110), only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1(), !169

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1():
        v111 = const bool true, !170
        br only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v111), !171

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v112: bool):
        cbr v112, only_owner_0_msg_sender_10_caller_address_12_block6(), only_owner_0_msg_sender_10_caller_address_12_block7(), !172

        only_owner_0_msg_sender_10_caller_address_12_block6():
        v113 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !174
        v114 = load v113, !175
        v115 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !177
        store v114 to v115, !178
        v116 = const u64 1, !179
        v117 = call add_19(v48, v116), !181
        br only_owner_0_msg_sender_10_caller_address_12_while(v117), !182

        only_owner_0_msg_sender_10_caller_address_12_block7():
        v118 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !184
        v119 = load v118, !185
        v120 = call unwrap_24(v119), !187
        v121 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !189
        v122 = load v121, !190
        v123 = call unwrap_24(v122), !192
        v124 = call eq_6(v120, v123), !194
        cbr v124, only_owner_0_msg_sender_10_caller_address_12_block9(), only_owner_0_msg_sender_10_caller_address_12_block10(), !195

        only_owner_0_msg_sender_10_caller_address_12_block9():
        v125 = const u64 1, !196
        v126 = call add_19(v48, v125), !198
        br only_owner_0_msg_sender_10_caller_address_12_while(v126), !199

        only_owner_0_msg_sender_10_caller_address_12_block10():
        v127 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_10, !202
        v128 = const u64 0
        v129 = get_elem_ptr v127, ptr u64, v128, !203
        v130 = const u64 1, !201
        store v130 to v129, !204
        v131 = get_local ptr { u64 }, __anon_20, !206
        v132 = const u64 0
        v133 = get_elem_ptr v131, ptr u64, v132, !207
        v134 = const u64 0, !205
        store v134 to v133, !208
        v135 = load v131, !209
        v136 = const u64 1
        v137 = const u64 1
        v138 = get_elem_ptr v127, ptr { u64 }, v136, v137, !210
        store v135 to v138, !211
        v139 = load v127, !212
        br only_owner_0_msg_sender_10_block10(v139), !214

        only_owner_0_msg_sender_10_caller_address_12_end_while():
        v140 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !216
        v141 = load v140, !217
        v142 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !219
        store v141 to v142, !220
        v143 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !221
        v144 = const u64 0
        v145 = get_elem_ptr v143, ptr u64, v144, !222
        v146 = load v145, !223
        v147 = const u64 1, !215
        v148 = cmp eq v146 v147, !225
        cbr v148, only_owner_0_msg_sender_10_caller_address_12_block12(), only_owner_0_msg_sender_10_caller_address_12_block13(), !226

        only_owner_0_msg_sender_10_caller_address_12_block12():
        v149 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !227
        v150 = const u64 1
        v151 = const u64 1
        v152 = get_elem_ptr v149, ptr { b256 }, v150, v151, !228
        v153 = load v152, !229
        v154 = get_local ptr { b256 }, address, !231
        store v153 to v154, !232
        v155 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_30, !233
        v156 = const u64 0
        v157 = get_elem_ptr v155, ptr u64, v156, !234
        v158 = const u64 0, !201
        store v158 to v157, !235
        v159 = get_local ptr { b256 }, address, !237
        v160 = load v159, !238
        v161 = const u64 1
        v162 = const u64 0
        v163 = get_elem_ptr v155, ptr { b256 }, v161, v162, !239
        store v160 to v163, !240
        v164 = load v155, !241
        br only_owner_0_msg_sender_10_caller_address_12_block17(v164), !242

        only_owner_0_msg_sender_10_caller_address_12_block13():
        v165 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !243
        v166 = const u64 0
        v167 = get_elem_ptr v165, ptr u64, v166, !244
        v168 = load v167, !245
        v169 = const u64 0, !215
        v170 = cmp eq v168 v169, !247
        cbr v170, only_owner_0_msg_sender_10_caller_address_12_block14(), only_owner_0_msg_sender_10_caller_address_12_block15(), !248

        only_owner_0_msg_sender_10_caller_address_12_block14():
        v171 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_40, !249
        v172 = const u64 0
        v173 = get_elem_ptr v171, ptr u64, v172, !250
        v174 = const u64 1, !201
        store v174 to v173, !251
        v175 = get_local ptr { u64 }, __anon_5, !252
        v176 = const u64 0
        v177 = get_elem_ptr v175, ptr u64, v176, !253
        v178 = const u64 1, !205
        store v178 to v177, !254
        v179 = load v175, !255
        v180 = const u64 1
        v181 = const u64 1
        v182 = get_elem_ptr v171, ptr { u64 }, v180, v181, !256
        store v179 to v182, !257
        v183 = load v171, !258
        br only_owner_0_msg_sender_10_caller_address_12_block17(v183), !259

        only_owner_0_msg_sender_10_caller_address_12_block15():
        v184 = const u64 14757395258967588866, !218
        revert v184, !260

        only_owner_0_msg_sender_10_caller_address_12_block17(v185: { u64, ( { b256 } | { u64 } ) }):
        br only_owner_0_msg_sender_10_block10(v185), !261

        only_owner_0_msg_sender_10_block10(v186: { u64, ( { b256 } | { u64 } ) }):
        v187 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !263
        store v186 to v187, !264
        v188 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !265
        v189 = const u64 0
        v190 = get_elem_ptr v188, ptr u64, v189, !266
        v191 = load v190, !267
        v192 = const u64 1, !16
        v193 = cmp eq v191 v192, !269
        cbr v193, only_owner_0_msg_sender_10_block1(), only_owner_0_msg_sender_10_block2(), !270

        only_owner_0_msg_sender_10_block1():
        v194 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !271
        v195 = const u64 1
        v196 = const u64 1
        v197 = get_elem_ptr v194, ptr { u64 }, v195, v196, !272
        v198 = load v197, !273
        v199 = get_local ptr { u64 }, err, !275
        store v198 to v199, !276
        v200 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_000, !277
        v201 = const u64 0
        v202 = get_elem_ptr v200, ptr u64, v201, !278
        v203 = const u64 1, !201
        store v203 to v202, !279
        v204 = get_local ptr { u64 }, err, !281
        v205 = load v204, !282
        v206 = const u64 1
        v207 = const u64 1
        v208 = get_elem_ptr v200, ptr { u64 }, v206, v207, !283
        store v205 to v208, !284
        v209 = load v200, !285
        br only_owner_0_msg_sender_10_block6(v209), !286

        only_owner_0_msg_sender_10_block2():
        v210 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !287
        v211 = const u64 0
        v212 = get_elem_ptr v210, ptr u64, v211, !288
        v213 = load v212, !289
        v214 = const u64 0, !16
        v215 = cmp eq v213 v214, !291
        cbr v215, only_owner_0_msg_sender_10_block3(), only_owner_0_msg_sender_10_block4(), !292

        only_owner_0_msg_sender_10_block3():
        v216 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !293
        v217 = const u64 1
        v218 = const u64 0
        v219 = get_elem_ptr v216, ptr { b256 }, v217, v218, !294
        v220 = load v219, !295
        v221 = get_local ptr { b256 }, owner, !297
        store v220 to v221, !298
        v222 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_1, !299
        v223 = const u64 0
        v224 = get_elem_ptr v222, ptr u64, v223, !300
        v225 = const u64 0, !201
        store v225 to v224, !301
        v226 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !304
        v227 = const u64 0
        v228 = get_elem_ptr v226, ptr u64, v227, !305
        v229 = const u64 0, !303
        store v229 to v228, !306
        v230 = get_local ptr { b256 }, owner, !308
        v231 = load v230, !309
        v232 = const u64 1
        v233 = const u64 0
        v234 = get_elem_ptr v226, ptr { b256 }, v232, v233, !310
        store v231 to v234, !311
        v235 = load v226, !312
        v236 = const u64 1
        v237 = const u64 0
        v238 = get_elem_ptr v222, ptr { u64, ( { b256 } | { b256 } ) }, v236, v237, !313
        store v235 to v238, !314
        v239 = load v222, !315
        br only_owner_0_msg_sender_10_block6(v239), !316

        only_owner_0_msg_sender_10_block4():
        v240 = const u64 14757395258967588866, !262
        revert v240, !317

        only_owner_0_msg_sender_10_block6(v241: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        br only_owner_0_msg_sender_10_block8(v241), !318

        only_owner_0_msg_sender_10_block7():
        v242 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_3, !319
        v243 = const u64 0
        v244 = get_elem_ptr v242, ptr u64, v243, !320
        v245 = const u64 0, !201
        store v245 to v244, !321
        v246 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_4, !322
        v247 = const u64 0
        v248 = get_elem_ptr v246, ptr u64, v247, !323
        v249 = const u64 1, !303
        store v249 to v248, !324
        v250 = asm(r1) -> b256 r1, !327 {
            gm     r1 i2, !328
        }
        v251 = call from_22(v250), !330
        v252 = const u64 1
        v253 = const u64 1
        v254 = get_elem_ptr v246, ptr { b256 }, v252, v253, !331
        store v251 to v254, !332
        v255 = load v246, !333
        v256 = const u64 1
        v257 = const u64 0
        v258 = get_elem_ptr v242, ptr { u64, ( { b256 } | { b256 } ) }, v256, v257, !334
        store v255 to v258, !335
        v259 = load v242, !336
        br only_owner_0_msg_sender_10_block8(v259), !337

        only_owner_0_msg_sender_10_block8(v260: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v261 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !340
        store v260 to v261, !341
        v262 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !343
        v263 = const u64 0
        v264 = get_elem_ptr v262, ptr u64, v263, !344
        v265 = load v264, !345
        v266 = const u64 0, !342
        v267 = cmp eq v265 v266, !347
        cbr v267, only_owner_0_unwrap_9_block0(), only_owner_0_unwrap_9_block1(), !348

        only_owner_0_unwrap_9_block0():
        v268 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !349
        v269 = const u64 1
        v270 = const u64 0
        v271 = get_elem_ptr v268, ptr { u64, ( { b256 } | { b256 } ) }, v269, v270, !350
        v272 = load v271, !351
        v273 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !353
        store v272 to v273, !354
        v274 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !356
        v275 = load v274, !357
        v276 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_00, !358
        v277 = const u64 0
        v278 = get_elem_ptr v276, ptr u64, v277, !359
        v279 = const u64 0, !303
        store v279 to v278, !360
        v280 = get_local ptr { b256, u64, b256 }, __anon_02, !363
        v281 = const u64 0
        v282 = get_elem_ptr v280, ptr b256, v281, !364
        v283 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !362
        store v283 to v282, !365
        v284 = const u64 1
        v285 = get_elem_ptr v280, ptr u64, v284, !366
        v286 = const u64 0
        store v286 to v285, !367
        v287 = const u64 2
        v288 = get_elem_ptr v280, ptr b256, v287, !368
        v289 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d, !362
        store v289 to v288, !369
        v290 = load v280, !370
        v291 = call slot_51(v290), !374
        v292 = call offset_46(v290), !376
        v293 = const u64 8, !378
        v294 = mul v292, v293, !382
        v295 = const u64 32
        v296 = add v294, v295, !384
        v297 = const u64 31, !385
        v298 = add v296, v297, !387
        v299 = const u64 5, !388
        v300 = rsh v298, v299, !390
        v301 = const u64 4, !391
        v302 = mod v292, v301, !393
        v303 = const u64 8, !394
        v304 = mul v302, v303, !396
        v305 = add v304, v295, !398
        v306 = const u64 31, !399
        v307 = add v305, v306, !401
        v308 = const u64 5, !402
        v309 = rsh v307, v308, !404
        v310 = asm(input: v291) -> u256 input, !407 {
        }
        v311 = get_local ptr u256, offset_slot0, !409
        store v310 to v311, !410
        v312 = get_local ptr u256, offset_slot0, !412
        v313 = load v312, !413
        v314 = call as_u256_40(v300), !415
        v315 = call as_u256_40(v309), !417
        v316 = sub v314, v315, !419
        v317 = add v313, v316, !421
        v318 = get_local ptr u256, offset_slot0, !422
        store v317 to v318, !423
        v319 = get_local ptr u256, offset_slot0, !425
        v320 = load v319, !426
        v321 = asm(input: v320) -> b256 input, !429 {
        }
        v322 = get_local ptr { b256, u64, u64 }, __anon_0001, !431
        v323 = const u64 0
        v324 = get_elem_ptr v322, ptr b256, v323, !432
        store v321 to v324, !433
        v325 = const u64 1
        v326 = get_elem_ptr v322, ptr u64, v325, !434
        store v309 to v326, !435
        v327 = const u64 2
        v328 = get_elem_ptr v322, ptr u64, v327, !436
        store v302 to v328, !437
        v329 = load v322, !438
        v330 = get_local ptr { b256, u64, u64 }, __tuple_2, !440
        store v329 to v330, !441
        v331 = get_local ptr { b256, u64, u64 }, __tuple_2, !442
        v332 = load v331, !443
        v333 = get_local ptr { b256, u64, u64 }, __tuple_2_, !444
        store v332 to v333, !445
        v334 = get_local ptr { b256, u64, u64 }, __tuple_2_, !446
        v335 = const u64 0
        v336 = get_elem_ptr v334, ptr b256, v335, !447
        v337 = load v336, !448
        v338 = get_local ptr b256, offset_slot, !449
        store v337 to v338, !450
        v339 = get_local ptr { b256, u64, u64 }, __tuple_2_, !451
        v340 = const u64 1
        v341 = get_elem_ptr v339, ptr u64, v340, !452
        v342 = load v341, !453
        v343 = get_local ptr { b256, u64, u64 }, __tuple_2_, !454
        v344 = const u64 2
        v345 = get_elem_ptr v343, ptr u64, v344, !455
        v346 = load v345, !456
        v347 = const u64 32, !457
        v348 = mul v342, v347, !459
        v349 = const u64 8
        v350 = mul v349, v348, !463
        v351 = asm(size: v350, ptr) -> u64 ptr, !465 {
            aloc   size, !466
            move   ptr hp, !467
        }
        v352 = get_local ptr b256, offset_slot, !469
        v353 = load v352, !470
        v354 = get_local ptr b256, key_for_storage, !472
        store v353 to v354, !473
        v355 = int_to_ptr v351 to ptr b256, !474
        v356 = state_load_quad_word v355, key v354, v342, !475
        cbr v356, only_owner_0_get_owner_27_read_28_read_30_block3(), only_owner_0_get_owner_27_read_28_read_30_block4(), !476

        only_owner_0_unwrap_9_block1():
        v357 = const u64 0, !477
        revert v357, !479

        only_owner_0_get_owner_27_read_28_read_30_block3():
        v358 = get_local ptr { u64, ( () | b256 ) }, __anon_12, !480
        v359 = const u64 0
        v360 = get_elem_ptr v358, ptr u64, v359, !481
        v361 = const u64 1, !74
        store v361 to v360, !482
        v362 = const u64 8
        v363 = mul v362, v346, !484
        v364 = add v351, v363, !485
        v365 = asm(ptr: v364) -> b256 ptr, !489 {
        }
        v366 = const u64 1
        v367 = const u64 1
        v368 = get_elem_ptr v358, ptr b256, v366, v367, !490
        store v365 to v368, !491
        v369 = load v358, !492
        br only_owner_0_get_owner_27_read_28_read_30_block5(v369), !493

        only_owner_0_get_owner_27_read_28_read_30_block4():
        v370 = get_local ptr { u64, ( () | b256 ) }, __anon_21, !494
        v371 = const u64 0
        v372 = get_elem_ptr v370, ptr u64, v371, !495
        v373 = const u64 0, !74
        store v373 to v372, !496
        v374 = load v370, !497
        br only_owner_0_get_owner_27_read_28_read_30_block5(v374), !498

        only_owner_0_get_owner_27_read_28_read_30_block5(v375: { u64, ( () | b256 ) }):
        v376 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !501
        store v375 to v376, !502
        v377 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !504
        v378 = const u64 0
        v379 = get_elem_ptr v377, ptr u64, v378, !505
        v380 = load v379, !506
        v381 = const u64 1, !503
        v382 = cmp eq v380 v381, !508
        cbr v382, only_owner_0_get_owner_27_read_28_unwrap_29_block0(), only_owner_0_get_owner_27_read_28_unwrap_29_block1(), !509

        only_owner_0_get_owner_27_read_28_unwrap_29_block0():
        v383 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !510
        v384 = const u64 1
        v385 = const u64 1
        v386 = get_elem_ptr v383, ptr b256, v384, v385, !511
        v387 = load v386, !512
        v388 = get_local ptr b256, inner_value0, !514
        store v387 to v388, !515
        v389 = get_local ptr b256, inner_value0, !517
        v390 = load v389, !518
        v391 = call from_22(v390), !520
        v392 = const u64 1
        v393 = const u64 0
        v394 = get_elem_ptr v276, ptr { b256 }, v392, v393, !521
        store v391 to v394, !522
        v395 = load v276, !5
        v396 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_03, !525
        v397 = const u64 0
        v398 = get_elem_ptr v396, ptr { u64, ( { b256 } | { b256 } ) }, v397, !526
        store v275 to v398, !527
        v399 = const u64 1
        v400 = get_elem_ptr v396, ptr { u64, ( { b256 } | { b256 } ) }, v399, !528
        store v395 to v400, !529
        v401 = load v396, !530
        v402 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !532
        store v401 to v402, !533
        v403 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !534
        v404 = const u64 0
        v405 = get_elem_ptr v403, ptr { u64, ( { b256 } | { b256 } ) }, v404, !536
        v406 = const u64 0
        v407 = get_elem_ptr v405, ptr u64, v406, !537
        v408 = load v407, !538
        v409 = const u64 0, !535
        v410 = cmp eq v408 v409, !540
        cbr v410, only_owner_0_eq_4_block0(), only_owner_0_eq_4_block1(v410), !541

        only_owner_0_get_owner_27_read_28_unwrap_29_block1():
        v411 = const u64 0, !542
        revert v411, !544

        only_owner_0_eq_4_block0():
        v412 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !545
        v413 = const u64 1
        v414 = get_elem_ptr v412, ptr { u64, ( { b256 } | { b256 } ) }, v413, !546
        v415 = const u64 0
        v416 = get_elem_ptr v414, ptr u64, v415, !547
        v417 = load v416, !548
        v418 = const u64 0, !535
        v419 = cmp eq v417 v418, !549
        br only_owner_0_eq_4_block1(v419), !550

        only_owner_0_eq_4_block1(v420: bool):
        cbr v420, only_owner_0_eq_4_block2(), only_owner_0_eq_4_block3(), !551

        only_owner_0_eq_4_block2():
        v421 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !552
        v422 = const u64 0
        v423 = get_elem_ptr v421, ptr { u64, ( { b256 } | { b256 } ) }, v422, !553
        v424 = const u64 1
        v425 = const u64 0
        v426 = get_elem_ptr v423, ptr { b256 }, v424, v425, !554
        v427 = load v426, !555
        v428 = get_local ptr { b256 }, addr1, !557
        store v427 to v428, !558
        v429 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !559
        v430 = const u64 1
        v431 = get_elem_ptr v429, ptr { u64, ( { b256 } | { b256 } ) }, v430, !560
        v432 = const u64 1
        v433 = const u64 0
        v434 = get_elem_ptr v431, ptr { b256 }, v432, v433, !561
        v435 = load v434, !562
        v436 = get_local ptr { b256 }, addr2, !564
        store v435 to v436, !565
        v437 = get_local ptr { b256 }, addr1, !567
        v438 = load v437, !568
        v439 = get_local ptr { b256 }, addr2, !570
        v440 = load v439, !571
        v441 = call eq_6(v438, v440), !573
        br only_owner_0_eq_4_block9(v441), !574

        only_owner_0_eq_4_block3():
        v442 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !575
        v443 = const u64 0
        v444 = get_elem_ptr v442, ptr { u64, ( { b256 } | { b256 } ) }, v443, !577
        v445 = const u64 0
        v446 = get_elem_ptr v444, ptr u64, v445, !578
        v447 = load v446, !579
        v448 = const u64 1, !576
        v449 = cmp eq v447 v448, !581
        cbr v449, only_owner_0_eq_4_block4(), only_owner_0_eq_4_block5(v449), !582

        only_owner_0_eq_4_block4():
        v450 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !583
        v451 = const u64 1
        v452 = get_elem_ptr v450, ptr { u64, ( { b256 } | { b256 } ) }, v451, !584
        v453 = const u64 0
        v454 = get_elem_ptr v452, ptr u64, v453, !585
        v455 = load v454, !586
        v456 = const u64 1, !576
        v457 = cmp eq v455 v456, !587
        br only_owner_0_eq_4_block5(v457), !588

        only_owner_0_eq_4_block5(v458: bool):
        v459 = const bool false, !589
        cbr v458, only_owner_0_eq_4_block6(), only_owner_0_eq_4_block8(v459), !590

        only_owner_0_eq_4_block6():
        v460 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !591
        v461 = const u64 0
        v462 = get_elem_ptr v460, ptr { u64, ( { b256 } | { b256 } ) }, v461, !592
        v463 = const u64 1
        v464 = const u64 1
        v465 = get_elem_ptr v462, ptr { b256 }, v463, v464, !593
        v466 = load v465, !594
        v467 = get_local ptr { b256 }, id1, !596
        store v466 to v467, !597
        v468 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !598
        v469 = const u64 1
        v470 = get_elem_ptr v468, ptr { u64, ( { b256 } | { b256 } ) }, v469, !599
        v471 = const u64 1
        v472 = const u64 1
        v473 = get_elem_ptr v470, ptr { b256 }, v471, v472, !600
        v474 = load v473, !601
        v475 = get_local ptr { b256 }, id2, !603
        store v474 to v475, !604
        v476 = get_local ptr { b256 }, id1, !606
        v477 = load v476, !607
        v478 = get_local ptr { b256 }, id2, !609
        v479 = load v478, !610
        v480 = call eq_6(v477, v479), !612
        br only_owner_0_eq_4_block8(v480), !613

        only_owner_0_eq_4_block8(v481: bool):
        br only_owner_0_eq_4_block9(v481), !614

        only_owner_0_eq_4_block9(v482: bool):
        v483 = const bool false, !616
        v484 = cmp eq v482 v483, !620
        cbr v484, only_owner_0_assert_1_block0(), only_owner_0_assert_1_block1(), !621

        only_owner_0_assert_1_block0():
        v485 = const u64 18446744073709486084, !623
        revert v485, !625

        only_owner_0_assert_1_block1():
        v486 = get_local ptr { b256, u64, b256 }, __anon_0, !626
        v487 = const u64 0
        v488 = get_elem_ptr v486, ptr b256, v487
        v489 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c, !626
        store v489 to v488, !626
        v490 = const u64 1
        v491 = get_elem_ptr v486, ptr u64, v490
        v492 = const u64 0
        store v492 to v491, !626
        v493 = const u64 2
        v494 = get_elem_ptr v486, ptr b256, v493
        v495 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c, !626
        store v495 to v494, !626
        v496 = load v486
        v497 = call slot_51(v496), !629
        v498 = call offset_46(v496), !631
        v499 = const u64 8, !378
        v500 = mul v498, v499, !634
        v501 = const u64 8
        v502 = add v500, v501, !635
        v503 = const u64 31, !385
        v504 = add v502, v503, !636
        v505 = const u64 5, !388
        v506 = rsh v504, v505, !637
        v507 = const u64 4, !391
        v508 = mod v498, v507, !638
        v509 = asm(input: v497) -> u256 input, !639 {
        }
        v510 = get_local ptr u256, offset_slot00, !640
        store v509 to v510, !641
        v511 = get_local ptr u256, offset_slot00, !642
        v512 = load v511, !643
        v513 = call as_u256_40(v506), !644
        v514 = const u64 1, !645
        v515 = call as_u256_40(v514), !646
        v516 = sub v513, v515, !647
        v517 = add v512, v516, !648
        v518 = get_local ptr u256, offset_slot00, !649
        store v517 to v518, !650
        v519 = get_local ptr u256, offset_slot00, !651
        v520 = load v519, !652
        v521 = asm(input: v520) -> b256 input, !653 {
        }
        v522 = get_local ptr { b256, u64, u64 }, __anon_04, !654
        v523 = const u64 0
        v524 = get_elem_ptr v522, ptr b256, v523, !655
        store v521 to v524, !656
        v525 = const u64 1
        v526 = get_elem_ptr v522, ptr u64, v525, !657
        store v514 to v526, !658
        v527 = const u64 2
        v528 = get_elem_ptr v522, ptr u64, v527, !659
        store v508 to v528, !660
        v529 = load v522, !661
        v530 = get_local ptr { b256, u64, u64 }, __tuple_1, !663
        store v529 to v530, !664
        v531 = get_local ptr { b256, u64, u64 }, __tuple_1, !665
        v532 = load v531, !666
        v533 = get_local ptr { b256, u64, u64 }, __tuple_1_, !667
        store v532 to v533, !668
        v534 = get_local ptr { b256, u64, u64 }, __tuple_1_, !669
        v535 = const u64 0
        v536 = get_elem_ptr v534, ptr b256, v535, !670
        v537 = load v536, !671
        v538 = get_local ptr b256, offset_slot1, !672
        store v537 to v538, !673
        v539 = get_local ptr { b256, u64, u64 }, __tuple_1_, !674
        v540 = const u64 1
        v541 = get_elem_ptr v539, ptr u64, v540, !675
        v542 = load v541, !676
        v543 = get_local ptr { b256, u64, u64 }, __tuple_1_, !677
        v544 = const u64 2
        v545 = get_elem_ptr v543, ptr u64, v544, !678
        v546 = load v545, !679
        v547 = const u64 32, !680
        v548 = mul v542, v547, !682
        v549 = mul v349, v548, !684
        v550 = asm(size: v549, ptr) -> u64 ptr, !685 {
            aloc   size, !466
            move   ptr hp, !467
        }
        v551 = get_local ptr b256, offset_slot1, !687
        v552 = load v551, !688
        v553 = get_local ptr b256, key_for_storage0, !690
        store v552 to v553, !691
        v554 = int_to_ptr v550 to ptr b256, !692
        v555 = state_load_quad_word v554, key v553, v542, !693
        v556 = mul v362, v546, !695
        v557 = add v550, v556, !696
        v558 = asm(ptr: v557, val: new_value) {
            sw     ptr val i0, !697
        }
        v559 = get_local ptr b256, offset_slot1, !699
        v560 = load v559, !700
        v561 = get_local ptr b256, key_for_storage_, !702
        store v560 to v561, !703
        v562 = int_to_ptr v550 to ptr b256, !704
        v563 = state_store_quad_word v562, key v561, v542, !705
        v564 = const unit ()
        ret () v564
    }

    pub fn eq_6(self !707: { b256 }, other !708: { b256 }) -> bool, !709 {
        entry(self: { b256 }, other: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !710
        v4 = load v3
        v5 = ptr_to_int other to u64
        v6 = int_to_ptr v5 to ptr { b256 }
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr b256, v7, !710
        v9 = load v8
        v10 = cmp eq v4 v9, !711
        ret bool v10
    }

    pub fn input_type_17(index !712: u64) -> { u64 }, !713 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2

        entry(index: u64):
        v0 = gtf index, 512, !714
        v1 = bitcast v0 to u8, !714
        v2 = const u8 0, !715
        v3 = cmp eq v1 v2, !716
        cbr v3, block0(), block1(), !716

        block0():
        v4 = get_local ptr { u64 }, __anon_0, !717
        v5 = const u64 0
        v6 = get_elem_ptr v4, ptr u64, v5, !717
        v7 = const u64 0, !717
        store v7 to v6, !717
        v8 = load v4
        br block8(v8)

        block1():
        v9 = const u8 1, !718
        v10 = cmp eq v1 v9, !719
        cbr v10, block2(), block3(), !719

        block2():
        v11 = get_local ptr { u64 }, __anon_1, !717
        v12 = const u64 0
        v13 = get_elem_ptr v11, ptr u64, v12, !717
        v14 = const u64 1, !717
        store v14 to v13, !717
        v15 = load v11
        br block7(v15)

        block3():
        v16 = const u8 2, !720
        v17 = cmp eq v1 v16, !721
        cbr v17, block4(), block5(), !721

        block4():
        v18 = get_local ptr { u64 }, __anon_2, !717
        v19 = const u64 0
        v20 = get_elem_ptr v18, ptr u64, v19, !717
        v21 = const u64 2, !717
        store v21 to v20, !717
        v22 = load v18
        br block7(v22)

        block5():
        v23 = const u64 0, !722
        revert v23, !724

        block7(v24: { u64 }):
        br block8(v24)

        block8(v25: { u64 }):
        ret { u64 } v25
    }

    pub fn add_19(self !725: u64, other !726: u64) -> u64, !727 {
        entry(self: u64, other: u64):
        v0 = add self, other
        v1 = const u64 65535, !729
        v2 = cmp gt v0 v1
        cbr v2, block0(), block1(), !730

        block0():
        v3 = const u64 0, !731
        revert v3, !732

        block1():
        ret u64 v0
    }

    pub fn from_22(bits !733: b256) -> { b256 }, !734 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !735
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !735
        v3 = load v0
        ret { b256 } v3
    }

    pub fn unwrap_24(self !736: { u64, ( () | { b256 } ) }) -> { b256 }, !737 {
        local { u64, ( () | { b256 } ) } __matched_value_4
        local { b256 } inner_value

        entry(self: { u64, ( () | { b256 } ) }):
        v0 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !500
        store self to v0, !500
        v1 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !503
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !503
        v4 = load v3
        v5 = const u64 1, !503
        v6 = cmp eq v4 v5, !507
        cbr v6, block0(), block1(), !507

        block0():
        v7 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !503
        v8 = const u64 1
        v9 = const u64 1
        v10 = get_elem_ptr v7, ptr { b256 }, v8, v9
        v11 = load v10
        v12 = get_local ptr { b256 }, inner_value, !513
        store v11 to v12, !513
        v13 = get_local ptr { b256 }, inner_value, !516
        v14 = load v13
        ret { b256 } v14

        block1():
        v15 = const u64 0, !542
        revert v15, !738
    }

    pub fn as_u256_40(self !739: u64) -> u256, !740 {
        local { u64, u64, u64, u64 } __anon_0
        local { u64, u64, u64, u64 } input

        entry(self: u64):
        v0 = get_local ptr { u64, u64, u64, u64 }, __anon_0, !741
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr u64, v1, !741
        v3 = const u64 0, !742
        store v3 to v2, !741
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4, !741
        v6 = const u64 0, !743
        store v6 to v5, !741
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr u64, v7, !741
        v9 = const u64 0, !744
        store v9 to v8, !741
        v10 = const u64 3
        v11 = get_elem_ptr v0, ptr u64, v10, !741
        store self to v11, !741
        v12 = load v0
        v13 = get_local ptr { u64, u64, u64, u64 }, input, !745
        store v12 to v13, !745
        v14 = get_local ptr { u64, u64, u64, u64 }, input, !746
        v15 = asm(input: v14) -> u256 input, !747 {
        }
        ret u256 v15
    }

    pub fn offset_46(self !749: { b256, u64, b256 }) -> u64, !750 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 1
        v3 = get_elem_ptr v1, ptr u64, v2, !751
        v4 = load v3
        ret u64 v4
    }

    pub fn slot_51(self !752: { b256, u64, b256 }) -> b256, !753 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !754
        v4 = load v3
        ret b256 v4
    }
}

// IR: [const-demotion] Demotion of by-value constants to by-reference
contract {
    pub entry fn set_data_if_owner<c626c6e2>(new_value !1: u64) -> (), !4 {
        local { b256, u64, b256 } __anon_0
        local { u64, ( { b256 } | { b256 } ) } __anon_00
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_000
        local { u64, ( () | { b256 } ) } __anon_0000
        local { u64 } __anon_00000
        local { b256, u64, u64 } __anon_0001
        local { u64, ( () | { b256 } ) } __anon_01
        local { b256, u64, b256 } __anon_02
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __anon_03
        local { b256, u64, u64 } __anon_04
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_1
        local { u64, ( { b256 } | { u64 } ) } __anon_10
        local { u64 } __anon_100
        local { u64, ( () | { b256 } ) } __anon_11
        local { u64, ( () | b256 ) } __anon_12
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64 } __anon_20
        local { u64, ( () | b256 ) } __anon_21
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { u64 } ) } __anon_30
        local { u64, ( { b256 } | { b256 } ) } __anon_4
        local { u64, ( { b256 } | { u64 } ) } __anon_40
        local { u64 } __anon_5
        local b256 __const = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d
        local b256 __const0 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d
        local b256 __const1 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c
        local b256 __const2 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c
        local { u64, ( { b256 } | { u64 } ) } __matched_value_1
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __matched_value_12
        local { u64 } __matched_value_2
        local { u64, ( () | { b256 } ) } __matched_value_3
        local { u64 } __matched_value_30
        local { u64, ( () | { b256 } ) } __matched_value_31
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __matched_value_32
        local { u64, ( () | b256 ) } __matched_value_4
        local { u64 } __matched_value_6
        local { b256, u64, u64 } __tuple_1
        local { b256, u64, u64 } __tuple_1_
        local { b256, u64, u64 } __tuple_2
        local { b256, u64, u64 } __tuple_2_
        local { b256 } addr1
        local { b256 } addr2
        local { b256 } address
        local mut { u64, ( () | { b256 } ) } candidate
        local { u64 } err
        local { b256 } id1
        local { b256 } id2
        local { u64, ( { b256 } | { b256 } ) } inner_value
        local b256 inner_value0
        local b256 key_for_storage
        local b256 key_for_storage0
        local b256 key_for_storage_
        local b256 offset_slot
        local mut u256 offset_slot0
        local mut u256 offset_slot00
        local b256 offset_slot1
        local { b256 } owner
        local { u64, ( () | { b256 } ) } owner_of_input
        local { u64 } type_of_input

        entry(new_value: u64):
        v0 = asm(r1) -> bool r1, !11 {
            gm     r1 i1, !12
        }
        cbr v0, only_owner_0_msg_sender_10_block0(), only_owner_0_msg_sender_10_block7(), !13

        only_owner_0_msg_sender_10_block0():
        v1 = const u64 0, !15
        v2 = gtf v1, 1, !21
        v3 = bitcast v2 to u8, !22
        v4 = const u8 0, !23
        v5 = cmp eq v3 v4, !25
        cbr v5, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1(), !26

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0():
        v6 = get_local ptr { u64 }, __anon_00000, !28
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr u64, v7, !29
        v9 = const u64 0, !27
        store v9 to v8, !30
        v10 = load v6, !31
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v10), !32

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1():
        v11 = const u8 1, !33
        v12 = cmp eq v3 v11, !35
        cbr v12, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3(), !36

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2():
        v13 = get_local ptr { u64 }, __anon_100, !37
        v14 = const u64 0
        v15 = get_elem_ptr v13, ptr u64, v14, !38
        v16 = const u64 1, !27
        store v16 to v15, !39
        v17 = load v13, !40
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v17), !41

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3():
        v18 = const u64 0, !42
        revert v18, !46

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v19: { u64 }):
        v20 = get_local ptr { u64 }, __matched_value_30, !48
        store v19 to v20, !49
        v21 = get_local ptr { u64 }, __matched_value_30, !50
        v22 = const u64 0
        v23 = get_elem_ptr v21, ptr u64, v22, !51
        v24 = load v23, !52
        v25 = const u64 0, !19
        v26 = cmp eq v24 v25, !54
        cbr v26, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1(), !55

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0():
        v27 = const u64 0, !56
        v28 = gtf v27, 5, !58
        v29 = bitcast v28 to u64, !59
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v29), !60

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1():
        v30 = get_local ptr { u64 }, __matched_value_30, !61
        v31 = const u64 0
        v32 = get_elem_ptr v30, ptr u64, v31, !62
        v33 = load v32, !63
        v34 = const u64 1, !19
        v35 = cmp eq v33 v34, !65
        cbr v35, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3(), !66

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2():
        v36 = const u64 0, !67
        v37 = gtf v36, 259, !69
        v38 = bitcast v37 to u64, !70
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v38), !71

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3():
        v39 = const u64 14757395258967588866, !47
        revert v39, !72

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v40: u64):
        v41 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0000, !75
        v42 = const u64 0
        v43 = get_elem_ptr v41, ptr u64, v42, !76
        v44 = const u64 0, !74
        store v44 to v43, !77
        v45 = load v41, !78
        v46 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !80
        store v45 to v46, !81
        v47 = const u64 0, !82
        br only_owner_0_msg_sender_10_caller_address_12_while(v47), !83

        only_owner_0_msg_sender_10_caller_address_12_while(v48: u64):
        v49 = cmp lt v48 v40, !85
        cbr v49, only_owner_0_msg_sender_10_caller_address_12_while_body(), only_owner_0_msg_sender_10_caller_address_12_end_while(), !86

        only_owner_0_msg_sender_10_caller_address_12_while_body():
        v50 = asm(input: v48) -> u64 input, !90 {
        }
        v51 = call input_type_17(v50), !92
        v52 = get_local ptr { u64 }, type_of_input, !94
        store v51 to v52, !95
        v53 = get_local ptr { u64 }, type_of_input, !97
        v54 = load v53, !98
        v55 = get_local ptr { u64 }, __matched_value_2, !100
        store v54 to v55, !101
        v56 = get_local ptr { u64 }, __matched_value_2, !102
        v57 = const u64 0
        v58 = get_elem_ptr v56, ptr u64, v57, !103
        v59 = load v58, !104
        v60 = const u64 0, !96
        v61 = cmp eq v59 v60, !106
        v62 = const unit (), !107
        cbr v61, only_owner_0_msg_sender_10_caller_address_12_block5(v62), only_owner_0_msg_sender_10_caller_address_12_block1(), !108

        only_owner_0_msg_sender_10_caller_address_12_block1():
        v63 = get_local ptr { u64 }, __matched_value_2, !109
        v64 = const u64 0
        v65 = get_elem_ptr v63, ptr u64, v64, !110
        v66 = load v65, !111
        v67 = const u64 2, !96
        v68 = cmp eq v66 v67, !113
        v69 = const unit (), !114
        cbr v68, only_owner_0_msg_sender_10_caller_address_12_block5(v69), only_owner_0_msg_sender_10_caller_address_12_block3(), !115

        only_owner_0_msg_sender_10_caller_address_12_block3():
        v70 = const u64 1, !116
        v71 = call add_19(v48, v70), !118
        br only_owner_0_msg_sender_10_caller_address_12_while(v71), !119

        only_owner_0_msg_sender_10_caller_address_12_block5(v72: ()):
        v73 = asm(input: v48) -> u64 input, !121 {
        }
        v74 = call input_type_17(v73), !124
        v75 = get_local ptr { u64 }, __matched_value_6, !126
        store v74 to v75, !127
        v76 = get_local ptr { u64 }, __matched_value_6, !128
        v77 = const u64 0
        v78 = get_elem_ptr v76, ptr u64, v77, !129
        v79 = load v78, !130
        v80 = const u64 0, !123
        v81 = cmp eq v79 v80, !132
        cbr v81, only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0(), only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1(), !133

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0():
        v82 = get_local ptr { u64, ( () | { b256 } ) }, __anon_01, !134
        v83 = const u64 0
        v84 = get_elem_ptr v82, ptr u64, v83, !135
        v85 = const u64 1, !74
        store v85 to v84, !136
        v86 = gtf v73, 515, !138
        v87 = int_to_ptr v86 to ptr b256, !139
        v88 = load v87, !140
        v89 = call from_22(v88), !142
        v90 = const u64 1
        v91 = const u64 1
        v92 = get_elem_ptr v82, ptr { b256 }, v90, v91, !143
        store v89 to v92, !144
        v93 = load v82, !145
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v93), !146

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1():
        v94 = get_local ptr { u64, ( () | { b256 } ) }, __anon_11, !147
        v95 = const u64 0
        v96 = get_elem_ptr v94, ptr u64, v95, !148
        v97 = const u64 0, !74
        store v97 to v96, !149
        v98 = load v94, !150
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v98), !151

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v99: { u64, ( () | { b256 } ) }):
        v100 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !153
        store v99 to v100, !154
        v101 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !156
        v102 = load v101, !157
        v103 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !160
        store v102 to v103, !161
        v104 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !163
        v105 = const u64 0
        v106 = get_elem_ptr v104, ptr u64, v105, !164
        v107 = load v106, !165
        v108 = const u64 1, !162
        v109 = cmp eq v107 v108, !167
        v110 = const bool false, !168
        cbr v109, only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v110), only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1(), !169

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1():
        v111 = const bool true, !170
        br only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v111), !171

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v112: bool):
        cbr v112, only_owner_0_msg_sender_10_caller_address_12_block6(), only_owner_0_msg_sender_10_caller_address_12_block7(), !172

        only_owner_0_msg_sender_10_caller_address_12_block6():
        v113 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !174
        v114 = load v113, !175
        v115 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !177
        store v114 to v115, !178
        v116 = const u64 1, !179
        v117 = call add_19(v48, v116), !181
        br only_owner_0_msg_sender_10_caller_address_12_while(v117), !182

        only_owner_0_msg_sender_10_caller_address_12_block7():
        v118 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !184
        v119 = load v118, !185
        v120 = call unwrap_24(v119), !187
        v121 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !189
        v122 = load v121, !190
        v123 = call unwrap_24(v122), !192
        v124 = call eq_6(v120, v123), !194
        cbr v124, only_owner_0_msg_sender_10_caller_address_12_block9(), only_owner_0_msg_sender_10_caller_address_12_block10(), !195

        only_owner_0_msg_sender_10_caller_address_12_block9():
        v125 = const u64 1, !196
        v126 = call add_19(v48, v125), !198
        br only_owner_0_msg_sender_10_caller_address_12_while(v126), !199

        only_owner_0_msg_sender_10_caller_address_12_block10():
        v127 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_10, !202
        v128 = const u64 0
        v129 = get_elem_ptr v127, ptr u64, v128, !203
        v130 = const u64 1, !201
        store v130 to v129, !204
        v131 = get_local ptr { u64 }, __anon_20, !206
        v132 = const u64 0
        v133 = get_elem_ptr v131, ptr u64, v132, !207
        v134 = const u64 0, !205
        store v134 to v133, !208
        v135 = load v131, !209
        v136 = const u64 1
        v137 = const u64 1
        v138 = get_elem_ptr v127, ptr { u64 }, v136, v137, !210
        store v135 to v138, !211
        v139 = load v127, !212
        br only_owner_0_msg_sender_10_block10(v139), !214

        only_owner_0_msg_sender_10_caller_address_12_end_while():
        v140 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !216
        v141 = load v140, !217
        v142 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !219
        store v141 to v142, !220
        v143 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !221
        v144 = const u64 0
        v145 = get_elem_ptr v143, ptr u64, v144, !222
        v146 = load v145, !223
        v147 = const u64 1, !215
        v148 = cmp eq v146 v147, !225
        cbr v148, only_owner_0_msg_sender_10_caller_address_12_block12(), only_owner_0_msg_sender_10_caller_address_12_block13(), !226

        only_owner_0_msg_sender_10_caller_address_12_block12():
        v149 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !227
        v150 = const u64 1
        v151 = const u64 1
        v152 = get_elem_ptr v149, ptr { b256 }, v150, v151, !228
        v153 = load v152, !229
        v154 = get_local ptr { b256 }, address, !231
        store v153 to v154, !232
        v155 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_30, !233
        v156 = const u64 0
        v157 = get_elem_ptr v155, ptr u64, v156, !234
        v158 = const u64 0, !201
        store v158 to v157, !235
        v159 = get_local ptr { b256 }, address, !237
        v160 = load v159, !238
        v161 = const u64 1
        v162 = const u64 0
        v163 = get_elem_ptr v155, ptr { b256 }, v161, v162, !239
        store v160 to v163, !240
        v164 = load v155, !241
        br only_owner_0_msg_sender_10_caller_address_12_block17(v164), !242

        only_owner_0_msg_sender_10_caller_address_12_block13():
        v165 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !243
        v166 = const u64 0
        v167 = get_elem_ptr v165, ptr u64, v166, !244
        v168 = load v167, !245
        v169 = const u64 0, !215
        v170 = cmp eq v168 v169, !247
        cbr v170, only_owner_0_msg_sender_10_caller_address_12_block14(), only_owner_0_msg_sender_10_caller_address_12_block15(), !248

        only_owner_0_msg_sender_10_caller_address_12_block14():
        v171 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_40, !249
        v172 = const u64 0
        v173 = get_elem_ptr v171, ptr u64, v172, !250
        v174 = const u64 1, !201
        store v174 to v173, !251
        v175 = get_local ptr { u64 }, __anon_5, !252
        v176 = const u64 0
        v177 = get_elem_ptr v175, ptr u64, v176, !253
        v178 = const u64 1, !205
        store v178 to v177, !254
        v179 = load v175, !255
        v180 = const u64 1
        v181 = const u64 1
        v182 = get_elem_ptr v171, ptr { u64 }, v180, v181, !256
        store v179 to v182, !257
        v183 = load v171, !258
        br only_owner_0_msg_sender_10_caller_address_12_block17(v183), !259

        only_owner_0_msg_sender_10_caller_address_12_block15():
        v184 = const u64 14757395258967588866, !218
        revert v184, !260

        only_owner_0_msg_sender_10_caller_address_12_block17(v185: { u64, ( { b256 } | { u64 } ) }):
        br only_owner_0_msg_sender_10_block10(v185), !261

        only_owner_0_msg_sender_10_block10(v186: { u64, ( { b256 } | { u64 } ) }):
        v187 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !263
        store v186 to v187, !264
        v188 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !265
        v189 = const u64 0
        v190 = get_elem_ptr v188, ptr u64, v189, !266
        v191 = load v190, !267
        v192 = const u64 1, !16
        v193 = cmp eq v191 v192, !269
        cbr v193, only_owner_0_msg_sender_10_block1(), only_owner_0_msg_sender_10_block2(), !270

        only_owner_0_msg_sender_10_block1():
        v194 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !271
        v195 = const u64 1
        v196 = const u64 1
        v197 = get_elem_ptr v194, ptr { u64 }, v195, v196, !272
        v198 = load v197, !273
        v199 = get_local ptr { u64 }, err, !275
        store v198 to v199, !276
        v200 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_000, !277
        v201 = const u64 0
        v202 = get_elem_ptr v200, ptr u64, v201, !278
        v203 = const u64 1, !201
        store v203 to v202, !279
        v204 = get_local ptr { u64 }, err, !281
        v205 = load v204, !282
        v206 = const u64 1
        v207 = const u64 1
        v208 = get_elem_ptr v200, ptr { u64 }, v206, v207, !283
        store v205 to v208, !284
        v209 = load v200, !285
        br only_owner_0_msg_sender_10_block6(v209), !286

        only_owner_0_msg_sender_10_block2():
        v210 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !287
        v211 = const u64 0
        v212 = get_elem_ptr v210, ptr u64, v211, !288
        v213 = load v212, !289
        v214 = const u64 0, !16
        v215 = cmp eq v213 v214, !291
        cbr v215, only_owner_0_msg_sender_10_block3(), only_owner_0_msg_sender_10_block4(), !292

        only_owner_0_msg_sender_10_block3():
        v216 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !293
        v217 = const u64 1
        v218 = const u64 0
        v219 = get_elem_ptr v216, ptr { b256 }, v217, v218, !294
        v220 = load v219, !295
        v221 = get_local ptr { b256 }, owner, !297
        store v220 to v221, !298
        v222 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_1, !299
        v223 = const u64 0
        v224 = get_elem_ptr v222, ptr u64, v223, !300
        v225 = const u64 0, !201
        store v225 to v224, !301
        v226 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !304
        v227 = const u64 0
        v228 = get_elem_ptr v226, ptr u64, v227, !305
        v229 = const u64 0, !303
        store v229 to v228, !306
        v230 = get_local ptr { b256 }, owner, !308
        v231 = load v230, !309
        v232 = const u64 1
        v233 = const u64 0
        v234 = get_elem_ptr v226, ptr { b256 }, v232, v233, !310
        store v231 to v234, !311
        v235 = load v226, !312
        v236 = const u64 1
        v237 = const u64 0
        v238 = get_elem_ptr v222, ptr { u64, ( { b256 } | { b256 } ) }, v236, v237, !313
        store v235 to v238, !314
        v239 = load v222, !315
        br only_owner_0_msg_sender_10_block6(v239), !316

        only_owner_0_msg_sender_10_block4():
        v240 = const u64 14757395258967588866, !262
        revert v240, !317

        only_owner_0_msg_sender_10_block6(v241: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        br only_owner_0_msg_sender_10_block8(v241), !318

        only_owner_0_msg_sender_10_block7():
        v242 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_3, !319
        v243 = const u64 0
        v244 = get_elem_ptr v242, ptr u64, v243, !320
        v245 = const u64 0, !201
        store v245 to v244, !321
        v246 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_4, !322
        v247 = const u64 0
        v248 = get_elem_ptr v246, ptr u64, v247, !323
        v249 = const u64 1, !303
        store v249 to v248, !324
        v250 = asm(r1) -> b256 r1, !327 {
            gm     r1 i2, !328
        }
        v251 = call from_22(v250), !330
        v252 = const u64 1
        v253 = const u64 1
        v254 = get_elem_ptr v246, ptr { b256 }, v252, v253, !331
        store v251 to v254, !332
        v255 = load v246, !333
        v256 = const u64 1
        v257 = const u64 0
        v258 = get_elem_ptr v242, ptr { u64, ( { b256 } | { b256 } ) }, v256, v257, !334
        store v255 to v258, !335
        v259 = load v242, !336
        br only_owner_0_msg_sender_10_block8(v259), !337

        only_owner_0_msg_sender_10_block8(v260: { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v261 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !340
        store v260 to v261, !341
        v262 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !343
        v263 = const u64 0
        v264 = get_elem_ptr v262, ptr u64, v263, !344
        v265 = load v264, !345
        v266 = const u64 0, !342
        v267 = cmp eq v265 v266, !347
        cbr v267, only_owner_0_unwrap_9_block0(), only_owner_0_unwrap_9_block1(), !348

        only_owner_0_unwrap_9_block0():
        v268 = get_local ptr b256, __const
        v269 = load v268
        v270 = get_local ptr b256, __const0
        v271 = load v270
        v272 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !349
        v273 = const u64 1
        v274 = const u64 0
        v275 = get_elem_ptr v272, ptr { u64, ( { b256 } | { b256 } ) }, v273, v274, !350
        v276 = load v275, !351
        v277 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !353
        store v276 to v277, !354
        v278 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !356
        v279 = load v278, !357
        v280 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_00, !358
        v281 = const u64 0
        v282 = get_elem_ptr v280, ptr u64, v281, !359
        v283 = const u64 0, !303
        store v283 to v282, !360
        v284 = get_local ptr { b256, u64, b256 }, __anon_02, !363
        v285 = const u64 0
        v286 = get_elem_ptr v284, ptr b256, v285, !364
        store v269 to v286, !365
        v287 = const u64 1
        v288 = get_elem_ptr v284, ptr u64, v287, !366
        v289 = const u64 0
        store v289 to v288, !367
        v290 = const u64 2
        v291 = get_elem_ptr v284, ptr b256, v290, !368
        store v271 to v291, !369
        v292 = load v284, !370
        v293 = call slot_51(v292), !374
        v294 = call offset_46(v292), !376
        v295 = const u64 8, !378
        v296 = mul v294, v295, !382
        v297 = const u64 32
        v298 = add v296, v297, !384
        v299 = const u64 31, !385
        v300 = add v298, v299, !387
        v301 = const u64 5, !388
        v302 = rsh v300, v301, !390
        v303 = const u64 4, !391
        v304 = mod v294, v303, !393
        v305 = const u64 8, !394
        v306 = mul v304, v305, !396
        v307 = add v306, v297, !398
        v308 = const u64 31, !399
        v309 = add v307, v308, !401
        v310 = const u64 5, !402
        v311 = rsh v309, v310, !404
        v312 = asm(input: v293) -> u256 input, !407 {
        }
        v313 = get_local ptr u256, offset_slot0, !409
        store v312 to v313, !410
        v314 = get_local ptr u256, offset_slot0, !412
        v315 = load v314, !413
        v316 = call as_u256_40(v302), !415
        v317 = call as_u256_40(v311), !417
        v318 = sub v316, v317, !419
        v319 = add v315, v318, !421
        v320 = get_local ptr u256, offset_slot0, !422
        store v319 to v320, !423
        v321 = get_local ptr u256, offset_slot0, !425
        v322 = load v321, !426
        v323 = asm(input: v322) -> b256 input, !429 {
        }
        v324 = get_local ptr { b256, u64, u64 }, __anon_0001, !431
        v325 = const u64 0
        v326 = get_elem_ptr v324, ptr b256, v325, !432
        store v323 to v326, !433
        v327 = const u64 1
        v328 = get_elem_ptr v324, ptr u64, v327, !434
        store v311 to v328, !435
        v329 = const u64 2
        v330 = get_elem_ptr v324, ptr u64, v329, !436
        store v304 to v330, !437
        v331 = load v324, !438
        v332 = get_local ptr { b256, u64, u64 }, __tuple_2, !440
        store v331 to v332, !441
        v333 = get_local ptr { b256, u64, u64 }, __tuple_2, !442
        v334 = load v333, !443
        v335 = get_local ptr { b256, u64, u64 }, __tuple_2_, !444
        store v334 to v335, !445
        v336 = get_local ptr { b256, u64, u64 }, __tuple_2_, !446
        v337 = const u64 0
        v338 = get_elem_ptr v336, ptr b256, v337, !447
        v339 = load v338, !448
        v340 = get_local ptr b256, offset_slot, !449
        store v339 to v340, !450
        v341 = get_local ptr { b256, u64, u64 }, __tuple_2_, !451
        v342 = const u64 1
        v343 = get_elem_ptr v341, ptr u64, v342, !452
        v344 = load v343, !453
        v345 = get_local ptr { b256, u64, u64 }, __tuple_2_, !454
        v346 = const u64 2
        v347 = get_elem_ptr v345, ptr u64, v346, !455
        v348 = load v347, !456
        v349 = const u64 32, !457
        v350 = mul v344, v349, !459
        v351 = const u64 8
        v352 = mul v351, v350, !463
        v353 = asm(size: v352, ptr) -> u64 ptr, !465 {
            aloc   size, !466
            move   ptr hp, !467
        }
        v354 = get_local ptr b256, offset_slot, !469
        v355 = load v354, !470
        v356 = get_local ptr b256, key_for_storage, !472
        store v355 to v356, !473
        v357 = int_to_ptr v353 to ptr b256, !474
        v358 = state_load_quad_word v357, key v356, v344, !475
        cbr v358, only_owner_0_get_owner_27_read_28_read_30_block3(), only_owner_0_get_owner_27_read_28_read_30_block4(), !476

        only_owner_0_unwrap_9_block1():
        v359 = const u64 0, !477
        revert v359, !479

        only_owner_0_get_owner_27_read_28_read_30_block3():
        v360 = get_local ptr { u64, ( () | b256 ) }, __anon_12, !480
        v361 = const u64 0
        v362 = get_elem_ptr v360, ptr u64, v361, !481
        v363 = const u64 1, !74
        store v363 to v362, !482
        v364 = const u64 8
        v365 = mul v364, v348, !484
        v366 = add v353, v365, !485
        v367 = asm(ptr: v366) -> b256 ptr, !489 {
        }
        v368 = const u64 1
        v369 = const u64 1
        v370 = get_elem_ptr v360, ptr b256, v368, v369, !490
        store v367 to v370, !491
        v371 = load v360, !492
        br only_owner_0_get_owner_27_read_28_read_30_block5(v371), !493

        only_owner_0_get_owner_27_read_28_read_30_block4():
        v372 = get_local ptr { u64, ( () | b256 ) }, __anon_21, !494
        v373 = const u64 0
        v374 = get_elem_ptr v372, ptr u64, v373, !495
        v375 = const u64 0, !74
        store v375 to v374, !496
        v376 = load v372, !497
        br only_owner_0_get_owner_27_read_28_read_30_block5(v376), !498

        only_owner_0_get_owner_27_read_28_read_30_block5(v377: { u64, ( () | b256 ) }):
        v378 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !501
        store v377 to v378, !502
        v379 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !504
        v380 = const u64 0
        v381 = get_elem_ptr v379, ptr u64, v380, !505
        v382 = load v381, !506
        v383 = const u64 1, !503
        v384 = cmp eq v382 v383, !508
        cbr v384, only_owner_0_get_owner_27_read_28_unwrap_29_block0(), only_owner_0_get_owner_27_read_28_unwrap_29_block1(), !509

        only_owner_0_get_owner_27_read_28_unwrap_29_block0():
        v385 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !510
        v386 = const u64 1
        v387 = const u64 1
        v388 = get_elem_ptr v385, ptr b256, v386, v387, !511
        v389 = load v388, !512
        v390 = get_local ptr b256, inner_value0, !514
        store v389 to v390, !515
        v391 = get_local ptr b256, inner_value0, !517
        v392 = load v391, !518
        v393 = call from_22(v392), !520
        v394 = const u64 1
        v395 = const u64 0
        v396 = get_elem_ptr v280, ptr { b256 }, v394, v395, !521
        store v393 to v396, !522
        v397 = load v280, !5
        v398 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_03, !525
        v399 = const u64 0
        v400 = get_elem_ptr v398, ptr { u64, ( { b256 } | { b256 } ) }, v399, !526
        store v279 to v400, !527
        v401 = const u64 1
        v402 = get_elem_ptr v398, ptr { u64, ( { b256 } | { b256 } ) }, v401, !528
        store v397 to v402, !529
        v403 = load v398, !530
        v404 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !532
        store v403 to v404, !533
        v405 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !534
        v406 = const u64 0
        v407 = get_elem_ptr v405, ptr { u64, ( { b256 } | { b256 } ) }, v406, !536
        v408 = const u64 0
        v409 = get_elem_ptr v407, ptr u64, v408, !537
        v410 = load v409, !538
        v411 = const u64 0, !535
        v412 = cmp eq v410 v411, !540
        cbr v412, only_owner_0_eq_4_block0(), only_owner_0_eq_4_block1(v412), !541

        only_owner_0_get_owner_27_read_28_unwrap_29_block1():
        v413 = const u64 0, !542
        revert v413, !544

        only_owner_0_eq_4_block0():
        v414 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !545
        v415 = const u64 1
        v416 = get_elem_ptr v414, ptr { u64, ( { b256 } | { b256 } ) }, v415, !546
        v417 = const u64 0
        v418 = get_elem_ptr v416, ptr u64, v417, !547
        v419 = load v418, !548
        v420 = const u64 0, !535
        v421 = cmp eq v419 v420, !549
        br only_owner_0_eq_4_block1(v421), !550

        only_owner_0_eq_4_block1(v422: bool):
        cbr v422, only_owner_0_eq_4_block2(), only_owner_0_eq_4_block3(), !551

        only_owner_0_eq_4_block2():
        v423 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !552
        v424 = const u64 0
        v425 = get_elem_ptr v423, ptr { u64, ( { b256 } | { b256 } ) }, v424, !553
        v426 = const u64 1
        v427 = const u64 0
        v428 = get_elem_ptr v425, ptr { b256 }, v426, v427, !554
        v429 = load v428, !555
        v430 = get_local ptr { b256 }, addr1, !557
        store v429 to v430, !558
        v431 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !559
        v432 = const u64 1
        v433 = get_elem_ptr v431, ptr { u64, ( { b256 } | { b256 } ) }, v432, !560
        v434 = const u64 1
        v435 = const u64 0
        v436 = get_elem_ptr v433, ptr { b256 }, v434, v435, !561
        v437 = load v436, !562
        v438 = get_local ptr { b256 }, addr2, !564
        store v437 to v438, !565
        v439 = get_local ptr { b256 }, addr1, !567
        v440 = load v439, !568
        v441 = get_local ptr { b256 }, addr2, !570
        v442 = load v441, !571
        v443 = call eq_6(v440, v442), !573
        br only_owner_0_eq_4_block9(v443), !574

        only_owner_0_eq_4_block3():
        v444 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !575
        v445 = const u64 0
        v446 = get_elem_ptr v444, ptr { u64, ( { b256 } | { b256 } ) }, v445, !577
        v447 = const u64 0
        v448 = get_elem_ptr v446, ptr u64, v447, !578
        v449 = load v448, !579
        v450 = const u64 1, !576
        v451 = cmp eq v449 v450, !581
        cbr v451, only_owner_0_eq_4_block4(), only_owner_0_eq_4_block5(v451), !582

        only_owner_0_eq_4_block4():
        v452 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !583
        v453 = const u64 1
        v454 = get_elem_ptr v452, ptr { u64, ( { b256 } | { b256 } ) }, v453, !584
        v455 = const u64 0
        v456 = get_elem_ptr v454, ptr u64, v455, !585
        v457 = load v456, !586
        v458 = const u64 1, !576
        v459 = cmp eq v457 v458, !587
        br only_owner_0_eq_4_block5(v459), !588

        only_owner_0_eq_4_block5(v460: bool):
        v461 = const bool false, !589
        cbr v460, only_owner_0_eq_4_block6(), only_owner_0_eq_4_block8(v461), !590

        only_owner_0_eq_4_block6():
        v462 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !591
        v463 = const u64 0
        v464 = get_elem_ptr v462, ptr { u64, ( { b256 } | { b256 } ) }, v463, !592
        v465 = const u64 1
        v466 = const u64 1
        v467 = get_elem_ptr v464, ptr { b256 }, v465, v466, !593
        v468 = load v467, !594
        v469 = get_local ptr { b256 }, id1, !596
        store v468 to v469, !597
        v470 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !598
        v471 = const u64 1
        v472 = get_elem_ptr v470, ptr { u64, ( { b256 } | { b256 } ) }, v471, !599
        v473 = const u64 1
        v474 = const u64 1
        v475 = get_elem_ptr v472, ptr { b256 }, v473, v474, !600
        v476 = load v475, !601
        v477 = get_local ptr { b256 }, id2, !603
        store v476 to v477, !604
        v478 = get_local ptr { b256 }, id1, !606
        v479 = load v478, !607
        v480 = get_local ptr { b256 }, id2, !609
        v481 = load v480, !610
        v482 = call eq_6(v479, v481), !612
        br only_owner_0_eq_4_block8(v482), !613

        only_owner_0_eq_4_block8(v483: bool):
        br only_owner_0_eq_4_block9(v483), !614

        only_owner_0_eq_4_block9(v484: bool):
        v485 = const bool false, !616
        v486 = cmp eq v484 v485, !620
        cbr v486, only_owner_0_assert_1_block0(), only_owner_0_assert_1_block1(), !621

        only_owner_0_assert_1_block0():
        v487 = const u64 18446744073709486084, !623
        revert v487, !625

        only_owner_0_assert_1_block1():
        v488 = get_local ptr b256, __const1
        v489 = load v488
        v490 = get_local ptr b256, __const2
        v491 = load v490
        v492 = get_local ptr { b256, u64, b256 }, __anon_0, !626
        v493 = const u64 0
        v494 = get_elem_ptr v492, ptr b256, v493
        store v489 to v494, !626
        v495 = const u64 1
        v496 = get_elem_ptr v492, ptr u64, v495
        v497 = const u64 0
        store v497 to v496, !626
        v498 = const u64 2
        v499 = get_elem_ptr v492, ptr b256, v498
        store v491 to v499, !626
        v500 = load v492
        v501 = call slot_51(v500), !629
        v502 = call offset_46(v500), !631
        v503 = const u64 8, !378
        v504 = mul v502, v503, !634
        v505 = const u64 8
        v506 = add v504, v505, !635
        v507 = const u64 31, !385
        v508 = add v506, v507, !636
        v509 = const u64 5, !388
        v510 = rsh v508, v509, !637
        v511 = const u64 4, !391
        v512 = mod v502, v511, !638
        v513 = asm(input: v501) -> u256 input, !639 {
        }
        v514 = get_local ptr u256, offset_slot00, !640
        store v513 to v514, !641
        v515 = get_local ptr u256, offset_slot00, !642
        v516 = load v515, !643
        v517 = call as_u256_40(v510), !644
        v518 = const u64 1, !645
        v519 = call as_u256_40(v518), !646
        v520 = sub v517, v519, !647
        v521 = add v516, v520, !648
        v522 = get_local ptr u256, offset_slot00, !649
        store v521 to v522, !650
        v523 = get_local ptr u256, offset_slot00, !651
        v524 = load v523, !652
        v525 = asm(input: v524) -> b256 input, !653 {
        }
        v526 = get_local ptr { b256, u64, u64 }, __anon_04, !654
        v527 = const u64 0
        v528 = get_elem_ptr v526, ptr b256, v527, !655
        store v525 to v528, !656
        v529 = const u64 1
        v530 = get_elem_ptr v526, ptr u64, v529, !657
        store v518 to v530, !658
        v531 = const u64 2
        v532 = get_elem_ptr v526, ptr u64, v531, !659
        store v512 to v532, !660
        v533 = load v526, !661
        v534 = get_local ptr { b256, u64, u64 }, __tuple_1, !663
        store v533 to v534, !664
        v535 = get_local ptr { b256, u64, u64 }, __tuple_1, !665
        v536 = load v535, !666
        v537 = get_local ptr { b256, u64, u64 }, __tuple_1_, !667
        store v536 to v537, !668
        v538 = get_local ptr { b256, u64, u64 }, __tuple_1_, !669
        v539 = const u64 0
        v540 = get_elem_ptr v538, ptr b256, v539, !670
        v541 = load v540, !671
        v542 = get_local ptr b256, offset_slot1, !672
        store v541 to v542, !673
        v543 = get_local ptr { b256, u64, u64 }, __tuple_1_, !674
        v544 = const u64 1
        v545 = get_elem_ptr v543, ptr u64, v544, !675
        v546 = load v545, !676
        v547 = get_local ptr { b256, u64, u64 }, __tuple_1_, !677
        v548 = const u64 2
        v549 = get_elem_ptr v547, ptr u64, v548, !678
        v550 = load v549, !679
        v551 = const u64 32, !680
        v552 = mul v546, v551, !682
        v553 = mul v351, v552, !684
        v554 = asm(size: v553, ptr) -> u64 ptr, !685 {
            aloc   size, !466
            move   ptr hp, !467
        }
        v555 = get_local ptr b256, offset_slot1, !687
        v556 = load v555, !688
        v557 = get_local ptr b256, key_for_storage0, !690
        store v556 to v557, !691
        v558 = int_to_ptr v554 to ptr b256, !692
        v559 = state_load_quad_word v558, key v557, v546, !693
        v560 = mul v364, v550, !695
        v561 = add v554, v560, !696
        v562 = asm(ptr: v561, val: new_value) {
            sw     ptr val i0, !697
        }
        v563 = get_local ptr b256, offset_slot1, !699
        v564 = load v563, !700
        v565 = get_local ptr b256, key_for_storage_, !702
        store v564 to v565, !703
        v566 = int_to_ptr v554 to ptr b256, !704
        v567 = state_store_quad_word v566, key v565, v546, !705
        v568 = const unit ()
        ret () v568
    }

    pub fn eq_6(self !707: { b256 }, other !708: { b256 }) -> bool, !709 {
        entry(self: { b256 }, other: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !710
        v4 = load v3
        v5 = ptr_to_int other to u64
        v6 = int_to_ptr v5 to ptr { b256 }
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr b256, v7, !710
        v9 = load v8
        v10 = cmp eq v4 v9, !711
        ret bool v10
    }

    pub fn input_type_17(index !712: u64) -> { u64 }, !713 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2

        entry(index: u64):
        v0 = gtf index, 512, !714
        v1 = bitcast v0 to u8, !714
        v2 = const u8 0, !715
        v3 = cmp eq v1 v2, !716
        cbr v3, block0(), block1(), !716

        block0():
        v4 = get_local ptr { u64 }, __anon_0, !717
        v5 = const u64 0
        v6 = get_elem_ptr v4, ptr u64, v5, !717
        v7 = const u64 0, !717
        store v7 to v6, !717
        v8 = load v4
        br block8(v8)

        block1():
        v9 = const u8 1, !718
        v10 = cmp eq v1 v9, !719
        cbr v10, block2(), block3(), !719

        block2():
        v11 = get_local ptr { u64 }, __anon_1, !717
        v12 = const u64 0
        v13 = get_elem_ptr v11, ptr u64, v12, !717
        v14 = const u64 1, !717
        store v14 to v13, !717
        v15 = load v11
        br block7(v15)

        block3():
        v16 = const u8 2, !720
        v17 = cmp eq v1 v16, !721
        cbr v17, block4(), block5(), !721

        block4():
        v18 = get_local ptr { u64 }, __anon_2, !717
        v19 = const u64 0
        v20 = get_elem_ptr v18, ptr u64, v19, !717
        v21 = const u64 2, !717
        store v21 to v20, !717
        v22 = load v18
        br block7(v22)

        block5():
        v23 = const u64 0, !722
        revert v23, !724

        block7(v24: { u64 }):
        br block8(v24)

        block8(v25: { u64 }):
        ret { u64 } v25
    }

    pub fn add_19(self !725: u64, other !726: u64) -> u64, !727 {
        entry(self: u64, other: u64):
        v0 = add self, other
        v1 = const u64 65535, !729
        v2 = cmp gt v0 v1
        cbr v2, block0(), block1(), !730

        block0():
        v3 = const u64 0, !731
        revert v3, !732

        block1():
        ret u64 v0
    }

    pub fn from_22(bits !733: b256) -> { b256 }, !734 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !735
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !735
        v3 = load v0
        ret { b256 } v3
    }

    pub fn unwrap_24(self !736: { u64, ( () | { b256 } ) }) -> { b256 }, !737 {
        local { u64, ( () | { b256 } ) } __matched_value_4
        local { b256 } inner_value

        entry(self: { u64, ( () | { b256 } ) }):
        v0 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !500
        store self to v0, !500
        v1 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !503
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !503
        v4 = load v3
        v5 = const u64 1, !503
        v6 = cmp eq v4 v5, !507
        cbr v6, block0(), block1(), !507

        block0():
        v7 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !503
        v8 = const u64 1
        v9 = const u64 1
        v10 = get_elem_ptr v7, ptr { b256 }, v8, v9
        v11 = load v10
        v12 = get_local ptr { b256 }, inner_value, !513
        store v11 to v12, !513
        v13 = get_local ptr { b256 }, inner_value, !516
        v14 = load v13
        ret { b256 } v14

        block1():
        v15 = const u64 0, !542
        revert v15, !738
    }

    pub fn as_u256_40(self !739: u64) -> u256, !740 {
        local { u64, u64, u64, u64 } __anon_0
        local { u64, u64, u64, u64 } input

        entry(self: u64):
        v0 = get_local ptr { u64, u64, u64, u64 }, __anon_0, !741
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr u64, v1, !741
        v3 = const u64 0, !742
        store v3 to v2, !741
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4, !741
        v6 = const u64 0, !743
        store v6 to v5, !741
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr u64, v7, !741
        v9 = const u64 0, !744
        store v9 to v8, !741
        v10 = const u64 3
        v11 = get_elem_ptr v0, ptr u64, v10, !741
        store self to v11, !741
        v12 = load v0
        v13 = get_local ptr { u64, u64, u64, u64 }, input, !745
        store v12 to v13, !745
        v14 = get_local ptr { u64, u64, u64, u64 }, input, !746
        v15 = asm(input: v14) -> u256 input, !747 {
        }
        ret u256 v15
    }

    pub fn offset_46(self !749: { b256, u64, b256 }) -> u64, !750 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 1
        v3 = get_elem_ptr v1, ptr u64, v2, !751
        v4 = load v3
        ret u64 v4
    }

    pub fn slot_51(self !752: { b256, u64, b256 }) -> b256, !753 {
        entry(self: { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !754
        v4 = load v3
        ret b256 v4
    }
}

// IR: [arg-demotion] Demotion of by-value function arguments to by-reference
contract {
    pub entry fn set_data_if_owner<c626c6e2>(new_value !1: u64) -> (), !4 {
        local { b256, u64, b256 } __anon_0
        local { u64, ( { b256 } | { b256 } ) } __anon_00
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_000
        local { u64, ( () | { b256 } ) } __anon_0000
        local { u64 } __anon_00000
        local { b256, u64, u64 } __anon_0001
        local { u64, ( () | { b256 } ) } __anon_01
        local { b256, u64, b256 } __anon_02
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __anon_03
        local { b256, u64, u64 } __anon_04
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_1
        local { u64, ( { b256 } | { u64 } ) } __anon_10
        local { u64 } __anon_100
        local { u64, ( () | { b256 } ) } __anon_11
        local { u64, ( () | b256 ) } __anon_12
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64 } __anon_20
        local { u64, ( () | b256 ) } __anon_21
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { u64 } ) } __anon_30
        local { u64, ( { b256 } | { b256 } ) } __anon_4
        local { u64, ( { b256 } | { u64 } ) } __anon_40
        local { u64 } __anon_5
        local b256 __const = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d
        local b256 __const0 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d
        local b256 __const1 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c
        local b256 __const2 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c
        local { u64, ( { b256 } | { u64 } ) } __matched_value_1
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __matched_value_12
        local { u64 } __matched_value_2
        local { u64, ( () | { b256 } ) } __matched_value_3
        local { u64 } __matched_value_30
        local { u64, ( () | { b256 } ) } __matched_value_31
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __matched_value_32
        local { u64, ( () | b256 ) } __matched_value_4
        local { u64 } __matched_value_6
        local { b256 } __tmp_arg
        local { b256 } __tmp_arg0
        local { b256 } __tmp_arg1
        local { b256, u64, b256 } __tmp_arg10
        local { b256, u64, b256 } __tmp_arg11
        local { b256, u64, b256 } __tmp_arg12
        local { b256, u64, b256 } __tmp_arg13
        local { b256 } __tmp_arg2
        local { b256 } __tmp_arg3
        local { b256 } __tmp_arg4
        local b256 __tmp_arg5
        local b256 __tmp_arg6
        local b256 __tmp_arg7
        local { u64, ( () | { b256 } ) } __tmp_arg8
        local { u64, ( () | { b256 } ) } __tmp_arg9
        local { u64 } __tmp_block_arg
        local { u64, ( () | { b256 } ) } __tmp_block_arg0
        local { u64, ( { b256 } | { u64 } ) } __tmp_block_arg1
        local { u64, ( { b256 } | { u64 } ) } __tmp_block_arg2
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __tmp_block_arg3
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __tmp_block_arg4
        local { u64, ( () | b256 ) } __tmp_block_arg5
        local { b256, u64, u64 } __tuple_1
        local { b256, u64, u64 } __tuple_1_
        local { b256, u64, u64 } __tuple_2
        local { b256, u64, u64 } __tuple_2_
        local { b256 } addr1
        local { b256 } addr2
        local { b256 } address
        local mut { u64, ( () | { b256 } ) } candidate
        local { u64 } err
        local { b256 } id1
        local { b256 } id2
        local { u64, ( { b256 } | { b256 } ) } inner_value
        local b256 inner_value0
        local b256 key_for_storage
        local b256 key_for_storage0
        local b256 key_for_storage_
        local b256 offset_slot
        local mut u256 offset_slot0
        local mut u256 offset_slot00
        local b256 offset_slot1
        local { b256 } owner
        local { u64, ( () | { b256 } ) } owner_of_input
        local { u64 } type_of_input

        entry(new_value: u64):
        v0 = asm(r1) -> bool r1, !11 {
            gm     r1 i1, !12
        }
        cbr v0, only_owner_0_msg_sender_10_block0(), only_owner_0_msg_sender_10_block7(), !13

        only_owner_0_msg_sender_10_block0():
        v1 = const u64 0, !15
        v2 = gtf v1, 1, !21
        v3 = bitcast v2 to u8, !22
        v4 = const u8 0, !23
        v5 = cmp eq v3 v4, !25
        cbr v5, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1(), !26

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0():
        v6 = get_local ptr { u64 }, __anon_00000, !28
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr u64, v7, !29
        v9 = const u64 0, !27
        store v9 to v8, !30
        v10 = load v6, !31
        v11 = get_local ptr { u64 }, __tmp_block_arg
        store v10 to v11
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v11), !32

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1():
        v12 = const u8 1, !33
        v13 = cmp eq v3 v12, !35
        cbr v13, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3(), !36

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2():
        v14 = get_local ptr { u64 }, __anon_100, !37
        v15 = const u64 0
        v16 = get_elem_ptr v14, ptr u64, v15, !38
        v17 = const u64 1, !27
        store v17 to v16, !39
        v18 = load v14, !40
        v19 = get_local ptr { u64 }, __tmp_block_arg
        store v18 to v19
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v19), !41

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3():
        v20 = const u64 0, !42
        revert v20, !46

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v21: ptr { u64 }):
        v22 = load v21
        v23 = get_local ptr { u64 }, __matched_value_30, !48
        store v22 to v23, !49
        v24 = get_local ptr { u64 }, __matched_value_30, !50
        v25 = const u64 0
        v26 = get_elem_ptr v24, ptr u64, v25, !51
        v27 = load v26, !52
        v28 = const u64 0, !19
        v29 = cmp eq v27 v28, !54
        cbr v29, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1(), !55

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0():
        v30 = const u64 0, !56
        v31 = gtf v30, 5, !58
        v32 = bitcast v31 to u64, !59
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v32), !60

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1():
        v33 = get_local ptr { u64 }, __matched_value_30, !61
        v34 = const u64 0
        v35 = get_elem_ptr v33, ptr u64, v34, !62
        v36 = load v35, !63
        v37 = const u64 1, !19
        v38 = cmp eq v36 v37, !65
        cbr v38, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3(), !66

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2():
        v39 = const u64 0, !67
        v40 = gtf v39, 259, !69
        v41 = bitcast v40 to u64, !70
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v41), !71

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3():
        v42 = const u64 14757395258967588866, !47
        revert v42, !72

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v43: u64):
        v44 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0000, !75
        v45 = const u64 0
        v46 = get_elem_ptr v44, ptr u64, v45, !76
        v47 = const u64 0, !74
        store v47 to v46, !77
        v48 = load v44, !78
        v49 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !80
        store v48 to v49, !81
        v50 = const u64 0, !82
        br only_owner_0_msg_sender_10_caller_address_12_while(v50), !83

        only_owner_0_msg_sender_10_caller_address_12_while(v51: u64):
        v52 = cmp lt v51 v43, !85
        cbr v52, only_owner_0_msg_sender_10_caller_address_12_while_body(), only_owner_0_msg_sender_10_caller_address_12_end_while(), !86

        only_owner_0_msg_sender_10_caller_address_12_while_body():
        v53 = asm(input: v51) -> u64 input, !90 {
        }
        v54 = call input_type_17(v53), !92
        v55 = get_local ptr { u64 }, type_of_input, !94
        store v54 to v55, !95
        v56 = get_local ptr { u64 }, type_of_input, !97
        v57 = load v56, !98
        v58 = get_local ptr { u64 }, __matched_value_2, !100
        store v57 to v58, !101
        v59 = get_local ptr { u64 }, __matched_value_2, !102
        v60 = const u64 0
        v61 = get_elem_ptr v59, ptr u64, v60, !103
        v62 = load v61, !104
        v63 = const u64 0, !96
        v64 = cmp eq v62 v63, !106
        v65 = const unit (), !107
        cbr v64, only_owner_0_msg_sender_10_caller_address_12_block5(v65), only_owner_0_msg_sender_10_caller_address_12_block1(), !108

        only_owner_0_msg_sender_10_caller_address_12_block1():
        v66 = get_local ptr { u64 }, __matched_value_2, !109
        v67 = const u64 0
        v68 = get_elem_ptr v66, ptr u64, v67, !110
        v69 = load v68, !111
        v70 = const u64 2, !96
        v71 = cmp eq v69 v70, !113
        v72 = const unit (), !114
        cbr v71, only_owner_0_msg_sender_10_caller_address_12_block5(v72), only_owner_0_msg_sender_10_caller_address_12_block3(), !115

        only_owner_0_msg_sender_10_caller_address_12_block3():
        v73 = const u64 1, !116
        v74 = call add_19(v51, v73), !118
        br only_owner_0_msg_sender_10_caller_address_12_while(v74), !119

        only_owner_0_msg_sender_10_caller_address_12_block5(v75: ()):
        v76 = asm(input: v51) -> u64 input, !121 {
        }
        v77 = call input_type_17(v76), !124
        v78 = get_local ptr { u64 }, __matched_value_6, !126
        store v77 to v78, !127
        v79 = get_local ptr { u64 }, __matched_value_6, !128
        v80 = const u64 0
        v81 = get_elem_ptr v79, ptr u64, v80, !129
        v82 = load v81, !130
        v83 = const u64 0, !123
        v84 = cmp eq v82 v83, !132
        cbr v84, only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0(), only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1(), !133

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0():
        v85 = get_local ptr { u64, ( () | { b256 } ) }, __anon_01, !134
        v86 = const u64 0
        v87 = get_elem_ptr v85, ptr u64, v86, !135
        v88 = const u64 1, !74
        store v88 to v87, !136
        v89 = gtf v76, 515, !138
        v90 = int_to_ptr v89 to ptr b256, !139
        v91 = load v90, !140
        v92 = get_local ptr b256, __tmp_arg5
        store v91 to v92
        v93 = call from_22(v92)
        v94 = const u64 1
        v95 = const u64 1
        v96 = get_elem_ptr v85, ptr { b256 }, v94, v95, !141
        store v93 to v96, !142
        v97 = load v85, !143
        v98 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_block_arg0
        store v97 to v98
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v98), !144

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1():
        v99 = get_local ptr { u64, ( () | { b256 } ) }, __anon_11, !145
        v100 = const u64 0
        v101 = get_elem_ptr v99, ptr u64, v100, !146
        v102 = const u64 0, !74
        store v102 to v101, !147
        v103 = load v99, !148
        v104 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_block_arg0
        store v103 to v104
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v104), !149

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v105: ptr { u64, ( () | { b256 } ) }):
        v106 = load v105
        v107 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !151
        store v106 to v107, !152
        v108 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !154
        v109 = load v108, !155
        v110 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !158
        store v109 to v110, !159
        v111 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !161
        v112 = const u64 0
        v113 = get_elem_ptr v111, ptr u64, v112, !162
        v114 = load v113, !163
        v115 = const u64 1, !160
        v116 = cmp eq v114 v115, !165
        v117 = const bool false, !166
        cbr v116, only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v117), only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1(), !167

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1():
        v118 = const bool true, !168
        br only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v118), !169

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v119: bool):
        cbr v119, only_owner_0_msg_sender_10_caller_address_12_block6(), only_owner_0_msg_sender_10_caller_address_12_block7(), !170

        only_owner_0_msg_sender_10_caller_address_12_block6():
        v120 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !172
        v121 = load v120, !173
        v122 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !175
        store v121 to v122, !176
        v123 = const u64 1, !177
        v124 = call add_19(v51, v123), !179
        br only_owner_0_msg_sender_10_caller_address_12_while(v124), !180

        only_owner_0_msg_sender_10_caller_address_12_block7():
        v125 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !182
        v126 = load v125, !183
        v127 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_arg8
        store v126 to v127
        v128 = call unwrap_24(v127)
        v129 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !185
        v130 = load v129, !186
        v131 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_arg9
        store v130 to v131
        v132 = call unwrap_24(v131)
        v133 = get_local ptr { b256 }, __tmp_arg
        store v128 to v133
        v134 = get_local ptr { b256 }, __tmp_arg0
        store v132 to v134
        v135 = call eq_6(v133, v134)
        cbr v135, only_owner_0_msg_sender_10_caller_address_12_block9(), only_owner_0_msg_sender_10_caller_address_12_block10(), !188

        only_owner_0_msg_sender_10_caller_address_12_block9():
        v136 = const u64 1, !189
        v137 = call add_19(v51, v136), !191
        br only_owner_0_msg_sender_10_caller_address_12_while(v137), !192

        only_owner_0_msg_sender_10_caller_address_12_block10():
        v138 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_10, !195
        v139 = const u64 0
        v140 = get_elem_ptr v138, ptr u64, v139, !196
        v141 = const u64 1, !194
        store v141 to v140, !197
        v142 = get_local ptr { u64 }, __anon_20, !199
        v143 = const u64 0
        v144 = get_elem_ptr v142, ptr u64, v143, !200
        v145 = const u64 0, !198
        store v145 to v144, !201
        v146 = load v142, !202
        v147 = const u64 1
        v148 = const u64 1
        v149 = get_elem_ptr v138, ptr { u64 }, v147, v148, !203
        store v146 to v149, !204
        v150 = load v138, !205
        v151 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg2
        store v150 to v151
        br only_owner_0_msg_sender_10_block10(v151), !207

        only_owner_0_msg_sender_10_caller_address_12_end_while():
        v152 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !209
        v153 = load v152, !210
        v154 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !212
        store v153 to v154, !213
        v155 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !214
        v156 = const u64 0
        v157 = get_elem_ptr v155, ptr u64, v156, !215
        v158 = load v157, !216
        v159 = const u64 1, !208
        v160 = cmp eq v158 v159, !218
        cbr v160, only_owner_0_msg_sender_10_caller_address_12_block12(), only_owner_0_msg_sender_10_caller_address_12_block13(), !219

        only_owner_0_msg_sender_10_caller_address_12_block12():
        v161 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !220
        v162 = const u64 1
        v163 = const u64 1
        v164 = get_elem_ptr v161, ptr { b256 }, v162, v163, !221
        v165 = load v164, !222
        v166 = get_local ptr { b256 }, address, !224
        store v165 to v166, !225
        v167 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_30, !226
        v168 = const u64 0
        v169 = get_elem_ptr v167, ptr u64, v168, !227
        v170 = const u64 0, !194
        store v170 to v169, !228
        v171 = get_local ptr { b256 }, address, !230
        v172 = load v171, !231
        v173 = const u64 1
        v174 = const u64 0
        v175 = get_elem_ptr v167, ptr { b256 }, v173, v174, !232
        store v172 to v175, !233
        v176 = load v167, !234
        v177 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg1
        store v176 to v177
        br only_owner_0_msg_sender_10_caller_address_12_block17(v177), !235

        only_owner_0_msg_sender_10_caller_address_12_block13():
        v178 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !236
        v179 = const u64 0
        v180 = get_elem_ptr v178, ptr u64, v179, !237
        v181 = load v180, !238
        v182 = const u64 0, !208
        v183 = cmp eq v181 v182, !240
        cbr v183, only_owner_0_msg_sender_10_caller_address_12_block14(), only_owner_0_msg_sender_10_caller_address_12_block15(), !241

        only_owner_0_msg_sender_10_caller_address_12_block14():
        v184 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_40, !242
        v185 = const u64 0
        v186 = get_elem_ptr v184, ptr u64, v185, !243
        v187 = const u64 1, !194
        store v187 to v186, !244
        v188 = get_local ptr { u64 }, __anon_5, !245
        v189 = const u64 0
        v190 = get_elem_ptr v188, ptr u64, v189, !246
        v191 = const u64 1, !198
        store v191 to v190, !247
        v192 = load v188, !248
        v193 = const u64 1
        v194 = const u64 1
        v195 = get_elem_ptr v184, ptr { u64 }, v193, v194, !249
        store v192 to v195, !250
        v196 = load v184, !251
        v197 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg1
        store v196 to v197
        br only_owner_0_msg_sender_10_caller_address_12_block17(v197), !252

        only_owner_0_msg_sender_10_caller_address_12_block15():
        v198 = const u64 14757395258967588866, !211
        revert v198, !253

        only_owner_0_msg_sender_10_caller_address_12_block17(v199: ptr { u64, ( { b256 } | { u64 } ) }):
        v200 = load v199
        v201 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg2
        store v200 to v201
        br only_owner_0_msg_sender_10_block10(v201), !254

        only_owner_0_msg_sender_10_block10(v202: ptr { u64, ( { b256 } | { u64 } ) }):
        v203 = load v202
        v204 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !256
        store v203 to v204, !257
        v205 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !258
        v206 = const u64 0
        v207 = get_elem_ptr v205, ptr u64, v206, !259
        v208 = load v207, !260
        v209 = const u64 1, !16
        v210 = cmp eq v208 v209, !262
        cbr v210, only_owner_0_msg_sender_10_block1(), only_owner_0_msg_sender_10_block2(), !263

        only_owner_0_msg_sender_10_block1():
        v211 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !264
        v212 = const u64 1
        v213 = const u64 1
        v214 = get_elem_ptr v211, ptr { u64 }, v212, v213, !265
        v215 = load v214, !266
        v216 = get_local ptr { u64 }, err, !268
        store v215 to v216, !269
        v217 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_000, !270
        v218 = const u64 0
        v219 = get_elem_ptr v217, ptr u64, v218, !271
        v220 = const u64 1, !194
        store v220 to v219, !272
        v221 = get_local ptr { u64 }, err, !274
        v222 = load v221, !275
        v223 = const u64 1
        v224 = const u64 1
        v225 = get_elem_ptr v217, ptr { u64 }, v223, v224, !276
        store v222 to v225, !277
        v226 = load v217, !278
        v227 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg3
        store v226 to v227
        br only_owner_0_msg_sender_10_block6(v227), !279

        only_owner_0_msg_sender_10_block2():
        v228 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !280
        v229 = const u64 0
        v230 = get_elem_ptr v228, ptr u64, v229, !281
        v231 = load v230, !282
        v232 = const u64 0, !16
        v233 = cmp eq v231 v232, !284
        cbr v233, only_owner_0_msg_sender_10_block3(), only_owner_0_msg_sender_10_block4(), !285

        only_owner_0_msg_sender_10_block3():
        v234 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !286
        v235 = const u64 1
        v236 = const u64 0
        v237 = get_elem_ptr v234, ptr { b256 }, v235, v236, !287
        v238 = load v237, !288
        v239 = get_local ptr { b256 }, owner, !290
        store v238 to v239, !291
        v240 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_1, !292
        v241 = const u64 0
        v242 = get_elem_ptr v240, ptr u64, v241, !293
        v243 = const u64 0, !194
        store v243 to v242, !294
        v244 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !297
        v245 = const u64 0
        v246 = get_elem_ptr v244, ptr u64, v245, !298
        v247 = const u64 0, !296
        store v247 to v246, !299
        v248 = get_local ptr { b256 }, owner, !301
        v249 = load v248, !302
        v250 = const u64 1
        v251 = const u64 0
        v252 = get_elem_ptr v244, ptr { b256 }, v250, v251, !303
        store v249 to v252, !304
        v253 = load v244, !305
        v254 = const u64 1
        v255 = const u64 0
        v256 = get_elem_ptr v240, ptr { u64, ( { b256 } | { b256 } ) }, v254, v255, !306
        store v253 to v256, !307
        v257 = load v240, !308
        v258 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg3
        store v257 to v258
        br only_owner_0_msg_sender_10_block6(v258), !309

        only_owner_0_msg_sender_10_block4():
        v259 = const u64 14757395258967588866, !255
        revert v259, !310

        only_owner_0_msg_sender_10_block6(v260: ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v261 = load v260
        v262 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg4
        store v261 to v262
        br only_owner_0_msg_sender_10_block8(v262), !311

        only_owner_0_msg_sender_10_block7():
        v263 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_3, !312
        v264 = const u64 0
        v265 = get_elem_ptr v263, ptr u64, v264, !313
        v266 = const u64 0, !194
        store v266 to v265, !314
        v267 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_4, !315
        v268 = const u64 0
        v269 = get_elem_ptr v267, ptr u64, v268, !316
        v270 = const u64 1, !296
        store v270 to v269, !317
        v271 = asm(r1) -> b256 r1, !320 {
            gm     r1 i2, !321
        }
        v272 = get_local ptr b256, __tmp_arg6
        store v271 to v272
        v273 = call from_22(v272)
        v274 = const u64 1
        v275 = const u64 1
        v276 = get_elem_ptr v267, ptr { b256 }, v274, v275, !322
        store v273 to v276, !323
        v277 = load v267, !324
        v278 = const u64 1
        v279 = const u64 0
        v280 = get_elem_ptr v263, ptr { u64, ( { b256 } | { b256 } ) }, v278, v279, !325
        store v277 to v280, !326
        v281 = load v263, !327
        v282 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg4
        store v281 to v282
        br only_owner_0_msg_sender_10_block8(v282), !328

        only_owner_0_msg_sender_10_block8(v283: ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v284 = load v283
        v285 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !331
        store v284 to v285, !332
        v286 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !334
        v287 = const u64 0
        v288 = get_elem_ptr v286, ptr u64, v287, !335
        v289 = load v288, !336
        v290 = const u64 0, !333
        v291 = cmp eq v289 v290, !338
        cbr v291, only_owner_0_unwrap_9_block0(), only_owner_0_unwrap_9_block1(), !339

        only_owner_0_unwrap_9_block0():
        v292 = get_local ptr b256, __const
        v293 = load v292
        v294 = get_local ptr b256, __const0
        v295 = load v294
        v296 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !340
        v297 = const u64 1
        v298 = const u64 0
        v299 = get_elem_ptr v296, ptr { u64, ( { b256 } | { b256 } ) }, v297, v298, !341
        v300 = load v299, !342
        v301 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !344
        store v300 to v301, !345
        v302 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !347
        v303 = load v302, !348
        v304 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_00, !349
        v305 = const u64 0
        v306 = get_elem_ptr v304, ptr u64, v305, !350
        v307 = const u64 0, !296
        store v307 to v306, !351
        v308 = get_local ptr { b256, u64, b256 }, __anon_02, !354
        v309 = const u64 0
        v310 = get_elem_ptr v308, ptr b256, v309, !355
        store v293 to v310, !356
        v311 = const u64 1
        v312 = get_elem_ptr v308, ptr u64, v311, !357
        v313 = const u64 0
        store v313 to v312, !358
        v314 = const u64 2
        v315 = get_elem_ptr v308, ptr b256, v314, !359
        store v295 to v315, !360
        v316 = load v308, !361
        v317 = get_local ptr { b256, u64, b256 }, __tmp_arg12
        store v316 to v317
        v318 = call slot_51(v317)
        v319 = get_local ptr { b256, u64, b256 }, __tmp_arg10
        store v316 to v319
        v320 = call offset_46(v319)
        v321 = const u64 8, !363
        v322 = mul v320, v321, !369
        v323 = const u64 32
        v324 = add v322, v323, !371
        v325 = const u64 31, !372
        v326 = add v324, v325, !374
        v327 = const u64 5, !375
        v328 = rsh v326, v327, !377
        v329 = const u64 4, !378
        v330 = mod v320, v329, !380
        v331 = const u64 8, !381
        v332 = mul v330, v331, !383
        v333 = add v332, v323, !385
        v334 = const u64 31, !386
        v335 = add v333, v334, !388
        v336 = const u64 5, !389
        v337 = rsh v335, v336, !391
        v338 = asm(input: v318) -> u256 input, !394 {
        }
        v339 = get_local ptr u256, offset_slot0, !396
        store v338 to v339, !397
        v340 = get_local ptr u256, offset_slot0, !399
        v341 = load v340, !400
        v342 = call as_u256_40(v328), !402
        v343 = call as_u256_40(v337), !404
        v344 = sub v342, v343, !406
        v345 = add v341, v344, !408
        v346 = get_local ptr u256, offset_slot0, !409
        store v345 to v346, !410
        v347 = get_local ptr u256, offset_slot0, !412
        v348 = load v347, !413
        v349 = asm(input: v348) -> b256 input, !416 {
        }
        v350 = get_local ptr { b256, u64, u64 }, __anon_0001, !418
        v351 = const u64 0
        v352 = get_elem_ptr v350, ptr b256, v351, !419
        store v349 to v352, !420
        v353 = const u64 1
        v354 = get_elem_ptr v350, ptr u64, v353, !421
        store v337 to v354, !422
        v355 = const u64 2
        v356 = get_elem_ptr v350, ptr u64, v355, !423
        store v330 to v356, !424
        v357 = load v350, !425
        v358 = get_local ptr { b256, u64, u64 }, __tuple_2, !427
        store v357 to v358, !428
        v359 = get_local ptr { b256, u64, u64 }, __tuple_2, !429
        v360 = load v359, !430
        v361 = get_local ptr { b256, u64, u64 }, __tuple_2_, !431
        store v360 to v361, !432
        v362 = get_local ptr { b256, u64, u64 }, __tuple_2_, !433
        v363 = const u64 0
        v364 = get_elem_ptr v362, ptr b256, v363, !434
        v365 = load v364, !435
        v366 = get_local ptr b256, offset_slot, !436
        store v365 to v366, !437
        v367 = get_local ptr { b256, u64, u64 }, __tuple_2_, !438
        v368 = const u64 1
        v369 = get_elem_ptr v367, ptr u64, v368, !439
        v370 = load v369, !440
        v371 = get_local ptr { b256, u64, u64 }, __tuple_2_, !441
        v372 = const u64 2
        v373 = get_elem_ptr v371, ptr u64, v372, !442
        v374 = load v373, !443
        v375 = const u64 32, !444
        v376 = mul v370, v375, !446
        v377 = const u64 8
        v378 = mul v377, v376, !450
        v379 = asm(size: v378, ptr) -> u64 ptr, !452 {
            aloc   size, !453
            move   ptr hp, !454
        }
        v380 = get_local ptr b256, offset_slot, !456
        v381 = load v380, !457
        v382 = get_local ptr b256, key_for_storage, !459
        store v381 to v382, !460
        v383 = int_to_ptr v379 to ptr b256, !461
        v384 = state_load_quad_word v383, key v382, v370, !462
        cbr v384, only_owner_0_get_owner_27_read_28_read_30_block3(), only_owner_0_get_owner_27_read_28_read_30_block4(), !463

        only_owner_0_unwrap_9_block1():
        v385 = const u64 0, !464
        revert v385, !466

        only_owner_0_get_owner_27_read_28_read_30_block3():
        v386 = get_local ptr { u64, ( () | b256 ) }, __anon_12, !467
        v387 = const u64 0
        v388 = get_elem_ptr v386, ptr u64, v387, !468
        v389 = const u64 1, !74
        store v389 to v388, !469
        v390 = const u64 8
        v391 = mul v390, v374, !471
        v392 = add v379, v391, !472
        v393 = asm(ptr: v392) -> b256 ptr, !476 {
        }
        v394 = const u64 1
        v395 = const u64 1
        v396 = get_elem_ptr v386, ptr b256, v394, v395, !477
        store v393 to v396, !478
        v397 = load v386, !479
        v398 = get_local ptr { u64, ( () | b256 ) }, __tmp_block_arg5
        store v397 to v398
        br only_owner_0_get_owner_27_read_28_read_30_block5(v398), !480

        only_owner_0_get_owner_27_read_28_read_30_block4():
        v399 = get_local ptr { u64, ( () | b256 ) }, __anon_21, !481
        v400 = const u64 0
        v401 = get_elem_ptr v399, ptr u64, v400, !482
        v402 = const u64 0, !74
        store v402 to v401, !483
        v403 = load v399, !484
        v404 = get_local ptr { u64, ( () | b256 ) }, __tmp_block_arg5
        store v403 to v404
        br only_owner_0_get_owner_27_read_28_read_30_block5(v404), !485

        only_owner_0_get_owner_27_read_28_read_30_block5(v405: ptr { u64, ( () | b256 ) }):
        v406 = load v405
        v407 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !488
        store v406 to v407, !489
        v408 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !491
        v409 = const u64 0
        v410 = get_elem_ptr v408, ptr u64, v409, !492
        v411 = load v410, !493
        v412 = const u64 1, !490
        v413 = cmp eq v411 v412, !495
        cbr v413, only_owner_0_get_owner_27_read_28_unwrap_29_block0(), only_owner_0_get_owner_27_read_28_unwrap_29_block1(), !496

        only_owner_0_get_owner_27_read_28_unwrap_29_block0():
        v414 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !497
        v415 = const u64 1
        v416 = const u64 1
        v417 = get_elem_ptr v414, ptr b256, v415, v416, !498
        v418 = load v417, !499
        v419 = get_local ptr b256, inner_value0, !501
        store v418 to v419, !502
        v420 = get_local ptr b256, inner_value0, !504
        v421 = load v420, !505
        v422 = get_local ptr b256, __tmp_arg7
        store v421 to v422
        v423 = call from_22(v422)
        v424 = const u64 1
        v425 = const u64 0
        v426 = get_elem_ptr v304, ptr { b256 }, v424, v425, !506
        store v423 to v426, !507
        v427 = load v304, !5
        v428 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_03, !510
        v429 = const u64 0
        v430 = get_elem_ptr v428, ptr { u64, ( { b256 } | { b256 } ) }, v429, !511
        store v303 to v430, !512
        v431 = const u64 1
        v432 = get_elem_ptr v428, ptr { u64, ( { b256 } | { b256 } ) }, v431, !513
        store v427 to v432, !514
        v433 = load v428, !515
        v434 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !517
        store v433 to v434, !518
        v435 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !519
        v436 = const u64 0
        v437 = get_elem_ptr v435, ptr { u64, ( { b256 } | { b256 } ) }, v436, !521
        v438 = const u64 0
        v439 = get_elem_ptr v437, ptr u64, v438, !522
        v440 = load v439, !523
        v441 = const u64 0, !520
        v442 = cmp eq v440 v441, !525
        cbr v442, only_owner_0_eq_4_block0(), only_owner_0_eq_4_block1(v442), !526

        only_owner_0_get_owner_27_read_28_unwrap_29_block1():
        v443 = const u64 0, !527
        revert v443, !529

        only_owner_0_eq_4_block0():
        v444 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !530
        v445 = const u64 1
        v446 = get_elem_ptr v444, ptr { u64, ( { b256 } | { b256 } ) }, v445, !531
        v447 = const u64 0
        v448 = get_elem_ptr v446, ptr u64, v447, !532
        v449 = load v448, !533
        v450 = const u64 0, !520
        v451 = cmp eq v449 v450, !534
        br only_owner_0_eq_4_block1(v451), !535

        only_owner_0_eq_4_block1(v452: bool):
        cbr v452, only_owner_0_eq_4_block2(), only_owner_0_eq_4_block3(), !536

        only_owner_0_eq_4_block2():
        v453 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !537
        v454 = const u64 0
        v455 = get_elem_ptr v453, ptr { u64, ( { b256 } | { b256 } ) }, v454, !538
        v456 = const u64 1
        v457 = const u64 0
        v458 = get_elem_ptr v455, ptr { b256 }, v456, v457, !539
        v459 = load v458, !540
        v460 = get_local ptr { b256 }, addr1, !542
        store v459 to v460, !543
        v461 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !544
        v462 = const u64 1
        v463 = get_elem_ptr v461, ptr { u64, ( { b256 } | { b256 } ) }, v462, !545
        v464 = const u64 1
        v465 = const u64 0
        v466 = get_elem_ptr v463, ptr { b256 }, v464, v465, !546
        v467 = load v466, !547
        v468 = get_local ptr { b256 }, addr2, !549
        store v467 to v468, !550
        v469 = get_local ptr { b256 }, addr1, !552
        v470 = load v469, !553
        v471 = get_local ptr { b256 }, addr2, !555
        v472 = load v471, !556
        v473 = get_local ptr { b256 }, __tmp_arg1
        store v470 to v473
        v474 = get_local ptr { b256 }, __tmp_arg2
        store v472 to v474
        v475 = call eq_6(v473, v474)
        br only_owner_0_eq_4_block9(v475), !557

        only_owner_0_eq_4_block3():
        v476 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !558
        v477 = const u64 0
        v478 = get_elem_ptr v476, ptr { u64, ( { b256 } | { b256 } ) }, v477, !560
        v479 = const u64 0
        v480 = get_elem_ptr v478, ptr u64, v479, !561
        v481 = load v480, !562
        v482 = const u64 1, !559
        v483 = cmp eq v481 v482, !564
        cbr v483, only_owner_0_eq_4_block4(), only_owner_0_eq_4_block5(v483), !565

        only_owner_0_eq_4_block4():
        v484 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !566
        v485 = const u64 1
        v486 = get_elem_ptr v484, ptr { u64, ( { b256 } | { b256 } ) }, v485, !567
        v487 = const u64 0
        v488 = get_elem_ptr v486, ptr u64, v487, !568
        v489 = load v488, !569
        v490 = const u64 1, !559
        v491 = cmp eq v489 v490, !570
        br only_owner_0_eq_4_block5(v491), !571

        only_owner_0_eq_4_block5(v492: bool):
        v493 = const bool false, !572
        cbr v492, only_owner_0_eq_4_block6(), only_owner_0_eq_4_block8(v493), !573

        only_owner_0_eq_4_block6():
        v494 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !574
        v495 = const u64 0
        v496 = get_elem_ptr v494, ptr { u64, ( { b256 } | { b256 } ) }, v495, !575
        v497 = const u64 1
        v498 = const u64 1
        v499 = get_elem_ptr v496, ptr { b256 }, v497, v498, !576
        v500 = load v499, !577
        v501 = get_local ptr { b256 }, id1, !579
        store v500 to v501, !580
        v502 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !581
        v503 = const u64 1
        v504 = get_elem_ptr v502, ptr { u64, ( { b256 } | { b256 } ) }, v503, !582
        v505 = const u64 1
        v506 = const u64 1
        v507 = get_elem_ptr v504, ptr { b256 }, v505, v506, !583
        v508 = load v507, !584
        v509 = get_local ptr { b256 }, id2, !586
        store v508 to v509, !587
        v510 = get_local ptr { b256 }, id1, !589
        v511 = load v510, !590
        v512 = get_local ptr { b256 }, id2, !592
        v513 = load v512, !593
        v514 = get_local ptr { b256 }, __tmp_arg3
        store v511 to v514
        v515 = get_local ptr { b256 }, __tmp_arg4
        store v513 to v515
        v516 = call eq_6(v514, v515)
        br only_owner_0_eq_4_block8(v516), !594

        only_owner_0_eq_4_block8(v517: bool):
        br only_owner_0_eq_4_block9(v517), !595

        only_owner_0_eq_4_block9(v518: bool):
        v519 = const bool false, !597
        v520 = cmp eq v518 v519, !601
        cbr v520, only_owner_0_assert_1_block0(), only_owner_0_assert_1_block1(), !602

        only_owner_0_assert_1_block0():
        v521 = const u64 18446744073709486084, !604
        revert v521, !606

        only_owner_0_assert_1_block1():
        v522 = get_local ptr b256, __const1
        v523 = load v522
        v524 = get_local ptr b256, __const2
        v525 = load v524
        v526 = get_local ptr { b256, u64, b256 }, __anon_0, !607
        v527 = const u64 0
        v528 = get_elem_ptr v526, ptr b256, v527
        store v523 to v528, !607
        v529 = const u64 1
        v530 = get_elem_ptr v526, ptr u64, v529
        v531 = const u64 0
        store v531 to v530, !607
        v532 = const u64 2
        v533 = get_elem_ptr v526, ptr b256, v532
        store v525 to v533, !607
        v534 = load v526
        v535 = get_local ptr { b256, u64, b256 }, __tmp_arg13
        store v534 to v535
        v536 = call slot_51(v535)
        v537 = get_local ptr { b256, u64, b256 }, __tmp_arg11
        store v534 to v537
        v538 = call offset_46(v537)
        v539 = const u64 8, !363
        v540 = mul v538, v539, !611
        v541 = const u64 8
        v542 = add v540, v541, !612
        v543 = const u64 31, !372
        v544 = add v542, v543, !613
        v545 = const u64 5, !375
        v546 = rsh v544, v545, !614
        v547 = const u64 4, !378
        v548 = mod v538, v547, !615
        v549 = asm(input: v536) -> u256 input, !616 {
        }
        v550 = get_local ptr u256, offset_slot00, !617
        store v549 to v550, !618
        v551 = get_local ptr u256, offset_slot00, !619
        v552 = load v551, !620
        v553 = call as_u256_40(v546), !621
        v554 = const u64 1, !622
        v555 = call as_u256_40(v554), !623
        v556 = sub v553, v555, !624
        v557 = add v552, v556, !625
        v558 = get_local ptr u256, offset_slot00, !626
        store v557 to v558, !627
        v559 = get_local ptr u256, offset_slot00, !628
        v560 = load v559, !629
        v561 = asm(input: v560) -> b256 input, !630 {
        }
        v562 = get_local ptr { b256, u64, u64 }, __anon_04, !631
        v563 = const u64 0
        v564 = get_elem_ptr v562, ptr b256, v563, !632
        store v561 to v564, !633
        v565 = const u64 1
        v566 = get_elem_ptr v562, ptr u64, v565, !634
        store v554 to v566, !635
        v567 = const u64 2
        v568 = get_elem_ptr v562, ptr u64, v567, !636
        store v548 to v568, !637
        v569 = load v562, !638
        v570 = get_local ptr { b256, u64, u64 }, __tuple_1, !640
        store v569 to v570, !641
        v571 = get_local ptr { b256, u64, u64 }, __tuple_1, !642
        v572 = load v571, !643
        v573 = get_local ptr { b256, u64, u64 }, __tuple_1_, !644
        store v572 to v573, !645
        v574 = get_local ptr { b256, u64, u64 }, __tuple_1_, !646
        v575 = const u64 0
        v576 = get_elem_ptr v574, ptr b256, v575, !647
        v577 = load v576, !648
        v578 = get_local ptr b256, offset_slot1, !649
        store v577 to v578, !650
        v579 = get_local ptr { b256, u64, u64 }, __tuple_1_, !651
        v580 = const u64 1
        v581 = get_elem_ptr v579, ptr u64, v580, !652
        v582 = load v581, !653
        v583 = get_local ptr { b256, u64, u64 }, __tuple_1_, !654
        v584 = const u64 2
        v585 = get_elem_ptr v583, ptr u64, v584, !655
        v586 = load v585, !656
        v587 = const u64 32, !657
        v588 = mul v582, v587, !659
        v589 = mul v377, v588, !661
        v590 = asm(size: v589, ptr) -> u64 ptr, !662 {
            aloc   size, !453
            move   ptr hp, !454
        }
        v591 = get_local ptr b256, offset_slot1, !664
        v592 = load v591, !665
        v593 = get_local ptr b256, key_for_storage0, !667
        store v592 to v593, !668
        v594 = int_to_ptr v590 to ptr b256, !669
        v595 = state_load_quad_word v594, key v593, v582, !670
        v596 = mul v390, v586, !672
        v597 = add v590, v596, !673
        v598 = asm(ptr: v597, val: new_value) {
            sw     ptr val i0, !674
        }
        v599 = get_local ptr b256, offset_slot1, !676
        v600 = load v599, !677
        v601 = get_local ptr b256, key_for_storage_, !679
        store v600 to v601, !680
        v602 = int_to_ptr v590 to ptr b256, !681
        v603 = state_store_quad_word v602, key v601, v582, !682
        v604 = const unit ()
        ret () v604
    }

    pub fn eq_6(self: ptr { b256 }, other: ptr { b256 }) -> bool, !684 {
        entry(self: ptr { b256 }, other: ptr { b256 }):
        v0 = load self
        v1 = load other
        v2 = ptr_to_int v0 to u64
        v3 = int_to_ptr v2 to ptr { b256 }
        v4 = const u64 0
        v5 = get_elem_ptr v3, ptr b256, v4, !685
        v6 = load v5
        v7 = ptr_to_int v1 to u64
        v8 = int_to_ptr v7 to ptr { b256 }
        v9 = const u64 0
        v10 = get_elem_ptr v8, ptr b256, v9, !685
        v11 = load v10
        v12 = cmp eq v6 v11, !686
        ret bool v12
    }

    pub fn input_type_17(index !687: u64) -> { u64 }, !688 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local { u64 } __tmp_block_arg
        local { u64 } __tmp_block_arg0

        entry(index: u64):
        v0 = gtf index, 512, !689
        v1 = bitcast v0 to u8, !689
        v2 = const u8 0, !690
        v3 = cmp eq v1 v2, !691
        cbr v3, block0(), block1(), !691

        block0():
        v4 = get_local ptr { u64 }, __anon_0, !692
        v5 = const u64 0
        v6 = get_elem_ptr v4, ptr u64, v5, !692
        v7 = const u64 0, !692
        store v7 to v6, !692
        v8 = load v4
        v9 = get_local ptr { u64 }, __tmp_block_arg0
        store v8 to v9
        br block8(v9)

        block1():
        v10 = const u8 1, !693
        v11 = cmp eq v1 v10, !694
        cbr v11, block2(), block3(), !694

        block2():
        v12 = get_local ptr { u64 }, __anon_1, !692
        v13 = const u64 0
        v14 = get_elem_ptr v12, ptr u64, v13, !692
        v15 = const u64 1, !692
        store v15 to v14, !692
        v16 = load v12
        v17 = get_local ptr { u64 }, __tmp_block_arg
        store v16 to v17
        br block7(v17)

        block3():
        v18 = const u8 2, !695
        v19 = cmp eq v1 v18, !696
        cbr v19, block4(), block5(), !696

        block4():
        v20 = get_local ptr { u64 }, __anon_2, !692
        v21 = const u64 0
        v22 = get_elem_ptr v20, ptr u64, v21, !692
        v23 = const u64 2, !692
        store v23 to v22, !692
        v24 = load v20
        v25 = get_local ptr { u64 }, __tmp_block_arg
        store v24 to v25
        br block7(v25)

        block5():
        v26 = const u64 0, !697
        revert v26, !699

        block7(v27: ptr { u64 }):
        v28 = load v27
        v29 = get_local ptr { u64 }, __tmp_block_arg0
        store v28 to v29
        br block8(v29)

        block8(v30: ptr { u64 }):
        v31 = load v30
        ret { u64 } v31
    }

    pub fn add_19(self !700: u64, other !701: u64) -> u64, !702 {
        entry(self: u64, other: u64):
        v0 = add self, other
        v1 = const u64 65535, !704
        v2 = cmp gt v0 v1
        cbr v2, block0(), block1(), !705

        block0():
        v3 = const u64 0, !706
        revert v3, !707

        block1():
        ret u64 v0
    }

    pub fn from_22(bits: ptr b256) -> { b256 }, !708 {
        local { b256 } __anon_0

        entry(bits: ptr b256):
        v0 = load bits
        v1 = get_local ptr { b256 }, __anon_0, !709
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2
        store v0 to v3, !709
        v4 = load v1
        ret { b256 } v4
    }

    pub fn unwrap_24(self: ptr { u64, ( () | { b256 } ) }) -> { b256 }, !710 {
        local { u64, ( () | { b256 } ) } __matched_value_4
        local { b256 } inner_value

        entry(self: ptr { u64, ( () | { b256 } ) }):
        v0 = load self
        v1 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !487
        store v0 to v1, !487
        v2 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !490
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !490
        v5 = load v4
        v6 = const u64 1, !490
        v7 = cmp eq v5 v6, !494
        cbr v7, block0(), block1(), !494

        block0():
        v8 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !490
        v9 = const u64 1
        v10 = const u64 1
        v11 = get_elem_ptr v8, ptr { b256 }, v9, v10
        v12 = load v11
        v13 = get_local ptr { b256 }, inner_value, !500
        store v12 to v13, !500
        v14 = get_local ptr { b256 }, inner_value, !503
        v15 = load v14
        ret { b256 } v15

        block1():
        v16 = const u64 0, !527
        revert v16, !711
    }

    pub fn as_u256_40(self !712: u64) -> u256, !713 {
        local { u64, u64, u64, u64 } __anon_0
        local { u64, u64, u64, u64 } input

        entry(self: u64):
        v0 = get_local ptr { u64, u64, u64, u64 }, __anon_0, !714
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr u64, v1, !714
        v3 = const u64 0, !715
        store v3 to v2, !714
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4, !714
        v6 = const u64 0, !716
        store v6 to v5, !714
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr u64, v7, !714
        v9 = const u64 0, !717
        store v9 to v8, !714
        v10 = const u64 3
        v11 = get_elem_ptr v0, ptr u64, v10, !714
        store self to v11, !714
        v12 = load v0
        v13 = get_local ptr { u64, u64, u64, u64 }, input, !718
        store v12 to v13, !718
        v14 = get_local ptr { u64, u64, u64, u64 }, input, !719
        v15 = asm(input: v14) -> u256 input, !720 {
        }
        ret u256 v15
    }

    pub fn offset_46(self: ptr { b256, u64, b256 }) -> u64, !722 {
        entry(self: ptr { b256, u64, b256 }):
        v0 = load self
        v1 = ptr_to_int v0 to u64
        v2 = int_to_ptr v1 to ptr { b256, u64, b256 }
        v3 = const u64 1
        v4 = get_elem_ptr v2, ptr u64, v3, !723
        v5 = load v4
        ret u64 v5
    }

    pub fn slot_51(self: ptr { b256, u64, b256 }) -> b256, !724 {
        entry(self: ptr { b256, u64, b256 }):
        v0 = load self
        v1 = ptr_to_int v0 to u64
        v2 = int_to_ptr v1 to ptr { b256, u64, b256 }
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr b256, v3, !725
        v5 = load v4
        ret b256 v5
    }
}

// IR: [ret-demotion] Demotion of by-value function return values to by-reference
contract {
    pub entry fn set_data_if_owner<c626c6e2>(new_value !1: u64) -> (), !4 {
        local { b256, u64, b256 } __anon_0
        local { u64, ( { b256 } | { b256 } ) } __anon_00
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_000
        local { u64, ( () | { b256 } ) } __anon_0000
        local { u64 } __anon_00000
        local { b256, u64, u64 } __anon_0001
        local { u64, ( () | { b256 } ) } __anon_01
        local { b256, u64, b256 } __anon_02
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __anon_03
        local { b256, u64, u64 } __anon_04
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_1
        local { u64, ( { b256 } | { u64 } ) } __anon_10
        local { u64 } __anon_100
        local { u64, ( () | { b256 } ) } __anon_11
        local { u64, ( () | b256 ) } __anon_12
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64 } __anon_20
        local { u64, ( () | b256 ) } __anon_21
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { u64 } ) } __anon_30
        local { u64, ( { b256 } | { b256 } ) } __anon_4
        local { u64, ( { b256 } | { u64 } ) } __anon_40
        local { u64 } __anon_5
        local b256 __const = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d
        local b256 __const0 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d
        local b256 __const1 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c
        local b256 __const2 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c
        local { u64, ( { b256 } | { u64 } ) } __matched_value_1
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __matched_value_12
        local { u64 } __matched_value_2
        local { u64, ( () | { b256 } ) } __matched_value_3
        local { u64 } __matched_value_30
        local { u64, ( () | { b256 } ) } __matched_value_31
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __matched_value_32
        local { u64, ( () | b256 ) } __matched_value_4
        local { u64 } __matched_value_6
        local { u64 } __ret_val
        local { u64 } __ret_val0
        local { b256 } __ret_val1
        local b256 __ret_val10
        local b256 __ret_val11
        local { b256 } __ret_val2
        local { b256 } __ret_val3
        local { b256 } __ret_val4
        local { b256 } __ret_val5
        local u256 __ret_val6
        local u256 __ret_val7
        local u256 __ret_val8
        local u256 __ret_val9
        local { b256 } __tmp_arg
        local { b256 } __tmp_arg0
        local { b256 } __tmp_arg1
        local { b256, u64, b256 } __tmp_arg10
        local { b256, u64, b256 } __tmp_arg11
        local { b256, u64, b256 } __tmp_arg12
        local { b256, u64, b256 } __tmp_arg13
        local { b256 } __tmp_arg2
        local { b256 } __tmp_arg3
        local { b256 } __tmp_arg4
        local b256 __tmp_arg5
        local b256 __tmp_arg6
        local b256 __tmp_arg7
        local { u64, ( () | { b256 } ) } __tmp_arg8
        local { u64, ( () | { b256 } ) } __tmp_arg9
        local { u64 } __tmp_block_arg
        local { u64, ( () | { b256 } ) } __tmp_block_arg0
        local { u64, ( { b256 } | { u64 } ) } __tmp_block_arg1
        local { u64, ( { b256 } | { u64 } ) } __tmp_block_arg2
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __tmp_block_arg3
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __tmp_block_arg4
        local { u64, ( () | b256 ) } __tmp_block_arg5
        local { b256, u64, u64 } __tuple_1
        local { b256, u64, u64 } __tuple_1_
        local { b256, u64, u64 } __tuple_2
        local { b256, u64, u64 } __tuple_2_
        local { b256 } addr1
        local { b256 } addr2
        local { b256 } address
        local mut { u64, ( () | { b256 } ) } candidate
        local { u64 } err
        local { b256 } id1
        local { b256 } id2
        local { u64, ( { b256 } | { b256 } ) } inner_value
        local b256 inner_value0
        local b256 key_for_storage
        local b256 key_for_storage0
        local b256 key_for_storage_
        local b256 offset_slot
        local mut u256 offset_slot0
        local mut u256 offset_slot00
        local b256 offset_slot1
        local { b256 } owner
        local { u64, ( () | { b256 } ) } owner_of_input
        local { u64 } type_of_input

        entry(new_value: u64):
        v0 = asm(r1) -> bool r1, !11 {
            gm     r1 i1, !12
        }
        cbr v0, only_owner_0_msg_sender_10_block0(), only_owner_0_msg_sender_10_block7(), !13

        only_owner_0_msg_sender_10_block0():
        v1 = const u64 0, !15
        v2 = gtf v1, 1, !21
        v3 = bitcast v2 to u8, !22
        v4 = const u8 0, !23
        v5 = cmp eq v3 v4, !25
        cbr v5, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1(), !26

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0():
        v6 = get_local ptr { u64 }, __anon_00000, !28
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr u64, v7, !29
        v9 = const u64 0, !27
        store v9 to v8, !30
        v10 = load v6, !31
        v11 = get_local ptr { u64 }, __tmp_block_arg
        store v10 to v11
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v11), !32

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1():
        v12 = const u8 1, !33
        v13 = cmp eq v3 v12, !35
        cbr v13, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3(), !36

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2():
        v14 = get_local ptr { u64 }, __anon_100, !37
        v15 = const u64 0
        v16 = get_elem_ptr v14, ptr u64, v15, !38
        v17 = const u64 1, !27
        store v17 to v16, !39
        v18 = load v14, !40
        v19 = get_local ptr { u64 }, __tmp_block_arg
        store v18 to v19
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v19), !41

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3():
        v20 = const u64 0, !42
        revert v20, !46

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v21: ptr { u64 }):
        v22 = load v21
        v23 = get_local ptr { u64 }, __matched_value_30, !48
        store v22 to v23, !49
        v24 = get_local ptr { u64 }, __matched_value_30, !50
        v25 = const u64 0
        v26 = get_elem_ptr v24, ptr u64, v25, !51
        v27 = load v26, !52
        v28 = const u64 0, !19
        v29 = cmp eq v27 v28, !54
        cbr v29, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1(), !55

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0():
        v30 = const u64 0, !56
        v31 = gtf v30, 5, !58
        v32 = bitcast v31 to u64, !59
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v32), !60

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1():
        v33 = get_local ptr { u64 }, __matched_value_30, !61
        v34 = const u64 0
        v35 = get_elem_ptr v33, ptr u64, v34, !62
        v36 = load v35, !63
        v37 = const u64 1, !19
        v38 = cmp eq v36 v37, !65
        cbr v38, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3(), !66

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2():
        v39 = const u64 0, !67
        v40 = gtf v39, 259, !69
        v41 = bitcast v40 to u64, !70
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v41), !71

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3():
        v42 = const u64 14757395258967588866, !47
        revert v42, !72

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v43: u64):
        v44 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0000, !75
        v45 = const u64 0
        v46 = get_elem_ptr v44, ptr u64, v45, !76
        v47 = const u64 0, !74
        store v47 to v46, !77
        v48 = load v44, !78
        v49 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !80
        store v48 to v49, !81
        v50 = const u64 0, !82
        br only_owner_0_msg_sender_10_caller_address_12_while(v50), !83

        only_owner_0_msg_sender_10_caller_address_12_while(v51: u64):
        v52 = cmp lt v51 v43, !85
        cbr v52, only_owner_0_msg_sender_10_caller_address_12_while_body(), only_owner_0_msg_sender_10_caller_address_12_end_while(), !86

        only_owner_0_msg_sender_10_caller_address_12_while_body():
        v53 = asm(input: v51) -> u64 input, !90 {
        }
        v54 = get_local ptr { u64 }, __ret_val
        v55 = call input_type_17(v53, v54)
        v56 = load v55
        v57 = get_local ptr { u64 }, type_of_input, !92
        store v56 to v57, !93
        v58 = get_local ptr { u64 }, type_of_input, !95
        v59 = load v58, !96
        v60 = get_local ptr { u64 }, __matched_value_2, !98
        store v59 to v60, !99
        v61 = get_local ptr { u64 }, __matched_value_2, !100
        v62 = const u64 0
        v63 = get_elem_ptr v61, ptr u64, v62, !101
        v64 = load v63, !102
        v65 = const u64 0, !94
        v66 = cmp eq v64 v65, !104
        v67 = const unit (), !105
        cbr v66, only_owner_0_msg_sender_10_caller_address_12_block5(v67), only_owner_0_msg_sender_10_caller_address_12_block1(), !106

        only_owner_0_msg_sender_10_caller_address_12_block1():
        v68 = get_local ptr { u64 }, __matched_value_2, !107
        v69 = const u64 0
        v70 = get_elem_ptr v68, ptr u64, v69, !108
        v71 = load v70, !109
        v72 = const u64 2, !94
        v73 = cmp eq v71 v72, !111
        v74 = const unit (), !112
        cbr v73, only_owner_0_msg_sender_10_caller_address_12_block5(v74), only_owner_0_msg_sender_10_caller_address_12_block3(), !113

        only_owner_0_msg_sender_10_caller_address_12_block3():
        v75 = const u64 1, !114
        v76 = call add_19(v51, v75), !116
        br only_owner_0_msg_sender_10_caller_address_12_while(v76), !117

        only_owner_0_msg_sender_10_caller_address_12_block5(v77: ()):
        v78 = asm(input: v51) -> u64 input, !119 {
        }
        v79 = get_local ptr { u64 }, __ret_val0
        v80 = call input_type_17(v78, v79)
        v81 = load v80
        v82 = get_local ptr { u64 }, __matched_value_6, !122
        store v81 to v82, !123
        v83 = get_local ptr { u64 }, __matched_value_6, !125
        v84 = const u64 0
        v85 = get_elem_ptr v83, ptr u64, v84, !126
        v86 = load v85, !127
        v87 = const u64 0, !124
        v88 = cmp eq v86 v87, !129
        cbr v88, only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0(), only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1(), !130

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0():
        v89 = get_local ptr { u64, ( () | { b256 } ) }, __anon_01, !131
        v90 = const u64 0
        v91 = get_elem_ptr v89, ptr u64, v90, !132
        v92 = const u64 1, !74
        store v92 to v91, !133
        v93 = gtf v78, 515, !135
        v94 = int_to_ptr v93 to ptr b256, !136
        v95 = load v94, !137
        v96 = get_local ptr b256, __tmp_arg5
        store v95 to v96
        v97 = get_local ptr { b256 }, __ret_val1
        v98 = call from_22(v96, v97)
        v99 = load v98
        v100 = const u64 1
        v101 = const u64 1
        v102 = get_elem_ptr v89, ptr { b256 }, v100, v101, !138
        store v99 to v102, !139
        v103 = load v89, !140
        v104 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_block_arg0
        store v103 to v104
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v104), !141

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1():
        v105 = get_local ptr { u64, ( () | { b256 } ) }, __anon_11, !142
        v106 = const u64 0
        v107 = get_elem_ptr v105, ptr u64, v106, !143
        v108 = const u64 0, !74
        store v108 to v107, !144
        v109 = load v105, !145
        v110 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_block_arg0
        store v109 to v110
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v110), !146

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v111: ptr { u64, ( () | { b256 } ) }):
        v112 = load v111
        v113 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !148
        store v112 to v113, !149
        v114 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !151
        v115 = load v114, !152
        v116 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !155
        store v115 to v116, !156
        v117 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !158
        v118 = const u64 0
        v119 = get_elem_ptr v117, ptr u64, v118, !159
        v120 = load v119, !160
        v121 = const u64 1, !157
        v122 = cmp eq v120 v121, !162
        v123 = const bool false, !163
        cbr v122, only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v123), only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1(), !164

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1():
        v124 = const bool true, !165
        br only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v124), !166

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v125: bool):
        cbr v125, only_owner_0_msg_sender_10_caller_address_12_block6(), only_owner_0_msg_sender_10_caller_address_12_block7(), !167

        only_owner_0_msg_sender_10_caller_address_12_block6():
        v126 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !169
        v127 = load v126, !170
        v128 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !172
        store v127 to v128, !173
        v129 = const u64 1, !174
        v130 = call add_19(v51, v129), !176
        br only_owner_0_msg_sender_10_caller_address_12_while(v130), !177

        only_owner_0_msg_sender_10_caller_address_12_block7():
        v131 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !179
        v132 = load v131, !180
        v133 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_arg8
        store v132 to v133
        v134 = get_local ptr { b256 }, __ret_val4
        v135 = call unwrap_24(v133, v134)
        v136 = load v135
        v137 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !182
        v138 = load v137, !183
        v139 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_arg9
        store v138 to v139
        v140 = get_local ptr { b256 }, __ret_val5
        v141 = call unwrap_24(v139, v140)
        v142 = load v141
        v143 = get_local ptr { b256 }, __tmp_arg
        store v136 to v143
        v144 = get_local ptr { b256 }, __tmp_arg0
        store v142 to v144
        v145 = call eq_6(v143, v144)
        cbr v145, only_owner_0_msg_sender_10_caller_address_12_block9(), only_owner_0_msg_sender_10_caller_address_12_block10(), !185

        only_owner_0_msg_sender_10_caller_address_12_block9():
        v146 = const u64 1, !186
        v147 = call add_19(v51, v146), !188
        br only_owner_0_msg_sender_10_caller_address_12_while(v147), !189

        only_owner_0_msg_sender_10_caller_address_12_block10():
        v148 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_10, !192
        v149 = const u64 0
        v150 = get_elem_ptr v148, ptr u64, v149, !193
        v151 = const u64 1, !191
        store v151 to v150, !194
        v152 = get_local ptr { u64 }, __anon_20, !196
        v153 = const u64 0
        v154 = get_elem_ptr v152, ptr u64, v153, !197
        v155 = const u64 0, !195
        store v155 to v154, !198
        v156 = load v152, !199
        v157 = const u64 1
        v158 = const u64 1
        v159 = get_elem_ptr v148, ptr { u64 }, v157, v158, !200
        store v156 to v159, !201
        v160 = load v148, !202
        v161 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg2
        store v160 to v161
        br only_owner_0_msg_sender_10_block10(v161), !204

        only_owner_0_msg_sender_10_caller_address_12_end_while():
        v162 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !206
        v163 = load v162, !207
        v164 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !209
        store v163 to v164, !210
        v165 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !211
        v166 = const u64 0
        v167 = get_elem_ptr v165, ptr u64, v166, !212
        v168 = load v167, !213
        v169 = const u64 1, !205
        v170 = cmp eq v168 v169, !215
        cbr v170, only_owner_0_msg_sender_10_caller_address_12_block12(), only_owner_0_msg_sender_10_caller_address_12_block13(), !216

        only_owner_0_msg_sender_10_caller_address_12_block12():
        v171 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !217
        v172 = const u64 1
        v173 = const u64 1
        v174 = get_elem_ptr v171, ptr { b256 }, v172, v173, !218
        v175 = load v174, !219
        v176 = get_local ptr { b256 }, address, !221
        store v175 to v176, !222
        v177 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_30, !223
        v178 = const u64 0
        v179 = get_elem_ptr v177, ptr u64, v178, !224
        v180 = const u64 0, !191
        store v180 to v179, !225
        v181 = get_local ptr { b256 }, address, !227
        v182 = load v181, !228
        v183 = const u64 1
        v184 = const u64 0
        v185 = get_elem_ptr v177, ptr { b256 }, v183, v184, !229
        store v182 to v185, !230
        v186 = load v177, !231
        v187 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg1
        store v186 to v187
        br only_owner_0_msg_sender_10_caller_address_12_block17(v187), !232

        only_owner_0_msg_sender_10_caller_address_12_block13():
        v188 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !233
        v189 = const u64 0
        v190 = get_elem_ptr v188, ptr u64, v189, !234
        v191 = load v190, !235
        v192 = const u64 0, !205
        v193 = cmp eq v191 v192, !237
        cbr v193, only_owner_0_msg_sender_10_caller_address_12_block14(), only_owner_0_msg_sender_10_caller_address_12_block15(), !238

        only_owner_0_msg_sender_10_caller_address_12_block14():
        v194 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_40, !239
        v195 = const u64 0
        v196 = get_elem_ptr v194, ptr u64, v195, !240
        v197 = const u64 1, !191
        store v197 to v196, !241
        v198 = get_local ptr { u64 }, __anon_5, !242
        v199 = const u64 0
        v200 = get_elem_ptr v198, ptr u64, v199, !243
        v201 = const u64 1, !195
        store v201 to v200, !244
        v202 = load v198, !245
        v203 = const u64 1
        v204 = const u64 1
        v205 = get_elem_ptr v194, ptr { u64 }, v203, v204, !246
        store v202 to v205, !247
        v206 = load v194, !248
        v207 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg1
        store v206 to v207
        br only_owner_0_msg_sender_10_caller_address_12_block17(v207), !249

        only_owner_0_msg_sender_10_caller_address_12_block15():
        v208 = const u64 14757395258967588866, !208
        revert v208, !250

        only_owner_0_msg_sender_10_caller_address_12_block17(v209: ptr { u64, ( { b256 } | { u64 } ) }):
        v210 = load v209
        v211 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg2
        store v210 to v211
        br only_owner_0_msg_sender_10_block10(v211), !251

        only_owner_0_msg_sender_10_block10(v212: ptr { u64, ( { b256 } | { u64 } ) }):
        v213 = load v212
        v214 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !253
        store v213 to v214, !254
        v215 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !255
        v216 = const u64 0
        v217 = get_elem_ptr v215, ptr u64, v216, !256
        v218 = load v217, !257
        v219 = const u64 1, !16
        v220 = cmp eq v218 v219, !259
        cbr v220, only_owner_0_msg_sender_10_block1(), only_owner_0_msg_sender_10_block2(), !260

        only_owner_0_msg_sender_10_block1():
        v221 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !261
        v222 = const u64 1
        v223 = const u64 1
        v224 = get_elem_ptr v221, ptr { u64 }, v222, v223, !262
        v225 = load v224, !263
        v226 = get_local ptr { u64 }, err, !265
        store v225 to v226, !266
        v227 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_000, !267
        v228 = const u64 0
        v229 = get_elem_ptr v227, ptr u64, v228, !268
        v230 = const u64 1, !191
        store v230 to v229, !269
        v231 = get_local ptr { u64 }, err, !271
        v232 = load v231, !272
        v233 = const u64 1
        v234 = const u64 1
        v235 = get_elem_ptr v227, ptr { u64 }, v233, v234, !273
        store v232 to v235, !274
        v236 = load v227, !275
        v237 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg3
        store v236 to v237
        br only_owner_0_msg_sender_10_block6(v237), !276

        only_owner_0_msg_sender_10_block2():
        v238 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !277
        v239 = const u64 0
        v240 = get_elem_ptr v238, ptr u64, v239, !278
        v241 = load v240, !279
        v242 = const u64 0, !16
        v243 = cmp eq v241 v242, !281
        cbr v243, only_owner_0_msg_sender_10_block3(), only_owner_0_msg_sender_10_block4(), !282

        only_owner_0_msg_sender_10_block3():
        v244 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !283
        v245 = const u64 1
        v246 = const u64 0
        v247 = get_elem_ptr v244, ptr { b256 }, v245, v246, !284
        v248 = load v247, !285
        v249 = get_local ptr { b256 }, owner, !287
        store v248 to v249, !288
        v250 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_1, !289
        v251 = const u64 0
        v252 = get_elem_ptr v250, ptr u64, v251, !290
        v253 = const u64 0, !191
        store v253 to v252, !291
        v254 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !294
        v255 = const u64 0
        v256 = get_elem_ptr v254, ptr u64, v255, !295
        v257 = const u64 0, !293
        store v257 to v256, !296
        v258 = get_local ptr { b256 }, owner, !298
        v259 = load v258, !299
        v260 = const u64 1
        v261 = const u64 0
        v262 = get_elem_ptr v254, ptr { b256 }, v260, v261, !300
        store v259 to v262, !301
        v263 = load v254, !302
        v264 = const u64 1
        v265 = const u64 0
        v266 = get_elem_ptr v250, ptr { u64, ( { b256 } | { b256 } ) }, v264, v265, !303
        store v263 to v266, !304
        v267 = load v250, !305
        v268 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg3
        store v267 to v268
        br only_owner_0_msg_sender_10_block6(v268), !306

        only_owner_0_msg_sender_10_block4():
        v269 = const u64 14757395258967588866, !252
        revert v269, !307

        only_owner_0_msg_sender_10_block6(v270: ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v271 = load v270
        v272 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg4
        store v271 to v272
        br only_owner_0_msg_sender_10_block8(v272), !308

        only_owner_0_msg_sender_10_block7():
        v273 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_3, !309
        v274 = const u64 0
        v275 = get_elem_ptr v273, ptr u64, v274, !310
        v276 = const u64 0, !191
        store v276 to v275, !311
        v277 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_4, !312
        v278 = const u64 0
        v279 = get_elem_ptr v277, ptr u64, v278, !313
        v280 = const u64 1, !293
        store v280 to v279, !314
        v281 = asm(r1) -> b256 r1, !317 {
            gm     r1 i2, !318
        }
        v282 = get_local ptr b256, __tmp_arg6
        store v281 to v282
        v283 = get_local ptr { b256 }, __ret_val2
        v284 = call from_22(v282, v283)
        v285 = load v284
        v286 = const u64 1
        v287 = const u64 1
        v288 = get_elem_ptr v277, ptr { b256 }, v286, v287, !319
        store v285 to v288, !320
        v289 = load v277, !321
        v290 = const u64 1
        v291 = const u64 0
        v292 = get_elem_ptr v273, ptr { u64, ( { b256 } | { b256 } ) }, v290, v291, !322
        store v289 to v292, !323
        v293 = load v273, !324
        v294 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg4
        store v293 to v294
        br only_owner_0_msg_sender_10_block8(v294), !325

        only_owner_0_msg_sender_10_block8(v295: ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v296 = load v295
        v297 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !328
        store v296 to v297, !329
        v298 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !331
        v299 = const u64 0
        v300 = get_elem_ptr v298, ptr u64, v299, !332
        v301 = load v300, !333
        v302 = const u64 0, !330
        v303 = cmp eq v301 v302, !335
        cbr v303, only_owner_0_unwrap_9_block0(), only_owner_0_unwrap_9_block1(), !336

        only_owner_0_unwrap_9_block0():
        v304 = get_local ptr b256, __const
        v305 = load v304
        v306 = get_local ptr b256, __const0
        v307 = load v306
        v308 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !337
        v309 = const u64 1
        v310 = const u64 0
        v311 = get_elem_ptr v308, ptr { u64, ( { b256 } | { b256 } ) }, v309, v310, !338
        v312 = load v311, !339
        v313 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !341
        store v312 to v313, !342
        v314 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !344
        v315 = load v314, !345
        v316 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_00, !346
        v317 = const u64 0
        v318 = get_elem_ptr v316, ptr u64, v317, !347
        v319 = const u64 0, !293
        store v319 to v318, !348
        v320 = get_local ptr { b256, u64, b256 }, __anon_02, !351
        v321 = const u64 0
        v322 = get_elem_ptr v320, ptr b256, v321, !352
        store v305 to v322, !353
        v323 = const u64 1
        v324 = get_elem_ptr v320, ptr u64, v323, !354
        v325 = const u64 0
        store v325 to v324, !355
        v326 = const u64 2
        v327 = get_elem_ptr v320, ptr b256, v326, !356
        store v307 to v327, !357
        v328 = load v320, !358
        v329 = get_local ptr { b256, u64, b256 }, __tmp_arg12
        store v328 to v329
        v330 = get_local ptr b256, __ret_val10
        v331 = call slot_51(v329, v330)
        v332 = load v331
        v333 = get_local ptr { b256, u64, b256 }, __tmp_arg10
        store v328 to v333
        v334 = call offset_46(v333)
        v335 = const u64 8, !360
        v336 = mul v334, v335, !366
        v337 = const u64 32
        v338 = add v336, v337, !368
        v339 = const u64 31, !369
        v340 = add v338, v339, !371
        v341 = const u64 5, !372
        v342 = rsh v340, v341, !374
        v343 = const u64 4, !375
        v344 = mod v334, v343, !377
        v345 = const u64 8, !378
        v346 = mul v344, v345, !380
        v347 = add v346, v337, !382
        v348 = const u64 31, !383
        v349 = add v347, v348, !385
        v350 = const u64 5, !386
        v351 = rsh v349, v350, !388
        v352 = asm(input: v332) -> u256 input, !391 {
        }
        v353 = get_local ptr u256, offset_slot0, !393
        store v352 to v353, !394
        v354 = get_local ptr u256, offset_slot0, !396
        v355 = load v354, !397
        v356 = get_local ptr u256, __ret_val6
        v357 = call as_u256_40(v342, v356)
        v358 = load v357
        v359 = get_local ptr u256, __ret_val7
        v360 = call as_u256_40(v351, v359)
        v361 = load v360
        v362 = sub v358, v361, !399
        v363 = add v355, v362, !401
        v364 = get_local ptr u256, offset_slot0, !402
        store v363 to v364, !403
        v365 = get_local ptr u256, offset_slot0, !405
        v366 = load v365, !406
        v367 = asm(input: v366) -> b256 input, !409 {
        }
        v368 = get_local ptr { b256, u64, u64 }, __anon_0001, !411
        v369 = const u64 0
        v370 = get_elem_ptr v368, ptr b256, v369, !412
        store v367 to v370, !413
        v371 = const u64 1
        v372 = get_elem_ptr v368, ptr u64, v371, !414
        store v351 to v372, !415
        v373 = const u64 2
        v374 = get_elem_ptr v368, ptr u64, v373, !416
        store v344 to v374, !417
        v375 = load v368, !418
        v376 = get_local ptr { b256, u64, u64 }, __tuple_2, !420
        store v375 to v376, !421
        v377 = get_local ptr { b256, u64, u64 }, __tuple_2, !422
        v378 = load v377, !423
        v379 = get_local ptr { b256, u64, u64 }, __tuple_2_, !424
        store v378 to v379, !425
        v380 = get_local ptr { b256, u64, u64 }, __tuple_2_, !426
        v381 = const u64 0
        v382 = get_elem_ptr v380, ptr b256, v381, !427
        v383 = load v382, !428
        v384 = get_local ptr b256, offset_slot, !429
        store v383 to v384, !430
        v385 = get_local ptr { b256, u64, u64 }, __tuple_2_, !431
        v386 = const u64 1
        v387 = get_elem_ptr v385, ptr u64, v386, !432
        v388 = load v387, !433
        v389 = get_local ptr { b256, u64, u64 }, __tuple_2_, !434
        v390 = const u64 2
        v391 = get_elem_ptr v389, ptr u64, v390, !435
        v392 = load v391, !436
        v393 = const u64 32, !437
        v394 = mul v388, v393, !439
        v395 = const u64 8
        v396 = mul v395, v394, !443
        v397 = asm(size: v396, ptr) -> u64 ptr, !445 {
            aloc   size, !446
            move   ptr hp, !447
        }
        v398 = get_local ptr b256, offset_slot, !449
        v399 = load v398, !450
        v400 = get_local ptr b256, key_for_storage, !452
        store v399 to v400, !453
        v401 = int_to_ptr v397 to ptr b256, !454
        v402 = state_load_quad_word v401, key v400, v388, !455
        cbr v402, only_owner_0_get_owner_27_read_28_read_30_block3(), only_owner_0_get_owner_27_read_28_read_30_block4(), !456

        only_owner_0_unwrap_9_block1():
        v403 = const u64 0, !457
        revert v403, !459

        only_owner_0_get_owner_27_read_28_read_30_block3():
        v404 = get_local ptr { u64, ( () | b256 ) }, __anon_12, !460
        v405 = const u64 0
        v406 = get_elem_ptr v404, ptr u64, v405, !461
        v407 = const u64 1, !74
        store v407 to v406, !462
        v408 = const u64 8
        v409 = mul v408, v392, !464
        v410 = add v397, v409, !465
        v411 = asm(ptr: v410) -> b256 ptr, !469 {
        }
        v412 = const u64 1
        v413 = const u64 1
        v414 = get_elem_ptr v404, ptr b256, v412, v413, !470
        store v411 to v414, !471
        v415 = load v404, !472
        v416 = get_local ptr { u64, ( () | b256 ) }, __tmp_block_arg5
        store v415 to v416
        br only_owner_0_get_owner_27_read_28_read_30_block5(v416), !473

        only_owner_0_get_owner_27_read_28_read_30_block4():
        v417 = get_local ptr { u64, ( () | b256 ) }, __anon_21, !474
        v418 = const u64 0
        v419 = get_elem_ptr v417, ptr u64, v418, !475
        v420 = const u64 0, !74
        store v420 to v419, !476
        v421 = load v417, !477
        v422 = get_local ptr { u64, ( () | b256 ) }, __tmp_block_arg5
        store v421 to v422
        br only_owner_0_get_owner_27_read_28_read_30_block5(v422), !478

        only_owner_0_get_owner_27_read_28_read_30_block5(v423: ptr { u64, ( () | b256 ) }):
        v424 = load v423
        v425 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !481
        store v424 to v425, !482
        v426 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !484
        v427 = const u64 0
        v428 = get_elem_ptr v426, ptr u64, v427, !485
        v429 = load v428, !486
        v430 = const u64 1, !483
        v431 = cmp eq v429 v430, !488
        cbr v431, only_owner_0_get_owner_27_read_28_unwrap_29_block0(), only_owner_0_get_owner_27_read_28_unwrap_29_block1(), !489

        only_owner_0_get_owner_27_read_28_unwrap_29_block0():
        v432 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !490
        v433 = const u64 1
        v434 = const u64 1
        v435 = get_elem_ptr v432, ptr b256, v433, v434, !491
        v436 = load v435, !492
        v437 = get_local ptr b256, inner_value0, !494
        store v436 to v437, !495
        v438 = get_local ptr b256, inner_value0, !497
        v439 = load v438, !498
        v440 = get_local ptr b256, __tmp_arg7
        store v439 to v440
        v441 = get_local ptr { b256 }, __ret_val3
        v442 = call from_22(v440, v441)
        v443 = load v442
        v444 = const u64 1
        v445 = const u64 0
        v446 = get_elem_ptr v316, ptr { b256 }, v444, v445, !499
        store v443 to v446, !500
        v447 = load v316, !5
        v448 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_03, !503
        v449 = const u64 0
        v450 = get_elem_ptr v448, ptr { u64, ( { b256 } | { b256 } ) }, v449, !504
        store v315 to v450, !505
        v451 = const u64 1
        v452 = get_elem_ptr v448, ptr { u64, ( { b256 } | { b256 } ) }, v451, !506
        store v447 to v452, !507
        v453 = load v448, !508
        v454 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !510
        store v453 to v454, !511
        v455 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !512
        v456 = const u64 0
        v457 = get_elem_ptr v455, ptr { u64, ( { b256 } | { b256 } ) }, v456, !514
        v458 = const u64 0
        v459 = get_elem_ptr v457, ptr u64, v458, !515
        v460 = load v459, !516
        v461 = const u64 0, !513
        v462 = cmp eq v460 v461, !518
        cbr v462, only_owner_0_eq_4_block0(), only_owner_0_eq_4_block1(v462), !519

        only_owner_0_get_owner_27_read_28_unwrap_29_block1():
        v463 = const u64 0, !520
        revert v463, !522

        only_owner_0_eq_4_block0():
        v464 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !523
        v465 = const u64 1
        v466 = get_elem_ptr v464, ptr { u64, ( { b256 } | { b256 } ) }, v465, !524
        v467 = const u64 0
        v468 = get_elem_ptr v466, ptr u64, v467, !525
        v469 = load v468, !526
        v470 = const u64 0, !513
        v471 = cmp eq v469 v470, !527
        br only_owner_0_eq_4_block1(v471), !528

        only_owner_0_eq_4_block1(v472: bool):
        cbr v472, only_owner_0_eq_4_block2(), only_owner_0_eq_4_block3(), !529

        only_owner_0_eq_4_block2():
        v473 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !530
        v474 = const u64 0
        v475 = get_elem_ptr v473, ptr { u64, ( { b256 } | { b256 } ) }, v474, !531
        v476 = const u64 1
        v477 = const u64 0
        v478 = get_elem_ptr v475, ptr { b256 }, v476, v477, !532
        v479 = load v478, !533
        v480 = get_local ptr { b256 }, addr1, !535
        store v479 to v480, !536
        v481 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !537
        v482 = const u64 1
        v483 = get_elem_ptr v481, ptr { u64, ( { b256 } | { b256 } ) }, v482, !538
        v484 = const u64 1
        v485 = const u64 0
        v486 = get_elem_ptr v483, ptr { b256 }, v484, v485, !539
        v487 = load v486, !540
        v488 = get_local ptr { b256 }, addr2, !542
        store v487 to v488, !543
        v489 = get_local ptr { b256 }, addr1, !545
        v490 = load v489, !546
        v491 = get_local ptr { b256 }, addr2, !548
        v492 = load v491, !549
        v493 = get_local ptr { b256 }, __tmp_arg1
        store v490 to v493
        v494 = get_local ptr { b256 }, __tmp_arg2
        store v492 to v494
        v495 = call eq_6(v493, v494)
        br only_owner_0_eq_4_block9(v495), !550

        only_owner_0_eq_4_block3():
        v496 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !551
        v497 = const u64 0
        v498 = get_elem_ptr v496, ptr { u64, ( { b256 } | { b256 } ) }, v497, !553
        v499 = const u64 0
        v500 = get_elem_ptr v498, ptr u64, v499, !554
        v501 = load v500, !555
        v502 = const u64 1, !552
        v503 = cmp eq v501 v502, !557
        cbr v503, only_owner_0_eq_4_block4(), only_owner_0_eq_4_block5(v503), !558

        only_owner_0_eq_4_block4():
        v504 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !559
        v505 = const u64 1
        v506 = get_elem_ptr v504, ptr { u64, ( { b256 } | { b256 } ) }, v505, !560
        v507 = const u64 0
        v508 = get_elem_ptr v506, ptr u64, v507, !561
        v509 = load v508, !562
        v510 = const u64 1, !552
        v511 = cmp eq v509 v510, !563
        br only_owner_0_eq_4_block5(v511), !564

        only_owner_0_eq_4_block5(v512: bool):
        v513 = const bool false, !565
        cbr v512, only_owner_0_eq_4_block6(), only_owner_0_eq_4_block8(v513), !566

        only_owner_0_eq_4_block6():
        v514 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !567
        v515 = const u64 0
        v516 = get_elem_ptr v514, ptr { u64, ( { b256 } | { b256 } ) }, v515, !568
        v517 = const u64 1
        v518 = const u64 1
        v519 = get_elem_ptr v516, ptr { b256 }, v517, v518, !569
        v520 = load v519, !570
        v521 = get_local ptr { b256 }, id1, !572
        store v520 to v521, !573
        v522 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !574
        v523 = const u64 1
        v524 = get_elem_ptr v522, ptr { u64, ( { b256 } | { b256 } ) }, v523, !575
        v525 = const u64 1
        v526 = const u64 1
        v527 = get_elem_ptr v524, ptr { b256 }, v525, v526, !576
        v528 = load v527, !577
        v529 = get_local ptr { b256 }, id2, !579
        store v528 to v529, !580
        v530 = get_local ptr { b256 }, id1, !582
        v531 = load v530, !583
        v532 = get_local ptr { b256 }, id2, !585
        v533 = load v532, !586
        v534 = get_local ptr { b256 }, __tmp_arg3
        store v531 to v534
        v535 = get_local ptr { b256 }, __tmp_arg4
        store v533 to v535
        v536 = call eq_6(v534, v535)
        br only_owner_0_eq_4_block8(v536), !587

        only_owner_0_eq_4_block8(v537: bool):
        br only_owner_0_eq_4_block9(v537), !588

        only_owner_0_eq_4_block9(v538: bool):
        v539 = const bool false, !590
        v540 = cmp eq v538 v539, !594
        cbr v540, only_owner_0_assert_1_block0(), only_owner_0_assert_1_block1(), !595

        only_owner_0_assert_1_block0():
        v541 = const u64 18446744073709486084, !597
        revert v541, !599

        only_owner_0_assert_1_block1():
        v542 = get_local ptr b256, __const1
        v543 = load v542
        v544 = get_local ptr b256, __const2
        v545 = load v544
        v546 = get_local ptr { b256, u64, b256 }, __anon_0, !600
        v547 = const u64 0
        v548 = get_elem_ptr v546, ptr b256, v547
        store v543 to v548, !600
        v549 = const u64 1
        v550 = get_elem_ptr v546, ptr u64, v549
        v551 = const u64 0
        store v551 to v550, !600
        v552 = const u64 2
        v553 = get_elem_ptr v546, ptr b256, v552
        store v545 to v553, !600
        v554 = load v546
        v555 = get_local ptr { b256, u64, b256 }, __tmp_arg13
        store v554 to v555
        v556 = get_local ptr b256, __ret_val11
        v557 = call slot_51(v555, v556)
        v558 = load v557
        v559 = get_local ptr { b256, u64, b256 }, __tmp_arg11
        store v554 to v559
        v560 = call offset_46(v559)
        v561 = const u64 8, !360
        v562 = mul v560, v561, !604
        v563 = const u64 8
        v564 = add v562, v563, !605
        v565 = const u64 31, !369
        v566 = add v564, v565, !606
        v567 = const u64 5, !372
        v568 = rsh v566, v567, !607
        v569 = const u64 4, !375
        v570 = mod v560, v569, !608
        v571 = asm(input: v558) -> u256 input, !609 {
        }
        v572 = get_local ptr u256, offset_slot00, !610
        store v571 to v572, !611
        v573 = get_local ptr u256, offset_slot00, !612
        v574 = load v573, !613
        v575 = get_local ptr u256, __ret_val8
        v576 = call as_u256_40(v568, v575)
        v577 = load v576
        v578 = get_local ptr u256, __ret_val9
        v579 = const u64 1, !614
        v580 = call as_u256_40(v579, v578)
        v581 = load v580
        v582 = sub v577, v581, !615
        v583 = add v574, v582, !616
        v584 = get_local ptr u256, offset_slot00, !617
        store v583 to v584, !618
        v585 = get_local ptr u256, offset_slot00, !619
        v586 = load v585, !620
        v587 = asm(input: v586) -> b256 input, !621 {
        }
        v588 = get_local ptr { b256, u64, u64 }, __anon_04, !622
        v589 = const u64 0
        v590 = get_elem_ptr v588, ptr b256, v589, !623
        store v587 to v590, !624
        v591 = const u64 1
        v592 = get_elem_ptr v588, ptr u64, v591, !625
        store v579 to v592, !626
        v593 = const u64 2
        v594 = get_elem_ptr v588, ptr u64, v593, !627
        store v570 to v594, !628
        v595 = load v588, !629
        v596 = get_local ptr { b256, u64, u64 }, __tuple_1, !631
        store v595 to v596, !632
        v597 = get_local ptr { b256, u64, u64 }, __tuple_1, !633
        v598 = load v597, !634
        v599 = get_local ptr { b256, u64, u64 }, __tuple_1_, !635
        store v598 to v599, !636
        v600 = get_local ptr { b256, u64, u64 }, __tuple_1_, !637
        v601 = const u64 0
        v602 = get_elem_ptr v600, ptr b256, v601, !638
        v603 = load v602, !639
        v604 = get_local ptr b256, offset_slot1, !640
        store v603 to v604, !641
        v605 = get_local ptr { b256, u64, u64 }, __tuple_1_, !642
        v606 = const u64 1
        v607 = get_elem_ptr v605, ptr u64, v606, !643
        v608 = load v607, !644
        v609 = get_local ptr { b256, u64, u64 }, __tuple_1_, !645
        v610 = const u64 2
        v611 = get_elem_ptr v609, ptr u64, v610, !646
        v612 = load v611, !647
        v613 = const u64 32, !648
        v614 = mul v608, v613, !650
        v615 = mul v395, v614, !652
        v616 = asm(size: v615, ptr) -> u64 ptr, !653 {
            aloc   size, !446
            move   ptr hp, !447
        }
        v617 = get_local ptr b256, offset_slot1, !655
        v618 = load v617, !656
        v619 = get_local ptr b256, key_for_storage0, !658
        store v618 to v619, !659
        v620 = int_to_ptr v616 to ptr b256, !660
        v621 = state_load_quad_word v620, key v619, v608, !661
        v622 = mul v408, v612, !663
        v623 = add v616, v622, !664
        v624 = asm(ptr: v623, val: new_value) {
            sw     ptr val i0, !665
        }
        v625 = get_local ptr b256, offset_slot1, !667
        v626 = load v625, !668
        v627 = get_local ptr b256, key_for_storage_, !670
        store v626 to v627, !671
        v628 = int_to_ptr v616 to ptr b256, !672
        v629 = state_store_quad_word v628, key v627, v608, !673
        v630 = const unit ()
        ret () v630
    }

    pub fn eq_6(self: ptr { b256 }, other: ptr { b256 }) -> bool, !675 {
        entry(self: ptr { b256 }, other: ptr { b256 }):
        v0 = load self
        v1 = load other
        v2 = ptr_to_int v0 to u64
        v3 = int_to_ptr v2 to ptr { b256 }
        v4 = const u64 0
        v5 = get_elem_ptr v3, ptr b256, v4, !676
        v6 = load v5
        v7 = ptr_to_int v1 to u64
        v8 = int_to_ptr v7 to ptr { b256 }
        v9 = const u64 0
        v10 = get_elem_ptr v8, ptr b256, v9, !676
        v11 = load v10
        v12 = cmp eq v6 v11, !677
        ret bool v12
    }

    pub fn input_type_17(index !678: u64, __ret_value: ptr { u64 }) -> ptr { u64 }, !679 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local { u64 } __tmp_block_arg
        local { u64 } __tmp_block_arg0

        entry(index: u64, __ret_value: ptr { u64 }):
        v0 = gtf index, 512, !680
        v1 = bitcast v0 to u8, !680
        v2 = const u8 0, !681
        v3 = cmp eq v1 v2, !682
        cbr v3, block0(), block1(), !682

        block0():
        v4 = get_local ptr { u64 }, __anon_0, !683
        v5 = const u64 0
        v6 = get_elem_ptr v4, ptr u64, v5, !683
        v7 = const u64 0, !683
        store v7 to v6, !683
        v8 = load v4
        v9 = get_local ptr { u64 }, __tmp_block_arg0
        store v8 to v9
        br block8(v9)

        block1():
        v10 = const u8 1, !684
        v11 = cmp eq v1 v10, !685
        cbr v11, block2(), block3(), !685

        block2():
        v12 = get_local ptr { u64 }, __anon_1, !683
        v13 = const u64 0
        v14 = get_elem_ptr v12, ptr u64, v13, !683
        v15 = const u64 1, !683
        store v15 to v14, !683
        v16 = load v12
        v17 = get_local ptr { u64 }, __tmp_block_arg
        store v16 to v17
        br block7(v17)

        block3():
        v18 = const u8 2, !686
        v19 = cmp eq v1 v18, !687
        cbr v19, block4(), block5(), !687

        block4():
        v20 = get_local ptr { u64 }, __anon_2, !683
        v21 = const u64 0
        v22 = get_elem_ptr v20, ptr u64, v21, !683
        v23 = const u64 2, !683
        store v23 to v22, !683
        v24 = load v20
        v25 = get_local ptr { u64 }, __tmp_block_arg
        store v24 to v25
        br block7(v25)

        block5():
        v26 = const u64 0, !688
        revert v26, !690

        block7(v27: ptr { u64 }):
        v28 = load v27
        v29 = get_local ptr { u64 }, __tmp_block_arg0
        store v28 to v29
        br block8(v29)

        block8(v30: ptr { u64 }):
        v31 = load v30
        store v31 to __ret_value
        ret ptr { u64 } __ret_value
    }

    pub fn add_19(self !691: u64, other !692: u64) -> u64, !693 {
        entry(self: u64, other: u64):
        v0 = add self, other
        v1 = const u64 65535, !695
        v2 = cmp gt v0 v1
        cbr v2, block0(), block1(), !696

        block0():
        v3 = const u64 0, !697
        revert v3, !698

        block1():
        ret u64 v0
    }

    pub fn from_22(bits: ptr b256, __ret_value: ptr { b256 }) -> ptr { b256 }, !699 {
        local { b256 } __anon_0

        entry(bits: ptr b256, __ret_value: ptr { b256 }):
        v0 = load bits
        v1 = get_local ptr { b256 }, __anon_0, !700
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2
        store v0 to v3, !700
        v4 = load v1
        store v4 to __ret_value
        ret ptr { b256 } __ret_value
    }

    pub fn unwrap_24(self: ptr { u64, ( () | { b256 } ) }, __ret_value: ptr { b256 }) -> ptr { b256 }, !701 {
        local { u64, ( () | { b256 } ) } __matched_value_4
        local { b256 } inner_value

        entry(self: ptr { u64, ( () | { b256 } ) }, __ret_value: ptr { b256 }):
        v0 = load self
        v1 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !480
        store v0 to v1, !480
        v2 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !483
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !483
        v5 = load v4
        v6 = const u64 1, !483
        v7 = cmp eq v5 v6, !487
        cbr v7, block0(), block1(), !487

        block0():
        v8 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !483
        v9 = const u64 1
        v10 = const u64 1
        v11 = get_elem_ptr v8, ptr { b256 }, v9, v10
        v12 = load v11
        v13 = get_local ptr { b256 }, inner_value, !493
        store v12 to v13, !493
        v14 = get_local ptr { b256 }, inner_value, !496
        v15 = load v14
        store v15 to __ret_value
        ret ptr { b256 } __ret_value

        block1():
        v16 = const u64 0, !520
        revert v16, !702
    }

    pub fn as_u256_40(self !703: u64, __ret_value: ptr u256) -> ptr u256, !704 {
        local { u64, u64, u64, u64 } __anon_0
        local { u64, u64, u64, u64 } input

        entry(self: u64, __ret_value: ptr u256):
        v0 = get_local ptr { u64, u64, u64, u64 }, __anon_0, !705
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr u64, v1, !705
        v3 = const u64 0, !706
        store v3 to v2, !705
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4, !705
        v6 = const u64 0, !707
        store v6 to v5, !705
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr u64, v7, !705
        v9 = const u64 0, !708
        store v9 to v8, !705
        v10 = const u64 3
        v11 = get_elem_ptr v0, ptr u64, v10, !705
        store self to v11, !705
        v12 = load v0
        v13 = get_local ptr { u64, u64, u64, u64 }, input, !709
        store v12 to v13, !709
        v14 = get_local ptr { u64, u64, u64, u64 }, input, !710
        v15 = asm(input: v14) -> u256 input, !711 {
        }
        store v15 to __ret_value
        ret ptr u256 __ret_value
    }

    pub fn offset_46(self: ptr { b256, u64, b256 }) -> u64, !713 {
        entry(self: ptr { b256, u64, b256 }):
        v0 = load self
        v1 = ptr_to_int v0 to u64
        v2 = int_to_ptr v1 to ptr { b256, u64, b256 }
        v3 = const u64 1
        v4 = get_elem_ptr v2, ptr u64, v3, !714
        v5 = load v4
        ret u64 v5
    }

    pub fn slot_51(self: ptr { b256, u64, b256 }, __ret_value: ptr b256) -> ptr b256, !715 {
        entry(self: ptr { b256, u64, b256 }, __ret_value: ptr b256):
        v0 = load self
        v1 = ptr_to_int v0 to u64
        v2 = int_to_ptr v1 to ptr { b256, u64, b256 }
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr b256, v3, !716
        v5 = load v4
        store v5 to __ret_value
        ret ptr b256 __ret_value
    }
}

// IR: [misc-demotion] Miscellaneous by-value demotions to by-reference
contract {
    pub entry fn set_data_if_owner<c626c6e2>(new_value !1: u64) -> (), !4 {
        local { b256, u64, b256 } __anon_0
        local { u64, ( { b256 } | { b256 } ) } __anon_00
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_000
        local { u64, ( () | { b256 } ) } __anon_0000
        local { u64 } __anon_00000
        local { b256, u64, u64 } __anon_0001
        local { u64, ( () | { b256 } ) } __anon_01
        local { b256, u64, b256 } __anon_02
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __anon_03
        local { b256, u64, u64 } __anon_04
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_1
        local { u64, ( { b256 } | { u64 } ) } __anon_10
        local { u64 } __anon_100
        local { u64, ( () | { b256 } ) } __anon_11
        local { u64, ( () | b256 ) } __anon_12
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64 } __anon_20
        local { u64, ( () | b256 ) } __anon_21
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { u64 } ) } __anon_30
        local { u64, ( { b256 } | { b256 } ) } __anon_4
        local { u64, ( { b256 } | { u64 } ) } __anon_40
        local { u64 } __anon_5
        local b256 __asm_arg
        local u256 __asm_arg0
        local b256 __asm_arg1
        local u256 __asm_arg2
        local b256 __const = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d
        local b256 __const0 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d
        local b256 __const1 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c
        local b256 __const2 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c
        local { u64, ( { b256 } | { u64 } ) } __matched_value_1
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __matched_value_12
        local { u64 } __matched_value_2
        local { u64, ( () | { b256 } ) } __matched_value_3
        local { u64 } __matched_value_30
        local { u64, ( () | { b256 } ) } __matched_value_31
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __matched_value_32
        local { u64, ( () | b256 ) } __matched_value_4
        local { u64 } __matched_value_6
        local { u64 } __ret_val
        local { u64 } __ret_val0
        local { b256 } __ret_val1
        local b256 __ret_val10
        local b256 __ret_val11
        local { b256 } __ret_val2
        local { b256 } __ret_val3
        local { b256 } __ret_val4
        local { b256 } __ret_val5
        local u256 __ret_val6
        local u256 __ret_val7
        local u256 __ret_val8
        local u256 __ret_val9
        local { b256 } __tmp_arg
        local { b256 } __tmp_arg0
        local { b256 } __tmp_arg1
        local { b256, u64, b256 } __tmp_arg10
        local { b256, u64, b256 } __tmp_arg11
        local { b256, u64, b256 } __tmp_arg12
        local { b256, u64, b256 } __tmp_arg13
        local { b256 } __tmp_arg2
        local { b256 } __tmp_arg3
        local { b256 } __tmp_arg4
        local b256 __tmp_arg5
        local b256 __tmp_arg6
        local b256 __tmp_arg7
        local { u64, ( () | { b256 } ) } __tmp_arg8
        local { u64, ( () | { b256 } ) } __tmp_arg9
        local { u64 } __tmp_block_arg
        local { u64, ( () | { b256 } ) } __tmp_block_arg0
        local { u64, ( { b256 } | { u64 } ) } __tmp_block_arg1
        local { u64, ( { b256 } | { u64 } ) } __tmp_block_arg2
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __tmp_block_arg3
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __tmp_block_arg4
        local { u64, ( () | b256 ) } __tmp_block_arg5
        local { b256, u64, u64 } __tuple_1
        local { b256, u64, u64 } __tuple_1_
        local { b256, u64, u64 } __tuple_2
        local { b256, u64, u64 } __tuple_2_
        local u256 __wide_lhs
        local u256 __wide_lhs0
        local u256 __wide_lhs1
        local u256 __wide_lhs2
        local mut u256 __wide_result
        local mut u256 __wide_result0
        local mut u256 __wide_result1
        local mut u256 __wide_result2
        local u256 __wide_rhs
        local u256 __wide_rhs0
        local u256 __wide_rhs1
        local u256 __wide_rhs2
        local { b256 } addr1
        local { b256 } addr2
        local { b256 } address
        local mut { u64, ( () | { b256 } ) } candidate
        local { u64 } err
        local { b256 } id1
        local { b256 } id2
        local { u64, ( { b256 } | { b256 } ) } inner_value
        local b256 inner_value0
        local b256 key_for_storage
        local b256 key_for_storage0
        local b256 key_for_storage_
        local b256 offset_slot
        local mut u256 offset_slot0
        local mut u256 offset_slot00
        local b256 offset_slot1
        local { b256 } owner
        local { u64, ( () | { b256 } ) } owner_of_input
        local { u64 } type_of_input

        entry(new_value: u64):
        v0 = asm(r1) -> bool r1, !11 {
            gm     r1 i1, !12
        }
        cbr v0, only_owner_0_msg_sender_10_block0(), only_owner_0_msg_sender_10_block7(), !13

        only_owner_0_msg_sender_10_block0():
        v1 = const u64 0, !15
        v2 = gtf v1, 1, !21
        v3 = bitcast v2 to u8, !22
        v4 = const u8 0, !23
        v5 = cmp eq v3 v4, !25
        cbr v5, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1(), !26

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0():
        v6 = get_local ptr { u64 }, __anon_00000, !28
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr u64, v7, !29
        v9 = const u64 0, !27
        store v9 to v8, !30
        v10 = load v6, !31
        v11 = get_local ptr { u64 }, __tmp_block_arg
        store v10 to v11
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v11), !32

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1():
        v12 = const u8 1, !33
        v13 = cmp eq v3 v12, !35
        cbr v13, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3(), !36

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2():
        v14 = get_local ptr { u64 }, __anon_100, !37
        v15 = const u64 0
        v16 = get_elem_ptr v14, ptr u64, v15, !38
        v17 = const u64 1, !27
        store v17 to v16, !39
        v18 = load v14, !40
        v19 = get_local ptr { u64 }, __tmp_block_arg
        store v18 to v19
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v19), !41

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3():
        v20 = const u64 0, !42
        revert v20, !46

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v21: ptr { u64 }):
        v22 = load v21
        v23 = get_local ptr { u64 }, __matched_value_30, !48
        store v22 to v23, !49
        v24 = get_local ptr { u64 }, __matched_value_30, !50
        v25 = const u64 0
        v26 = get_elem_ptr v24, ptr u64, v25, !51
        v27 = load v26, !52
        v28 = const u64 0, !19
        v29 = cmp eq v27 v28, !54
        cbr v29, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1(), !55

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0():
        v30 = const u64 0, !56
        v31 = gtf v30, 5, !58
        v32 = bitcast v31 to u64, !59
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v32), !60

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1():
        v33 = get_local ptr { u64 }, __matched_value_30, !61
        v34 = const u64 0
        v35 = get_elem_ptr v33, ptr u64, v34, !62
        v36 = load v35, !63
        v37 = const u64 1, !19
        v38 = cmp eq v36 v37, !65
        cbr v38, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3(), !66

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2():
        v39 = const u64 0, !67
        v40 = gtf v39, 259, !69
        v41 = bitcast v40 to u64, !70
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v41), !71

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3():
        v42 = const u64 14757395258967588866, !47
        revert v42, !72

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v43: u64):
        v44 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0000, !75
        v45 = const u64 0
        v46 = get_elem_ptr v44, ptr u64, v45, !76
        v47 = const u64 0, !74
        store v47 to v46, !77
        v48 = load v44, !78
        v49 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !80
        store v48 to v49, !81
        v50 = const u64 0, !82
        br only_owner_0_msg_sender_10_caller_address_12_while(v50), !83

        only_owner_0_msg_sender_10_caller_address_12_while(v51: u64):
        v52 = cmp lt v51 v43, !85
        cbr v52, only_owner_0_msg_sender_10_caller_address_12_while_body(), only_owner_0_msg_sender_10_caller_address_12_end_while(), !86

        only_owner_0_msg_sender_10_caller_address_12_while_body():
        v53 = asm(input: v51) -> u64 input, !90 {
        }
        v54 = get_local ptr { u64 }, __ret_val
        v55 = call input_type_17(v53, v54)
        v56 = load v55
        v57 = get_local ptr { u64 }, type_of_input, !92
        store v56 to v57, !93
        v58 = get_local ptr { u64 }, type_of_input, !95
        v59 = load v58, !96
        v60 = get_local ptr { u64 }, __matched_value_2, !98
        store v59 to v60, !99
        v61 = get_local ptr { u64 }, __matched_value_2, !100
        v62 = const u64 0
        v63 = get_elem_ptr v61, ptr u64, v62, !101
        v64 = load v63, !102
        v65 = const u64 0, !94
        v66 = cmp eq v64 v65, !104
        v67 = const unit (), !105
        cbr v66, only_owner_0_msg_sender_10_caller_address_12_block5(v67), only_owner_0_msg_sender_10_caller_address_12_block1(), !106

        only_owner_0_msg_sender_10_caller_address_12_block1():
        v68 = get_local ptr { u64 }, __matched_value_2, !107
        v69 = const u64 0
        v70 = get_elem_ptr v68, ptr u64, v69, !108
        v71 = load v70, !109
        v72 = const u64 2, !94
        v73 = cmp eq v71 v72, !111
        v74 = const unit (), !112
        cbr v73, only_owner_0_msg_sender_10_caller_address_12_block5(v74), only_owner_0_msg_sender_10_caller_address_12_block3(), !113

        only_owner_0_msg_sender_10_caller_address_12_block3():
        v75 = const u64 1, !114
        v76 = call add_19(v51, v75), !116
        br only_owner_0_msg_sender_10_caller_address_12_while(v76), !117

        only_owner_0_msg_sender_10_caller_address_12_block5(v77: ()):
        v78 = asm(input: v51) -> u64 input, !119 {
        }
        v79 = get_local ptr { u64 }, __ret_val0
        v80 = call input_type_17(v78, v79)
        v81 = load v80
        v82 = get_local ptr { u64 }, __matched_value_6, !122
        store v81 to v82, !123
        v83 = get_local ptr { u64 }, __matched_value_6, !125
        v84 = const u64 0
        v85 = get_elem_ptr v83, ptr u64, v84, !126
        v86 = load v85, !127
        v87 = const u64 0, !124
        v88 = cmp eq v86 v87, !129
        cbr v88, only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0(), only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1(), !130

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0():
        v89 = get_local ptr { u64, ( () | { b256 } ) }, __anon_01, !131
        v90 = const u64 0
        v91 = get_elem_ptr v89, ptr u64, v90, !132
        v92 = const u64 1, !74
        store v92 to v91, !133
        v93 = gtf v78, 515, !135
        v94 = int_to_ptr v93 to ptr b256, !136
        v95 = load v94, !137
        v96 = get_local ptr b256, __tmp_arg5
        store v95 to v96
        v97 = get_local ptr { b256 }, __ret_val1
        v98 = call from_22(v96, v97)
        v99 = load v98
        v100 = const u64 1
        v101 = const u64 1
        v102 = get_elem_ptr v89, ptr { b256 }, v100, v101, !138
        store v99 to v102, !139
        v103 = load v89, !140
        v104 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_block_arg0
        store v103 to v104
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v104), !141

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1():
        v105 = get_local ptr { u64, ( () | { b256 } ) }, __anon_11, !142
        v106 = const u64 0
        v107 = get_elem_ptr v105, ptr u64, v106, !143
        v108 = const u64 0, !74
        store v108 to v107, !144
        v109 = load v105, !145
        v110 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_block_arg0
        store v109 to v110
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v110), !146

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v111: ptr { u64, ( () | { b256 } ) }):
        v112 = load v111
        v113 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !148
        store v112 to v113, !149
        v114 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !151
        v115 = load v114, !152
        v116 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !155
        store v115 to v116, !156
        v117 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !158
        v118 = const u64 0
        v119 = get_elem_ptr v117, ptr u64, v118, !159
        v120 = load v119, !160
        v121 = const u64 1, !157
        v122 = cmp eq v120 v121, !162
        v123 = const bool false, !163
        cbr v122, only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v123), only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1(), !164

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1():
        v124 = const bool true, !165
        br only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v124), !166

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v125: bool):
        cbr v125, only_owner_0_msg_sender_10_caller_address_12_block6(), only_owner_0_msg_sender_10_caller_address_12_block7(), !167

        only_owner_0_msg_sender_10_caller_address_12_block6():
        v126 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !169
        v127 = load v126, !170
        v128 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !172
        store v127 to v128, !173
        v129 = const u64 1, !174
        v130 = call add_19(v51, v129), !176
        br only_owner_0_msg_sender_10_caller_address_12_while(v130), !177

        only_owner_0_msg_sender_10_caller_address_12_block7():
        v131 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !179
        v132 = load v131, !180
        v133 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_arg8
        store v132 to v133
        v134 = get_local ptr { b256 }, __ret_val4
        v135 = call unwrap_24(v133, v134)
        v136 = load v135
        v137 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !182
        v138 = load v137, !183
        v139 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_arg9
        store v138 to v139
        v140 = get_local ptr { b256 }, __ret_val5
        v141 = call unwrap_24(v139, v140)
        v142 = load v141
        v143 = get_local ptr { b256 }, __tmp_arg
        store v136 to v143
        v144 = get_local ptr { b256 }, __tmp_arg0
        store v142 to v144
        v145 = call eq_6(v143, v144)
        cbr v145, only_owner_0_msg_sender_10_caller_address_12_block9(), only_owner_0_msg_sender_10_caller_address_12_block10(), !185

        only_owner_0_msg_sender_10_caller_address_12_block9():
        v146 = const u64 1, !186
        v147 = call add_19(v51, v146), !188
        br only_owner_0_msg_sender_10_caller_address_12_while(v147), !189

        only_owner_0_msg_sender_10_caller_address_12_block10():
        v148 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_10, !192
        v149 = const u64 0
        v150 = get_elem_ptr v148, ptr u64, v149, !193
        v151 = const u64 1, !191
        store v151 to v150, !194
        v152 = get_local ptr { u64 }, __anon_20, !196
        v153 = const u64 0
        v154 = get_elem_ptr v152, ptr u64, v153, !197
        v155 = const u64 0, !195
        store v155 to v154, !198
        v156 = load v152, !199
        v157 = const u64 1
        v158 = const u64 1
        v159 = get_elem_ptr v148, ptr { u64 }, v157, v158, !200
        store v156 to v159, !201
        v160 = load v148, !202
        v161 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg2
        store v160 to v161
        br only_owner_0_msg_sender_10_block10(v161), !204

        only_owner_0_msg_sender_10_caller_address_12_end_while():
        v162 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !206
        v163 = load v162, !207
        v164 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !209
        store v163 to v164, !210
        v165 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !211
        v166 = const u64 0
        v167 = get_elem_ptr v165, ptr u64, v166, !212
        v168 = load v167, !213
        v169 = const u64 1, !205
        v170 = cmp eq v168 v169, !215
        cbr v170, only_owner_0_msg_sender_10_caller_address_12_block12(), only_owner_0_msg_sender_10_caller_address_12_block13(), !216

        only_owner_0_msg_sender_10_caller_address_12_block12():
        v171 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !217
        v172 = const u64 1
        v173 = const u64 1
        v174 = get_elem_ptr v171, ptr { b256 }, v172, v173, !218
        v175 = load v174, !219
        v176 = get_local ptr { b256 }, address, !221
        store v175 to v176, !222
        v177 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_30, !223
        v178 = const u64 0
        v179 = get_elem_ptr v177, ptr u64, v178, !224
        v180 = const u64 0, !191
        store v180 to v179, !225
        v181 = get_local ptr { b256 }, address, !227
        v182 = load v181, !228
        v183 = const u64 1
        v184 = const u64 0
        v185 = get_elem_ptr v177, ptr { b256 }, v183, v184, !229
        store v182 to v185, !230
        v186 = load v177, !231
        v187 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg1
        store v186 to v187
        br only_owner_0_msg_sender_10_caller_address_12_block17(v187), !232

        only_owner_0_msg_sender_10_caller_address_12_block13():
        v188 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !233
        v189 = const u64 0
        v190 = get_elem_ptr v188, ptr u64, v189, !234
        v191 = load v190, !235
        v192 = const u64 0, !205
        v193 = cmp eq v191 v192, !237
        cbr v193, only_owner_0_msg_sender_10_caller_address_12_block14(), only_owner_0_msg_sender_10_caller_address_12_block15(), !238

        only_owner_0_msg_sender_10_caller_address_12_block14():
        v194 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_40, !239
        v195 = const u64 0
        v196 = get_elem_ptr v194, ptr u64, v195, !240
        v197 = const u64 1, !191
        store v197 to v196, !241
        v198 = get_local ptr { u64 }, __anon_5, !242
        v199 = const u64 0
        v200 = get_elem_ptr v198, ptr u64, v199, !243
        v201 = const u64 1, !195
        store v201 to v200, !244
        v202 = load v198, !245
        v203 = const u64 1
        v204 = const u64 1
        v205 = get_elem_ptr v194, ptr { u64 }, v203, v204, !246
        store v202 to v205, !247
        v206 = load v194, !248
        v207 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg1
        store v206 to v207
        br only_owner_0_msg_sender_10_caller_address_12_block17(v207), !249

        only_owner_0_msg_sender_10_caller_address_12_block15():
        v208 = const u64 14757395258967588866, !208
        revert v208, !250

        only_owner_0_msg_sender_10_caller_address_12_block17(v209: ptr { u64, ( { b256 } | { u64 } ) }):
        v210 = load v209
        v211 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg2
        store v210 to v211
        br only_owner_0_msg_sender_10_block10(v211), !251

        only_owner_0_msg_sender_10_block10(v212: ptr { u64, ( { b256 } | { u64 } ) }):
        v213 = load v212
        v214 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !253
        store v213 to v214, !254
        v215 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !255
        v216 = const u64 0
        v217 = get_elem_ptr v215, ptr u64, v216, !256
        v218 = load v217, !257
        v219 = const u64 1, !16
        v220 = cmp eq v218 v219, !259
        cbr v220, only_owner_0_msg_sender_10_block1(), only_owner_0_msg_sender_10_block2(), !260

        only_owner_0_msg_sender_10_block1():
        v221 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !261
        v222 = const u64 1
        v223 = const u64 1
        v224 = get_elem_ptr v221, ptr { u64 }, v222, v223, !262
        v225 = load v224, !263
        v226 = get_local ptr { u64 }, err, !265
        store v225 to v226, !266
        v227 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_000, !267
        v228 = const u64 0
        v229 = get_elem_ptr v227, ptr u64, v228, !268
        v230 = const u64 1, !191
        store v230 to v229, !269
        v231 = get_local ptr { u64 }, err, !271
        v232 = load v231, !272
        v233 = const u64 1
        v234 = const u64 1
        v235 = get_elem_ptr v227, ptr { u64 }, v233, v234, !273
        store v232 to v235, !274
        v236 = load v227, !275
        v237 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg3
        store v236 to v237
        br only_owner_0_msg_sender_10_block6(v237), !276

        only_owner_0_msg_sender_10_block2():
        v238 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !277
        v239 = const u64 0
        v240 = get_elem_ptr v238, ptr u64, v239, !278
        v241 = load v240, !279
        v242 = const u64 0, !16
        v243 = cmp eq v241 v242, !281
        cbr v243, only_owner_0_msg_sender_10_block3(), only_owner_0_msg_sender_10_block4(), !282

        only_owner_0_msg_sender_10_block3():
        v244 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !283
        v245 = const u64 1
        v246 = const u64 0
        v247 = get_elem_ptr v244, ptr { b256 }, v245, v246, !284
        v248 = load v247, !285
        v249 = get_local ptr { b256 }, owner, !287
        store v248 to v249, !288
        v250 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_1, !289
        v251 = const u64 0
        v252 = get_elem_ptr v250, ptr u64, v251, !290
        v253 = const u64 0, !191
        store v253 to v252, !291
        v254 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !294
        v255 = const u64 0
        v256 = get_elem_ptr v254, ptr u64, v255, !295
        v257 = const u64 0, !293
        store v257 to v256, !296
        v258 = get_local ptr { b256 }, owner, !298
        v259 = load v258, !299
        v260 = const u64 1
        v261 = const u64 0
        v262 = get_elem_ptr v254, ptr { b256 }, v260, v261, !300
        store v259 to v262, !301
        v263 = load v254, !302
        v264 = const u64 1
        v265 = const u64 0
        v266 = get_elem_ptr v250, ptr { u64, ( { b256 } | { b256 } ) }, v264, v265, !303
        store v263 to v266, !304
        v267 = load v250, !305
        v268 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg3
        store v267 to v268
        br only_owner_0_msg_sender_10_block6(v268), !306

        only_owner_0_msg_sender_10_block4():
        v269 = const u64 14757395258967588866, !252
        revert v269, !307

        only_owner_0_msg_sender_10_block6(v270: ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v271 = load v270
        v272 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg4
        store v271 to v272
        br only_owner_0_msg_sender_10_block8(v272), !308

        only_owner_0_msg_sender_10_block7():
        v273 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_3, !309
        v274 = const u64 0
        v275 = get_elem_ptr v273, ptr u64, v274, !310
        v276 = const u64 0, !191
        store v276 to v275, !311
        v277 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_4, !312
        v278 = const u64 0
        v279 = get_elem_ptr v277, ptr u64, v278, !313
        v280 = const u64 1, !293
        store v280 to v279, !314
        v281 = asm(r1) -> ptr b256 r1 {
            gm     r1 i2, !315
        }
        v282 = load v281
        v283 = get_local ptr b256, __tmp_arg6
        store v282 to v283
        v284 = get_local ptr { b256 }, __ret_val2
        v285 = call from_22(v283, v284)
        v286 = load v285
        v287 = const u64 1
        v288 = const u64 1
        v289 = get_elem_ptr v277, ptr { b256 }, v287, v288, !316
        store v286 to v289, !317
        v290 = load v277, !318
        v291 = const u64 1
        v292 = const u64 0
        v293 = get_elem_ptr v273, ptr { u64, ( { b256 } | { b256 } ) }, v291, v292, !319
        store v290 to v293, !320
        v294 = load v273, !321
        v295 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg4
        store v294 to v295
        br only_owner_0_msg_sender_10_block8(v295), !322

        only_owner_0_msg_sender_10_block8(v296: ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v297 = load v296
        v298 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !325
        store v297 to v298, !326
        v299 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !328
        v300 = const u64 0
        v301 = get_elem_ptr v299, ptr u64, v300, !329
        v302 = load v301, !330
        v303 = const u64 0, !327
        v304 = cmp eq v302 v303, !332
        cbr v304, only_owner_0_unwrap_9_block0(), only_owner_0_unwrap_9_block1(), !333

        only_owner_0_unwrap_9_block0():
        v305 = get_local ptr b256, __const
        v306 = load v305
        v307 = get_local ptr b256, __const0
        v308 = load v307
        v309 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !334
        v310 = const u64 1
        v311 = const u64 0
        v312 = get_elem_ptr v309, ptr { u64, ( { b256 } | { b256 } ) }, v310, v311, !335
        v313 = load v312, !336
        v314 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !338
        store v313 to v314, !339
        v315 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !341
        v316 = load v315, !342
        v317 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_00, !343
        v318 = const u64 0
        v319 = get_elem_ptr v317, ptr u64, v318, !344
        v320 = const u64 0, !293
        store v320 to v319, !345
        v321 = get_local ptr { b256, u64, b256 }, __anon_02, !348
        v322 = const u64 0
        v323 = get_elem_ptr v321, ptr b256, v322, !349
        store v306 to v323, !350
        v324 = const u64 1
        v325 = get_elem_ptr v321, ptr u64, v324, !351
        v326 = const u64 0
        store v326 to v325, !352
        v327 = const u64 2
        v328 = get_elem_ptr v321, ptr b256, v327, !353
        store v308 to v328, !354
        v329 = load v321, !355
        v330 = get_local ptr { b256, u64, b256 }, __tmp_arg12
        store v329 to v330
        v331 = get_local ptr b256, __ret_val10
        v332 = call slot_51(v330, v331)
        v333 = load v332
        v334 = get_local ptr { b256, u64, b256 }, __tmp_arg10
        store v329 to v334
        v335 = call offset_46(v334)
        v336 = const u64 8, !357
        v337 = mul v335, v336, !363
        v338 = const u64 32
        v339 = add v337, v338, !365
        v340 = const u64 31, !366
        v341 = add v339, v340, !368
        v342 = const u64 5, !369
        v343 = rsh v341, v342, !371
        v344 = const u64 4, !372
        v345 = mod v335, v344, !374
        v346 = const u64 8, !375
        v347 = mul v345, v346, !377
        v348 = add v347, v338, !379
        v349 = const u64 31, !380
        v350 = add v348, v349, !382
        v351 = const u64 5, !383
        v352 = rsh v350, v351, !385
        v353 = get_local ptr b256, __asm_arg
        store v333 to v353
        v354 = asm(input: v353) -> ptr u256 input {
        }
        v355 = load v354
        v356 = get_local ptr u256, offset_slot0, !387
        store v355 to v356, !388
        v357 = get_local ptr u256, offset_slot0, !390
        v358 = load v357, !391
        v359 = get_local ptr u256, __ret_val6
        v360 = call as_u256_40(v343, v359)
        v361 = load v360
        v362 = get_local ptr u256, __ret_val7
        v363 = call as_u256_40(v352, v362)
        v364 = load v363
        v365 = get_local ptr u256, __wide_lhs
        store v361 to v365
        v366 = get_local ptr u256, __wide_rhs
        store v364 to v366
        v367 = get_local ptr u256, __wide_result, !393
        wide sub v365, v366 to v367, !393
        v368 = load v367, !393
        v369 = get_local ptr u256, __wide_lhs0, !391
        store v358 to v369, !391
        v370 = get_local ptr u256, __wide_rhs0, !393
        store v368 to v370, !393
        v371 = get_local ptr u256, __wide_result0, !395
        wide add v369, v370 to v371, !395
        v372 = load v371, !395
        v373 = get_local ptr u256, offset_slot0, !396
        store v372 to v373, !397
        v374 = get_local ptr u256, offset_slot0, !399
        v375 = load v374, !400
        v376 = get_local ptr u256, __asm_arg0
        store v375 to v376
        v377 = asm(input: v376) -> ptr b256 input {
        }
        v378 = load v377
        v379 = get_local ptr { b256, u64, u64 }, __anon_0001, !402
        v380 = const u64 0
        v381 = get_elem_ptr v379, ptr b256, v380, !403
        store v378 to v381, !404
        v382 = const u64 1
        v383 = get_elem_ptr v379, ptr u64, v382, !405
        store v352 to v383, !406
        v384 = const u64 2
        v385 = get_elem_ptr v379, ptr u64, v384, !407
        store v345 to v385, !408
        v386 = load v379, !409
        v387 = get_local ptr { b256, u64, u64 }, __tuple_2, !411
        store v386 to v387, !412
        v388 = get_local ptr { b256, u64, u64 }, __tuple_2, !413
        v389 = load v388, !414
        v390 = get_local ptr { b256, u64, u64 }, __tuple_2_, !415
        store v389 to v390, !416
        v391 = get_local ptr { b256, u64, u64 }, __tuple_2_, !417
        v392 = const u64 0
        v393 = get_elem_ptr v391, ptr b256, v392, !418
        v394 = load v393, !419
        v395 = get_local ptr b256, offset_slot, !420
        store v394 to v395, !421
        v396 = get_local ptr { b256, u64, u64 }, __tuple_2_, !422
        v397 = const u64 1
        v398 = get_elem_ptr v396, ptr u64, v397, !423
        v399 = load v398, !424
        v400 = get_local ptr { b256, u64, u64 }, __tuple_2_, !425
        v401 = const u64 2
        v402 = get_elem_ptr v400, ptr u64, v401, !426
        v403 = load v402, !427
        v404 = const u64 32, !428
        v405 = mul v399, v404, !430
        v406 = const u64 8
        v407 = mul v406, v405, !434
        v408 = asm(size: v407, ptr) -> u64 ptr, !436 {
            aloc   size, !437
            move   ptr hp, !438
        }
        v409 = get_local ptr b256, offset_slot, !440
        v410 = load v409, !441
        v411 = get_local ptr b256, key_for_storage, !443
        store v410 to v411, !444
        v412 = int_to_ptr v408 to ptr b256, !445
        v413 = state_load_quad_word v412, key v411, v399, !446
        cbr v413, only_owner_0_get_owner_27_read_28_read_30_block3(), only_owner_0_get_owner_27_read_28_read_30_block4(), !447

        only_owner_0_unwrap_9_block1():
        v414 = const u64 0, !448
        revert v414, !450

        only_owner_0_get_owner_27_read_28_read_30_block3():
        v415 = get_local ptr { u64, ( () | b256 ) }, __anon_12, !451
        v416 = const u64 0
        v417 = get_elem_ptr v415, ptr u64, v416, !452
        v418 = const u64 1, !74
        store v418 to v417, !453
        v419 = const u64 8
        v420 = mul v419, v403, !455
        v421 = add v408, v420, !456
        v422 = asm(ptr: v421) -> ptr b256 ptr {
        }
        v423 = load v422
        v424 = const u64 1
        v425 = const u64 1
        v426 = get_elem_ptr v415, ptr b256, v424, v425, !457
        store v423 to v426, !458
        v427 = load v415, !459
        v428 = get_local ptr { u64, ( () | b256 ) }, __tmp_block_arg5
        store v427 to v428
        br only_owner_0_get_owner_27_read_28_read_30_block5(v428), !460

        only_owner_0_get_owner_27_read_28_read_30_block4():
        v429 = get_local ptr { u64, ( () | b256 ) }, __anon_21, !461
        v430 = const u64 0
        v431 = get_elem_ptr v429, ptr u64, v430, !462
        v432 = const u64 0, !74
        store v432 to v431, !463
        v433 = load v429, !464
        v434 = get_local ptr { u64, ( () | b256 ) }, __tmp_block_arg5
        store v433 to v434
        br only_owner_0_get_owner_27_read_28_read_30_block5(v434), !465

        only_owner_0_get_owner_27_read_28_read_30_block5(v435: ptr { u64, ( () | b256 ) }):
        v436 = load v435
        v437 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !468
        store v436 to v437, !469
        v438 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !471
        v439 = const u64 0
        v440 = get_elem_ptr v438, ptr u64, v439, !472
        v441 = load v440, !473
        v442 = const u64 1, !470
        v443 = cmp eq v441 v442, !475
        cbr v443, only_owner_0_get_owner_27_read_28_unwrap_29_block0(), only_owner_0_get_owner_27_read_28_unwrap_29_block1(), !476

        only_owner_0_get_owner_27_read_28_unwrap_29_block0():
        v444 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !477
        v445 = const u64 1
        v446 = const u64 1
        v447 = get_elem_ptr v444, ptr b256, v445, v446, !478
        v448 = load v447, !479
        v449 = get_local ptr b256, inner_value0, !481
        store v448 to v449, !482
        v450 = get_local ptr b256, inner_value0, !484
        v451 = load v450, !485
        v452 = get_local ptr b256, __tmp_arg7
        store v451 to v452
        v453 = get_local ptr { b256 }, __ret_val3
        v454 = call from_22(v452, v453)
        v455 = load v454
        v456 = const u64 1
        v457 = const u64 0
        v458 = get_elem_ptr v317, ptr { b256 }, v456, v457, !486
        store v455 to v458, !487
        v459 = load v317, !5
        v460 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_03, !490
        v461 = const u64 0
        v462 = get_elem_ptr v460, ptr { u64, ( { b256 } | { b256 } ) }, v461, !491
        store v316 to v462, !492
        v463 = const u64 1
        v464 = get_elem_ptr v460, ptr { u64, ( { b256 } | { b256 } ) }, v463, !493
        store v459 to v464, !494
        v465 = load v460, !495
        v466 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !497
        store v465 to v466, !498
        v467 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !499
        v468 = const u64 0
        v469 = get_elem_ptr v467, ptr { u64, ( { b256 } | { b256 } ) }, v468, !501
        v470 = const u64 0
        v471 = get_elem_ptr v469, ptr u64, v470, !502
        v472 = load v471, !503
        v473 = const u64 0, !500
        v474 = cmp eq v472 v473, !505
        cbr v474, only_owner_0_eq_4_block0(), only_owner_0_eq_4_block1(v474), !506

        only_owner_0_get_owner_27_read_28_unwrap_29_block1():
        v475 = const u64 0, !507
        revert v475, !509

        only_owner_0_eq_4_block0():
        v476 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !510
        v477 = const u64 1
        v478 = get_elem_ptr v476, ptr { u64, ( { b256 } | { b256 } ) }, v477, !511
        v479 = const u64 0
        v480 = get_elem_ptr v478, ptr u64, v479, !512
        v481 = load v480, !513
        v482 = const u64 0, !500
        v483 = cmp eq v481 v482, !514
        br only_owner_0_eq_4_block1(v483), !515

        only_owner_0_eq_4_block1(v484: bool):
        cbr v484, only_owner_0_eq_4_block2(), only_owner_0_eq_4_block3(), !516

        only_owner_0_eq_4_block2():
        v485 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !517
        v486 = const u64 0
        v487 = get_elem_ptr v485, ptr { u64, ( { b256 } | { b256 } ) }, v486, !518
        v488 = const u64 1
        v489 = const u64 0
        v490 = get_elem_ptr v487, ptr { b256 }, v488, v489, !519
        v491 = load v490, !520
        v492 = get_local ptr { b256 }, addr1, !522
        store v491 to v492, !523
        v493 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !524
        v494 = const u64 1
        v495 = get_elem_ptr v493, ptr { u64, ( { b256 } | { b256 } ) }, v494, !525
        v496 = const u64 1
        v497 = const u64 0
        v498 = get_elem_ptr v495, ptr { b256 }, v496, v497, !526
        v499 = load v498, !527
        v500 = get_local ptr { b256 }, addr2, !529
        store v499 to v500, !530
        v501 = get_local ptr { b256 }, addr1, !532
        v502 = load v501, !533
        v503 = get_local ptr { b256 }, addr2, !535
        v504 = load v503, !536
        v505 = get_local ptr { b256 }, __tmp_arg1
        store v502 to v505
        v506 = get_local ptr { b256 }, __tmp_arg2
        store v504 to v506
        v507 = call eq_6(v505, v506)
        br only_owner_0_eq_4_block9(v507), !537

        only_owner_0_eq_4_block3():
        v508 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !538
        v509 = const u64 0
        v510 = get_elem_ptr v508, ptr { u64, ( { b256 } | { b256 } ) }, v509, !540
        v511 = const u64 0
        v512 = get_elem_ptr v510, ptr u64, v511, !541
        v513 = load v512, !542
        v514 = const u64 1, !539
        v515 = cmp eq v513 v514, !544
        cbr v515, only_owner_0_eq_4_block4(), only_owner_0_eq_4_block5(v515), !545

        only_owner_0_eq_4_block4():
        v516 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !546
        v517 = const u64 1
        v518 = get_elem_ptr v516, ptr { u64, ( { b256 } | { b256 } ) }, v517, !547
        v519 = const u64 0
        v520 = get_elem_ptr v518, ptr u64, v519, !548
        v521 = load v520, !549
        v522 = const u64 1, !539
        v523 = cmp eq v521 v522, !550
        br only_owner_0_eq_4_block5(v523), !551

        only_owner_0_eq_4_block5(v524: bool):
        v525 = const bool false, !552
        cbr v524, only_owner_0_eq_4_block6(), only_owner_0_eq_4_block8(v525), !553

        only_owner_0_eq_4_block6():
        v526 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !554
        v527 = const u64 0
        v528 = get_elem_ptr v526, ptr { u64, ( { b256 } | { b256 } ) }, v527, !555
        v529 = const u64 1
        v530 = const u64 1
        v531 = get_elem_ptr v528, ptr { b256 }, v529, v530, !556
        v532 = load v531, !557
        v533 = get_local ptr { b256 }, id1, !559
        store v532 to v533, !560
        v534 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !561
        v535 = const u64 1
        v536 = get_elem_ptr v534, ptr { u64, ( { b256 } | { b256 } ) }, v535, !562
        v537 = const u64 1
        v538 = const u64 1
        v539 = get_elem_ptr v536, ptr { b256 }, v537, v538, !563
        v540 = load v539, !564
        v541 = get_local ptr { b256 }, id2, !566
        store v540 to v541, !567
        v542 = get_local ptr { b256 }, id1, !569
        v543 = load v542, !570
        v544 = get_local ptr { b256 }, id2, !572
        v545 = load v544, !573
        v546 = get_local ptr { b256 }, __tmp_arg3
        store v543 to v546
        v547 = get_local ptr { b256 }, __tmp_arg4
        store v545 to v547
        v548 = call eq_6(v546, v547)
        br only_owner_0_eq_4_block8(v548), !574

        only_owner_0_eq_4_block8(v549: bool):
        br only_owner_0_eq_4_block9(v549), !575

        only_owner_0_eq_4_block9(v550: bool):
        v551 = const bool false, !577
        v552 = cmp eq v550 v551, !581
        cbr v552, only_owner_0_assert_1_block0(), only_owner_0_assert_1_block1(), !582

        only_owner_0_assert_1_block0():
        v553 = const u64 18446744073709486084, !584
        revert v553, !586

        only_owner_0_assert_1_block1():
        v554 = get_local ptr b256, __const1
        v555 = load v554
        v556 = get_local ptr b256, __const2
        v557 = load v556
        v558 = get_local ptr { b256, u64, b256 }, __anon_0, !587
        v559 = const u64 0
        v560 = get_elem_ptr v558, ptr b256, v559
        store v555 to v560, !587
        v561 = const u64 1
        v562 = get_elem_ptr v558, ptr u64, v561
        v563 = const u64 0
        store v563 to v562, !587
        v564 = const u64 2
        v565 = get_elem_ptr v558, ptr b256, v564
        store v557 to v565, !587
        v566 = load v558
        v567 = get_local ptr { b256, u64, b256 }, __tmp_arg13
        store v566 to v567
        v568 = get_local ptr b256, __ret_val11
        v569 = call slot_51(v567, v568)
        v570 = load v569
        v571 = get_local ptr { b256, u64, b256 }, __tmp_arg11
        store v566 to v571
        v572 = call offset_46(v571)
        v573 = const u64 8, !357
        v574 = mul v572, v573, !591
        v575 = const u64 8
        v576 = add v574, v575, !592
        v577 = const u64 31, !366
        v578 = add v576, v577, !593
        v579 = const u64 5, !369
        v580 = rsh v578, v579, !594
        v581 = const u64 4, !372
        v582 = mod v572, v581, !595
        v583 = get_local ptr b256, __asm_arg1
        store v570 to v583
        v584 = asm(input: v583) -> ptr u256 input {
        }
        v585 = load v584
        v586 = get_local ptr u256, offset_slot00, !596
        store v585 to v586, !597
        v587 = get_local ptr u256, offset_slot00, !598
        v588 = load v587, !599
        v589 = get_local ptr u256, __ret_val8
        v590 = call as_u256_40(v580, v589)
        v591 = load v590
        v592 = get_local ptr u256, __ret_val9
        v593 = const u64 1, !600
        v594 = call as_u256_40(v593, v592)
        v595 = load v594
        v596 = get_local ptr u256, __wide_lhs1
        store v591 to v596
        v597 = get_local ptr u256, __wide_rhs1
        store v595 to v597
        v598 = get_local ptr u256, __wide_result1, !601
        wide sub v596, v597 to v598, !601
        v599 = load v598, !601
        v600 = get_local ptr u256, __wide_lhs2, !599
        store v588 to v600, !599
        v601 = get_local ptr u256, __wide_rhs2, !601
        store v599 to v601, !601
        v602 = get_local ptr u256, __wide_result2, !602
        wide add v600, v601 to v602, !602
        v603 = load v602, !602
        v604 = get_local ptr u256, offset_slot00, !603
        store v603 to v604, !604
        v605 = get_local ptr u256, offset_slot00, !605
        v606 = load v605, !606
        v607 = get_local ptr u256, __asm_arg2
        store v606 to v607
        v608 = asm(input: v607) -> ptr b256 input {
        }
        v609 = load v608
        v610 = get_local ptr { b256, u64, u64 }, __anon_04, !607
        v611 = const u64 0
        v612 = get_elem_ptr v610, ptr b256, v611, !608
        store v609 to v612, !609
        v613 = const u64 1
        v614 = get_elem_ptr v610, ptr u64, v613, !610
        store v593 to v614, !611
        v615 = const u64 2
        v616 = get_elem_ptr v610, ptr u64, v615, !612
        store v582 to v616, !613
        v617 = load v610, !614
        v618 = get_local ptr { b256, u64, u64 }, __tuple_1, !616
        store v617 to v618, !617
        v619 = get_local ptr { b256, u64, u64 }, __tuple_1, !618
        v620 = load v619, !619
        v621 = get_local ptr { b256, u64, u64 }, __tuple_1_, !620
        store v620 to v621, !621
        v622 = get_local ptr { b256, u64, u64 }, __tuple_1_, !622
        v623 = const u64 0
        v624 = get_elem_ptr v622, ptr b256, v623, !623
        v625 = load v624, !624
        v626 = get_local ptr b256, offset_slot1, !625
        store v625 to v626, !626
        v627 = get_local ptr { b256, u64, u64 }, __tuple_1_, !627
        v628 = const u64 1
        v629 = get_elem_ptr v627, ptr u64, v628, !628
        v630 = load v629, !629
        v631 = get_local ptr { b256, u64, u64 }, __tuple_1_, !630
        v632 = const u64 2
        v633 = get_elem_ptr v631, ptr u64, v632, !631
        v634 = load v633, !632
        v635 = const u64 32, !633
        v636 = mul v630, v635, !635
        v637 = mul v406, v636, !637
        v638 = asm(size: v637, ptr) -> u64 ptr, !638 {
            aloc   size, !437
            move   ptr hp, !438
        }
        v639 = get_local ptr b256, offset_slot1, !640
        v640 = load v639, !641
        v641 = get_local ptr b256, key_for_storage0, !643
        store v640 to v641, !644
        v642 = int_to_ptr v638 to ptr b256, !645
        v643 = state_load_quad_word v642, key v641, v630, !646
        v644 = mul v419, v634, !648
        v645 = add v638, v644, !649
        v646 = asm(ptr: v645, val: new_value) {
            sw     ptr val i0, !651
        }
        v647 = get_local ptr b256, offset_slot1, !653
        v648 = load v647, !654
        v649 = get_local ptr b256, key_for_storage_, !656
        store v648 to v649, !657
        v650 = int_to_ptr v638 to ptr b256, !658
        v651 = state_store_quad_word v650, key v649, v630, !659
        v652 = const unit ()
        ret () v652
    }

    pub fn eq_6(self: ptr { b256 }, other: ptr { b256 }) -> bool, !661 {
        local b256 __wide_lhs
        local b256 __wide_rhs

        entry(self: ptr { b256 }, other: ptr { b256 }):
        v0 = load self
        v1 = load other
        v2 = ptr_to_int self to u64
        v3 = int_to_ptr v2 to ptr { b256 }
        v4 = const u64 0
        v5 = get_elem_ptr v3, ptr b256, v4, !662
        v6 = load v5
        v7 = ptr_to_int other to u64
        v8 = int_to_ptr v7 to ptr { b256 }
        v9 = const u64 0
        v10 = get_elem_ptr v8, ptr b256, v9, !662
        v11 = load v10
        v12 = get_local ptr b256, __wide_lhs
        store v6 to v12
        v13 = get_local ptr b256, __wide_rhs
        store v11 to v13
        v14 = wide cmp eq v12 v13, !663
        ret bool v14
    }

    pub fn input_type_17(index !664: u64, __ret_value: ptr { u64 }) -> ptr { u64 }, !665 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local { u64 } __tmp_block_arg
        local { u64 } __tmp_block_arg0

        entry(index: u64, __ret_value: ptr { u64 }):
        v0 = gtf index, 512, !666
        v1 = bitcast v0 to u8, !666
        v2 = const u8 0, !667
        v3 = cmp eq v1 v2, !668
        cbr v3, block0(), block1(), !668

        block0():
        v4 = get_local ptr { u64 }, __anon_0, !669
        v5 = const u64 0
        v6 = get_elem_ptr v4, ptr u64, v5, !669
        v7 = const u64 0, !669
        store v7 to v6, !669
        v8 = load v4
        v9 = get_local ptr { u64 }, __tmp_block_arg0
        store v8 to v9
        br block8(v9)

        block1():
        v10 = const u8 1, !670
        v11 = cmp eq v1 v10, !671
        cbr v11, block2(), block3(), !671

        block2():
        v12 = get_local ptr { u64 }, __anon_1, !669
        v13 = const u64 0
        v14 = get_elem_ptr v12, ptr u64, v13, !669
        v15 = const u64 1, !669
        store v15 to v14, !669
        v16 = load v12
        v17 = get_local ptr { u64 }, __tmp_block_arg
        store v16 to v17
        br block7(v17)

        block3():
        v18 = const u8 2, !672
        v19 = cmp eq v1 v18, !673
        cbr v19, block4(), block5(), !673

        block4():
        v20 = get_local ptr { u64 }, __anon_2, !669
        v21 = const u64 0
        v22 = get_elem_ptr v20, ptr u64, v21, !669
        v23 = const u64 2, !669
        store v23 to v22, !669
        v24 = load v20
        v25 = get_local ptr { u64 }, __tmp_block_arg
        store v24 to v25
        br block7(v25)

        block5():
        v26 = const u64 0, !674
        revert v26, !676

        block7(v27: ptr { u64 }):
        v28 = load v27
        v29 = get_local ptr { u64 }, __tmp_block_arg0
        store v28 to v29
        br block8(v29)

        block8(v30: ptr { u64 }):
        v31 = load v30
        store v31 to __ret_value
        ret ptr { u64 } __ret_value
    }

    pub fn add_19(self !677: u64, other !678: u64) -> u64, !679 {
        entry(self: u64, other: u64):
        v0 = add self, other
        v1 = const u64 65535, !681
        v2 = cmp gt v0 v1
        cbr v2, block0(), block1(), !682

        block0():
        v3 = const u64 0, !683
        revert v3, !684

        block1():
        ret u64 v0
    }

    pub fn from_22(bits: ptr b256, __ret_value: ptr { b256 }) -> ptr { b256 }, !685 {
        local { b256 } __anon_0

        entry(bits: ptr b256, __ret_value: ptr { b256 }):
        v0 = load bits
        v1 = get_local ptr { b256 }, __anon_0, !686
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2
        store v0 to v3, !686
        v4 = load v1
        store v4 to __ret_value
        ret ptr { b256 } __ret_value
    }

    pub fn unwrap_24(self: ptr { u64, ( () | { b256 } ) }, __ret_value: ptr { b256 }) -> ptr { b256 }, !687 {
        local { u64, ( () | { b256 } ) } __matched_value_4
        local { b256 } inner_value

        entry(self: ptr { u64, ( () | { b256 } ) }, __ret_value: ptr { b256 }):
        v0 = load self
        v1 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !467
        store v0 to v1, !467
        v2 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !470
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !470
        v5 = load v4
        v6 = const u64 1, !470
        v7 = cmp eq v5 v6, !474
        cbr v7, block0(), block1(), !474

        block0():
        v8 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !470
        v9 = const u64 1
        v10 = const u64 1
        v11 = get_elem_ptr v8, ptr { b256 }, v9, v10
        v12 = load v11
        v13 = get_local ptr { b256 }, inner_value, !480
        store v12 to v13, !480
        v14 = get_local ptr { b256 }, inner_value, !483
        v15 = load v14
        store v15 to __ret_value
        ret ptr { b256 } __ret_value

        block1():
        v16 = const u64 0, !507
        revert v16, !688
    }

    pub fn as_u256_40(self !689: u64, __ret_value: ptr u256) -> ptr u256, !690 {
        local { u64, u64, u64, u64 } __anon_0
        local { u64, u64, u64, u64 } input

        entry(self: u64, __ret_value: ptr u256):
        v0 = get_local ptr { u64, u64, u64, u64 }, __anon_0, !691
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr u64, v1, !691
        v3 = const u64 0, !692
        store v3 to v2, !691
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4, !691
        v6 = const u64 0, !693
        store v6 to v5, !691
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr u64, v7, !691
        v9 = const u64 0, !694
        store v9 to v8, !691
        v10 = const u64 3
        v11 = get_elem_ptr v0, ptr u64, v10, !691
        store self to v11, !691
        v12 = load v0
        v13 = get_local ptr { u64, u64, u64, u64 }, input, !695
        store v12 to v13, !695
        v14 = get_local ptr { u64, u64, u64, u64 }, input, !696
        v15 = asm(input: v14) -> ptr u256 input {
        }
        v16 = load v15
        store v16 to __ret_value
        ret ptr u256 __ret_value
    }

    pub fn offset_46(self: ptr { b256, u64, b256 }) -> u64, !698 {
        entry(self: ptr { b256, u64, b256 }):
        v0 = load self
        v1 = ptr_to_int self to u64
        v2 = int_to_ptr v1 to ptr { b256, u64, b256 }
        v3 = const u64 1
        v4 = get_elem_ptr v2, ptr u64, v3, !699
        v5 = load v4
        ret u64 v5
    }

    pub fn slot_51(self: ptr { b256, u64, b256 }, __ret_value: ptr b256) -> ptr b256, !700 {
        entry(self: ptr { b256, u64, b256 }, __ret_value: ptr b256):
        v0 = load self
        v1 = ptr_to_int self to u64
        v2 = int_to_ptr v1 to ptr { b256, u64, b256 }
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr b256, v3, !701
        v5 = load v4
        store v5 to __ret_value
        ret ptr b256 __ret_value
    }
}

// IR: [memcpyopt] Optimizations related to MemCopy instructions
contract {
    pub entry fn set_data_if_owner<c626c6e2>(new_value !1: u64) -> (), !4 {
        local { b256, u64, b256 } __anon_0
        local { u64, ( { b256 } | { b256 } ) } __anon_00
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_000
        local { u64, ( () | { b256 } ) } __anon_0000
        local { u64 } __anon_00000
        local { b256, u64, u64 } __anon_0001
        local { u64, ( () | { b256 } ) } __anon_01
        local { b256, u64, b256 } __anon_02
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __anon_03
        local { b256, u64, u64 } __anon_04
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_1
        local { u64, ( { b256 } | { u64 } ) } __anon_10
        local { u64 } __anon_100
        local { u64, ( () | { b256 } ) } __anon_11
        local { u64, ( () | b256 ) } __anon_12
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64 } __anon_20
        local { u64, ( () | b256 ) } __anon_21
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { u64 } ) } __anon_30
        local { u64, ( { b256 } | { b256 } ) } __anon_4
        local { u64, ( { b256 } | { u64 } ) } __anon_40
        local { u64 } __anon_5
        local b256 __asm_arg
        local u256 __asm_arg0
        local b256 __asm_arg1
        local u256 __asm_arg2
        local b256 __const = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d
        local b256 __const0 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d
        local b256 __const1 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c
        local b256 __const2 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c
        local { u64, ( { b256 } | { u64 } ) } __matched_value_1
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __matched_value_12
        local { u64 } __matched_value_2
        local { u64, ( () | { b256 } ) } __matched_value_3
        local { u64 } __matched_value_30
        local { u64, ( () | { b256 } ) } __matched_value_31
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __matched_value_32
        local { u64, ( () | b256 ) } __matched_value_4
        local { u64 } __matched_value_6
        local { u64 } __ret_val
        local { u64 } __ret_val0
        local { b256 } __ret_val1
        local b256 __ret_val10
        local b256 __ret_val11
        local { b256 } __ret_val2
        local { b256 } __ret_val3
        local { b256 } __ret_val4
        local { b256 } __ret_val5
        local u256 __ret_val6
        local u256 __ret_val7
        local u256 __ret_val8
        local u256 __ret_val9
        local { b256 } __tmp_arg
        local { b256 } __tmp_arg0
        local { b256 } __tmp_arg1
        local { b256, u64, b256 } __tmp_arg10
        local { b256, u64, b256 } __tmp_arg11
        local { b256, u64, b256 } __tmp_arg12
        local { b256, u64, b256 } __tmp_arg13
        local { b256 } __tmp_arg2
        local { b256 } __tmp_arg3
        local { b256 } __tmp_arg4
        local b256 __tmp_arg5
        local b256 __tmp_arg6
        local b256 __tmp_arg7
        local { u64, ( () | { b256 } ) } __tmp_arg8
        local { u64, ( () | { b256 } ) } __tmp_arg9
        local { u64 } __tmp_block_arg
        local { u64, ( () | { b256 } ) } __tmp_block_arg0
        local { u64, ( { b256 } | { u64 } ) } __tmp_block_arg1
        local { u64, ( { b256 } | { u64 } ) } __tmp_block_arg2
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __tmp_block_arg3
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __tmp_block_arg4
        local { u64, ( () | b256 ) } __tmp_block_arg5
        local { b256, u64, u64 } __tuple_1
        local { b256, u64, u64 } __tuple_1_
        local { b256, u64, u64 } __tuple_2
        local { b256, u64, u64 } __tuple_2_
        local u256 __wide_lhs
        local u256 __wide_lhs0
        local u256 __wide_lhs1
        local u256 __wide_lhs2
        local mut u256 __wide_result
        local mut u256 __wide_result0
        local mut u256 __wide_result1
        local mut u256 __wide_result2
        local u256 __wide_rhs
        local u256 __wide_rhs0
        local u256 __wide_rhs1
        local u256 __wide_rhs2
        local { b256 } addr1
        local { b256 } addr2
        local { b256 } address
        local mut { u64, ( () | { b256 } ) } candidate
        local { u64 } err
        local { b256 } id1
        local { b256 } id2
        local { u64, ( { b256 } | { b256 } ) } inner_value
        local b256 inner_value0
        local b256 key_for_storage
        local b256 key_for_storage0
        local b256 key_for_storage_
        local b256 offset_slot
        local mut u256 offset_slot0
        local mut u256 offset_slot00
        local b256 offset_slot1
        local { b256 } owner
        local { u64, ( () | { b256 } ) } owner_of_input
        local { u64 } type_of_input

        entry(new_value: u64):
        v0 = asm(r1) -> bool r1, !11 {
            gm     r1 i1, !12
        }
        cbr v0, only_owner_0_msg_sender_10_block0(), only_owner_0_msg_sender_10_block7(), !13

        only_owner_0_msg_sender_10_block0():
        v1 = const u64 0, !15
        v2 = gtf v1, 1, !21
        v3 = bitcast v2 to u8, !22
        v4 = const u8 0, !23
        v5 = cmp eq v3 v4, !25
        cbr v5, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1(), !26

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0():
        v6 = get_local ptr { u64 }, __anon_00000, !28
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr u64, v7, !29
        v9 = const u64 0, !27
        store v9 to v8, !30
        v10 = load v6, !31
        v11 = get_local ptr { u64 }, __tmp_block_arg
        mem_copy_val v11, v6
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v11), !32

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1():
        v12 = const u8 1, !33
        v13 = cmp eq v3 v12, !35
        cbr v13, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3(), !36

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2():
        v14 = get_local ptr { u64 }, __anon_100, !37
        v15 = const u64 0
        v16 = get_elem_ptr v14, ptr u64, v15, !38
        v17 = const u64 1, !27
        store v17 to v16, !39
        v18 = load v14, !40
        v19 = get_local ptr { u64 }, __tmp_block_arg
        mem_copy_val v19, v14
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v19), !41

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3():
        v20 = const u64 0, !42
        revert v20, !46

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v21: ptr { u64 }):
        v22 = load v21
        v23 = get_local ptr { u64 }, __matched_value_30, !48
        mem_copy_val v23, v21
        v24 = get_local ptr { u64 }, __matched_value_30, !49
        v25 = const u64 0
        v26 = get_elem_ptr v24, ptr u64, v25, !50
        v27 = load v26, !51
        v28 = const u64 0, !19
        v29 = cmp eq v27 v28, !53
        cbr v29, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1(), !54

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0():
        v30 = const u64 0, !55
        v31 = gtf v30, 5, !57
        v32 = bitcast v31 to u64, !58
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v32), !59

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1():
        v33 = get_local ptr { u64 }, __matched_value_30, !60
        v34 = const u64 0
        v35 = get_elem_ptr v33, ptr u64, v34, !61
        v36 = load v35, !62
        v37 = const u64 1, !19
        v38 = cmp eq v36 v37, !64
        cbr v38, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3(), !65

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2():
        v39 = const u64 0, !66
        v40 = gtf v39, 259, !68
        v41 = bitcast v40 to u64, !69
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v41), !70

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3():
        v42 = const u64 14757395258967588866, !47
        revert v42, !71

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v43: u64):
        v44 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0000, !74
        v45 = const u64 0
        v46 = get_elem_ptr v44, ptr u64, v45, !75
        v47 = const u64 0, !73
        store v47 to v46, !76
        v48 = load v44, !77
        v49 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !79
        mem_copy_val v49, v44
        v50 = const u64 0, !80
        br only_owner_0_msg_sender_10_caller_address_12_while(v50), !81

        only_owner_0_msg_sender_10_caller_address_12_while(v51: u64):
        v52 = cmp lt v51 v43, !83
        cbr v52, only_owner_0_msg_sender_10_caller_address_12_while_body(), only_owner_0_msg_sender_10_caller_address_12_end_while(), !84

        only_owner_0_msg_sender_10_caller_address_12_while_body():
        v53 = asm(input: v51) -> u64 input, !88 {
        }
        v54 = get_local ptr { u64 }, __ret_val
        v55 = call input_type_17(v53, v54)
        v56 = load v55
        v57 = get_local ptr { u64 }, type_of_input, !90
        mem_copy_val v57, v55
        v58 = get_local ptr { u64 }, type_of_input, !92
        v59 = load v58, !93
        v60 = get_local ptr { u64 }, __matched_value_2, !95
        mem_copy_val v60, v58
        v61 = get_local ptr { u64 }, __matched_value_2, !96
        v62 = const u64 0
        v63 = get_elem_ptr v61, ptr u64, v62, !97
        v64 = load v63, !98
        v65 = const u64 0, !91
        v66 = cmp eq v64 v65, !100
        v67 = const unit (), !101
        cbr v66, only_owner_0_msg_sender_10_caller_address_12_block5(v67), only_owner_0_msg_sender_10_caller_address_12_block1(), !102

        only_owner_0_msg_sender_10_caller_address_12_block1():
        v68 = get_local ptr { u64 }, __matched_value_2, !103
        v69 = const u64 0
        v70 = get_elem_ptr v68, ptr u64, v69, !104
        v71 = load v70, !105
        v72 = const u64 2, !91
        v73 = cmp eq v71 v72, !107
        v74 = const unit (), !108
        cbr v73, only_owner_0_msg_sender_10_caller_address_12_block5(v74), only_owner_0_msg_sender_10_caller_address_12_block3(), !109

        only_owner_0_msg_sender_10_caller_address_12_block3():
        v75 = const u64 1, !110
        v76 = call add_19(v51, v75), !112
        br only_owner_0_msg_sender_10_caller_address_12_while(v76), !113

        only_owner_0_msg_sender_10_caller_address_12_block5(v77: ()):
        v78 = asm(input: v51) -> u64 input, !115 {
        }
        v79 = get_local ptr { u64 }, __ret_val0
        v80 = call input_type_17(v78, v79)
        v81 = load v80
        v82 = get_local ptr { u64 }, __matched_value_6, !118
        mem_copy_val v82, v80
        v83 = get_local ptr { u64 }, __matched_value_6, !120
        v84 = const u64 0
        v85 = get_elem_ptr v83, ptr u64, v84, !121
        v86 = load v85, !122
        v87 = const u64 0, !119
        v88 = cmp eq v86 v87, !124
        cbr v88, only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0(), only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1(), !125

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0():
        v89 = get_local ptr { u64, ( () | { b256 } ) }, __anon_01, !126
        v90 = const u64 0
        v91 = get_elem_ptr v89, ptr u64, v90, !127
        v92 = const u64 1, !73
        store v92 to v91, !128
        v93 = gtf v78, 515, !130
        v94 = int_to_ptr v93 to ptr b256, !131
        v95 = load v94, !132
        v96 = get_local ptr b256, __tmp_arg5
        mem_copy_val v96, v94
        v97 = get_local ptr { b256 }, __ret_val1
        v98 = call from_22(v96, v97)
        v99 = load v98
        v100 = const u64 1
        v101 = const u64 1
        v102 = get_elem_ptr v89, ptr { b256 }, v100, v101, !133
        mem_copy_val v102, v98
        v103 = load v89, !134
        v104 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_block_arg0
        mem_copy_val v104, v89
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v104), !135

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1():
        v105 = get_local ptr { u64, ( () | { b256 } ) }, __anon_11, !136
        v106 = const u64 0
        v107 = get_elem_ptr v105, ptr u64, v106, !137
        v108 = const u64 0, !73
        store v108 to v107, !138
        v109 = load v105, !139
        v110 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_block_arg0
        mem_copy_val v110, v105
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v110), !140

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v111: ptr { u64, ( () | { b256 } ) }):
        v112 = load v111
        v113 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !142
        mem_copy_val v113, v111
        v114 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !144
        v115 = load v114, !145
        v116 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !148
        mem_copy_val v116, v114
        v117 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !150
        v118 = const u64 0
        v119 = get_elem_ptr v117, ptr u64, v118, !151
        v120 = get_local ptr { u64, ( () | { b256 } ) }, candidate
        v121 = get_elem_ptr v120, ptr u64, v118
        v122 = load v121, !152
        v123 = const u64 1, !149
        v124 = cmp eq v122 v123, !154
        v125 = const bool false, !155
        cbr v124, only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v125), only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1(), !156

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1():
        v126 = const bool true, !157
        br only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v126), !158

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v127: bool):
        cbr v127, only_owner_0_msg_sender_10_caller_address_12_block6(), only_owner_0_msg_sender_10_caller_address_12_block7(), !159

        only_owner_0_msg_sender_10_caller_address_12_block6():
        v128 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !161
        v129 = load v128, !162
        v130 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !164
        mem_copy_val v130, v128
        v131 = const u64 1, !165
        v132 = call add_19(v51, v131), !167
        br only_owner_0_msg_sender_10_caller_address_12_while(v132), !168

        only_owner_0_msg_sender_10_caller_address_12_block7():
        v133 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !170
        v134 = load v133, !171
        v135 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_arg8
        mem_copy_val v135, v133
        v136 = get_local ptr { b256 }, __ret_val4
        v137 = call unwrap_24(v135, v136)
        v138 = load v137
        v139 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !173
        v140 = load v139, !174
        v141 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_arg9
        mem_copy_val v141, v139
        v142 = get_local ptr { b256 }, __ret_val5
        v143 = call unwrap_24(v141, v142)
        v144 = load v143
        v145 = get_local ptr { b256 }, __tmp_arg
        mem_copy_val v145, v137
        v146 = get_local ptr { b256 }, __tmp_arg0
        mem_copy_val v146, v143
        v147 = call eq_6(v145, v146)
        cbr v147, only_owner_0_msg_sender_10_caller_address_12_block9(), only_owner_0_msg_sender_10_caller_address_12_block10(), !176

        only_owner_0_msg_sender_10_caller_address_12_block9():
        v148 = const u64 1, !177
        v149 = call add_19(v51, v148), !179
        br only_owner_0_msg_sender_10_caller_address_12_while(v149), !180

        only_owner_0_msg_sender_10_caller_address_12_block10():
        v150 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_10, !183
        v151 = const u64 0
        v152 = get_elem_ptr v150, ptr u64, v151, !184
        v153 = const u64 1, !182
        store v153 to v152, !185
        v154 = get_local ptr { u64 }, __anon_20, !187
        v155 = const u64 0
        v156 = get_elem_ptr v154, ptr u64, v155, !188
        v157 = const u64 0, !186
        store v157 to v156, !189
        v158 = load v154, !190
        v159 = const u64 1
        v160 = const u64 1
        v161 = get_elem_ptr v150, ptr { u64 }, v159, v160, !191
        mem_copy_val v161, v154
        v162 = load v150, !192
        v163 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg2
        mem_copy_val v163, v150
        br only_owner_0_msg_sender_10_block10(v163), !194

        only_owner_0_msg_sender_10_caller_address_12_end_while():
        v164 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !196
        v165 = load v164, !197
        v166 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !199
        mem_copy_val v166, v164
        v167 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !200
        v168 = const u64 0
        v169 = get_elem_ptr v167, ptr u64, v168, !201
        v170 = get_local ptr { u64, ( () | { b256 } ) }, candidate
        v171 = get_elem_ptr v170, ptr u64, v168
        v172 = load v171, !202
        v173 = const u64 1, !195
        v174 = cmp eq v172 v173, !204
        cbr v174, only_owner_0_msg_sender_10_caller_address_12_block12(), only_owner_0_msg_sender_10_caller_address_12_block13(), !205

        only_owner_0_msg_sender_10_caller_address_12_block12():
        v175 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !206
        v176 = const u64 1
        v177 = const u64 1
        v178 = get_elem_ptr v175, ptr { b256 }, v176, v177, !207
        v179 = load v178, !208
        v180 = get_local ptr { b256 }, address, !210
        mem_copy_val v180, v178
        v181 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_30, !211
        v182 = const u64 0
        v183 = get_elem_ptr v181, ptr u64, v182, !212
        v184 = const u64 0, !182
        store v184 to v183, !213
        v185 = get_local ptr { b256 }, address, !215
        v186 = load v178, !216
        v187 = const u64 1
        v188 = const u64 0
        v189 = get_elem_ptr v181, ptr { b256 }, v187, v188, !217
        mem_copy_val v189, v178
        v190 = load v181, !218
        v191 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg1
        mem_copy_val v191, v181
        br only_owner_0_msg_sender_10_caller_address_12_block17(v191), !219

        only_owner_0_msg_sender_10_caller_address_12_block13():
        v192 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !220
        v193 = const u64 0
        v194 = get_elem_ptr v192, ptr u64, v193, !221
        v195 = load v194, !222
        v196 = const u64 0, !195
        v197 = cmp eq v195 v196, !224
        cbr v197, only_owner_0_msg_sender_10_caller_address_12_block14(), only_owner_0_msg_sender_10_caller_address_12_block15(), !225

        only_owner_0_msg_sender_10_caller_address_12_block14():
        v198 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_40, !226
        v199 = const u64 0
        v200 = get_elem_ptr v198, ptr u64, v199, !227
        v201 = const u64 1, !182
        store v201 to v200, !228
        v202 = get_local ptr { u64 }, __anon_5, !229
        v203 = const u64 0
        v204 = get_elem_ptr v202, ptr u64, v203, !230
        v205 = const u64 1, !186
        store v205 to v204, !231
        v206 = load v202, !232
        v207 = const u64 1
        v208 = const u64 1
        v209 = get_elem_ptr v198, ptr { u64 }, v207, v208, !233
        mem_copy_val v209, v202
        v210 = load v198, !234
        v211 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg1
        mem_copy_val v211, v198
        br only_owner_0_msg_sender_10_caller_address_12_block17(v211), !235

        only_owner_0_msg_sender_10_caller_address_12_block15():
        v212 = const u64 14757395258967588866, !198
        revert v212, !236

        only_owner_0_msg_sender_10_caller_address_12_block17(v213: ptr { u64, ( { b256 } | { u64 } ) }):
        v214 = load v213
        v215 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg2
        mem_copy_val v215, v213
        br only_owner_0_msg_sender_10_block10(v215), !237

        only_owner_0_msg_sender_10_block10(v216: ptr { u64, ( { b256 } | { u64 } ) }):
        v217 = load v216
        v218 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !239
        mem_copy_val v218, v216
        v219 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !240
        v220 = const u64 0
        v221 = get_elem_ptr v219, ptr u64, v220, !241
        v222 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg2
        v223 = get_elem_ptr v222, ptr u64, v220
        v224 = load v223, !242
        v225 = const u64 1, !16
        v226 = cmp eq v224 v225, !244
        cbr v226, only_owner_0_msg_sender_10_block1(), only_owner_0_msg_sender_10_block2(), !245

        only_owner_0_msg_sender_10_block1():
        v227 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !246
        v228 = const u64 1
        v229 = const u64 1
        v230 = get_elem_ptr v227, ptr { u64 }, v228, v229, !247
        v231 = load v230, !248
        v232 = get_local ptr { u64 }, err, !250
        mem_copy_val v232, v230
        v233 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_000, !251
        v234 = const u64 0
        v235 = get_elem_ptr v233, ptr u64, v234, !252
        v236 = const u64 1, !182
        store v236 to v235, !253
        v237 = get_local ptr { u64 }, err, !255
        v238 = load v230, !256
        v239 = const u64 1
        v240 = const u64 1
        v241 = get_elem_ptr v233, ptr { u64 }, v239, v240, !257
        mem_copy_val v241, v230
        v242 = load v233, !258
        v243 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg3
        mem_copy_val v243, v233
        br only_owner_0_msg_sender_10_block6(v243), !259

        only_owner_0_msg_sender_10_block2():
        v244 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !260
        v245 = const u64 0
        v246 = get_elem_ptr v244, ptr u64, v245, !261
        v247 = load v246, !262
        v248 = const u64 0, !16
        v249 = cmp eq v247 v248, !264
        cbr v249, only_owner_0_msg_sender_10_block3(), only_owner_0_msg_sender_10_block4(), !265

        only_owner_0_msg_sender_10_block3():
        v250 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !266
        v251 = const u64 1
        v252 = const u64 0
        v253 = get_elem_ptr v250, ptr { b256 }, v251, v252, !267
        v254 = load v253, !268
        v255 = get_local ptr { b256 }, owner, !270
        mem_copy_val v255, v253
        v256 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_1, !271
        v257 = const u64 0
        v258 = get_elem_ptr v256, ptr u64, v257, !272
        v259 = const u64 0, !182
        store v259 to v258, !273
        v260 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !276
        v261 = const u64 0
        v262 = get_elem_ptr v260, ptr u64, v261, !277
        v263 = const u64 0, !275
        store v263 to v262, !278
        v264 = get_local ptr { b256 }, owner, !280
        v265 = load v253, !281
        v266 = const u64 1
        v267 = const u64 0
        v268 = get_elem_ptr v260, ptr { b256 }, v266, v267, !282
        mem_copy_val v268, v253
        v269 = load v260, !283
        v270 = const u64 1
        v271 = const u64 0
        v272 = get_elem_ptr v256, ptr { u64, ( { b256 } | { b256 } ) }, v270, v271, !284
        mem_copy_val v272, v260
        v273 = load v256, !285
        v274 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg3
        mem_copy_val v274, v256
        br only_owner_0_msg_sender_10_block6(v274), !286

        only_owner_0_msg_sender_10_block4():
        v275 = const u64 14757395258967588866, !238
        revert v275, !287

        only_owner_0_msg_sender_10_block6(v276: ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v277 = load v276
        v278 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg4
        mem_copy_val v278, v276
        br only_owner_0_msg_sender_10_block8(v278), !288

        only_owner_0_msg_sender_10_block7():
        v279 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_3, !289
        v280 = const u64 0
        v281 = get_elem_ptr v279, ptr u64, v280, !290
        v282 = const u64 0, !182
        store v282 to v281, !291
        v283 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_4, !292
        v284 = const u64 0
        v285 = get_elem_ptr v283, ptr u64, v284, !293
        v286 = const u64 1, !275
        store v286 to v285, !294
        v287 = asm(r1) -> ptr b256 r1 {
            gm     r1 i2, !295
        }
        v288 = load v287
        v289 = get_local ptr b256, __tmp_arg6
        mem_copy_val v289, v287
        v290 = get_local ptr { b256 }, __ret_val2
        v291 = call from_22(v289, v290)
        v292 = load v291
        v293 = const u64 1
        v294 = const u64 1
        v295 = get_elem_ptr v283, ptr { b256 }, v293, v294, !296
        mem_copy_val v295, v291
        v296 = load v283, !297
        v297 = const u64 1
        v298 = const u64 0
        v299 = get_elem_ptr v279, ptr { u64, ( { b256 } | { b256 } ) }, v297, v298, !298
        mem_copy_val v299, v283
        v300 = load v279, !299
        v301 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg4
        mem_copy_val v301, v279
        br only_owner_0_msg_sender_10_block8(v301), !300

        only_owner_0_msg_sender_10_block8(v302: ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v303 = load v302
        v304 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !303
        mem_copy_val v304, v302
        v305 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !305
        v306 = const u64 0
        v307 = get_elem_ptr v305, ptr u64, v306, !306
        v308 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg4
        v309 = get_elem_ptr v308, ptr u64, v306
        v310 = load v309, !307
        v311 = const u64 0, !304
        v312 = cmp eq v310 v311, !309
        cbr v312, only_owner_0_unwrap_9_block0(), only_owner_0_unwrap_9_block1(), !310

        only_owner_0_unwrap_9_block0():
        v313 = get_local ptr b256, __const
        v314 = load v313
        v315 = get_local ptr b256, __const0
        v316 = load v315
        v317 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !311
        v318 = const u64 1
        v319 = const u64 0
        v320 = get_elem_ptr v317, ptr { u64, ( { b256 } | { b256 } ) }, v318, v319, !312
        v321 = load v320, !313
        v322 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !315
        mem_copy_val v322, v320
        v323 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !317
        v324 = load v320, !318
        v325 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_00, !319
        v326 = const u64 0
        v327 = get_elem_ptr v325, ptr u64, v326, !320
        v328 = const u64 0, !275
        store v328 to v327, !321
        v329 = get_local ptr { b256, u64, b256 }, __anon_02, !324
        v330 = const u64 0
        v331 = get_elem_ptr v329, ptr b256, v330, !325
        mem_copy_val v331, v313
        v332 = const u64 1
        v333 = get_elem_ptr v329, ptr u64, v332, !326
        v334 = const u64 0
        store v334 to v333, !327
        v335 = const u64 2
        v336 = get_elem_ptr v329, ptr b256, v335, !328
        mem_copy_val v336, v315
        v337 = load v329, !329
        v338 = get_local ptr { b256, u64, b256 }, __tmp_arg12
        mem_copy_val v338, v329
        v339 = get_local ptr b256, __ret_val10
        v340 = call slot_51(v338, v339)
        v341 = load v340
        v342 = get_local ptr { b256, u64, b256 }, __tmp_arg10
        mem_copy_val v342, v329
        v343 = call offset_46(v342)
        v344 = const u64 8, !331
        v345 = mul v343, v344, !337
        v346 = const u64 32
        v347 = add v345, v346, !339
        v348 = const u64 31, !340
        v349 = add v347, v348, !342
        v350 = const u64 5, !343
        v351 = rsh v349, v350, !345
        v352 = const u64 4, !346
        v353 = mod v343, v352, !348
        v354 = const u64 8, !349
        v355 = mul v353, v354, !351
        v356 = add v355, v346, !353
        v357 = const u64 31, !354
        v358 = add v356, v357, !356
        v359 = const u64 5, !357
        v360 = rsh v358, v359, !359
        v361 = get_local ptr b256, __asm_arg
        mem_copy_val v361, v340
        v362 = asm(input: v361) -> ptr u256 input {
        }
        v363 = load v362
        v364 = get_local ptr u256, offset_slot0, !361
        mem_copy_val v364, v362
        v365 = get_local ptr u256, offset_slot0, !363
        v366 = load v365, !364
        v367 = get_local ptr u256, __ret_val6
        v368 = call as_u256_40(v351, v367)
        v369 = load v368
        v370 = get_local ptr u256, __ret_val7
        v371 = call as_u256_40(v360, v370)
        v372 = load v371
        v373 = get_local ptr u256, __wide_lhs
        mem_copy_val v373, v368
        v374 = get_local ptr u256, __wide_rhs
        mem_copy_val v374, v371
        v375 = get_local ptr u256, __wide_result, !366
        wide sub v373, v374 to v375, !366
        v376 = load v375, !366
        v377 = get_local ptr u256, __wide_lhs0, !364
        mem_copy_val v377, v365
        v378 = get_local ptr u256, __wide_result, !366
        v379 = get_local ptr u256, __wide_result0, !368
        wide add v377, v378 to v379, !368
        v380 = load v379, !368
        v381 = get_local ptr u256, offset_slot0, !369
        mem_copy_val v381, v379
        v382 = get_local ptr u256, offset_slot0, !371
        v383 = load v379, !372
        v384 = get_local ptr u256, __asm_arg0
        mem_copy_val v384, v379
        v385 = asm(input: v384) -> ptr b256 input {
        }
        v386 = load v385
        v387 = get_local ptr { b256, u64, u64 }, __anon_0001, !374
        v388 = const u64 0
        v389 = get_elem_ptr v387, ptr b256, v388, !375
        mem_copy_val v389, v385
        v390 = const u64 1
        v391 = get_elem_ptr v387, ptr u64, v390, !376
        store v360 to v391, !377
        v392 = const u64 2
        v393 = get_elem_ptr v387, ptr u64, v392, !378
        store v353 to v393, !379
        v394 = load v387, !380
        v395 = get_local ptr { b256, u64, u64 }, __anon_0001, !382
        v396 = get_local ptr { b256, u64, u64 }, __anon_0001, !383
        v397 = load v396, !384
        v398 = get_local ptr { b256, u64, u64 }, __anon_0001, !385
        v399 = get_local ptr { b256, u64, u64 }, __anon_0001, !386
        v400 = const u64 0
        v401 = get_elem_ptr v399, ptr b256, v400, !387
        v402 = load v401, !388
        v403 = get_local ptr b256, offset_slot, !389
        mem_copy_val v403, v401
        v404 = get_local ptr { b256, u64, u64 }, __anon_0001, !390
        v405 = const u64 1
        v406 = get_elem_ptr v404, ptr u64, v405, !391
        v407 = load v406, !392
        v408 = get_local ptr { b256, u64, u64 }, __anon_0001, !393
        v409 = const u64 2
        v410 = get_elem_ptr v408, ptr u64, v409, !394
        v411 = load v410, !395
        v412 = const u64 32, !396
        v413 = mul v407, v412, !398
        v414 = const u64 8
        v415 = mul v414, v413, !402
        v416 = asm(size: v415, ptr) -> u64 ptr, !404 {
            aloc   size, !405
            move   ptr hp, !406
        }
        v417 = get_local ptr b256, offset_slot, !408
        v418 = load v401, !409
        v419 = get_local ptr b256, offset_slot, !411
        v420 = int_to_ptr v416 to ptr b256, !412
        v421 = state_load_quad_word v420, key v419, v407, !413
        cbr v421, only_owner_0_get_owner_27_read_28_read_30_block3(), only_owner_0_get_owner_27_read_28_read_30_block4(), !414

        only_owner_0_unwrap_9_block1():
        v422 = const u64 0, !415
        revert v422, !417

        only_owner_0_get_owner_27_read_28_read_30_block3():
        v423 = get_local ptr { u64, ( () | b256 ) }, __anon_12, !418
        v424 = const u64 0
        v425 = get_elem_ptr v423, ptr u64, v424, !419
        v426 = const u64 1, !73
        store v426 to v425, !420
        v427 = const u64 8
        v428 = mul v427, v411, !422
        v429 = add v416, v428, !423
        v430 = asm(ptr: v429) -> ptr b256 ptr {
        }
        v431 = load v430
        v432 = const u64 1
        v433 = const u64 1
        v434 = get_elem_ptr v423, ptr b256, v432, v433, !424
        mem_copy_val v434, v430
        v435 = load v423, !425
        v436 = get_local ptr { u64, ( () | b256 ) }, __tmp_block_arg5
        mem_copy_val v436, v423
        br only_owner_0_get_owner_27_read_28_read_30_block5(v436), !426

        only_owner_0_get_owner_27_read_28_read_30_block4():
        v437 = get_local ptr { u64, ( () | b256 ) }, __anon_21, !427
        v438 = const u64 0
        v439 = get_elem_ptr v437, ptr u64, v438, !428
        v440 = const u64 0, !73
        store v440 to v439, !429
        v441 = load v437, !430
        v442 = get_local ptr { u64, ( () | b256 ) }, __tmp_block_arg5
        mem_copy_val v442, v437
        br only_owner_0_get_owner_27_read_28_read_30_block5(v442), !431

        only_owner_0_get_owner_27_read_28_read_30_block5(v443: ptr { u64, ( () | b256 ) }):
        v444 = load v443
        v445 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !434
        mem_copy_val v445, v443
        v446 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !436
        v447 = const u64 0
        v448 = get_elem_ptr v446, ptr u64, v447, !437
        v449 = get_local ptr { u64, ( () | b256 ) }, __tmp_block_arg5
        v450 = get_elem_ptr v449, ptr u64, v447
        v451 = load v450, !438
        v452 = const u64 1, !435
        v453 = cmp eq v451 v452, !440
        cbr v453, only_owner_0_get_owner_27_read_28_unwrap_29_block0(), only_owner_0_get_owner_27_read_28_unwrap_29_block1(), !441

        only_owner_0_get_owner_27_read_28_unwrap_29_block0():
        v454 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !442
        v455 = const u64 1
        v456 = const u64 1
        v457 = get_elem_ptr v454, ptr b256, v455, v456, !443
        v458 = load v457, !444
        v459 = get_local ptr b256, inner_value0, !446
        mem_copy_val v459, v457
        v460 = get_local ptr b256, inner_value0, !448
        v461 = load v457, !449
        v462 = get_local ptr b256, __tmp_arg7
        mem_copy_val v462, v457
        v463 = get_local ptr { b256 }, __ret_val3
        v464 = call from_22(v462, v463)
        v465 = load v464
        v466 = const u64 1
        v467 = const u64 0
        v468 = get_elem_ptr v325, ptr { b256 }, v466, v467, !450
        mem_copy_val v468, v464
        v469 = load v325, !5
        v470 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_03, !453
        v471 = const u64 0
        v472 = get_elem_ptr v470, ptr { u64, ( { b256 } | { b256 } ) }, v471, !454
        mem_copy_val v472, v323
        v473 = const u64 1
        v474 = get_elem_ptr v470, ptr { u64, ( { b256 } | { b256 } ) }, v473, !455
        mem_copy_val v474, v325
        v475 = load v470, !456
        v476 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !458
        mem_copy_val v476, v470
        v477 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !459
        v478 = const u64 0
        v479 = get_elem_ptr v477, ptr { u64, ( { b256 } | { b256 } ) }, v478, !461
        v480 = const u64 0
        v481 = get_elem_ptr v479, ptr u64, v480, !462
        v482 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_03
        v483 = get_elem_ptr v482, ptr u64, v478, v480
        v484 = load v483, !463
        v485 = const u64 0, !460
        v486 = cmp eq v484 v485, !465
        cbr v486, only_owner_0_eq_4_block0(), only_owner_0_eq_4_block1(v486), !466

        only_owner_0_get_owner_27_read_28_unwrap_29_block1():
        v487 = const u64 0, !467
        revert v487, !469

        only_owner_0_eq_4_block0():
        v488 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !470
        v489 = const u64 1
        v490 = get_elem_ptr v488, ptr { u64, ( { b256 } | { b256 } ) }, v489, !471
        v491 = const u64 0
        v492 = get_elem_ptr v490, ptr u64, v491, !472
        v493 = load v492, !473
        v494 = const u64 0, !460
        v495 = cmp eq v493 v494, !474
        br only_owner_0_eq_4_block1(v495), !475

        only_owner_0_eq_4_block1(v496: bool):
        cbr v496, only_owner_0_eq_4_block2(), only_owner_0_eq_4_block3(), !476

        only_owner_0_eq_4_block2():
        v497 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !477
        v498 = const u64 0
        v499 = get_elem_ptr v497, ptr { u64, ( { b256 } | { b256 } ) }, v498, !478
        v500 = const u64 1
        v501 = const u64 0
        v502 = get_elem_ptr v499, ptr { b256 }, v500, v501, !479
        v503 = load v502, !480
        v504 = get_local ptr { b256 }, addr1, !482
        mem_copy_val v504, v502
        v505 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !483
        v506 = const u64 1
        v507 = get_elem_ptr v505, ptr { u64, ( { b256 } | { b256 } ) }, v506, !484
        v508 = const u64 1
        v509 = const u64 0
        v510 = get_elem_ptr v507, ptr { b256 }, v508, v509, !485
        v511 = load v510, !486
        v512 = get_local ptr { b256 }, addr2, !488
        mem_copy_val v512, v510
        v513 = get_local ptr { b256 }, addr1, !490
        v514 = load v502, !491
        v515 = get_local ptr { b256 }, addr2, !493
        v516 = load v510, !494
        v517 = get_local ptr { b256 }, __tmp_arg1
        mem_copy_val v517, v502
        v518 = get_local ptr { b256 }, __tmp_arg2
        mem_copy_val v518, v510
        v519 = call eq_6(v517, v518)
        br only_owner_0_eq_4_block9(v519), !495

        only_owner_0_eq_4_block3():
        v520 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !496
        v521 = const u64 0
        v522 = get_elem_ptr v520, ptr { u64, ( { b256 } | { b256 } ) }, v521, !498
        v523 = const u64 0
        v524 = get_elem_ptr v522, ptr u64, v523, !499
        v525 = load v524, !500
        v526 = const u64 1, !497
        v527 = cmp eq v525 v526, !502
        cbr v527, only_owner_0_eq_4_block4(), only_owner_0_eq_4_block5(v527), !503

        only_owner_0_eq_4_block4():
        v528 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !504
        v529 = const u64 1
        v530 = get_elem_ptr v528, ptr { u64, ( { b256 } | { b256 } ) }, v529, !505
        v531 = const u64 0
        v532 = get_elem_ptr v530, ptr u64, v531, !506
        v533 = load v532, !507
        v534 = const u64 1, !497
        v535 = cmp eq v533 v534, !508
        br only_owner_0_eq_4_block5(v535), !509

        only_owner_0_eq_4_block5(v536: bool):
        v537 = const bool false, !510
        cbr v536, only_owner_0_eq_4_block6(), only_owner_0_eq_4_block8(v537), !511

        only_owner_0_eq_4_block6():
        v538 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !512
        v539 = const u64 0
        v540 = get_elem_ptr v538, ptr { u64, ( { b256 } | { b256 } ) }, v539, !513
        v541 = const u64 1
        v542 = const u64 1
        v543 = get_elem_ptr v540, ptr { b256 }, v541, v542, !514
        v544 = load v543, !515
        v545 = get_local ptr { b256 }, id1, !517
        mem_copy_val v545, v543
        v546 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !518
        v547 = const u64 1
        v548 = get_elem_ptr v546, ptr { u64, ( { b256 } | { b256 } ) }, v547, !519
        v549 = const u64 1
        v550 = const u64 1
        v551 = get_elem_ptr v548, ptr { b256 }, v549, v550, !520
        v552 = load v551, !521
        v553 = get_local ptr { b256 }, id2, !523
        mem_copy_val v553, v551
        v554 = get_local ptr { b256 }, id1, !525
        v555 = load v543, !526
        v556 = get_local ptr { b256 }, id2, !528
        v557 = load v551, !529
        v558 = get_local ptr { b256 }, __tmp_arg3
        mem_copy_val v558, v543
        v559 = get_local ptr { b256 }, __tmp_arg4
        mem_copy_val v559, v551
        v560 = call eq_6(v558, v559)
        br only_owner_0_eq_4_block8(v560), !530

        only_owner_0_eq_4_block8(v561: bool):
        br only_owner_0_eq_4_block9(v561), !531

        only_owner_0_eq_4_block9(v562: bool):
        v563 = const bool false, !533
        v564 = cmp eq v562 v563, !537
        cbr v564, only_owner_0_assert_1_block0(), only_owner_0_assert_1_block1(), !538

        only_owner_0_assert_1_block0():
        v565 = const u64 18446744073709486084, !540
        revert v565, !542

        only_owner_0_assert_1_block1():
        v566 = get_local ptr b256, __const1
        v567 = load v566
        v568 = get_local ptr b256, __const2
        v569 = load v568
        v570 = get_local ptr { b256, u64, b256 }, __anon_0, !543
        v571 = const u64 0
        v572 = get_elem_ptr v570, ptr b256, v571
        mem_copy_val v572, v566
        v573 = const u64 1
        v574 = get_elem_ptr v570, ptr u64, v573
        v575 = const u64 0
        store v575 to v574, !543
        v576 = const u64 2
        v577 = get_elem_ptr v570, ptr b256, v576
        mem_copy_val v577, v568
        v578 = load v570
        v579 = get_local ptr { b256, u64, b256 }, __tmp_arg13
        mem_copy_val v579, v570
        v580 = get_local ptr b256, __ret_val11
        v581 = call slot_51(v579, v580)
        v582 = load v581
        v583 = get_local ptr { b256, u64, b256 }, __tmp_arg11
        mem_copy_val v583, v570
        v584 = call offset_46(v583)
        v585 = const u64 8, !331
        v586 = mul v584, v585, !547
        v587 = const u64 8
        v588 = add v586, v587, !548
        v589 = const u64 31, !340
        v590 = add v588, v589, !549
        v591 = const u64 5, !343
        v592 = rsh v590, v591, !550
        v593 = const u64 4, !346
        v594 = mod v584, v593, !551
        v595 = get_local ptr b256, __asm_arg1
        mem_copy_val v595, v581
        v596 = asm(input: v595) -> ptr u256 input {
        }
        v597 = load v596
        v598 = get_local ptr u256, offset_slot00, !552
        mem_copy_val v598, v596
        v599 = get_local ptr u256, offset_slot00, !553
        v600 = load v599, !554
        v601 = get_local ptr u256, __ret_val8
        v602 = call as_u256_40(v592, v601)
        v603 = load v602
        v604 = get_local ptr u256, __ret_val9
        v605 = const u64 1, !555
        v606 = call as_u256_40(v605, v604)
        v607 = load v606
        v608 = get_local ptr u256, __wide_lhs1
        mem_copy_val v608, v602
        v609 = get_local ptr u256, __wide_rhs1
        mem_copy_val v609, v606
        v610 = get_local ptr u256, __wide_result1, !556
        wide sub v608, v609 to v610, !556
        v611 = load v610, !556
        v612 = get_local ptr u256, __wide_lhs2, !554
        mem_copy_val v612, v599
        v613 = get_local ptr u256, __wide_result1, !556
        v614 = get_local ptr u256, __wide_result2, !557
        wide add v612, v613 to v614, !557
        v615 = load v614, !557
        v616 = get_local ptr u256, offset_slot00, !558
        mem_copy_val v616, v614
        v617 = get_local ptr u256, offset_slot00, !559
        v618 = load v614, !560
        v619 = get_local ptr u256, __asm_arg2
        mem_copy_val v619, v614
        v620 = asm(input: v619) -> ptr b256 input {
        }
        v621 = load v620
        v622 = get_local ptr { b256, u64, u64 }, __anon_04, !561
        v623 = const u64 0
        v624 = get_elem_ptr v622, ptr b256, v623, !562
        mem_copy_val v624, v620
        v625 = const u64 1
        v626 = get_elem_ptr v622, ptr u64, v625, !563
        store v605 to v626, !564
        v627 = const u64 2
        v628 = get_elem_ptr v622, ptr u64, v627, !565
        store v594 to v628, !566
        v629 = load v622, !567
        v630 = get_local ptr { b256, u64, u64 }, __anon_04, !569
        v631 = get_local ptr { b256, u64, u64 }, __anon_04, !570
        v632 = load v631, !571
        v633 = get_local ptr { b256, u64, u64 }, __anon_04, !572
        v634 = get_local ptr { b256, u64, u64 }, __anon_04, !573
        v635 = const u64 0
        v636 = get_elem_ptr v634, ptr b256, v635, !574
        v637 = load v636, !575
        v638 = get_local ptr b256, offset_slot1, !576
        mem_copy_val v638, v636
        v639 = get_local ptr { b256, u64, u64 }, __anon_04, !577
        v640 = const u64 1
        v641 = get_elem_ptr v639, ptr u64, v640, !578
        v642 = load v641, !579
        v643 = get_local ptr { b256, u64, u64 }, __anon_04, !580
        v644 = const u64 2
        v645 = get_elem_ptr v643, ptr u64, v644, !581
        v646 = load v645, !582
        v647 = const u64 32, !583
        v648 = mul v642, v647, !585
        v649 = mul v414, v648, !587
        v650 = asm(size: v649, ptr) -> u64 ptr, !588 {
            aloc   size, !405
            move   ptr hp, !406
        }
        v651 = get_local ptr b256, offset_slot1, !590
        v652 = load v636, !591
        v653 = get_local ptr b256, offset_slot1, !593
        v654 = int_to_ptr v650 to ptr b256, !594
        v655 = state_load_quad_word v654, key v653, v642, !595
        v656 = mul v427, v646, !597
        v657 = add v650, v656, !598
        v658 = asm(ptr: v657, val: new_value) {
            sw     ptr val i0, !600
        }
        v659 = get_local ptr b256, offset_slot1, !602
        v660 = load v659, !603
        v661 = get_local ptr b256, offset_slot1, !605
        v662 = int_to_ptr v650 to ptr b256, !606
        v663 = state_store_quad_word v662, key v661, v642, !607
        v664 = const unit ()
        ret () v664
    }

    pub fn eq_6(self: ptr { b256 }, other: ptr { b256 }) -> bool, !609 {
        local b256 __wide_lhs
        local b256 __wide_rhs

        entry(self: ptr { b256 }, other: ptr { b256 }):
        v0 = load self
        v1 = load other
        v2 = ptr_to_int self to u64
        v3 = int_to_ptr v2 to ptr { b256 }
        v4 = const u64 0
        v5 = get_elem_ptr v3, ptr b256, v4, !610
        v6 = load v5
        v7 = ptr_to_int other to u64
        v8 = int_to_ptr v7 to ptr { b256 }
        v9 = const u64 0
        v10 = get_elem_ptr v8, ptr b256, v9, !610
        v11 = load v10
        v12 = get_local ptr b256, __wide_lhs
        mem_copy_val v12, v5
        v13 = get_local ptr b256, __wide_rhs
        mem_copy_val v13, v10
        v14 = wide cmp eq v12 v13, !611
        ret bool v14
    }

    pub fn input_type_17(index !612: u64, __ret_value: ptr { u64 }) -> ptr { u64 }, !613 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local { u64 } __tmp_block_arg
        local { u64 } __tmp_block_arg0

        entry(index: u64, __ret_value: ptr { u64 }):
        v0 = gtf index, 512, !614
        v1 = bitcast v0 to u8, !614
        v2 = const u8 0, !615
        v3 = cmp eq v1 v2, !616
        cbr v3, block0(), block1(), !616

        block0():
        v4 = get_local ptr { u64 }, __anon_0, !617
        v5 = const u64 0
        v6 = get_elem_ptr v4, ptr u64, v5, !617
        v7 = const u64 0, !617
        store v7 to v6, !617
        v8 = load v4
        v9 = get_local ptr { u64 }, __tmp_block_arg0
        mem_copy_val v9, v4
        br block8(v9)

        block1():
        v10 = const u8 1, !618
        v11 = cmp eq v1 v10, !619
        cbr v11, block2(), block3(), !619

        block2():
        v12 = get_local ptr { u64 }, __anon_1, !617
        v13 = const u64 0
        v14 = get_elem_ptr v12, ptr u64, v13, !617
        v15 = const u64 1, !617
        store v15 to v14, !617
        v16 = load v12
        v17 = get_local ptr { u64 }, __tmp_block_arg
        mem_copy_val v17, v12
        br block7(v17)

        block3():
        v18 = const u8 2, !620
        v19 = cmp eq v1 v18, !621
        cbr v19, block4(), block5(), !621

        block4():
        v20 = get_local ptr { u64 }, __anon_2, !617
        v21 = const u64 0
        v22 = get_elem_ptr v20, ptr u64, v21, !617
        v23 = const u64 2, !617
        store v23 to v22, !617
        v24 = load v20
        v25 = get_local ptr { u64 }, __tmp_block_arg
        mem_copy_val v25, v20
        br block7(v25)

        block5():
        v26 = const u64 0, !622
        revert v26, !624

        block7(v27: ptr { u64 }):
        v28 = load v27
        v29 = get_local ptr { u64 }, __tmp_block_arg0
        mem_copy_val v29, v27
        br block8(v29)

        block8(v30: ptr { u64 }):
        v31 = load v30
        mem_copy_val __ret_value, v30
        ret ptr { u64 } __ret_value
    }

    pub fn add_19(self !625: u64, other !626: u64) -> u64, !627 {
        entry(self: u64, other: u64):
        v0 = add self, other
        v1 = const u64 65535, !629
        v2 = cmp gt v0 v1
        cbr v2, block0(), block1(), !630

        block0():
        v3 = const u64 0, !631
        revert v3, !632

        block1():
        ret u64 v0
    }

    pub fn from_22(bits: ptr b256, __ret_value: ptr { b256 }) -> ptr { b256 }, !633 {
        local { b256 } __anon_0

        entry(bits: ptr b256, __ret_value: ptr { b256 }):
        v0 = load bits
        v1 = get_local ptr { b256 }, __anon_0, !634
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2
        mem_copy_val v3, bits
        v4 = load v1
        mem_copy_val __ret_value, v1
        ret ptr { b256 } __ret_value
    }

    pub fn unwrap_24(self: ptr { u64, ( () | { b256 } ) }, __ret_value: ptr { b256 }) -> ptr { b256 }, !635 {
        local { u64, ( () | { b256 } ) } __matched_value_4
        local { b256 } inner_value

        entry(self: ptr { u64, ( () | { b256 } ) }, __ret_value: ptr { b256 }):
        v0 = load self
        v1 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !433
        mem_copy_val v1, self
        v2 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !435
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !435
        v5 = get_elem_ptr self, ptr u64, v3
        v6 = load v5
        v7 = const u64 1, !435
        v8 = cmp eq v6 v7, !439
        cbr v8, block0(), block1(), !439

        block0():
        v9 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !435
        v10 = const u64 1
        v11 = const u64 1
        v12 = get_elem_ptr v9, ptr { b256 }, v10, v11
        v13 = load v12
        v14 = get_local ptr { b256 }, inner_value, !445
        mem_copy_val v14, v12
        v15 = get_local ptr { b256 }, inner_value, !447
        v16 = load v12
        mem_copy_val __ret_value, v12
        ret ptr { b256 } __ret_value

        block1():
        v17 = const u64 0, !467
        revert v17, !636
    }

    pub fn as_u256_40(self !637: u64, __ret_value: ptr u256) -> ptr u256, !638 {
        local { u64, u64, u64, u64 } __anon_0
        local { u64, u64, u64, u64 } input

        entry(self: u64, __ret_value: ptr u256):
        v0 = get_local ptr { u64, u64, u64, u64 }, __anon_0, !639
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr u64, v1, !639
        v3 = const u64 0, !640
        store v3 to v2, !639
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4, !639
        v6 = const u64 0, !641
        store v6 to v5, !639
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr u64, v7, !639
        v9 = const u64 0, !642
        store v9 to v8, !639
        v10 = const u64 3
        v11 = get_elem_ptr v0, ptr u64, v10, !639
        store self to v11, !639
        v12 = load v0
        v13 = get_local ptr { u64, u64, u64, u64 }, input, !643
        mem_copy_val v13, v0
        v14 = get_local ptr { u64, u64, u64, u64 }, input, !644
        v15 = asm(input: v14) -> ptr u256 input {
        }
        v16 = load v15
        mem_copy_val __ret_value, v15
        ret ptr u256 __ret_value
    }

    pub fn offset_46(self: ptr { b256, u64, b256 }) -> u64, !646 {
        entry(self: ptr { b256, u64, b256 }):
        v0 = load self
        v1 = ptr_to_int self to u64
        v2 = int_to_ptr v1 to ptr { b256, u64, b256 }
        v3 = const u64 1
        v4 = get_elem_ptr v2, ptr u64, v3, !647
        v5 = load v4
        ret u64 v5
    }

    pub fn slot_51(self: ptr { b256, u64, b256 }, __ret_value: ptr b256) -> ptr b256, !648 {
        entry(self: ptr { b256, u64, b256 }, __ret_value: ptr b256):
        v0 = load self
        v1 = ptr_to_int self to u64
        v2 = int_to_ptr v1 to ptr { b256, u64, b256 }
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr b256, v3, !649
        v5 = load v4
        mem_copy_val __ret_value, v4
        ret ptr b256 __ret_value
    }
}

// IR: [dce] Dead code elimination
contract {
    pub entry fn set_data_if_owner<c626c6e2>(new_value !1: u64) -> (), !4 {
        local { b256, u64, b256 } __anon_0
        local { u64, ( { b256 } | { b256 } ) } __anon_00
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_000
        local { u64, ( () | { b256 } ) } __anon_0000
        local { u64 } __anon_00000
        local { b256, u64, u64 } __anon_0001
        local { u64, ( () | { b256 } ) } __anon_01
        local { b256, u64, b256 } __anon_02
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __anon_03
        local { b256, u64, u64 } __anon_04
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_1
        local { u64, ( { b256 } | { u64 } ) } __anon_10
        local { u64 } __anon_100
        local { u64, ( () | { b256 } ) } __anon_11
        local { u64, ( () | b256 ) } __anon_12
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64 } __anon_20
        local { u64, ( () | b256 ) } __anon_21
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { u64 } ) } __anon_30
        local { u64, ( { b256 } | { b256 } ) } __anon_4
        local { u64, ( { b256 } | { u64 } ) } __anon_40
        local { u64 } __anon_5
        local b256 __asm_arg
        local u256 __asm_arg0
        local b256 __asm_arg1
        local u256 __asm_arg2
        local b256 __const = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d
        local b256 __const0 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d
        local b256 __const1 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c
        local b256 __const2 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c
        local { u64, ( { b256 } | { u64 } ) } __matched_value_1
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __matched_value_12
        local { u64 } __matched_value_2
        local { u64, ( () | { b256 } ) } __matched_value_3
        local { u64 } __matched_value_30
        local { u64, ( () | { b256 } ) } __matched_value_31
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __matched_value_32
        local { u64, ( () | b256 ) } __matched_value_4
        local { u64 } __matched_value_6
        local { u64 } __ret_val
        local { u64 } __ret_val0
        local { b256 } __ret_val1
        local b256 __ret_val10
        local b256 __ret_val11
        local { b256 } __ret_val2
        local { b256 } __ret_val3
        local { b256 } __ret_val4
        local { b256 } __ret_val5
        local u256 __ret_val6
        local u256 __ret_val7
        local u256 __ret_val8
        local u256 __ret_val9
        local { b256 } __tmp_arg
        local { b256 } __tmp_arg0
        local { b256 } __tmp_arg1
        local { b256, u64, b256 } __tmp_arg10
        local { b256, u64, b256 } __tmp_arg11
        local { b256, u64, b256 } __tmp_arg12
        local { b256, u64, b256 } __tmp_arg13
        local { b256 } __tmp_arg2
        local { b256 } __tmp_arg3
        local { b256 } __tmp_arg4
        local b256 __tmp_arg5
        local b256 __tmp_arg6
        local b256 __tmp_arg7
        local { u64, ( () | { b256 } ) } __tmp_arg8
        local { u64, ( () | { b256 } ) } __tmp_arg9
        local { u64 } __tmp_block_arg
        local { u64, ( () | { b256 } ) } __tmp_block_arg0
        local { u64, ( { b256 } | { u64 } ) } __tmp_block_arg1
        local { u64, ( { b256 } | { u64 } ) } __tmp_block_arg2
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __tmp_block_arg3
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __tmp_block_arg4
        local { u64, ( () | b256 ) } __tmp_block_arg5
        local u256 __wide_lhs
        local u256 __wide_lhs0
        local u256 __wide_lhs1
        local u256 __wide_lhs2
        local mut u256 __wide_result
        local mut u256 __wide_result0
        local mut u256 __wide_result1
        local mut u256 __wide_result2
        local u256 __wide_rhs
        local u256 __wide_rhs1
        local { b256 } addr1
        local { b256 } addr2
        local { b256 } address
        local mut { u64, ( () | { b256 } ) } candidate
        local { u64 } err
        local { b256 } id1
        local { b256 } id2
        local { u64, ( { b256 } | { b256 } ) } inner_value
        local b256 inner_value0
        local b256 offset_slot
        local mut u256 offset_slot0
        local mut u256 offset_slot00
        local b256 offset_slot1
        local { b256 } owner
        local { u64, ( () | { b256 } ) } owner_of_input
        local { u64 } type_of_input

        entry(new_value: u64):
        v0 = asm(r1) -> bool r1, !11 {
            gm     r1 i1, !12
        }
        cbr v0, only_owner_0_msg_sender_10_block0(), only_owner_0_msg_sender_10_block7(), !13

        only_owner_0_msg_sender_10_block0():
        v1 = const u64 0, !15
        v2 = gtf v1, 1, !21
        v3 = bitcast v2 to u8, !22
        v4 = const u8 0, !23
        v5 = cmp eq v3 v4, !25
        cbr v5, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1(), !26

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0():
        v6 = get_local ptr { u64 }, __anon_00000, !28
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr u64, v7, !29
        v9 = const u64 0, !27
        store v9 to v8, !30
        v10 = get_local ptr { u64 }, __tmp_block_arg
        mem_copy_val v10, v6
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v10), !31

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1():
        v11 = const u8 1, !32
        v12 = cmp eq v3 v11, !34
        cbr v12, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3(), !35

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2():
        v13 = get_local ptr { u64 }, __anon_100, !36
        v14 = const u64 0
        v15 = get_elem_ptr v13, ptr u64, v14, !37
        v16 = const u64 1, !27
        store v16 to v15, !38
        v17 = get_local ptr { u64 }, __tmp_block_arg
        mem_copy_val v17, v13
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v17), !39

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3():
        v18 = const u64 0, !40
        revert v18, !44

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v19: ptr { u64 }):
        v20 = get_local ptr { u64 }, __matched_value_30, !46
        mem_copy_val v20, v19
        v21 = get_local ptr { u64 }, __matched_value_30, !47
        v22 = const u64 0
        v23 = get_elem_ptr v21, ptr u64, v22, !48
        v24 = load v23, !49
        v25 = const u64 0, !19
        v26 = cmp eq v24 v25, !51
        cbr v26, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1(), !52

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0():
        v27 = const u64 0, !53
        v28 = gtf v27, 5, !55
        v29 = bitcast v28 to u64, !56
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v29), !57

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1():
        v30 = get_local ptr { u64 }, __matched_value_30, !58
        v31 = const u64 0
        v32 = get_elem_ptr v30, ptr u64, v31, !59
        v33 = load v32, !60
        v34 = const u64 1, !19
        v35 = cmp eq v33 v34, !62
        cbr v35, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3(), !63

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2():
        v36 = const u64 0, !64
        v37 = gtf v36, 259, !66
        v38 = bitcast v37 to u64, !67
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v38), !68

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3():
        v39 = const u64 14757395258967588866, !45
        revert v39, !69

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v40: u64):
        v41 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0000, !72
        v42 = const u64 0
        v43 = get_elem_ptr v41, ptr u64, v42, !73
        v44 = const u64 0, !71
        store v44 to v43, !74
        v45 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !76
        mem_copy_val v45, v41
        v46 = const u64 0, !77
        br only_owner_0_msg_sender_10_caller_address_12_while(v46), !78

        only_owner_0_msg_sender_10_caller_address_12_while(v47: u64):
        v48 = cmp lt v47 v40, !80
        cbr v48, only_owner_0_msg_sender_10_caller_address_12_while_body(), only_owner_0_msg_sender_10_caller_address_12_end_while(), !81

        only_owner_0_msg_sender_10_caller_address_12_while_body():
        v49 = asm(input: v47) -> u64 input, !85 {
        }
        v50 = get_local ptr { u64 }, __ret_val
        v51 = call input_type_17(v49, v50)
        v52 = get_local ptr { u64 }, type_of_input, !87
        mem_copy_val v52, v51
        v53 = get_local ptr { u64 }, type_of_input, !89
        v54 = get_local ptr { u64 }, __matched_value_2, !91
        mem_copy_val v54, v53
        v55 = get_local ptr { u64 }, __matched_value_2, !92
        v56 = const u64 0
        v57 = get_elem_ptr v55, ptr u64, v56, !93
        v58 = load v57, !94
        v59 = const u64 0, !88
        v60 = cmp eq v58 v59, !96
        v61 = const unit (), !97
        cbr v60, only_owner_0_msg_sender_10_caller_address_12_block5(v61), only_owner_0_msg_sender_10_caller_address_12_block1(), !98

        only_owner_0_msg_sender_10_caller_address_12_block1():
        v62 = get_local ptr { u64 }, __matched_value_2, !99
        v63 = const u64 0
        v64 = get_elem_ptr v62, ptr u64, v63, !100
        v65 = load v64, !101
        v66 = const u64 2, !88
        v67 = cmp eq v65 v66, !103
        v68 = const unit (), !104
        cbr v67, only_owner_0_msg_sender_10_caller_address_12_block5(v68), only_owner_0_msg_sender_10_caller_address_12_block3(), !105

        only_owner_0_msg_sender_10_caller_address_12_block3():
        v69 = const u64 1, !106
        v70 = call add_19(v47, v69), !108
        br only_owner_0_msg_sender_10_caller_address_12_while(v70), !109

        only_owner_0_msg_sender_10_caller_address_12_block5(v71: ()):
        v72 = asm(input: v47) -> u64 input, !111 {
        }
        v73 = get_local ptr { u64 }, __ret_val0
        v74 = call input_type_17(v72, v73)
        v75 = get_local ptr { u64 }, __matched_value_6, !114
        mem_copy_val v75, v74
        v76 = get_local ptr { u64 }, __matched_value_6, !116
        v77 = const u64 0
        v78 = get_elem_ptr v76, ptr u64, v77, !117
        v79 = load v78, !118
        v80 = const u64 0, !115
        v81 = cmp eq v79 v80, !120
        cbr v81, only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0(), only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1(), !121

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0():
        v82 = get_local ptr { u64, ( () | { b256 } ) }, __anon_01, !122
        v83 = const u64 0
        v84 = get_elem_ptr v82, ptr u64, v83, !123
        v85 = const u64 1, !71
        store v85 to v84, !124
        v86 = gtf v72, 515, !126
        v87 = int_to_ptr v86 to ptr b256, !127
        v88 = get_local ptr b256, __tmp_arg5
        mem_copy_val v88, v87
        v89 = get_local ptr { b256 }, __ret_val1
        v90 = call from_22(v88, v89)
        v91 = const u64 1
        v92 = const u64 1
        v93 = get_elem_ptr v82, ptr { b256 }, v91, v92, !128
        mem_copy_val v93, v90
        v94 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_block_arg0
        mem_copy_val v94, v82
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v94), !129

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1():
        v95 = get_local ptr { u64, ( () | { b256 } ) }, __anon_11, !130
        v96 = const u64 0
        v97 = get_elem_ptr v95, ptr u64, v96, !131
        v98 = const u64 0, !71
        store v98 to v97, !132
        v99 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_block_arg0
        mem_copy_val v99, v95
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v99), !133

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v100: ptr { u64, ( () | { b256 } ) }):
        v101 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !135
        mem_copy_val v101, v100
        v102 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !137
        v103 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !140
        mem_copy_val v103, v102
        v104 = get_local ptr { u64, ( () | { b256 } ) }, candidate
        v105 = const u64 0
        v106 = get_elem_ptr v104, ptr u64, v105
        v107 = load v106, !141
        v108 = const u64 1, !142
        v109 = cmp eq v107 v108, !144
        v110 = const bool false, !145
        cbr v109, only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v110), only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1(), !146

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1():
        v111 = const bool true, !147
        br only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v111), !148

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v112: bool):
        cbr v112, only_owner_0_msg_sender_10_caller_address_12_block6(), only_owner_0_msg_sender_10_caller_address_12_block7(), !149

        only_owner_0_msg_sender_10_caller_address_12_block6():
        v113 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !151
        v114 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !153
        mem_copy_val v114, v113
        v115 = const u64 1, !154
        v116 = call add_19(v47, v115), !156
        br only_owner_0_msg_sender_10_caller_address_12_while(v116), !157

        only_owner_0_msg_sender_10_caller_address_12_block7():
        v117 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !159
        v118 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_arg8
        mem_copy_val v118, v117
        v119 = get_local ptr { b256 }, __ret_val4
        v120 = call unwrap_24(v118, v119)
        v121 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !161
        v122 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_arg9
        mem_copy_val v122, v121
        v123 = get_local ptr { b256 }, __ret_val5
        v124 = call unwrap_24(v122, v123)
        v125 = get_local ptr { b256 }, __tmp_arg
        mem_copy_val v125, v120
        v126 = get_local ptr { b256 }, __tmp_arg0
        mem_copy_val v126, v124
        v127 = call eq_6(v125, v126)
        cbr v127, only_owner_0_msg_sender_10_caller_address_12_block9(), only_owner_0_msg_sender_10_caller_address_12_block10(), !163

        only_owner_0_msg_sender_10_caller_address_12_block9():
        v128 = const u64 1, !164
        v129 = call add_19(v47, v128), !166
        br only_owner_0_msg_sender_10_caller_address_12_while(v129), !167

        only_owner_0_msg_sender_10_caller_address_12_block10():
        v130 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_10, !170
        v131 = const u64 0
        v132 = get_elem_ptr v130, ptr u64, v131, !171
        v133 = const u64 1, !169
        store v133 to v132, !172
        v134 = get_local ptr { u64 }, __anon_20, !174
        v135 = const u64 0
        v136 = get_elem_ptr v134, ptr u64, v135, !175
        v137 = const u64 0, !173
        store v137 to v136, !176
        v138 = const u64 1
        v139 = const u64 1
        v140 = get_elem_ptr v130, ptr { u64 }, v138, v139, !177
        mem_copy_val v140, v134
        v141 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg2
        mem_copy_val v141, v130
        br only_owner_0_msg_sender_10_block10(v141), !179

        only_owner_0_msg_sender_10_caller_address_12_end_while():
        v142 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !181
        v143 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !183
        mem_copy_val v143, v142
        v144 = get_local ptr { u64, ( () | { b256 } ) }, candidate
        v145 = const u64 0
        v146 = get_elem_ptr v144, ptr u64, v145
        v147 = load v146, !184
        v148 = const u64 1, !180
        v149 = cmp eq v147 v148, !186
        cbr v149, only_owner_0_msg_sender_10_caller_address_12_block12(), only_owner_0_msg_sender_10_caller_address_12_block13(), !187

        only_owner_0_msg_sender_10_caller_address_12_block12():
        v150 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !188
        v151 = const u64 1
        v152 = const u64 1
        v153 = get_elem_ptr v150, ptr { b256 }, v151, v152, !189
        v154 = get_local ptr { b256 }, address, !191
        mem_copy_val v154, v153
        v155 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_30, !192
        v156 = const u64 0
        v157 = get_elem_ptr v155, ptr u64, v156, !193
        v158 = const u64 0, !169
        store v158 to v157, !194
        v159 = const u64 1
        v160 = const u64 0
        v161 = get_elem_ptr v155, ptr { b256 }, v159, v160, !195
        mem_copy_val v161, v153
        v162 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg1
        mem_copy_val v162, v155
        br only_owner_0_msg_sender_10_caller_address_12_block17(v162), !196

        only_owner_0_msg_sender_10_caller_address_12_block13():
        v163 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !197
        v164 = const u64 0
        v165 = get_elem_ptr v163, ptr u64, v164, !198
        v166 = load v165, !199
        v167 = const u64 0, !180
        v168 = cmp eq v166 v167, !201
        cbr v168, only_owner_0_msg_sender_10_caller_address_12_block14(), only_owner_0_msg_sender_10_caller_address_12_block15(), !202

        only_owner_0_msg_sender_10_caller_address_12_block14():
        v169 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_40, !203
        v170 = const u64 0
        v171 = get_elem_ptr v169, ptr u64, v170, !204
        v172 = const u64 1, !169
        store v172 to v171, !205
        v173 = get_local ptr { u64 }, __anon_5, !206
        v174 = const u64 0
        v175 = get_elem_ptr v173, ptr u64, v174, !207
        v176 = const u64 1, !173
        store v176 to v175, !208
        v177 = const u64 1
        v178 = const u64 1
        v179 = get_elem_ptr v169, ptr { u64 }, v177, v178, !209
        mem_copy_val v179, v173
        v180 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg1
        mem_copy_val v180, v169
        br only_owner_0_msg_sender_10_caller_address_12_block17(v180), !210

        only_owner_0_msg_sender_10_caller_address_12_block15():
        v181 = const u64 14757395258967588866, !182
        revert v181, !211

        only_owner_0_msg_sender_10_caller_address_12_block17(v182: ptr { u64, ( { b256 } | { u64 } ) }):
        v183 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg2
        mem_copy_val v183, v182
        br only_owner_0_msg_sender_10_block10(v183), !212

        only_owner_0_msg_sender_10_block10(v184: ptr { u64, ( { b256 } | { u64 } ) }):
        v185 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !214
        mem_copy_val v185, v184
        v186 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg2
        v187 = const u64 0
        v188 = get_elem_ptr v186, ptr u64, v187
        v189 = load v188, !215
        v190 = const u64 1, !16
        v191 = cmp eq v189 v190, !217
        cbr v191, only_owner_0_msg_sender_10_block1(), only_owner_0_msg_sender_10_block2(), !218

        only_owner_0_msg_sender_10_block1():
        v192 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !219
        v193 = const u64 1
        v194 = const u64 1
        v195 = get_elem_ptr v192, ptr { u64 }, v193, v194, !220
        v196 = get_local ptr { u64 }, err, !222
        mem_copy_val v196, v195
        v197 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_000, !223
        v198 = const u64 0
        v199 = get_elem_ptr v197, ptr u64, v198, !224
        v200 = const u64 1, !169
        store v200 to v199, !225
        v201 = const u64 1
        v202 = const u64 1
        v203 = get_elem_ptr v197, ptr { u64 }, v201, v202, !226
        mem_copy_val v203, v195
        v204 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg3
        mem_copy_val v204, v197
        br only_owner_0_msg_sender_10_block6(v204), !227

        only_owner_0_msg_sender_10_block2():
        v205 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !228
        v206 = const u64 0
        v207 = get_elem_ptr v205, ptr u64, v206, !229
        v208 = load v207, !230
        v209 = const u64 0, !16
        v210 = cmp eq v208 v209, !232
        cbr v210, only_owner_0_msg_sender_10_block3(), only_owner_0_msg_sender_10_block4(), !233

        only_owner_0_msg_sender_10_block3():
        v211 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !234
        v212 = const u64 1
        v213 = const u64 0
        v214 = get_elem_ptr v211, ptr { b256 }, v212, v213, !235
        v215 = get_local ptr { b256 }, owner, !237
        mem_copy_val v215, v214
        v216 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_1, !238
        v217 = const u64 0
        v218 = get_elem_ptr v216, ptr u64, v217, !239
        v219 = const u64 0, !169
        store v219 to v218, !240
        v220 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !243
        v221 = const u64 0
        v222 = get_elem_ptr v220, ptr u64, v221, !244
        v223 = const u64 0, !242
        store v223 to v222, !245
        v224 = const u64 1
        v225 = const u64 0
        v226 = get_elem_ptr v220, ptr { b256 }, v224, v225, !246
        mem_copy_val v226, v214
        v227 = const u64 1
        v228 = const u64 0
        v229 = get_elem_ptr v216, ptr { u64, ( { b256 } | { b256 } ) }, v227, v228, !247
        mem_copy_val v229, v220
        v230 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg3
        mem_copy_val v230, v216
        br only_owner_0_msg_sender_10_block6(v230), !248

        only_owner_0_msg_sender_10_block4():
        v231 = const u64 14757395258967588866, !213
        revert v231, !249

        only_owner_0_msg_sender_10_block6(v232: ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v233 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg4
        mem_copy_val v233, v232
        br only_owner_0_msg_sender_10_block8(v233), !250

        only_owner_0_msg_sender_10_block7():
        v234 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_3, !251
        v235 = const u64 0
        v236 = get_elem_ptr v234, ptr u64, v235, !252
        v237 = const u64 0, !169
        store v237 to v236, !253
        v238 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_4, !254
        v239 = const u64 0
        v240 = get_elem_ptr v238, ptr u64, v239, !255
        v241 = const u64 1, !242
        store v241 to v240, !256
        v242 = asm(r1) -> ptr b256 r1 {
            gm     r1 i2, !257
        }
        v243 = get_local ptr b256, __tmp_arg6
        mem_copy_val v243, v242
        v244 = get_local ptr { b256 }, __ret_val2
        v245 = call from_22(v243, v244)
        v246 = const u64 1
        v247 = const u64 1
        v248 = get_elem_ptr v238, ptr { b256 }, v246, v247, !258
        mem_copy_val v248, v245
        v249 = const u64 1
        v250 = const u64 0
        v251 = get_elem_ptr v234, ptr { u64, ( { b256 } | { b256 } ) }, v249, v250, !259
        mem_copy_val v251, v238
        v252 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg4
        mem_copy_val v252, v234
        br only_owner_0_msg_sender_10_block8(v252), !260

        only_owner_0_msg_sender_10_block8(v253: ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v254 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !263
        mem_copy_val v254, v253
        v255 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg4
        v256 = const u64 0
        v257 = get_elem_ptr v255, ptr u64, v256
        v258 = load v257, !264
        v259 = const u64 0, !265
        v260 = cmp eq v258 v259, !267
        cbr v260, only_owner_0_unwrap_9_block0(), only_owner_0_unwrap_9_block1(), !268

        only_owner_0_unwrap_9_block0():
        v261 = get_local ptr b256, __const
        v262 = get_local ptr b256, __const0
        v263 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !269
        v264 = const u64 1
        v265 = const u64 0
        v266 = get_elem_ptr v263, ptr { u64, ( { b256 } | { b256 } ) }, v264, v265, !270
        v267 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !272
        mem_copy_val v267, v266
        v268 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !274
        v269 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_00, !275
        v270 = const u64 0
        v271 = get_elem_ptr v269, ptr u64, v270, !276
        v272 = const u64 0, !242
        store v272 to v271, !277
        v273 = get_local ptr { b256, u64, b256 }, __anon_02, !280
        v274 = const u64 0
        v275 = get_elem_ptr v273, ptr b256, v274, !281
        mem_copy_val v275, v261
        v276 = const u64 1
        v277 = get_elem_ptr v273, ptr u64, v276, !282
        v278 = const u64 0
        store v278 to v277, !283
        v279 = const u64 2
        v280 = get_elem_ptr v273, ptr b256, v279, !284
        mem_copy_val v280, v262
        v281 = get_local ptr { b256, u64, b256 }, __tmp_arg12
        mem_copy_val v281, v273
        v282 = get_local ptr b256, __ret_val10
        v283 = call slot_51(v281, v282)
        v284 = get_local ptr { b256, u64, b256 }, __tmp_arg10
        mem_copy_val v284, v273
        v285 = call offset_46(v284)
        v286 = const u64 8, !286
        v287 = mul v285, v286, !292
        v288 = const u64 32
        v289 = add v287, v288, !294
        v290 = const u64 31, !295
        v291 = add v289, v290, !297
        v292 = const u64 5, !298
        v293 = rsh v291, v292, !300
        v294 = const u64 4, !301
        v295 = mod v285, v294, !303
        v296 = const u64 8, !304
        v297 = mul v295, v296, !306
        v298 = add v297, v288, !308
        v299 = const u64 31, !309
        v300 = add v298, v299, !311
        v301 = const u64 5, !312
        v302 = rsh v300, v301, !314
        v303 = get_local ptr b256, __asm_arg
        mem_copy_val v303, v283
        v304 = asm(input: v303) -> ptr u256 input {
        }
        v305 = get_local ptr u256, offset_slot0, !316
        mem_copy_val v305, v304
        v306 = get_local ptr u256, offset_slot0, !318
        v307 = get_local ptr u256, __ret_val6
        v308 = call as_u256_40(v293, v307)
        v309 = get_local ptr u256, __ret_val7
        v310 = call as_u256_40(v302, v309)
        v311 = get_local ptr u256, __wide_lhs
        mem_copy_val v311, v308
        v312 = get_local ptr u256, __wide_rhs
        mem_copy_val v312, v310
        v313 = get_local ptr u256, __wide_result, !320
        wide sub v311, v312 to v313, !320
        v314 = get_local ptr u256, __wide_lhs0, !321
        mem_copy_val v314, v306
        v315 = get_local ptr u256, __wide_result, !320
        v316 = get_local ptr u256, __wide_result0, !323
        wide add v314, v315 to v316, !323
        v317 = get_local ptr u256, offset_slot0, !324
        mem_copy_val v317, v316
        v318 = get_local ptr u256, __asm_arg0
        mem_copy_val v318, v316
        v319 = asm(input: v318) -> ptr b256 input {
        }
        v320 = get_local ptr { b256, u64, u64 }, __anon_0001, !326
        v321 = const u64 0
        v322 = get_elem_ptr v320, ptr b256, v321, !327
        mem_copy_val v322, v319
        v323 = const u64 1
        v324 = get_elem_ptr v320, ptr u64, v323, !328
        store v302 to v324, !329
        v325 = const u64 2
        v326 = get_elem_ptr v320, ptr u64, v325, !330
        store v295 to v326, !331
        v327 = get_local ptr { b256, u64, u64 }, __anon_0001, !333
        v328 = const u64 0
        v329 = get_elem_ptr v327, ptr b256, v328, !334
        v330 = get_local ptr b256, offset_slot, !335
        mem_copy_val v330, v329
        v331 = get_local ptr { b256, u64, u64 }, __anon_0001, !336
        v332 = const u64 1
        v333 = get_elem_ptr v331, ptr u64, v332, !337
        v334 = load v333, !338
        v335 = get_local ptr { b256, u64, u64 }, __anon_0001, !339
        v336 = const u64 2
        v337 = get_elem_ptr v335, ptr u64, v336, !340
        v338 = load v337, !341
        v339 = const u64 32, !342
        v340 = mul v334, v339, !344
        v341 = const u64 8
        v342 = mul v341, v340, !348
        v343 = asm(size: v342, ptr) -> u64 ptr, !350 {
            aloc   size, !351
            move   ptr hp, !352
        }
        v344 = get_local ptr b256, offset_slot, !354
        v345 = int_to_ptr v343 to ptr b256, !355
        v346 = state_load_quad_word v345, key v344, v334, !356
        cbr v346, only_owner_0_get_owner_27_read_28_read_30_block3(), only_owner_0_get_owner_27_read_28_read_30_block4(), !357

        only_owner_0_unwrap_9_block1():
        v347 = const u64 0, !358
        revert v347, !360

        only_owner_0_get_owner_27_read_28_read_30_block3():
        v348 = get_local ptr { u64, ( () | b256 ) }, __anon_12, !361
        v349 = const u64 0
        v350 = get_elem_ptr v348, ptr u64, v349, !362
        v351 = const u64 1, !71
        store v351 to v350, !363
        v352 = const u64 8
        v353 = mul v352, v338, !365
        v354 = add v343, v353, !366
        v355 = asm(ptr: v354) -> ptr b256 ptr {
        }
        v356 = const u64 1
        v357 = const u64 1
        v358 = get_elem_ptr v348, ptr b256, v356, v357, !367
        mem_copy_val v358, v355
        v359 = get_local ptr { u64, ( () | b256 ) }, __tmp_block_arg5
        mem_copy_val v359, v348
        br only_owner_0_get_owner_27_read_28_read_30_block5(v359), !368

        only_owner_0_get_owner_27_read_28_read_30_block4():
        v360 = get_local ptr { u64, ( () | b256 ) }, __anon_21, !369
        v361 = const u64 0
        v362 = get_elem_ptr v360, ptr u64, v361, !370
        v363 = const u64 0, !71
        store v363 to v362, !371
        v364 = get_local ptr { u64, ( () | b256 ) }, __tmp_block_arg5
        mem_copy_val v364, v360
        br only_owner_0_get_owner_27_read_28_read_30_block5(v364), !372

        only_owner_0_get_owner_27_read_28_read_30_block5(v365: ptr { u64, ( () | b256 ) }):
        v366 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !375
        mem_copy_val v366, v365
        v367 = get_local ptr { u64, ( () | b256 ) }, __tmp_block_arg5
        v368 = const u64 0
        v369 = get_elem_ptr v367, ptr u64, v368
        v370 = load v369, !376
        v371 = const u64 1, !377
        v372 = cmp eq v370 v371, !379
        cbr v372, only_owner_0_get_owner_27_read_28_unwrap_29_block0(), only_owner_0_get_owner_27_read_28_unwrap_29_block1(), !380

        only_owner_0_get_owner_27_read_28_unwrap_29_block0():
        v373 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !381
        v374 = const u64 1
        v375 = const u64 1
        v376 = get_elem_ptr v373, ptr b256, v374, v375, !382
        v377 = get_local ptr b256, inner_value0, !384
        mem_copy_val v377, v376
        v378 = get_local ptr b256, __tmp_arg7
        mem_copy_val v378, v376
        v379 = get_local ptr { b256 }, __ret_val3
        v380 = call from_22(v378, v379)
        v381 = const u64 1
        v382 = const u64 0
        v383 = get_elem_ptr v269, ptr { b256 }, v381, v382, !385
        mem_copy_val v383, v380
        v384 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_03, !388
        v385 = const u64 0
        v386 = get_elem_ptr v384, ptr { u64, ( { b256 } | { b256 } ) }, v385, !389
        mem_copy_val v386, v268
        v387 = const u64 1
        v388 = get_elem_ptr v384, ptr { u64, ( { b256 } | { b256 } ) }, v387, !390
        mem_copy_val v388, v269
        v389 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !392
        mem_copy_val v389, v384
        v390 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_03
        v391 = const u64 0
        v392 = const u64 0
        v393 = get_elem_ptr v390, ptr u64, v391, v392
        v394 = load v393, !393
        v395 = const u64 0, !394
        v396 = cmp eq v394 v395, !396
        cbr v396, only_owner_0_eq_4_block0(), only_owner_0_eq_4_block1(v396), !397

        only_owner_0_get_owner_27_read_28_unwrap_29_block1():
        v397 = const u64 0, !398
        revert v397, !400

        only_owner_0_eq_4_block0():
        v398 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !401
        v399 = const u64 1
        v400 = get_elem_ptr v398, ptr { u64, ( { b256 } | { b256 } ) }, v399, !402
        v401 = const u64 0
        v402 = get_elem_ptr v400, ptr u64, v401, !403
        v403 = load v402, !404
        v404 = const u64 0, !394
        v405 = cmp eq v403 v404, !405
        br only_owner_0_eq_4_block1(v405), !406

        only_owner_0_eq_4_block1(v406: bool):
        cbr v406, only_owner_0_eq_4_block2(), only_owner_0_eq_4_block3(), !407

        only_owner_0_eq_4_block2():
        v407 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !408
        v408 = const u64 0
        v409 = get_elem_ptr v407, ptr { u64, ( { b256 } | { b256 } ) }, v408, !409
        v410 = const u64 1
        v411 = const u64 0
        v412 = get_elem_ptr v409, ptr { b256 }, v410, v411, !410
        v413 = get_local ptr { b256 }, addr1, !412
        mem_copy_val v413, v412
        v414 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !413
        v415 = const u64 1
        v416 = get_elem_ptr v414, ptr { u64, ( { b256 } | { b256 } ) }, v415, !414
        v417 = const u64 1
        v418 = const u64 0
        v419 = get_elem_ptr v416, ptr { b256 }, v417, v418, !415
        v420 = get_local ptr { b256 }, addr2, !417
        mem_copy_val v420, v419
        v421 = get_local ptr { b256 }, __tmp_arg1
        mem_copy_val v421, v412
        v422 = get_local ptr { b256 }, __tmp_arg2
        mem_copy_val v422, v419
        v423 = call eq_6(v421, v422)
        br only_owner_0_eq_4_block9(v423), !418

        only_owner_0_eq_4_block3():
        v424 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !419
        v425 = const u64 0
        v426 = get_elem_ptr v424, ptr { u64, ( { b256 } | { b256 } ) }, v425, !421
        v427 = const u64 0
        v428 = get_elem_ptr v426, ptr u64, v427, !422
        v429 = load v428, !423
        v430 = const u64 1, !420
        v431 = cmp eq v429 v430, !425
        cbr v431, only_owner_0_eq_4_block4(), only_owner_0_eq_4_block5(v431), !426

        only_owner_0_eq_4_block4():
        v432 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !427
        v433 = const u64 1
        v434 = get_elem_ptr v432, ptr { u64, ( { b256 } | { b256 } ) }, v433, !428
        v435 = const u64 0
        v436 = get_elem_ptr v434, ptr u64, v435, !429
        v437 = load v436, !430
        v438 = const u64 1, !420
        v439 = cmp eq v437 v438, !431
        br only_owner_0_eq_4_block5(v439), !432

        only_owner_0_eq_4_block5(v440: bool):
        v441 = const bool false, !433
        cbr v440, only_owner_0_eq_4_block6(), only_owner_0_eq_4_block8(v441), !434

        only_owner_0_eq_4_block6():
        v442 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !435
        v443 = const u64 0
        v444 = get_elem_ptr v442, ptr { u64, ( { b256 } | { b256 } ) }, v443, !436
        v445 = const u64 1
        v446 = const u64 1
        v447 = get_elem_ptr v444, ptr { b256 }, v445, v446, !437
        v448 = get_local ptr { b256 }, id1, !439
        mem_copy_val v448, v447
        v449 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !440
        v450 = const u64 1
        v451 = get_elem_ptr v449, ptr { u64, ( { b256 } | { b256 } ) }, v450, !441
        v452 = const u64 1
        v453 = const u64 1
        v454 = get_elem_ptr v451, ptr { b256 }, v452, v453, !442
        v455 = get_local ptr { b256 }, id2, !444
        mem_copy_val v455, v454
        v456 = get_local ptr { b256 }, __tmp_arg3
        mem_copy_val v456, v447
        v457 = get_local ptr { b256 }, __tmp_arg4
        mem_copy_val v457, v454
        v458 = call eq_6(v456, v457)
        br only_owner_0_eq_4_block8(v458), !445

        only_owner_0_eq_4_block8(v459: bool):
        br only_owner_0_eq_4_block9(v459), !446

        only_owner_0_eq_4_block9(v460: bool):
        v461 = const bool false, !448
        v462 = cmp eq v460 v461, !452
        cbr v462, only_owner_0_assert_1_block0(), only_owner_0_assert_1_block1(), !453

        only_owner_0_assert_1_block0():
        v463 = const u64 18446744073709486084, !455
        revert v463, !457

        only_owner_0_assert_1_block1():
        v464 = get_local ptr b256, __const1
        v465 = get_local ptr b256, __const2
        v466 = get_local ptr { b256, u64, b256 }, __anon_0, !458
        v467 = const u64 0
        v468 = get_elem_ptr v466, ptr b256, v467
        mem_copy_val v468, v464
        v469 = const u64 1
        v470 = get_elem_ptr v466, ptr u64, v469
        v471 = const u64 0
        store v471 to v470, !458
        v472 = const u64 2
        v473 = get_elem_ptr v466, ptr b256, v472
        mem_copy_val v473, v465
        v474 = get_local ptr { b256, u64, b256 }, __tmp_arg13
        mem_copy_val v474, v466
        v475 = get_local ptr b256, __ret_val11
        v476 = call slot_51(v474, v475)
        v477 = get_local ptr { b256, u64, b256 }, __tmp_arg11
        mem_copy_val v477, v466
        v478 = call offset_46(v477)
        v479 = const u64 8, !286
        v480 = mul v478, v479, !462
        v481 = const u64 8
        v482 = add v480, v481, !463
        v483 = const u64 31, !295
        v484 = add v482, v483, !464
        v485 = const u64 5, !298
        v486 = rsh v484, v485, !465
        v487 = const u64 4, !301
        v488 = mod v478, v487, !466
        v489 = get_local ptr b256, __asm_arg1
        mem_copy_val v489, v476
        v490 = asm(input: v489) -> ptr u256 input {
        }
        v491 = get_local ptr u256, offset_slot00, !467
        mem_copy_val v491, v490
        v492 = get_local ptr u256, offset_slot00, !468
        v493 = get_local ptr u256, __ret_val8
        v494 = call as_u256_40(v486, v493)
        v495 = get_local ptr u256, __ret_val9
        v496 = const u64 1, !469
        v497 = call as_u256_40(v496, v495)
        v498 = get_local ptr u256, __wide_lhs1
        mem_copy_val v498, v494
        v499 = get_local ptr u256, __wide_rhs1
        mem_copy_val v499, v497
        v500 = get_local ptr u256, __wide_result1, !470
        wide sub v498, v499 to v500, !470
        v501 = get_local ptr u256, __wide_lhs2, !471
        mem_copy_val v501, v492
        v502 = get_local ptr u256, __wide_result1, !470
        v503 = get_local ptr u256, __wide_result2, !472
        wide add v501, v502 to v503, !472
        v504 = get_local ptr u256, offset_slot00, !473
        mem_copy_val v504, v503
        v505 = get_local ptr u256, __asm_arg2
        mem_copy_val v505, v503
        v506 = asm(input: v505) -> ptr b256 input {
        }
        v507 = get_local ptr { b256, u64, u64 }, __anon_04, !474
        v508 = const u64 0
        v509 = get_elem_ptr v507, ptr b256, v508, !475
        mem_copy_val v509, v506
        v510 = const u64 1
        v511 = get_elem_ptr v507, ptr u64, v510, !476
        store v496 to v511, !477
        v512 = const u64 2
        v513 = get_elem_ptr v507, ptr u64, v512, !478
        store v488 to v513, !479
        v514 = get_local ptr { b256, u64, u64 }, __anon_04, !481
        v515 = const u64 0
        v516 = get_elem_ptr v514, ptr b256, v515, !482
        v517 = get_local ptr b256, offset_slot1, !483
        mem_copy_val v517, v516
        v518 = get_local ptr { b256, u64, u64 }, __anon_04, !484
        v519 = const u64 1
        v520 = get_elem_ptr v518, ptr u64, v519, !485
        v521 = load v520, !486
        v522 = get_local ptr { b256, u64, u64 }, __anon_04, !487
        v523 = const u64 2
        v524 = get_elem_ptr v522, ptr u64, v523, !488
        v525 = load v524, !489
        v526 = const u64 32, !490
        v527 = mul v521, v526, !492
        v528 = mul v341, v527, !494
        v529 = asm(size: v528, ptr) -> u64 ptr, !495 {
            aloc   size, !351
            move   ptr hp, !352
        }
        v530 = get_local ptr b256, offset_slot1, !497
        v531 = int_to_ptr v529 to ptr b256, !498
        v532 = state_load_quad_word v531, key v530, v521, !499
        v533 = mul v352, v525, !501
        v534 = add v529, v533, !502
        v535 = asm(ptr: v534, val: new_value) {
            sw     ptr val i0, !504
        }
        v536 = get_local ptr b256, offset_slot1, !506
        v537 = int_to_ptr v529 to ptr b256, !507
        v538 = state_store_quad_word v537, key v536, v521, !508
        v539 = const unit ()
        ret () v539
    }

    pub fn eq_6(self: ptr { b256 }, other: ptr { b256 }) -> bool, !510 {
        local b256 __wide_lhs
        local b256 __wide_rhs

        entry(self: ptr { b256 }, other: ptr { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !511
        v4 = ptr_to_int other to u64
        v5 = int_to_ptr v4 to ptr { b256 }
        v6 = const u64 0
        v7 = get_elem_ptr v5, ptr b256, v6, !511
        v8 = get_local ptr b256, __wide_lhs
        mem_copy_val v8, v3
        v9 = get_local ptr b256, __wide_rhs
        mem_copy_val v9, v7
        v10 = wide cmp eq v8 v9, !512
        ret bool v10
    }

    pub fn input_type_17(index !513: u64, __ret_value: ptr { u64 }) -> ptr { u64 }, !514 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local { u64 } __tmp_block_arg
        local { u64 } __tmp_block_arg0

        entry(index: u64, __ret_value: ptr { u64 }):
        v0 = gtf index, 512, !515
        v1 = bitcast v0 to u8, !515
        v2 = const u8 0, !516
        v3 = cmp eq v1 v2, !517
        cbr v3, block0(), block1(), !517

        block0():
        v4 = get_local ptr { u64 }, __anon_0, !518
        v5 = const u64 0
        v6 = get_elem_ptr v4, ptr u64, v5, !518
        v7 = const u64 0, !518
        store v7 to v6, !518
        v8 = get_local ptr { u64 }, __tmp_block_arg0
        mem_copy_val v8, v4
        br block8(v8)

        block1():
        v9 = const u8 1, !519
        v10 = cmp eq v1 v9, !520
        cbr v10, block2(), block3(), !520

        block2():
        v11 = get_local ptr { u64 }, __anon_1, !518
        v12 = const u64 0
        v13 = get_elem_ptr v11, ptr u64, v12, !518
        v14 = const u64 1, !518
        store v14 to v13, !518
        v15 = get_local ptr { u64 }, __tmp_block_arg
        mem_copy_val v15, v11
        br block7(v15)

        block3():
        v16 = const u8 2, !521
        v17 = cmp eq v1 v16, !522
        cbr v17, block4(), block5(), !522

        block4():
        v18 = get_local ptr { u64 }, __anon_2, !518
        v19 = const u64 0
        v20 = get_elem_ptr v18, ptr u64, v19, !518
        v21 = const u64 2, !518
        store v21 to v20, !518
        v22 = get_local ptr { u64 }, __tmp_block_arg
        mem_copy_val v22, v18
        br block7(v22)

        block5():
        v23 = const u64 0, !523
        revert v23, !525

        block7(v24: ptr { u64 }):
        v25 = get_local ptr { u64 }, __tmp_block_arg0
        mem_copy_val v25, v24
        br block8(v25)

        block8(v26: ptr { u64 }):
        mem_copy_val __ret_value, v26
        ret ptr { u64 } __ret_value
    }

    pub fn add_19(self !526: u64, other !527: u64) -> u64, !528 {
        entry(self: u64, other: u64):
        v0 = add self, other
        v1 = const u64 65535, !530
        v2 = cmp gt v0 v1
        cbr v2, block0(), block1(), !531

        block0():
        v3 = const u64 0, !532
        revert v3, !533

        block1():
        ret u64 v0
    }

    pub fn from_22(bits: ptr b256, __ret_value: ptr { b256 }) -> ptr { b256 }, !534 {
        local { b256 } __anon_0

        entry(bits: ptr b256, __ret_value: ptr { b256 }):
        v0 = get_local ptr { b256 }, __anon_0, !535
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        mem_copy_val v2, bits
        mem_copy_val __ret_value, v0
        ret ptr { b256 } __ret_value
    }

    pub fn unwrap_24(self: ptr { u64, ( () | { b256 } ) }, __ret_value: ptr { b256 }) -> ptr { b256 }, !536 {
        local { u64, ( () | { b256 } ) } __matched_value_4

        entry(self: ptr { u64, ( () | { b256 } ) }, __ret_value: ptr { b256 }):
        v0 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !374
        mem_copy_val v0, self
        v1 = const u64 0
        v2 = get_elem_ptr self, ptr u64, v1
        v3 = load v2
        v4 = const u64 1, !377
        v5 = cmp eq v3 v4, !378
        cbr v5, block0(), block1(), !378

        block0():
        v6 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !377
        v7 = const u64 1
        v8 = const u64 1
        v9 = get_elem_ptr v6, ptr { b256 }, v7, v8
        mem_copy_val __ret_value, v9
        ret ptr { b256 } __ret_value

        block1():
        v10 = const u64 0, !398
        revert v10, !537
    }

    pub fn as_u256_40(self !538: u64, __ret_value: ptr u256) -> ptr u256, !539 {
        local { u64, u64, u64, u64 } __anon_0
        local { u64, u64, u64, u64 } input

        entry(self: u64, __ret_value: ptr u256):
        v0 = get_local ptr { u64, u64, u64, u64 }, __anon_0, !540
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr u64, v1, !540
        v3 = const u64 0, !541
        store v3 to v2, !540
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4, !540
        v6 = const u64 0, !542
        store v6 to v5, !540
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr u64, v7, !540
        v9 = const u64 0, !543
        store v9 to v8, !540
        v10 = const u64 3
        v11 = get_elem_ptr v0, ptr u64, v10, !540
        store self to v11, !540
        v12 = get_local ptr { u64, u64, u64, u64 }, input, !544
        mem_copy_val v12, v0
        v13 = get_local ptr { u64, u64, u64, u64 }, input, !545
        v14 = asm(input: v13) -> ptr u256 input {
        }
        mem_copy_val __ret_value, v14
        ret ptr u256 __ret_value
    }

    pub fn offset_46(self: ptr { b256, u64, b256 }) -> u64, !547 {
        entry(self: ptr { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 1
        v3 = get_elem_ptr v1, ptr u64, v2, !548
        v4 = load v3
        ret u64 v4
    }

    pub fn slot_51(self: ptr { b256, u64, b256 }, __ret_value: ptr b256) -> ptr b256, !549 {
        entry(self: ptr { b256, u64, b256 }, __ret_value: ptr b256):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !550
        mem_copy_val __ret_value, v3
        ret ptr b256 __ret_value
    }
}

// IR: [sroa] Scalar replacement of aggregates
contract {
    pub entry fn set_data_if_owner<c626c6e2>(new_value !1: u64) -> (), !4 {
        local { b256, u64, b256 } __anon_0
        local { u64, ( { b256 } | { b256 } ) } __anon_00
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_000
        local { u64, ( () | { b256 } ) } __anon_0000
        local { u64 } __anon_00000
        local u64 __anon_000000
        local { b256, u64, u64 } __anon_0001
        local { u64, ( () | { b256 } ) } __anon_01
        local { b256, u64, b256 } __anon_02
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __anon_03
        local { b256, u64, u64 } __anon_04
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_1
        local { u64, ( { b256 } | { u64 } ) } __anon_10
        local { u64 } __anon_100
        local u64 __anon_1000
        local { u64, ( () | { b256 } ) } __anon_11
        local { u64, ( () | b256 ) } __anon_12
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64 } __anon_20
        local u64 __anon_200
        local { u64, ( () | b256 ) } __anon_21
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { u64 } ) } __anon_30
        local { u64, ( { b256 } | { b256 } ) } __anon_4
        local { u64, ( { b256 } | { u64 } ) } __anon_40
        local { u64 } __anon_5
        local u64 __anon_50
        local b256 __asm_arg
        local u256 __asm_arg0
        local b256 __asm_arg1
        local u256 __asm_arg2
        local b256 __const = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d
        local b256 __const0 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d
        local b256 __const1 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c
        local b256 __const2 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c
        local { u64, ( { b256 } | { u64 } ) } __matched_value_1
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __matched_value_12
        local { u64 } __matched_value_2
        local u64 __matched_value_20
        local { u64, ( () | { b256 } ) } __matched_value_3
        local { u64 } __matched_value_30
        local u64 __matched_value_300
        local { u64, ( () | { b256 } ) } __matched_value_31
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __matched_value_32
        local { u64, ( () | b256 ) } __matched_value_4
        local { u64 } __matched_value_6
        local u64 __matched_value_60
        local { u64 } __ret_val
        local { u64 } __ret_val0
        local { b256 } __ret_val1
        local b256 __ret_val10
        local b256 __ret_val11
        local { b256 } __ret_val2
        local { b256 } __ret_val3
        local { b256 } __ret_val4
        local { b256 } __ret_val5
        local u256 __ret_val6
        local u256 __ret_val7
        local u256 __ret_val8
        local u256 __ret_val9
        local { b256 } __tmp_arg
        local { b256 } __tmp_arg0
        local { b256 } __tmp_arg1
        local { b256, u64, b256 } __tmp_arg10
        local { b256, u64, b256 } __tmp_arg11
        local { b256, u64, b256 } __tmp_arg12
        local { b256, u64, b256 } __tmp_arg13
        local { b256 } __tmp_arg2
        local { b256 } __tmp_arg3
        local { b256 } __tmp_arg4
        local b256 __tmp_arg5
        local b256 __tmp_arg6
        local b256 __tmp_arg7
        local { u64, ( () | { b256 } ) } __tmp_arg8
        local { u64, ( () | { b256 } ) } __tmp_arg9
        local { u64 } __tmp_block_arg
        local { u64, ( () | { b256 } ) } __tmp_block_arg0
        local u64 __tmp_block_arg00
        local { u64, ( { b256 } | { u64 } ) } __tmp_block_arg1
        local { u64, ( { b256 } | { u64 } ) } __tmp_block_arg2
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __tmp_block_arg3
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __tmp_block_arg4
        local { u64, ( () | b256 ) } __tmp_block_arg5
        local u256 __wide_lhs
        local u256 __wide_lhs0
        local u256 __wide_lhs1
        local u256 __wide_lhs2
        local mut u256 __wide_result
        local mut u256 __wide_result0
        local mut u256 __wide_result1
        local mut u256 __wide_result2
        local u256 __wide_rhs
        local u256 __wide_rhs1
        local { b256 } addr1
        local { b256 } addr2
        local { b256 } address
        local mut { u64, ( () | { b256 } ) } candidate
        local { u64 } err
        local u64 err0
        local { b256 } id1
        local { b256 } id2
        local { u64, ( { b256 } | { b256 } ) } inner_value
        local b256 inner_value0
        local b256 offset_slot
        local mut u256 offset_slot0
        local mut u256 offset_slot00
        local b256 offset_slot1
        local { b256 } owner
        local { u64, ( () | { b256 } ) } owner_of_input
        local { u64 } type_of_input
        local u64 type_of_input0

        entry(new_value: u64):
        v0 = asm(r1) -> bool r1, !11 {
            gm     r1 i1, !12
        }
        cbr v0, only_owner_0_msg_sender_10_block0(), only_owner_0_msg_sender_10_block7(), !13

        only_owner_0_msg_sender_10_block0():
        v1 = const u64 0, !15
        v2 = gtf v1, 1, !21
        v3 = bitcast v2 to u8, !22
        v4 = const u8 0, !23
        v5 = cmp eq v3 v4, !25
        cbr v5, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1(), !26

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0():
        v6 = get_local ptr { u64 }, __anon_00000, !28
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr u64, v7, !29
        v9 = get_local ptr u64, __anon_000000
        v10 = const u64 0, !27
        store v10 to v9, !30
        v11 = get_local ptr { u64 }, __tmp_block_arg
        v12 = get_local ptr u64, __anon_000000
        v13 = load v12
        v14 = get_local ptr u64, __tmp_block_arg00
        store v13 to v14
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v11), !31

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1():
        v15 = const u8 1, !32
        v16 = cmp eq v3 v15, !34
        cbr v16, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3(), !35

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2():
        v17 = get_local ptr { u64 }, __anon_100, !36
        v18 = const u64 0
        v19 = get_elem_ptr v17, ptr u64, v18, !37
        v20 = get_local ptr u64, __anon_1000
        v21 = const u64 1, !27
        store v21 to v20, !38
        v22 = get_local ptr { u64 }, __tmp_block_arg
        v23 = get_local ptr u64, __anon_1000
        v24 = load v23
        v25 = get_local ptr u64, __tmp_block_arg00
        store v24 to v25
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v22), !39

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3():
        v26 = const u64 0, !40
        revert v26, !44

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v27: ptr { u64 }):
        v28 = get_local ptr { u64 }, __matched_value_30, !46
        v29 = get_local ptr u64, __tmp_block_arg00
        v30 = load v29
        v31 = get_local ptr u64, __matched_value_300
        store v30 to v31
        v32 = get_local ptr { u64 }, __matched_value_30, !47
        v33 = const u64 0
        v34 = get_elem_ptr v32, ptr u64, v33, !48
        v35 = get_local ptr u64, __matched_value_300
        v36 = load v35, !49
        v37 = const u64 0, !19
        v38 = cmp eq v36 v37, !51
        cbr v38, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1(), !52

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0():
        v39 = const u64 0, !53
        v40 = gtf v39, 5, !55
        v41 = bitcast v40 to u64, !56
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v41), !57

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1():
        v42 = get_local ptr { u64 }, __matched_value_30, !58
        v43 = const u64 0
        v44 = get_elem_ptr v42, ptr u64, v43, !59
        v45 = get_local ptr u64, __matched_value_300
        v46 = load v45, !60
        v47 = const u64 1, !19
        v48 = cmp eq v46 v47, !62
        cbr v48, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3(), !63

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2():
        v49 = const u64 0, !64
        v50 = gtf v49, 259, !66
        v51 = bitcast v50 to u64, !67
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v51), !68

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3():
        v52 = const u64 14757395258967588866, !45
        revert v52, !69

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v53: u64):
        v54 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0000, !72
        v55 = const u64 0
        v56 = get_elem_ptr v54, ptr u64, v55, !73
        v57 = const u64 0, !71
        store v57 to v56, !74
        v58 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !76
        mem_copy_val v58, v54
        v59 = const u64 0, !77
        br only_owner_0_msg_sender_10_caller_address_12_while(v59), !78

        only_owner_0_msg_sender_10_caller_address_12_while(v60: u64):
        v61 = cmp lt v60 v53, !80
        cbr v61, only_owner_0_msg_sender_10_caller_address_12_while_body(), only_owner_0_msg_sender_10_caller_address_12_end_while(), !81

        only_owner_0_msg_sender_10_caller_address_12_while_body():
        v62 = asm(input: v60) -> u64 input, !85 {
        }
        v63 = get_local ptr { u64 }, __ret_val
        v64 = call input_type_17(v62, v63)
        v65 = get_local ptr { u64 }, type_of_input, !87
        v66 = const u64 0
        v67 = get_elem_ptr v64, ptr u64, v66
        v68 = load v67
        v69 = get_local ptr u64, type_of_input0
        store v68 to v69
        v70 = get_local ptr { u64 }, type_of_input, !89
        v71 = get_local ptr { u64 }, __matched_value_2, !91
        v72 = get_local ptr u64, type_of_input0
        v73 = load v72
        v74 = get_local ptr u64, __matched_value_20
        store v73 to v74
        v75 = get_local ptr { u64 }, __matched_value_2, !92
        v76 = const u64 0
        v77 = get_elem_ptr v75, ptr u64, v76, !93
        v78 = get_local ptr u64, __matched_value_20
        v79 = load v78, !94
        v80 = const u64 0, !88
        v81 = cmp eq v79 v80, !96
        v82 = const unit (), !97
        cbr v81, only_owner_0_msg_sender_10_caller_address_12_block5(v82), only_owner_0_msg_sender_10_caller_address_12_block1(), !98

        only_owner_0_msg_sender_10_caller_address_12_block1():
        v83 = get_local ptr { u64 }, __matched_value_2, !99
        v84 = const u64 0
        v85 = get_elem_ptr v83, ptr u64, v84, !100
        v86 = get_local ptr u64, __matched_value_20
        v87 = load v86, !101
        v88 = const u64 2, !88
        v89 = cmp eq v87 v88, !103
        v90 = const unit (), !104
        cbr v89, only_owner_0_msg_sender_10_caller_address_12_block5(v90), only_owner_0_msg_sender_10_caller_address_12_block3(), !105

        only_owner_0_msg_sender_10_caller_address_12_block3():
        v91 = const u64 1, !106
        v92 = call add_19(v60, v91), !108
        br only_owner_0_msg_sender_10_caller_address_12_while(v92), !109

        only_owner_0_msg_sender_10_caller_address_12_block5(v93: ()):
        v94 = asm(input: v60) -> u64 input, !111 {
        }
        v95 = get_local ptr { u64 }, __ret_val0
        v96 = call input_type_17(v94, v95)
        v97 = get_local ptr { u64 }, __matched_value_6, !114
        v98 = const u64 0
        v99 = get_elem_ptr v96, ptr u64, v98
        v100 = load v99
        v101 = get_local ptr u64, __matched_value_60
        store v100 to v101
        v102 = get_local ptr { u64 }, __matched_value_6, !116
        v103 = const u64 0
        v104 = get_elem_ptr v102, ptr u64, v103, !117
        v105 = get_local ptr u64, __matched_value_60
        v106 = load v105, !118
        v107 = const u64 0, !115
        v108 = cmp eq v106 v107, !120
        cbr v108, only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0(), only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1(), !121

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0():
        v109 = get_local ptr { u64, ( () | { b256 } ) }, __anon_01, !122
        v110 = const u64 0
        v111 = get_elem_ptr v109, ptr u64, v110, !123
        v112 = const u64 1, !71
        store v112 to v111, !124
        v113 = gtf v94, 515, !126
        v114 = int_to_ptr v113 to ptr b256, !127
        v115 = get_local ptr b256, __tmp_arg5
        mem_copy_val v115, v114
        v116 = get_local ptr { b256 }, __ret_val1
        v117 = call from_22(v115, v116)
        v118 = const u64 1
        v119 = const u64 1
        v120 = get_elem_ptr v109, ptr { b256 }, v118, v119, !128
        mem_copy_val v120, v117
        v121 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_block_arg0
        mem_copy_val v121, v109
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v121), !129

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1():
        v122 = get_local ptr { u64, ( () | { b256 } ) }, __anon_11, !130
        v123 = const u64 0
        v124 = get_elem_ptr v122, ptr u64, v123, !131
        v125 = const u64 0, !71
        store v125 to v124, !132
        v126 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_block_arg0
        mem_copy_val v126, v122
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v126), !133

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v127: ptr { u64, ( () | { b256 } ) }):
        v128 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !135
        mem_copy_val v128, v127
        v129 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !137
        v130 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !140
        mem_copy_val v130, v129
        v131 = get_local ptr { u64, ( () | { b256 } ) }, candidate
        v132 = const u64 0
        v133 = get_elem_ptr v131, ptr u64, v132
        v134 = load v133, !141
        v135 = const u64 1, !142
        v136 = cmp eq v134 v135, !144
        v137 = const bool false, !145
        cbr v136, only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v137), only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1(), !146

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1():
        v138 = const bool true, !147
        br only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v138), !148

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v139: bool):
        cbr v139, only_owner_0_msg_sender_10_caller_address_12_block6(), only_owner_0_msg_sender_10_caller_address_12_block7(), !149

        only_owner_0_msg_sender_10_caller_address_12_block6():
        v140 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !151
        v141 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !153
        mem_copy_val v141, v140
        v142 = const u64 1, !154
        v143 = call add_19(v60, v142), !156
        br only_owner_0_msg_sender_10_caller_address_12_while(v143), !157

        only_owner_0_msg_sender_10_caller_address_12_block7():
        v144 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !159
        v145 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_arg8
        mem_copy_val v145, v144
        v146 = get_local ptr { b256 }, __ret_val4
        v147 = call unwrap_24(v145, v146)
        v148 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !161
        v149 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_arg9
        mem_copy_val v149, v148
        v150 = get_local ptr { b256 }, __ret_val5
        v151 = call unwrap_24(v149, v150)
        v152 = get_local ptr { b256 }, __tmp_arg
        mem_copy_val v152, v147
        v153 = get_local ptr { b256 }, __tmp_arg0
        mem_copy_val v153, v151
        v154 = call eq_6(v152, v153)
        cbr v154, only_owner_0_msg_sender_10_caller_address_12_block9(), only_owner_0_msg_sender_10_caller_address_12_block10(), !163

        only_owner_0_msg_sender_10_caller_address_12_block9():
        v155 = const u64 1, !164
        v156 = call add_19(v60, v155), !166
        br only_owner_0_msg_sender_10_caller_address_12_while(v156), !167

        only_owner_0_msg_sender_10_caller_address_12_block10():
        v157 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_10, !170
        v158 = const u64 0
        v159 = get_elem_ptr v157, ptr u64, v158, !171
        v160 = const u64 1, !169
        store v160 to v159, !172
        v161 = get_local ptr { u64 }, __anon_20, !174
        v162 = const u64 0
        v163 = get_elem_ptr v161, ptr u64, v162, !175
        v164 = get_local ptr u64, __anon_200
        v165 = const u64 0, !173
        store v165 to v164, !176
        v166 = const u64 1
        v167 = const u64 1
        v168 = get_elem_ptr v157, ptr { u64 }, v166, v167, !177
        v169 = get_local ptr u64, __anon_200
        v170 = load v169
        v171 = const u64 0
        v172 = get_elem_ptr v168, ptr u64, v171
        store v170 to v172
        v173 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg2
        mem_copy_val v173, v157
        br only_owner_0_msg_sender_10_block10(v173), !179

        only_owner_0_msg_sender_10_caller_address_12_end_while():
        v174 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !181
        v175 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !183
        mem_copy_val v175, v174
        v176 = get_local ptr { u64, ( () | { b256 } ) }, candidate
        v177 = const u64 0
        v178 = get_elem_ptr v176, ptr u64, v177
        v179 = load v178, !184
        v180 = const u64 1, !180
        v181 = cmp eq v179 v180, !186
        cbr v181, only_owner_0_msg_sender_10_caller_address_12_block12(), only_owner_0_msg_sender_10_caller_address_12_block13(), !187

        only_owner_0_msg_sender_10_caller_address_12_block12():
        v182 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !188
        v183 = const u64 1
        v184 = const u64 1
        v185 = get_elem_ptr v182, ptr { b256 }, v183, v184, !189
        v186 = get_local ptr { b256 }, address, !191
        mem_copy_val v186, v185
        v187 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_30, !192
        v188 = const u64 0
        v189 = get_elem_ptr v187, ptr u64, v188, !193
        v190 = const u64 0, !169
        store v190 to v189, !194
        v191 = const u64 1
        v192 = const u64 0
        v193 = get_elem_ptr v187, ptr { b256 }, v191, v192, !195
        mem_copy_val v193, v185
        v194 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg1
        mem_copy_val v194, v187
        br only_owner_0_msg_sender_10_caller_address_12_block17(v194), !196

        only_owner_0_msg_sender_10_caller_address_12_block13():
        v195 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !197
        v196 = const u64 0
        v197 = get_elem_ptr v195, ptr u64, v196, !198
        v198 = load v197, !199
        v199 = const u64 0, !180
        v200 = cmp eq v198 v199, !201
        cbr v200, only_owner_0_msg_sender_10_caller_address_12_block14(), only_owner_0_msg_sender_10_caller_address_12_block15(), !202

        only_owner_0_msg_sender_10_caller_address_12_block14():
        v201 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_40, !203
        v202 = const u64 0
        v203 = get_elem_ptr v201, ptr u64, v202, !204
        v204 = const u64 1, !169
        store v204 to v203, !205
        v205 = get_local ptr { u64 }, __anon_5, !206
        v206 = const u64 0
        v207 = get_elem_ptr v205, ptr u64, v206, !207
        v208 = get_local ptr u64, __anon_50
        v209 = const u64 1, !173
        store v209 to v208, !208
        v210 = const u64 1
        v211 = const u64 1
        v212 = get_elem_ptr v201, ptr { u64 }, v210, v211, !209
        v213 = get_local ptr u64, __anon_50
        v214 = load v213
        v215 = const u64 0
        v216 = get_elem_ptr v212, ptr u64, v215
        store v214 to v216
        v217 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg1
        mem_copy_val v217, v201
        br only_owner_0_msg_sender_10_caller_address_12_block17(v217), !210

        only_owner_0_msg_sender_10_caller_address_12_block15():
        v218 = const u64 14757395258967588866, !182
        revert v218, !211

        only_owner_0_msg_sender_10_caller_address_12_block17(v219: ptr { u64, ( { b256 } | { u64 } ) }):
        v220 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg2
        mem_copy_val v220, v219
        br only_owner_0_msg_sender_10_block10(v220), !212

        only_owner_0_msg_sender_10_block10(v221: ptr { u64, ( { b256 } | { u64 } ) }):
        v222 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !214
        mem_copy_val v222, v221
        v223 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg2
        v224 = const u64 0
        v225 = get_elem_ptr v223, ptr u64, v224
        v226 = load v225, !215
        v227 = const u64 1, !16
        v228 = cmp eq v226 v227, !217
        cbr v228, only_owner_0_msg_sender_10_block1(), only_owner_0_msg_sender_10_block2(), !218

        only_owner_0_msg_sender_10_block1():
        v229 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !219
        v230 = const u64 1
        v231 = const u64 1
        v232 = get_elem_ptr v229, ptr { u64 }, v230, v231, !220
        v233 = get_local ptr { u64 }, err, !222
        v234 = const u64 0
        v235 = get_elem_ptr v232, ptr u64, v234
        v236 = load v235
        v237 = get_local ptr u64, err0
        store v236 to v237
        v238 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_000, !223
        v239 = const u64 0
        v240 = get_elem_ptr v238, ptr u64, v239, !224
        v241 = const u64 1, !169
        store v241 to v240, !225
        v242 = const u64 1
        v243 = const u64 1
        v244 = get_elem_ptr v238, ptr { u64 }, v242, v243, !226
        mem_copy_val v244, v232
        v245 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg3
        mem_copy_val v245, v238
        br only_owner_0_msg_sender_10_block6(v245), !227

        only_owner_0_msg_sender_10_block2():
        v246 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !228
        v247 = const u64 0
        v248 = get_elem_ptr v246, ptr u64, v247, !229
        v249 = load v248, !230
        v250 = const u64 0, !16
        v251 = cmp eq v249 v250, !232
        cbr v251, only_owner_0_msg_sender_10_block3(), only_owner_0_msg_sender_10_block4(), !233

        only_owner_0_msg_sender_10_block3():
        v252 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !234
        v253 = const u64 1
        v254 = const u64 0
        v255 = get_elem_ptr v252, ptr { b256 }, v253, v254, !235
        v256 = get_local ptr { b256 }, owner, !237
        mem_copy_val v256, v255
        v257 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_1, !238
        v258 = const u64 0
        v259 = get_elem_ptr v257, ptr u64, v258, !239
        v260 = const u64 0, !169
        store v260 to v259, !240
        v261 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !243
        v262 = const u64 0
        v263 = get_elem_ptr v261, ptr u64, v262, !244
        v264 = const u64 0, !242
        store v264 to v263, !245
        v265 = const u64 1
        v266 = const u64 0
        v267 = get_elem_ptr v261, ptr { b256 }, v265, v266, !246
        mem_copy_val v267, v255
        v268 = const u64 1
        v269 = const u64 0
        v270 = get_elem_ptr v257, ptr { u64, ( { b256 } | { b256 } ) }, v268, v269, !247
        mem_copy_val v270, v261
        v271 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg3
        mem_copy_val v271, v257
        br only_owner_0_msg_sender_10_block6(v271), !248

        only_owner_0_msg_sender_10_block4():
        v272 = const u64 14757395258967588866, !213
        revert v272, !249

        only_owner_0_msg_sender_10_block6(v273: ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v274 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg4
        mem_copy_val v274, v273
        br only_owner_0_msg_sender_10_block8(v274), !250

        only_owner_0_msg_sender_10_block7():
        v275 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_3, !251
        v276 = const u64 0
        v277 = get_elem_ptr v275, ptr u64, v276, !252
        v278 = const u64 0, !169
        store v278 to v277, !253
        v279 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_4, !254
        v280 = const u64 0
        v281 = get_elem_ptr v279, ptr u64, v280, !255
        v282 = const u64 1, !242
        store v282 to v281, !256
        v283 = asm(r1) -> ptr b256 r1 {
            gm     r1 i2, !257
        }
        v284 = get_local ptr b256, __tmp_arg6
        mem_copy_val v284, v283
        v285 = get_local ptr { b256 }, __ret_val2
        v286 = call from_22(v284, v285)
        v287 = const u64 1
        v288 = const u64 1
        v289 = get_elem_ptr v279, ptr { b256 }, v287, v288, !258
        mem_copy_val v289, v286
        v290 = const u64 1
        v291 = const u64 0
        v292 = get_elem_ptr v275, ptr { u64, ( { b256 } | { b256 } ) }, v290, v291, !259
        mem_copy_val v292, v279
        v293 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg4
        mem_copy_val v293, v275
        br only_owner_0_msg_sender_10_block8(v293), !260

        only_owner_0_msg_sender_10_block8(v294: ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v295 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !263
        mem_copy_val v295, v294
        v296 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg4
        v297 = const u64 0
        v298 = get_elem_ptr v296, ptr u64, v297
        v299 = load v298, !264
        v300 = const u64 0, !265
        v301 = cmp eq v299 v300, !267
        cbr v301, only_owner_0_unwrap_9_block0(), only_owner_0_unwrap_9_block1(), !268

        only_owner_0_unwrap_9_block0():
        v302 = get_local ptr b256, __const
        v303 = get_local ptr b256, __const0
        v304 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !269
        v305 = const u64 1
        v306 = const u64 0
        v307 = get_elem_ptr v304, ptr { u64, ( { b256 } | { b256 } ) }, v305, v306, !270
        v308 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !272
        mem_copy_val v308, v307
        v309 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !274
        v310 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_00, !275
        v311 = const u64 0
        v312 = get_elem_ptr v310, ptr u64, v311, !276
        v313 = const u64 0, !242
        store v313 to v312, !277
        v314 = get_local ptr { b256, u64, b256 }, __anon_02, !280
        v315 = const u64 0
        v316 = get_elem_ptr v314, ptr b256, v315, !281
        mem_copy_val v316, v302
        v317 = const u64 1
        v318 = get_elem_ptr v314, ptr u64, v317, !282
        v319 = const u64 0
        store v319 to v318, !283
        v320 = const u64 2
        v321 = get_elem_ptr v314, ptr b256, v320, !284
        mem_copy_val v321, v303
        v322 = get_local ptr { b256, u64, b256 }, __tmp_arg12
        mem_copy_val v322, v314
        v323 = get_local ptr b256, __ret_val10
        v324 = call slot_51(v322, v323)
        v325 = get_local ptr { b256, u64, b256 }, __tmp_arg10
        mem_copy_val v325, v314
        v326 = call offset_46(v325)
        v327 = const u64 8, !286
        v328 = mul v326, v327, !292
        v329 = const u64 32
        v330 = add v328, v329, !294
        v331 = const u64 31, !295
        v332 = add v330, v331, !297
        v333 = const u64 5, !298
        v334 = rsh v332, v333, !300
        v335 = const u64 4, !301
        v336 = mod v326, v335, !303
        v337 = const u64 8, !304
        v338 = mul v336, v337, !306
        v339 = add v338, v329, !308
        v340 = const u64 31, !309
        v341 = add v339, v340, !311
        v342 = const u64 5, !312
        v343 = rsh v341, v342, !314
        v344 = get_local ptr b256, __asm_arg
        mem_copy_val v344, v324
        v345 = asm(input: v344) -> ptr u256 input {
        }
        v346 = get_local ptr u256, offset_slot0, !316
        mem_copy_val v346, v345
        v347 = get_local ptr u256, offset_slot0, !318
        v348 = get_local ptr u256, __ret_val6
        v349 = call as_u256_40(v334, v348)
        v350 = get_local ptr u256, __ret_val7
        v351 = call as_u256_40(v343, v350)
        v352 = get_local ptr u256, __wide_lhs
        mem_copy_val v352, v349
        v353 = get_local ptr u256, __wide_rhs
        mem_copy_val v353, v351
        v354 = get_local ptr u256, __wide_result, !320
        wide sub v352, v353 to v354, !320
        v355 = get_local ptr u256, __wide_lhs0, !321
        mem_copy_val v355, v347
        v356 = get_local ptr u256, __wide_result, !320
        v357 = get_local ptr u256, __wide_result0, !323
        wide add v355, v356 to v357, !323
        v358 = get_local ptr u256, offset_slot0, !324
        mem_copy_val v358, v357
        v359 = get_local ptr u256, __asm_arg0
        mem_copy_val v359, v357
        v360 = asm(input: v359) -> ptr b256 input {
        }
        v361 = get_local ptr { b256, u64, u64 }, __anon_0001, !326
        v362 = const u64 0
        v363 = get_elem_ptr v361, ptr b256, v362, !327
        mem_copy_val v363, v360
        v364 = const u64 1
        v365 = get_elem_ptr v361, ptr u64, v364, !328
        store v343 to v365, !329
        v366 = const u64 2
        v367 = get_elem_ptr v361, ptr u64, v366, !330
        store v336 to v367, !331
        v368 = get_local ptr { b256, u64, u64 }, __anon_0001, !333
        v369 = const u64 0
        v370 = get_elem_ptr v368, ptr b256, v369, !334
        v371 = get_local ptr b256, offset_slot, !335
        mem_copy_val v371, v370
        v372 = get_local ptr { b256, u64, u64 }, __anon_0001, !336
        v373 = const u64 1
        v374 = get_elem_ptr v372, ptr u64, v373, !337
        v375 = load v374, !338
        v376 = get_local ptr { b256, u64, u64 }, __anon_0001, !339
        v377 = const u64 2
        v378 = get_elem_ptr v376, ptr u64, v377, !340
        v379 = load v378, !341
        v380 = const u64 32, !342
        v381 = mul v375, v380, !344
        v382 = const u64 8
        v383 = mul v382, v381, !348
        v384 = asm(size: v383, ptr) -> u64 ptr, !350 {
            aloc   size, !351
            move   ptr hp, !352
        }
        v385 = get_local ptr b256, offset_slot, !354
        v386 = int_to_ptr v384 to ptr b256, !355
        v387 = state_load_quad_word v386, key v385, v375, !356
        cbr v387, only_owner_0_get_owner_27_read_28_read_30_block3(), only_owner_0_get_owner_27_read_28_read_30_block4(), !357

        only_owner_0_unwrap_9_block1():
        v388 = const u64 0, !358
        revert v388, !360

        only_owner_0_get_owner_27_read_28_read_30_block3():
        v389 = get_local ptr { u64, ( () | b256 ) }, __anon_12, !361
        v390 = const u64 0
        v391 = get_elem_ptr v389, ptr u64, v390, !362
        v392 = const u64 1, !71
        store v392 to v391, !363
        v393 = const u64 8
        v394 = mul v393, v379, !365
        v395 = add v384, v394, !366
        v396 = asm(ptr: v395) -> ptr b256 ptr {
        }
        v397 = const u64 1
        v398 = const u64 1
        v399 = get_elem_ptr v389, ptr b256, v397, v398, !367
        mem_copy_val v399, v396
        v400 = get_local ptr { u64, ( () | b256 ) }, __tmp_block_arg5
        mem_copy_val v400, v389
        br only_owner_0_get_owner_27_read_28_read_30_block5(v400), !368

        only_owner_0_get_owner_27_read_28_read_30_block4():
        v401 = get_local ptr { u64, ( () | b256 ) }, __anon_21, !369
        v402 = const u64 0
        v403 = get_elem_ptr v401, ptr u64, v402, !370
        v404 = const u64 0, !71
        store v404 to v403, !371
        v405 = get_local ptr { u64, ( () | b256 ) }, __tmp_block_arg5
        mem_copy_val v405, v401
        br only_owner_0_get_owner_27_read_28_read_30_block5(v405), !372

        only_owner_0_get_owner_27_read_28_read_30_block5(v406: ptr { u64, ( () | b256 ) }):
        v407 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !375
        mem_copy_val v407, v406
        v408 = get_local ptr { u64, ( () | b256 ) }, __tmp_block_arg5
        v409 = const u64 0
        v410 = get_elem_ptr v408, ptr u64, v409
        v411 = load v410, !376
        v412 = const u64 1, !377
        v413 = cmp eq v411 v412, !379
        cbr v413, only_owner_0_get_owner_27_read_28_unwrap_29_block0(), only_owner_0_get_owner_27_read_28_unwrap_29_block1(), !380

        only_owner_0_get_owner_27_read_28_unwrap_29_block0():
        v414 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !381
        v415 = const u64 1
        v416 = const u64 1
        v417 = get_elem_ptr v414, ptr b256, v415, v416, !382
        v418 = get_local ptr b256, inner_value0, !384
        mem_copy_val v418, v417
        v419 = get_local ptr b256, __tmp_arg7
        mem_copy_val v419, v417
        v420 = get_local ptr { b256 }, __ret_val3
        v421 = call from_22(v419, v420)
        v422 = const u64 1
        v423 = const u64 0
        v424 = get_elem_ptr v310, ptr { b256 }, v422, v423, !385
        mem_copy_val v424, v421
        v425 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_03, !388
        v426 = const u64 0
        v427 = get_elem_ptr v425, ptr { u64, ( { b256 } | { b256 } ) }, v426, !389
        mem_copy_val v427, v309
        v428 = const u64 1
        v429 = get_elem_ptr v425, ptr { u64, ( { b256 } | { b256 } ) }, v428, !390
        mem_copy_val v429, v310
        v430 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !392
        mem_copy_val v430, v425
        v431 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_03
        v432 = const u64 0
        v433 = const u64 0
        v434 = get_elem_ptr v431, ptr u64, v432, v433
        v435 = load v434, !393
        v436 = const u64 0, !394
        v437 = cmp eq v435 v436, !396
        cbr v437, only_owner_0_eq_4_block0(), only_owner_0_eq_4_block1(v437), !397

        only_owner_0_get_owner_27_read_28_unwrap_29_block1():
        v438 = const u64 0, !398
        revert v438, !400

        only_owner_0_eq_4_block0():
        v439 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !401
        v440 = const u64 1
        v441 = get_elem_ptr v439, ptr { u64, ( { b256 } | { b256 } ) }, v440, !402
        v442 = const u64 0
        v443 = get_elem_ptr v441, ptr u64, v442, !403
        v444 = load v443, !404
        v445 = const u64 0, !394
        v446 = cmp eq v444 v445, !405
        br only_owner_0_eq_4_block1(v446), !406

        only_owner_0_eq_4_block1(v447: bool):
        cbr v447, only_owner_0_eq_4_block2(), only_owner_0_eq_4_block3(), !407

        only_owner_0_eq_4_block2():
        v448 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !408
        v449 = const u64 0
        v450 = get_elem_ptr v448, ptr { u64, ( { b256 } | { b256 } ) }, v449, !409
        v451 = const u64 1
        v452 = const u64 0
        v453 = get_elem_ptr v450, ptr { b256 }, v451, v452, !410
        v454 = get_local ptr { b256 }, addr1, !412
        mem_copy_val v454, v453
        v455 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !413
        v456 = const u64 1
        v457 = get_elem_ptr v455, ptr { u64, ( { b256 } | { b256 } ) }, v456, !414
        v458 = const u64 1
        v459 = const u64 0
        v460 = get_elem_ptr v457, ptr { b256 }, v458, v459, !415
        v461 = get_local ptr { b256 }, addr2, !417
        mem_copy_val v461, v460
        v462 = get_local ptr { b256 }, __tmp_arg1
        mem_copy_val v462, v453
        v463 = get_local ptr { b256 }, __tmp_arg2
        mem_copy_val v463, v460
        v464 = call eq_6(v462, v463)
        br only_owner_0_eq_4_block9(v464), !418

        only_owner_0_eq_4_block3():
        v465 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !419
        v466 = const u64 0
        v467 = get_elem_ptr v465, ptr { u64, ( { b256 } | { b256 } ) }, v466, !421
        v468 = const u64 0
        v469 = get_elem_ptr v467, ptr u64, v468, !422
        v470 = load v469, !423
        v471 = const u64 1, !420
        v472 = cmp eq v470 v471, !425
        cbr v472, only_owner_0_eq_4_block4(), only_owner_0_eq_4_block5(v472), !426

        only_owner_0_eq_4_block4():
        v473 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !427
        v474 = const u64 1
        v475 = get_elem_ptr v473, ptr { u64, ( { b256 } | { b256 } ) }, v474, !428
        v476 = const u64 0
        v477 = get_elem_ptr v475, ptr u64, v476, !429
        v478 = load v477, !430
        v479 = const u64 1, !420
        v480 = cmp eq v478 v479, !431
        br only_owner_0_eq_4_block5(v480), !432

        only_owner_0_eq_4_block5(v481: bool):
        v482 = const bool false, !433
        cbr v481, only_owner_0_eq_4_block6(), only_owner_0_eq_4_block8(v482), !434

        only_owner_0_eq_4_block6():
        v483 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !435
        v484 = const u64 0
        v485 = get_elem_ptr v483, ptr { u64, ( { b256 } | { b256 } ) }, v484, !436
        v486 = const u64 1
        v487 = const u64 1
        v488 = get_elem_ptr v485, ptr { b256 }, v486, v487, !437
        v489 = get_local ptr { b256 }, id1, !439
        mem_copy_val v489, v488
        v490 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !440
        v491 = const u64 1
        v492 = get_elem_ptr v490, ptr { u64, ( { b256 } | { b256 } ) }, v491, !441
        v493 = const u64 1
        v494 = const u64 1
        v495 = get_elem_ptr v492, ptr { b256 }, v493, v494, !442
        v496 = get_local ptr { b256 }, id2, !444
        mem_copy_val v496, v495
        v497 = get_local ptr { b256 }, __tmp_arg3
        mem_copy_val v497, v488
        v498 = get_local ptr { b256 }, __tmp_arg4
        mem_copy_val v498, v495
        v499 = call eq_6(v497, v498)
        br only_owner_0_eq_4_block8(v499), !445

        only_owner_0_eq_4_block8(v500: bool):
        br only_owner_0_eq_4_block9(v500), !446

        only_owner_0_eq_4_block9(v501: bool):
        v502 = const bool false, !448
        v503 = cmp eq v501 v502, !452
        cbr v503, only_owner_0_assert_1_block0(), only_owner_0_assert_1_block1(), !453

        only_owner_0_assert_1_block0():
        v504 = const u64 18446744073709486084, !455
        revert v504, !457

        only_owner_0_assert_1_block1():
        v505 = get_local ptr b256, __const1
        v506 = get_local ptr b256, __const2
        v507 = get_local ptr { b256, u64, b256 }, __anon_0, !458
        v508 = const u64 0
        v509 = get_elem_ptr v507, ptr b256, v508
        mem_copy_val v509, v505
        v510 = const u64 1
        v511 = get_elem_ptr v507, ptr u64, v510
        v512 = const u64 0
        store v512 to v511, !458
        v513 = const u64 2
        v514 = get_elem_ptr v507, ptr b256, v513
        mem_copy_val v514, v506
        v515 = get_local ptr { b256, u64, b256 }, __tmp_arg13
        mem_copy_val v515, v507
        v516 = get_local ptr b256, __ret_val11
        v517 = call slot_51(v515, v516)
        v518 = get_local ptr { b256, u64, b256 }, __tmp_arg11
        mem_copy_val v518, v507
        v519 = call offset_46(v518)
        v520 = const u64 8, !286
        v521 = mul v519, v520, !462
        v522 = const u64 8
        v523 = add v521, v522, !463
        v524 = const u64 31, !295
        v525 = add v523, v524, !464
        v526 = const u64 5, !298
        v527 = rsh v525, v526, !465
        v528 = const u64 4, !301
        v529 = mod v519, v528, !466
        v530 = get_local ptr b256, __asm_arg1
        mem_copy_val v530, v517
        v531 = asm(input: v530) -> ptr u256 input {
        }
        v532 = get_local ptr u256, offset_slot00, !467
        mem_copy_val v532, v531
        v533 = get_local ptr u256, offset_slot00, !468
        v534 = get_local ptr u256, __ret_val8
        v535 = call as_u256_40(v527, v534)
        v536 = get_local ptr u256, __ret_val9
        v537 = const u64 1, !469
        v538 = call as_u256_40(v537, v536)
        v539 = get_local ptr u256, __wide_lhs1
        mem_copy_val v539, v535
        v540 = get_local ptr u256, __wide_rhs1
        mem_copy_val v540, v538
        v541 = get_local ptr u256, __wide_result1, !470
        wide sub v539, v540 to v541, !470
        v542 = get_local ptr u256, __wide_lhs2, !471
        mem_copy_val v542, v533
        v543 = get_local ptr u256, __wide_result1, !470
        v544 = get_local ptr u256, __wide_result2, !472
        wide add v542, v543 to v544, !472
        v545 = get_local ptr u256, offset_slot00, !473
        mem_copy_val v545, v544
        v546 = get_local ptr u256, __asm_arg2
        mem_copy_val v546, v544
        v547 = asm(input: v546) -> ptr b256 input {
        }
        v548 = get_local ptr { b256, u64, u64 }, __anon_04, !474
        v549 = const u64 0
        v550 = get_elem_ptr v548, ptr b256, v549, !475
        mem_copy_val v550, v547
        v551 = const u64 1
        v552 = get_elem_ptr v548, ptr u64, v551, !476
        store v537 to v552, !477
        v553 = const u64 2
        v554 = get_elem_ptr v548, ptr u64, v553, !478
        store v529 to v554, !479
        v555 = get_local ptr { b256, u64, u64 }, __anon_04, !481
        v556 = const u64 0
        v557 = get_elem_ptr v555, ptr b256, v556, !482
        v558 = get_local ptr b256, offset_slot1, !483
        mem_copy_val v558, v557
        v559 = get_local ptr { b256, u64, u64 }, __anon_04, !484
        v560 = const u64 1
        v561 = get_elem_ptr v559, ptr u64, v560, !485
        v562 = load v561, !486
        v563 = get_local ptr { b256, u64, u64 }, __anon_04, !487
        v564 = const u64 2
        v565 = get_elem_ptr v563, ptr u64, v564, !488
        v566 = load v565, !489
        v567 = const u64 32, !490
        v568 = mul v562, v567, !492
        v569 = mul v382, v568, !494
        v570 = asm(size: v569, ptr) -> u64 ptr, !495 {
            aloc   size, !351
            move   ptr hp, !352
        }
        v571 = get_local ptr b256, offset_slot1, !497
        v572 = int_to_ptr v570 to ptr b256, !498
        v573 = state_load_quad_word v572, key v571, v562, !499
        v574 = mul v393, v566, !501
        v575 = add v570, v574, !502
        v576 = asm(ptr: v575, val: new_value) {
            sw     ptr val i0, !504
        }
        v577 = get_local ptr b256, offset_slot1, !506
        v578 = int_to_ptr v570 to ptr b256, !507
        v579 = state_store_quad_word v578, key v577, v562, !508
        v580 = const unit ()
        ret () v580
    }

    pub fn eq_6(self: ptr { b256 }, other: ptr { b256 }) -> bool, !510 {
        local b256 __wide_lhs
        local b256 __wide_rhs

        entry(self: ptr { b256 }, other: ptr { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !511
        v4 = ptr_to_int other to u64
        v5 = int_to_ptr v4 to ptr { b256 }
        v6 = const u64 0
        v7 = get_elem_ptr v5, ptr b256, v6, !511
        v8 = get_local ptr b256, __wide_lhs
        mem_copy_val v8, v3
        v9 = get_local ptr b256, __wide_rhs
        mem_copy_val v9, v7
        v10 = wide cmp eq v8 v9, !512
        ret bool v10
    }

    pub fn input_type_17(index !513: u64, __ret_value: ptr { u64 }) -> ptr { u64 }, !514 {
        local { u64 } __anon_0
        local u64 __anon_00
        local { u64 } __anon_1
        local u64 __anon_10
        local { u64 } __anon_2
        local u64 __anon_20
        local { u64 } __tmp_block_arg
        local { u64 } __tmp_block_arg0
        local u64 __tmp_block_arg00
        local u64 __tmp_block_arg01

        entry(index: u64, __ret_value: ptr { u64 }):
        v0 = gtf index, 512, !515
        v1 = bitcast v0 to u8, !515
        v2 = const u8 0, !516
        v3 = cmp eq v1 v2, !517
        cbr v3, block0(), block1(), !517

        block0():
        v4 = get_local ptr { u64 }, __anon_0, !518
        v5 = const u64 0
        v6 = get_elem_ptr v4, ptr u64, v5, !518
        v7 = get_local ptr u64, __anon_00
        v8 = const u64 0, !518
        store v8 to v7, !518
        v9 = get_local ptr { u64 }, __tmp_block_arg0
        v10 = get_local ptr u64, __anon_00
        v11 = load v10
        v12 = get_local ptr u64, __tmp_block_arg00
        store v11 to v12
        br block8(v9)

        block1():
        v13 = const u8 1, !519
        v14 = cmp eq v1 v13, !520
        cbr v14, block2(), block3(), !520

        block2():
        v15 = get_local ptr { u64 }, __anon_1, !518
        v16 = const u64 0
        v17 = get_elem_ptr v15, ptr u64, v16, !518
        v18 = get_local ptr u64, __anon_10
        v19 = const u64 1, !518
        store v19 to v18, !518
        v20 = get_local ptr { u64 }, __tmp_block_arg
        v21 = get_local ptr u64, __anon_10
        v22 = load v21
        v23 = get_local ptr u64, __tmp_block_arg01
        store v22 to v23
        br block7(v20)

        block3():
        v24 = const u8 2, !521
        v25 = cmp eq v1 v24, !522
        cbr v25, block4(), block5(), !522

        block4():
        v26 = get_local ptr { u64 }, __anon_2, !518
        v27 = const u64 0
        v28 = get_elem_ptr v26, ptr u64, v27, !518
        v29 = get_local ptr u64, __anon_20
        v30 = const u64 2, !518
        store v30 to v29, !518
        v31 = get_local ptr { u64 }, __tmp_block_arg
        v32 = get_local ptr u64, __anon_20
        v33 = load v32
        v34 = get_local ptr u64, __tmp_block_arg01
        store v33 to v34
        br block7(v31)

        block5():
        v35 = const u64 0, !523
        revert v35, !525

        block7(v36: ptr { u64 }):
        v37 = get_local ptr { u64 }, __tmp_block_arg0
        v38 = get_local ptr u64, __tmp_block_arg01
        v39 = load v38
        v40 = get_local ptr u64, __tmp_block_arg00
        store v39 to v40
        br block8(v37)

        block8(v41: ptr { u64 }):
        v42 = get_local ptr u64, __tmp_block_arg00
        v43 = load v42
        v44 = const u64 0
        v45 = get_elem_ptr __ret_value, ptr u64, v44
        store v43 to v45
        ret ptr { u64 } __ret_value
    }

    pub fn add_19(self !526: u64, other !527: u64) -> u64, !528 {
        entry(self: u64, other: u64):
        v0 = add self, other
        v1 = const u64 65535, !530
        v2 = cmp gt v0 v1
        cbr v2, block0(), block1(), !531

        block0():
        v3 = const u64 0, !532
        revert v3, !533

        block1():
        ret u64 v0
    }

    pub fn from_22(bits: ptr b256, __ret_value: ptr { b256 }) -> ptr { b256 }, !534 {
        local { b256 } __anon_0

        entry(bits: ptr b256, __ret_value: ptr { b256 }):
        v0 = get_local ptr { b256 }, __anon_0, !535
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        mem_copy_val v2, bits
        mem_copy_val __ret_value, v0
        ret ptr { b256 } __ret_value
    }

    pub fn unwrap_24(self: ptr { u64, ( () | { b256 } ) }, __ret_value: ptr { b256 }) -> ptr { b256 }, !536 {
        local { u64, ( () | { b256 } ) } __matched_value_4

        entry(self: ptr { u64, ( () | { b256 } ) }, __ret_value: ptr { b256 }):
        v0 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !374
        mem_copy_val v0, self
        v1 = const u64 0
        v2 = get_elem_ptr self, ptr u64, v1
        v3 = load v2
        v4 = const u64 1, !377
        v5 = cmp eq v3 v4, !378
        cbr v5, block0(), block1(), !378

        block0():
        v6 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !377
        v7 = const u64 1
        v8 = const u64 1
        v9 = get_elem_ptr v6, ptr { b256 }, v7, v8
        mem_copy_val __ret_value, v9
        ret ptr { b256 } __ret_value

        block1():
        v10 = const u64 0, !398
        revert v10, !537
    }

    pub fn as_u256_40(self !538: u64, __ret_value: ptr u256) -> ptr u256, !539 {
        local { u64, u64, u64, u64 } __anon_0
        local u64 __anon_00
        local u64 __anon_016
        local u64 __anon_024
        local u64 __anon_08
        local { u64, u64, u64, u64 } input

        entry(self: u64, __ret_value: ptr u256):
        v0 = get_local ptr { u64, u64, u64, u64 }, __anon_0, !540
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr u64, v1, !540
        v3 = get_local ptr u64, __anon_00
        v4 = const u64 0, !541
        store v4 to v3, !540
        v5 = const u64 1
        v6 = get_elem_ptr v0, ptr u64, v5, !540
        v7 = get_local ptr u64, __anon_08
        v8 = const u64 0, !542
        store v8 to v7, !540
        v9 = const u64 2
        v10 = get_elem_ptr v0, ptr u64, v9, !540
        v11 = get_local ptr u64, __anon_016
        v12 = const u64 0, !543
        store v12 to v11, !540
        v13 = const u64 3
        v14 = get_elem_ptr v0, ptr u64, v13, !540
        v15 = get_local ptr u64, __anon_024
        store self to v15, !540
        v16 = get_local ptr { u64, u64, u64, u64 }, input, !544
        v17 = get_local ptr u64, __anon_00
        v18 = load v17
        v19 = get_local ptr u64, __anon_08
        v20 = load v19
        v21 = get_local ptr u64, __anon_016
        v22 = load v21
        v23 = get_local ptr u64, __anon_024
        v24 = load v23
        v25 = const u64 0
        v26 = get_elem_ptr v16, ptr u64, v25
        store v18 to v26
        v27 = const u64 1
        v28 = get_elem_ptr v16, ptr u64, v27
        store v20 to v28
        v29 = const u64 2
        v30 = get_elem_ptr v16, ptr u64, v29
        store v22 to v30
        v31 = const u64 3
        v32 = get_elem_ptr v16, ptr u64, v31
        store v24 to v32
        v33 = get_local ptr { u64, u64, u64, u64 }, input, !545
        v34 = asm(input: v33) -> ptr u256 input {
        }
        mem_copy_val __ret_value, v34
        ret ptr u256 __ret_value
    }

    pub fn offset_46(self: ptr { b256, u64, b256 }) -> u64, !547 {
        entry(self: ptr { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 1
        v3 = get_elem_ptr v1, ptr u64, v2, !548
        v4 = load v3
        ret u64 v4
    }

    pub fn slot_51(self: ptr { b256, u64, b256 }, __ret_value: ptr b256) -> ptr b256, !549 {
        entry(self: ptr { b256, u64, b256 }, __ret_value: ptr b256):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !550
        mem_copy_val __ret_value, v3
        ret ptr b256 __ret_value
    }
}

// IR: [mem2reg] Promotion of local memory to SSA registers
contract {
    pub entry fn set_data_if_owner<c626c6e2>(new_value !1: u64) -> (), !4 {
        local { b256, u64, b256 } __anon_0
        local { u64, ( { b256 } | { b256 } ) } __anon_00
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_000
        local { u64, ( () | { b256 } ) } __anon_0000
        local { u64 } __anon_00000
        local u64 __anon_000000
        local { b256, u64, u64 } __anon_0001
        local { u64, ( () | { b256 } ) } __anon_01
        local { b256, u64, b256 } __anon_02
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __anon_03
        local { b256, u64, u64 } __anon_04
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_1
        local { u64, ( { b256 } | { u64 } ) } __anon_10
        local { u64 } __anon_100
        local u64 __anon_1000
        local { u64, ( () | { b256 } ) } __anon_11
        local { u64, ( () | b256 ) } __anon_12
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64 } __anon_20
        local u64 __anon_200
        local { u64, ( () | b256 ) } __anon_21
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { u64 } ) } __anon_30
        local { u64, ( { b256 } | { b256 } ) } __anon_4
        local { u64, ( { b256 } | { u64 } ) } __anon_40
        local { u64 } __anon_5
        local u64 __anon_50
        local b256 __asm_arg
        local u256 __asm_arg0
        local b256 __asm_arg1
        local u256 __asm_arg2
        local b256 __const = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d
        local b256 __const0 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d
        local b256 __const1 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c
        local b256 __const2 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c
        local { u64, ( { b256 } | { u64 } ) } __matched_value_1
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __matched_value_12
        local { u64 } __matched_value_2
        local u64 __matched_value_20
        local { u64, ( () | { b256 } ) } __matched_value_3
        local { u64 } __matched_value_30
        local u64 __matched_value_300
        local { u64, ( () | { b256 } ) } __matched_value_31
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __matched_value_32
        local { u64, ( () | b256 ) } __matched_value_4
        local { u64 } __matched_value_6
        local u64 __matched_value_60
        local { u64 } __ret_val
        local { u64 } __ret_val0
        local { b256 } __ret_val1
        local b256 __ret_val10
        local b256 __ret_val11
        local { b256 } __ret_val2
        local { b256 } __ret_val3
        local { b256 } __ret_val4
        local { b256 } __ret_val5
        local u256 __ret_val6
        local u256 __ret_val7
        local u256 __ret_val8
        local u256 __ret_val9
        local { b256 } __tmp_arg
        local { b256 } __tmp_arg0
        local { b256 } __tmp_arg1
        local { b256, u64, b256 } __tmp_arg10
        local { b256, u64, b256 } __tmp_arg11
        local { b256, u64, b256 } __tmp_arg12
        local { b256, u64, b256 } __tmp_arg13
        local { b256 } __tmp_arg2
        local { b256 } __tmp_arg3
        local { b256 } __tmp_arg4
        local b256 __tmp_arg5
        local b256 __tmp_arg6
        local b256 __tmp_arg7
        local { u64, ( () | { b256 } ) } __tmp_arg8
        local { u64, ( () | { b256 } ) } __tmp_arg9
        local { u64 } __tmp_block_arg
        local { u64, ( () | { b256 } ) } __tmp_block_arg0
        local u64 __tmp_block_arg00
        local { u64, ( { b256 } | { u64 } ) } __tmp_block_arg1
        local { u64, ( { b256 } | { u64 } ) } __tmp_block_arg2
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __tmp_block_arg3
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __tmp_block_arg4
        local { u64, ( () | b256 ) } __tmp_block_arg5
        local u256 __wide_lhs
        local u256 __wide_lhs0
        local u256 __wide_lhs1
        local u256 __wide_lhs2
        local mut u256 __wide_result
        local mut u256 __wide_result0
        local mut u256 __wide_result1
        local mut u256 __wide_result2
        local u256 __wide_rhs
        local u256 __wide_rhs1
        local { b256 } addr1
        local { b256 } addr2
        local { b256 } address
        local mut { u64, ( () | { b256 } ) } candidate
        local { u64 } err
        local u64 err0
        local { b256 } id1
        local { b256 } id2
        local { u64, ( { b256 } | { b256 } ) } inner_value
        local b256 inner_value0
        local b256 offset_slot
        local mut u256 offset_slot0
        local mut u256 offset_slot00
        local b256 offset_slot1
        local { b256 } owner
        local { u64, ( () | { b256 } ) } owner_of_input
        local { u64 } type_of_input
        local u64 type_of_input0

        entry(new_value: u64):
        v0 = asm(r1) -> bool r1, !11 {
            gm     r1 i1, !12
        }
        cbr v0, only_owner_0_msg_sender_10_block0(), only_owner_0_msg_sender_10_block7(), !13

        only_owner_0_msg_sender_10_block0():
        v1 = const u64 0, !15
        v2 = gtf v1, 1, !21
        v3 = bitcast v2 to u8, !22
        v4 = const u8 0, !23
        v5 = cmp eq v3 v4, !25
        cbr v5, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1(), !26

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0():
        v6 = get_local ptr { u64 }, __anon_00000, !28
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr u64, v7, !29
        v9 = get_local ptr u64, __anon_000000
        v10 = get_local ptr { u64 }, __tmp_block_arg
        v11 = get_local ptr u64, __anon_000000
        v12 = get_local ptr u64, __tmp_block_arg00
        v13 = const u64 0, !27
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v10, v13), !30

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1():
        v14 = const u8 1, !31
        v15 = cmp eq v3 v14, !33
        cbr v15, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3(), !34

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2():
        v16 = get_local ptr { u64 }, __anon_100, !35
        v17 = const u64 0
        v18 = get_elem_ptr v16, ptr u64, v17, !36
        v19 = get_local ptr u64, __anon_1000
        v20 = get_local ptr { u64 }, __tmp_block_arg
        v21 = get_local ptr u64, __anon_1000
        v22 = get_local ptr u64, __tmp_block_arg00
        v23 = const u64 1, !27
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v20, v23), !37

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3():
        v24 = const u64 0, !38
        revert v24, !42

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v25: ptr { u64 }, v26: u64):
        v27 = get_local ptr { u64 }, __matched_value_30, !44
        v28 = get_local ptr u64, __tmp_block_arg00
        v29 = get_local ptr u64, __matched_value_300
        v30 = get_local ptr { u64 }, __matched_value_30, !45
        v31 = const u64 0
        v32 = get_elem_ptr v30, ptr u64, v31, !46
        v33 = get_local ptr u64, __matched_value_300
        v34 = const u64 0, !19
        v35 = cmp eq v26 v34, !48
        cbr v35, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1(), !49

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0():
        v36 = const u64 0, !50
        v37 = gtf v36, 5, !52
        v38 = bitcast v37 to u64, !53
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v38), !54

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1():
        v39 = get_local ptr { u64 }, __matched_value_30, !55
        v40 = const u64 0
        v41 = get_elem_ptr v39, ptr u64, v40, !56
        v42 = get_local ptr u64, __matched_value_300
        v43 = const u64 1, !19
        v44 = cmp eq v26 v43, !58
        cbr v44, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3(), !59

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2():
        v45 = const u64 0, !60
        v46 = gtf v45, 259, !62
        v47 = bitcast v46 to u64, !63
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v47), !64

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3():
        v48 = const u64 14757395258967588866, !43
        revert v48, !65

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v49: u64):
        v50 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0000, !68
        v51 = const u64 0
        v52 = get_elem_ptr v50, ptr u64, v51, !69
        v53 = const u64 0, !67
        store v53 to v52, !70
        v54 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !72
        mem_copy_val v54, v50
        v55 = const u64 0, !73
        br only_owner_0_msg_sender_10_caller_address_12_while(v55), !74

        only_owner_0_msg_sender_10_caller_address_12_while(v56: u64):
        v57 = cmp lt v56 v49, !76
        cbr v57, only_owner_0_msg_sender_10_caller_address_12_while_body(), only_owner_0_msg_sender_10_caller_address_12_end_while(), !77

        only_owner_0_msg_sender_10_caller_address_12_while_body():
        v58 = asm(input: v56) -> u64 input, !81 {
        }
        v59 = get_local ptr { u64 }, __ret_val
        v60 = call input_type_17(v58, v59)
        v61 = get_local ptr { u64 }, type_of_input, !83
        v62 = const u64 0
        v63 = get_elem_ptr v60, ptr u64, v62
        v64 = load v63
        v65 = get_local ptr u64, type_of_input0
        v66 = get_local ptr { u64 }, type_of_input, !85
        v67 = get_local ptr { u64 }, __matched_value_2, !87
        v68 = get_local ptr u64, type_of_input0
        v69 = get_local ptr u64, __matched_value_20
        v70 = get_local ptr { u64 }, __matched_value_2, !88
        v71 = const u64 0
        v72 = get_elem_ptr v70, ptr u64, v71, !89
        v73 = get_local ptr u64, __matched_value_20
        v74 = const u64 0, !84
        v75 = cmp eq v64 v74, !91
        v76 = const unit (), !92
        cbr v75, only_owner_0_msg_sender_10_caller_address_12_block5(v76), only_owner_0_msg_sender_10_caller_address_12_block1(), !93

        only_owner_0_msg_sender_10_caller_address_12_block1():
        v77 = get_local ptr { u64 }, __matched_value_2, !94
        v78 = const u64 0
        v79 = get_elem_ptr v77, ptr u64, v78, !95
        v80 = get_local ptr u64, __matched_value_20
        v81 = const u64 2, !84
        v82 = cmp eq v64 v81, !97
        v83 = const unit (), !98
        cbr v82, only_owner_0_msg_sender_10_caller_address_12_block5(v83), only_owner_0_msg_sender_10_caller_address_12_block3(), !99

        only_owner_0_msg_sender_10_caller_address_12_block3():
        v84 = const u64 1, !100
        v85 = call add_19(v56, v84), !102
        br only_owner_0_msg_sender_10_caller_address_12_while(v85), !103

        only_owner_0_msg_sender_10_caller_address_12_block5(v86: ()):
        v87 = asm(input: v56) -> u64 input, !105 {
        }
        v88 = get_local ptr { u64 }, __ret_val0
        v89 = call input_type_17(v87, v88)
        v90 = get_local ptr { u64 }, __matched_value_6, !108
        v91 = const u64 0
        v92 = get_elem_ptr v89, ptr u64, v91
        v93 = load v92
        v94 = get_local ptr u64, __matched_value_60
        v95 = get_local ptr { u64 }, __matched_value_6, !110
        v96 = const u64 0
        v97 = get_elem_ptr v95, ptr u64, v96, !111
        v98 = get_local ptr u64, __matched_value_60
        v99 = const u64 0, !109
        v100 = cmp eq v93 v99, !113
        cbr v100, only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0(), only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1(), !114

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0():
        v101 = get_local ptr { u64, ( () | { b256 } ) }, __anon_01, !115
        v102 = const u64 0
        v103 = get_elem_ptr v101, ptr u64, v102, !116
        v104 = const u64 1, !67
        store v104 to v103, !117
        v105 = gtf v87, 515, !119
        v106 = int_to_ptr v105 to ptr b256, !120
        v107 = get_local ptr b256, __tmp_arg5
        mem_copy_val v107, v106
        v108 = get_local ptr { b256 }, __ret_val1
        v109 = call from_22(v107, v108)
        v110 = const u64 1
        v111 = const u64 1
        v112 = get_elem_ptr v101, ptr { b256 }, v110, v111, !121
        mem_copy_val v112, v109
        v113 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_block_arg0
        mem_copy_val v113, v101
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v113), !122

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1():
        v114 = get_local ptr { u64, ( () | { b256 } ) }, __anon_11, !123
        v115 = const u64 0
        v116 = get_elem_ptr v114, ptr u64, v115, !124
        v117 = const u64 0, !67
        store v117 to v116, !125
        v118 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_block_arg0
        mem_copy_val v118, v114
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v118), !126

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v119: ptr { u64, ( () | { b256 } ) }):
        v120 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !128
        mem_copy_val v120, v119
        v121 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !130
        v122 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !133
        mem_copy_val v122, v121
        v123 = get_local ptr { u64, ( () | { b256 } ) }, candidate
        v124 = const u64 0
        v125 = get_elem_ptr v123, ptr u64, v124
        v126 = load v125, !134
        v127 = const u64 1, !135
        v128 = cmp eq v126 v127, !137
        v129 = const bool false, !138
        cbr v128, only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v129), only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1(), !139

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1():
        v130 = const bool true, !140
        br only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v130), !141

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v131: bool):
        cbr v131, only_owner_0_msg_sender_10_caller_address_12_block6(), only_owner_0_msg_sender_10_caller_address_12_block7(), !142

        only_owner_0_msg_sender_10_caller_address_12_block6():
        v132 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !144
        v133 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !146
        mem_copy_val v133, v132
        v134 = const u64 1, !147
        v135 = call add_19(v56, v134), !149
        br only_owner_0_msg_sender_10_caller_address_12_while(v135), !150

        only_owner_0_msg_sender_10_caller_address_12_block7():
        v136 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !152
        v137 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_arg8
        mem_copy_val v137, v136
        v138 = get_local ptr { b256 }, __ret_val4
        v139 = call unwrap_24(v137, v138)
        v140 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !154
        v141 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_arg9
        mem_copy_val v141, v140
        v142 = get_local ptr { b256 }, __ret_val5
        v143 = call unwrap_24(v141, v142)
        v144 = get_local ptr { b256 }, __tmp_arg
        mem_copy_val v144, v139
        v145 = get_local ptr { b256 }, __tmp_arg0
        mem_copy_val v145, v143
        v146 = call eq_6(v144, v145)
        cbr v146, only_owner_0_msg_sender_10_caller_address_12_block9(), only_owner_0_msg_sender_10_caller_address_12_block10(), !156

        only_owner_0_msg_sender_10_caller_address_12_block9():
        v147 = const u64 1, !157
        v148 = call add_19(v56, v147), !159
        br only_owner_0_msg_sender_10_caller_address_12_while(v148), !160

        only_owner_0_msg_sender_10_caller_address_12_block10():
        v149 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_10, !163
        v150 = const u64 0
        v151 = get_elem_ptr v149, ptr u64, v150, !164
        v152 = const u64 1, !162
        store v152 to v151, !165
        v153 = get_local ptr { u64 }, __anon_20, !167
        v154 = const u64 0
        v155 = get_elem_ptr v153, ptr u64, v154, !168
        v156 = get_local ptr u64, __anon_200
        v157 = const u64 1
        v158 = const u64 1
        v159 = get_elem_ptr v149, ptr { u64 }, v157, v158, !169
        v160 = get_local ptr u64, __anon_200
        v161 = const u64 0
        v162 = get_elem_ptr v159, ptr u64, v161
        v163 = const u64 0, !166
        store v163 to v162
        v164 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg2
        mem_copy_val v164, v149
        br only_owner_0_msg_sender_10_block10(v164), !171

        only_owner_0_msg_sender_10_caller_address_12_end_while():
        v165 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !173
        v166 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !175
        mem_copy_val v166, v165
        v167 = get_local ptr { u64, ( () | { b256 } ) }, candidate
        v168 = const u64 0
        v169 = get_elem_ptr v167, ptr u64, v168
        v170 = load v169, !176
        v171 = const u64 1, !172
        v172 = cmp eq v170 v171, !178
        cbr v172, only_owner_0_msg_sender_10_caller_address_12_block12(), only_owner_0_msg_sender_10_caller_address_12_block13(), !179

        only_owner_0_msg_sender_10_caller_address_12_block12():
        v173 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !180
        v174 = const u64 1
        v175 = const u64 1
        v176 = get_elem_ptr v173, ptr { b256 }, v174, v175, !181
        v177 = get_local ptr { b256 }, address, !183
        mem_copy_val v177, v176
        v178 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_30, !184
        v179 = const u64 0
        v180 = get_elem_ptr v178, ptr u64, v179, !185
        v181 = const u64 0, !162
        store v181 to v180, !186
        v182 = const u64 1
        v183 = const u64 0
        v184 = get_elem_ptr v178, ptr { b256 }, v182, v183, !187
        mem_copy_val v184, v176
        v185 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg1
        mem_copy_val v185, v178
        br only_owner_0_msg_sender_10_caller_address_12_block17(v185), !188

        only_owner_0_msg_sender_10_caller_address_12_block13():
        v186 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !189
        v187 = const u64 0
        v188 = get_elem_ptr v186, ptr u64, v187, !190
        v189 = load v188, !191
        v190 = const u64 0, !172
        v191 = cmp eq v189 v190, !193
        cbr v191, only_owner_0_msg_sender_10_caller_address_12_block14(), only_owner_0_msg_sender_10_caller_address_12_block15(), !194

        only_owner_0_msg_sender_10_caller_address_12_block14():
        v192 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_40, !195
        v193 = const u64 0
        v194 = get_elem_ptr v192, ptr u64, v193, !196
        v195 = const u64 1, !162
        store v195 to v194, !197
        v196 = get_local ptr { u64 }, __anon_5, !198
        v197 = const u64 0
        v198 = get_elem_ptr v196, ptr u64, v197, !199
        v199 = get_local ptr u64, __anon_50
        v200 = const u64 1
        v201 = const u64 1
        v202 = get_elem_ptr v192, ptr { u64 }, v200, v201, !200
        v203 = get_local ptr u64, __anon_50
        v204 = const u64 0
        v205 = get_elem_ptr v202, ptr u64, v204
        v206 = const u64 1, !166
        store v206 to v205
        v207 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg1
        mem_copy_val v207, v192
        br only_owner_0_msg_sender_10_caller_address_12_block17(v207), !201

        only_owner_0_msg_sender_10_caller_address_12_block15():
        v208 = const u64 14757395258967588866, !174
        revert v208, !202

        only_owner_0_msg_sender_10_caller_address_12_block17(v209: ptr { u64, ( { b256 } | { u64 } ) }):
        v210 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg2
        mem_copy_val v210, v209
        br only_owner_0_msg_sender_10_block10(v210), !203

        only_owner_0_msg_sender_10_block10(v211: ptr { u64, ( { b256 } | { u64 } ) }):
        v212 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !205
        mem_copy_val v212, v211
        v213 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg2
        v214 = const u64 0
        v215 = get_elem_ptr v213, ptr u64, v214
        v216 = load v215, !206
        v217 = const u64 1, !16
        v218 = cmp eq v216 v217, !208
        cbr v218, only_owner_0_msg_sender_10_block1(), only_owner_0_msg_sender_10_block2(), !209

        only_owner_0_msg_sender_10_block1():
        v219 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !210
        v220 = const u64 1
        v221 = const u64 1
        v222 = get_elem_ptr v219, ptr { u64 }, v220, v221, !211
        v223 = get_local ptr { u64 }, err, !213
        v224 = const u64 0
        v225 = get_elem_ptr v222, ptr u64, v224
        v226 = load v225
        v227 = get_local ptr u64, err0
        v228 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_000, !214
        v229 = const u64 0
        v230 = get_elem_ptr v228, ptr u64, v229, !215
        v231 = const u64 1, !162
        store v231 to v230, !216
        v232 = const u64 1
        v233 = const u64 1
        v234 = get_elem_ptr v228, ptr { u64 }, v232, v233, !217
        mem_copy_val v234, v222
        v235 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg3
        mem_copy_val v235, v228
        br only_owner_0_msg_sender_10_block6(v235), !218

        only_owner_0_msg_sender_10_block2():
        v236 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !219
        v237 = const u64 0
        v238 = get_elem_ptr v236, ptr u64, v237, !220
        v239 = load v238, !221
        v240 = const u64 0, !16
        v241 = cmp eq v239 v240, !223
        cbr v241, only_owner_0_msg_sender_10_block3(), only_owner_0_msg_sender_10_block4(), !224

        only_owner_0_msg_sender_10_block3():
        v242 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !225
        v243 = const u64 1
        v244 = const u64 0
        v245 = get_elem_ptr v242, ptr { b256 }, v243, v244, !226
        v246 = get_local ptr { b256 }, owner, !228
        mem_copy_val v246, v245
        v247 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_1, !229
        v248 = const u64 0
        v249 = get_elem_ptr v247, ptr u64, v248, !230
        v250 = const u64 0, !162
        store v250 to v249, !231
        v251 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !234
        v252 = const u64 0
        v253 = get_elem_ptr v251, ptr u64, v252, !235
        v254 = const u64 0, !233
        store v254 to v253, !236
        v255 = const u64 1
        v256 = const u64 0
        v257 = get_elem_ptr v251, ptr { b256 }, v255, v256, !237
        mem_copy_val v257, v245
        v258 = const u64 1
        v259 = const u64 0
        v260 = get_elem_ptr v247, ptr { u64, ( { b256 } | { b256 } ) }, v258, v259, !238
        mem_copy_val v260, v251
        v261 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg3
        mem_copy_val v261, v247
        br only_owner_0_msg_sender_10_block6(v261), !239

        only_owner_0_msg_sender_10_block4():
        v262 = const u64 14757395258967588866, !204
        revert v262, !240

        only_owner_0_msg_sender_10_block6(v263: ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v264 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg4
        mem_copy_val v264, v263
        br only_owner_0_msg_sender_10_block8(v264), !241

        only_owner_0_msg_sender_10_block7():
        v265 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_3, !242
        v266 = const u64 0
        v267 = get_elem_ptr v265, ptr u64, v266, !243
        v268 = const u64 0, !162
        store v268 to v267, !244
        v269 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_4, !245
        v270 = const u64 0
        v271 = get_elem_ptr v269, ptr u64, v270, !246
        v272 = const u64 1, !233
        store v272 to v271, !247
        v273 = asm(r1) -> ptr b256 r1 {
            gm     r1 i2, !248
        }
        v274 = get_local ptr b256, __tmp_arg6
        mem_copy_val v274, v273
        v275 = get_local ptr { b256 }, __ret_val2
        v276 = call from_22(v274, v275)
        v277 = const u64 1
        v278 = const u64 1
        v279 = get_elem_ptr v269, ptr { b256 }, v277, v278, !249
        mem_copy_val v279, v276
        v280 = const u64 1
        v281 = const u64 0
        v282 = get_elem_ptr v265, ptr { u64, ( { b256 } | { b256 } ) }, v280, v281, !250
        mem_copy_val v282, v269
        v283 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg4
        mem_copy_val v283, v265
        br only_owner_0_msg_sender_10_block8(v283), !251

        only_owner_0_msg_sender_10_block8(v284: ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v285 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !254
        mem_copy_val v285, v284
        v286 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg4
        v287 = const u64 0
        v288 = get_elem_ptr v286, ptr u64, v287
        v289 = load v288, !255
        v290 = const u64 0, !256
        v291 = cmp eq v289 v290, !258
        cbr v291, only_owner_0_unwrap_9_block0(), only_owner_0_unwrap_9_block1(), !259

        only_owner_0_unwrap_9_block0():
        v292 = get_local ptr b256, __const
        v293 = get_local ptr b256, __const0
        v294 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !260
        v295 = const u64 1
        v296 = const u64 0
        v297 = get_elem_ptr v294, ptr { u64, ( { b256 } | { b256 } ) }, v295, v296, !261
        v298 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !263
        mem_copy_val v298, v297
        v299 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !265
        v300 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_00, !266
        v301 = const u64 0
        v302 = get_elem_ptr v300, ptr u64, v301, !267
        v303 = const u64 0, !233
        store v303 to v302, !268
        v304 = get_local ptr { b256, u64, b256 }, __anon_02, !271
        v305 = const u64 0
        v306 = get_elem_ptr v304, ptr b256, v305, !272
        mem_copy_val v306, v292
        v307 = const u64 1
        v308 = get_elem_ptr v304, ptr u64, v307, !273
        v309 = const u64 0
        store v309 to v308, !274
        v310 = const u64 2
        v311 = get_elem_ptr v304, ptr b256, v310, !275
        mem_copy_val v311, v293
        v312 = get_local ptr { b256, u64, b256 }, __tmp_arg12
        mem_copy_val v312, v304
        v313 = get_local ptr b256, __ret_val10
        v314 = call slot_51(v312, v313)
        v315 = get_local ptr { b256, u64, b256 }, __tmp_arg10
        mem_copy_val v315, v304
        v316 = call offset_46(v315)
        v317 = const u64 8, !277
        v318 = mul v316, v317, !283
        v319 = const u64 32
        v320 = add v318, v319, !285
        v321 = const u64 31, !286
        v322 = add v320, v321, !288
        v323 = const u64 5, !289
        v324 = rsh v322, v323, !291
        v325 = const u64 4, !292
        v326 = mod v316, v325, !294
        v327 = const u64 8, !295
        v328 = mul v326, v327, !297
        v329 = add v328, v319, !299
        v330 = const u64 31, !300
        v331 = add v329, v330, !302
        v332 = const u64 5, !303
        v333 = rsh v331, v332, !305
        v334 = get_local ptr b256, __asm_arg
        mem_copy_val v334, v314
        v335 = asm(input: v334) -> ptr u256 input {
        }
        v336 = get_local ptr u256, offset_slot0, !307
        mem_copy_val v336, v335
        v337 = get_local ptr u256, offset_slot0, !309
        v338 = get_local ptr u256, __ret_val6
        v339 = call as_u256_40(v324, v338)
        v340 = get_local ptr u256, __ret_val7
        v341 = call as_u256_40(v333, v340)
        v342 = get_local ptr u256, __wide_lhs
        mem_copy_val v342, v339
        v343 = get_local ptr u256, __wide_rhs
        mem_copy_val v343, v341
        v344 = get_local ptr u256, __wide_result, !311
        wide sub v342, v343 to v344, !311
        v345 = get_local ptr u256, __wide_lhs0, !312
        mem_copy_val v345, v337
        v346 = get_local ptr u256, __wide_result, !311
        v347 = get_local ptr u256, __wide_result0, !314
        wide add v345, v346 to v347, !314
        v348 = get_local ptr u256, offset_slot0, !315
        mem_copy_val v348, v347
        v349 = get_local ptr u256, __asm_arg0
        mem_copy_val v349, v347
        v350 = asm(input: v349) -> ptr b256 input {
        }
        v351 = get_local ptr { b256, u64, u64 }, __anon_0001, !317
        v352 = const u64 0
        v353 = get_elem_ptr v351, ptr b256, v352, !318
        mem_copy_val v353, v350
        v354 = const u64 1
        v355 = get_elem_ptr v351, ptr u64, v354, !319
        store v333 to v355, !320
        v356 = const u64 2
        v357 = get_elem_ptr v351, ptr u64, v356, !321
        store v326 to v357, !322
        v358 = get_local ptr { b256, u64, u64 }, __anon_0001, !324
        v359 = const u64 0
        v360 = get_elem_ptr v358, ptr b256, v359, !325
        v361 = get_local ptr b256, offset_slot, !326
        mem_copy_val v361, v360
        v362 = get_local ptr { b256, u64, u64 }, __anon_0001, !327
        v363 = const u64 1
        v364 = get_elem_ptr v362, ptr u64, v363, !328
        v365 = load v364, !329
        v366 = get_local ptr { b256, u64, u64 }, __anon_0001, !330
        v367 = const u64 2
        v368 = get_elem_ptr v366, ptr u64, v367, !331
        v369 = load v368, !332
        v370 = const u64 32, !333
        v371 = mul v365, v370, !335
        v372 = const u64 8
        v373 = mul v372, v371, !339
        v374 = asm(size: v373, ptr) -> u64 ptr, !341 {
            aloc   size, !342
            move   ptr hp, !343
        }
        v375 = get_local ptr b256, offset_slot, !345
        v376 = int_to_ptr v374 to ptr b256, !346
        v377 = state_load_quad_word v376, key v375, v365, !347
        cbr v377, only_owner_0_get_owner_27_read_28_read_30_block3(), only_owner_0_get_owner_27_read_28_read_30_block4(), !348

        only_owner_0_unwrap_9_block1():
        v378 = const u64 0, !349
        revert v378, !351

        only_owner_0_get_owner_27_read_28_read_30_block3():
        v379 = get_local ptr { u64, ( () | b256 ) }, __anon_12, !352
        v380 = const u64 0
        v381 = get_elem_ptr v379, ptr u64, v380, !353
        v382 = const u64 1, !67
        store v382 to v381, !354
        v383 = const u64 8
        v384 = mul v383, v369, !356
        v385 = add v374, v384, !357
        v386 = asm(ptr: v385) -> ptr b256 ptr {
        }
        v387 = const u64 1
        v388 = const u64 1
        v389 = get_elem_ptr v379, ptr b256, v387, v388, !358
        mem_copy_val v389, v386
        v390 = get_local ptr { u64, ( () | b256 ) }, __tmp_block_arg5
        mem_copy_val v390, v379
        br only_owner_0_get_owner_27_read_28_read_30_block5(v390), !359

        only_owner_0_get_owner_27_read_28_read_30_block4():
        v391 = get_local ptr { u64, ( () | b256 ) }, __anon_21, !360
        v392 = const u64 0
        v393 = get_elem_ptr v391, ptr u64, v392, !361
        v394 = const u64 0, !67
        store v394 to v393, !362
        v395 = get_local ptr { u64, ( () | b256 ) }, __tmp_block_arg5
        mem_copy_val v395, v391
        br only_owner_0_get_owner_27_read_28_read_30_block5(v395), !363

        only_owner_0_get_owner_27_read_28_read_30_block5(v396: ptr { u64, ( () | b256 ) }):
        v397 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !366
        mem_copy_val v397, v396
        v398 = get_local ptr { u64, ( () | b256 ) }, __tmp_block_arg5
        v399 = const u64 0
        v400 = get_elem_ptr v398, ptr u64, v399
        v401 = load v400, !367
        v402 = const u64 1, !368
        v403 = cmp eq v401 v402, !370
        cbr v403, only_owner_0_get_owner_27_read_28_unwrap_29_block0(), only_owner_0_get_owner_27_read_28_unwrap_29_block1(), !371

        only_owner_0_get_owner_27_read_28_unwrap_29_block0():
        v404 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !372
        v405 = const u64 1
        v406 = const u64 1
        v407 = get_elem_ptr v404, ptr b256, v405, v406, !373
        v408 = get_local ptr b256, inner_value0, !375
        mem_copy_val v408, v407
        v409 = get_local ptr b256, __tmp_arg7
        mem_copy_val v409, v407
        v410 = get_local ptr { b256 }, __ret_val3
        v411 = call from_22(v409, v410)
        v412 = const u64 1
        v413 = const u64 0
        v414 = get_elem_ptr v300, ptr { b256 }, v412, v413, !376
        mem_copy_val v414, v411
        v415 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_03, !379
        v416 = const u64 0
        v417 = get_elem_ptr v415, ptr { u64, ( { b256 } | { b256 } ) }, v416, !380
        mem_copy_val v417, v299
        v418 = const u64 1
        v419 = get_elem_ptr v415, ptr { u64, ( { b256 } | { b256 } ) }, v418, !381
        mem_copy_val v419, v300
        v420 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !383
        mem_copy_val v420, v415
        v421 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_03
        v422 = const u64 0
        v423 = const u64 0
        v424 = get_elem_ptr v421, ptr u64, v422, v423
        v425 = load v424, !384
        v426 = const u64 0, !385
        v427 = cmp eq v425 v426, !387
        cbr v427, only_owner_0_eq_4_block0(), only_owner_0_eq_4_block1(v427), !388

        only_owner_0_get_owner_27_read_28_unwrap_29_block1():
        v428 = const u64 0, !389
        revert v428, !391

        only_owner_0_eq_4_block0():
        v429 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !392
        v430 = const u64 1
        v431 = get_elem_ptr v429, ptr { u64, ( { b256 } | { b256 } ) }, v430, !393
        v432 = const u64 0
        v433 = get_elem_ptr v431, ptr u64, v432, !394
        v434 = load v433, !395
        v435 = const u64 0, !385
        v436 = cmp eq v434 v435, !396
        br only_owner_0_eq_4_block1(v436), !397

        only_owner_0_eq_4_block1(v437: bool):
        cbr v437, only_owner_0_eq_4_block2(), only_owner_0_eq_4_block3(), !398

        only_owner_0_eq_4_block2():
        v438 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !399
        v439 = const u64 0
        v440 = get_elem_ptr v438, ptr { u64, ( { b256 } | { b256 } ) }, v439, !400
        v441 = const u64 1
        v442 = const u64 0
        v443 = get_elem_ptr v440, ptr { b256 }, v441, v442, !401
        v444 = get_local ptr { b256 }, addr1, !403
        mem_copy_val v444, v443
        v445 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !404
        v446 = const u64 1
        v447 = get_elem_ptr v445, ptr { u64, ( { b256 } | { b256 } ) }, v446, !405
        v448 = const u64 1
        v449 = const u64 0
        v450 = get_elem_ptr v447, ptr { b256 }, v448, v449, !406
        v451 = get_local ptr { b256 }, addr2, !408
        mem_copy_val v451, v450
        v452 = get_local ptr { b256 }, __tmp_arg1
        mem_copy_val v452, v443
        v453 = get_local ptr { b256 }, __tmp_arg2
        mem_copy_val v453, v450
        v454 = call eq_6(v452, v453)
        br only_owner_0_eq_4_block9(v454), !409

        only_owner_0_eq_4_block3():
        v455 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !410
        v456 = const u64 0
        v457 = get_elem_ptr v455, ptr { u64, ( { b256 } | { b256 } ) }, v456, !412
        v458 = const u64 0
        v459 = get_elem_ptr v457, ptr u64, v458, !413
        v460 = load v459, !414
        v461 = const u64 1, !411
        v462 = cmp eq v460 v461, !416
        cbr v462, only_owner_0_eq_4_block4(), only_owner_0_eq_4_block5(v462), !417

        only_owner_0_eq_4_block4():
        v463 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !418
        v464 = const u64 1
        v465 = get_elem_ptr v463, ptr { u64, ( { b256 } | { b256 } ) }, v464, !419
        v466 = const u64 0
        v467 = get_elem_ptr v465, ptr u64, v466, !420
        v468 = load v467, !421
        v469 = const u64 1, !411
        v470 = cmp eq v468 v469, !422
        br only_owner_0_eq_4_block5(v470), !423

        only_owner_0_eq_4_block5(v471: bool):
        v472 = const bool false, !424
        cbr v471, only_owner_0_eq_4_block6(), only_owner_0_eq_4_block8(v472), !425

        only_owner_0_eq_4_block6():
        v473 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !426
        v474 = const u64 0
        v475 = get_elem_ptr v473, ptr { u64, ( { b256 } | { b256 } ) }, v474, !427
        v476 = const u64 1
        v477 = const u64 1
        v478 = get_elem_ptr v475, ptr { b256 }, v476, v477, !428
        v479 = get_local ptr { b256 }, id1, !430
        mem_copy_val v479, v478
        v480 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !431
        v481 = const u64 1
        v482 = get_elem_ptr v480, ptr { u64, ( { b256 } | { b256 } ) }, v481, !432
        v483 = const u64 1
        v484 = const u64 1
        v485 = get_elem_ptr v482, ptr { b256 }, v483, v484, !433
        v486 = get_local ptr { b256 }, id2, !435
        mem_copy_val v486, v485
        v487 = get_local ptr { b256 }, __tmp_arg3
        mem_copy_val v487, v478
        v488 = get_local ptr { b256 }, __tmp_arg4
        mem_copy_val v488, v485
        v489 = call eq_6(v487, v488)
        br only_owner_0_eq_4_block8(v489), !436

        only_owner_0_eq_4_block8(v490: bool):
        br only_owner_0_eq_4_block9(v490), !437

        only_owner_0_eq_4_block9(v491: bool):
        v492 = const bool false, !439
        v493 = cmp eq v491 v492, !443
        cbr v493, only_owner_0_assert_1_block0(), only_owner_0_assert_1_block1(), !444

        only_owner_0_assert_1_block0():
        v494 = const u64 18446744073709486084, !446
        revert v494, !448

        only_owner_0_assert_1_block1():
        v495 = get_local ptr b256, __const1
        v496 = get_local ptr b256, __const2
        v497 = get_local ptr { b256, u64, b256 }, __anon_0, !449
        v498 = const u64 0
        v499 = get_elem_ptr v497, ptr b256, v498
        mem_copy_val v499, v495
        v500 = const u64 1
        v501 = get_elem_ptr v497, ptr u64, v500
        v502 = const u64 0
        store v502 to v501, !449
        v503 = const u64 2
        v504 = get_elem_ptr v497, ptr b256, v503
        mem_copy_val v504, v496
        v505 = get_local ptr { b256, u64, b256 }, __tmp_arg13
        mem_copy_val v505, v497
        v506 = get_local ptr b256, __ret_val11
        v507 = call slot_51(v505, v506)
        v508 = get_local ptr { b256, u64, b256 }, __tmp_arg11
        mem_copy_val v508, v497
        v509 = call offset_46(v508)
        v510 = const u64 8, !277
        v511 = mul v509, v510, !453
        v512 = const u64 8
        v513 = add v511, v512, !454
        v514 = const u64 31, !286
        v515 = add v513, v514, !455
        v516 = const u64 5, !289
        v517 = rsh v515, v516, !456
        v518 = const u64 4, !292
        v519 = mod v509, v518, !457
        v520 = get_local ptr b256, __asm_arg1
        mem_copy_val v520, v507
        v521 = asm(input: v520) -> ptr u256 input {
        }
        v522 = get_local ptr u256, offset_slot00, !458
        mem_copy_val v522, v521
        v523 = get_local ptr u256, offset_slot00, !459
        v524 = get_local ptr u256, __ret_val8
        v525 = call as_u256_40(v517, v524)
        v526 = get_local ptr u256, __ret_val9
        v527 = const u64 1, !460
        v528 = call as_u256_40(v527, v526)
        v529 = get_local ptr u256, __wide_lhs1
        mem_copy_val v529, v525
        v530 = get_local ptr u256, __wide_rhs1
        mem_copy_val v530, v528
        v531 = get_local ptr u256, __wide_result1, !461
        wide sub v529, v530 to v531, !461
        v532 = get_local ptr u256, __wide_lhs2, !462
        mem_copy_val v532, v523
        v533 = get_local ptr u256, __wide_result1, !461
        v534 = get_local ptr u256, __wide_result2, !463
        wide add v532, v533 to v534, !463
        v535 = get_local ptr u256, offset_slot00, !464
        mem_copy_val v535, v534
        v536 = get_local ptr u256, __asm_arg2
        mem_copy_val v536, v534
        v537 = asm(input: v536) -> ptr b256 input {
        }
        v538 = get_local ptr { b256, u64, u64 }, __anon_04, !465
        v539 = const u64 0
        v540 = get_elem_ptr v538, ptr b256, v539, !466
        mem_copy_val v540, v537
        v541 = const u64 1
        v542 = get_elem_ptr v538, ptr u64, v541, !467
        store v527 to v542, !468
        v543 = const u64 2
        v544 = get_elem_ptr v538, ptr u64, v543, !469
        store v519 to v544, !470
        v545 = get_local ptr { b256, u64, u64 }, __anon_04, !472
        v546 = const u64 0
        v547 = get_elem_ptr v545, ptr b256, v546, !473
        v548 = get_local ptr b256, offset_slot1, !474
        mem_copy_val v548, v547
        v549 = get_local ptr { b256, u64, u64 }, __anon_04, !475
        v550 = const u64 1
        v551 = get_elem_ptr v549, ptr u64, v550, !476
        v552 = load v551, !477
        v553 = get_local ptr { b256, u64, u64 }, __anon_04, !478
        v554 = const u64 2
        v555 = get_elem_ptr v553, ptr u64, v554, !479
        v556 = load v555, !480
        v557 = const u64 32, !481
        v558 = mul v552, v557, !483
        v559 = mul v372, v558, !485
        v560 = asm(size: v559, ptr) -> u64 ptr, !486 {
            aloc   size, !342
            move   ptr hp, !343
        }
        v561 = get_local ptr b256, offset_slot1, !488
        v562 = int_to_ptr v560 to ptr b256, !489
        v563 = state_load_quad_word v562, key v561, v552, !490
        v564 = mul v383, v556, !492
        v565 = add v560, v564, !493
        v566 = asm(ptr: v565, val: new_value) {
            sw     ptr val i0, !495
        }
        v567 = get_local ptr b256, offset_slot1, !497
        v568 = int_to_ptr v560 to ptr b256, !498
        v569 = state_store_quad_word v568, key v567, v552, !499
        v570 = const unit ()
        ret () v570
    }

    pub fn eq_6(self: ptr { b256 }, other: ptr { b256 }) -> bool, !501 {
        local b256 __wide_lhs
        local b256 __wide_rhs

        entry(self: ptr { b256 }, other: ptr { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !502
        v4 = ptr_to_int other to u64
        v5 = int_to_ptr v4 to ptr { b256 }
        v6 = const u64 0
        v7 = get_elem_ptr v5, ptr b256, v6, !502
        v8 = get_local ptr b256, __wide_lhs
        mem_copy_val v8, v3
        v9 = get_local ptr b256, __wide_rhs
        mem_copy_val v9, v7
        v10 = wide cmp eq v8 v9, !503
        ret bool v10
    }

    pub fn input_type_17(index !504: u64, __ret_value: ptr { u64 }) -> ptr { u64 }, !505 {
        local { u64 } __anon_0
        local u64 __anon_00
        local { u64 } __anon_1
        local u64 __anon_10
        local { u64 } __anon_2
        local u64 __anon_20
        local { u64 } __tmp_block_arg
        local { u64 } __tmp_block_arg0
        local u64 __tmp_block_arg00
        local u64 __tmp_block_arg01

        entry(index: u64, __ret_value: ptr { u64 }):
        v0 = gtf index, 512, !506
        v1 = bitcast v0 to u8, !506
        v2 = const u8 0, !507
        v3 = cmp eq v1 v2, !508
        cbr v3, block0(), block1(), !508

        block0():
        v4 = get_local ptr { u64 }, __anon_0, !509
        v5 = const u64 0
        v6 = get_elem_ptr v4, ptr u64, v5, !509
        v7 = get_local ptr u64, __anon_00
        v8 = get_local ptr { u64 }, __tmp_block_arg0
        v9 = get_local ptr u64, __anon_00
        v10 = get_local ptr u64, __tmp_block_arg00
        v11 = const u64 0, !509
        br block8(v8, v11)

        block1():
        v12 = const u8 1, !510
        v13 = cmp eq v1 v12, !511
        cbr v13, block2(), block3(), !511

        block2():
        v14 = get_local ptr { u64 }, __anon_1, !509
        v15 = const u64 0
        v16 = get_elem_ptr v14, ptr u64, v15, !509
        v17 = get_local ptr u64, __anon_10
        v18 = get_local ptr { u64 }, __tmp_block_arg
        v19 = get_local ptr u64, __anon_10
        v20 = get_local ptr u64, __tmp_block_arg01
        v21 = const u64 1, !509
        br block7(v18, v21)

        block3():
        v22 = const u8 2, !512
        v23 = cmp eq v1 v22, !513
        cbr v23, block4(), block5(), !513

        block4():
        v24 = get_local ptr { u64 }, __anon_2, !509
        v25 = const u64 0
        v26 = get_elem_ptr v24, ptr u64, v25, !509
        v27 = get_local ptr u64, __anon_20
        v28 = get_local ptr { u64 }, __tmp_block_arg
        v29 = get_local ptr u64, __anon_20
        v30 = get_local ptr u64, __tmp_block_arg01
        v31 = const u64 2, !509
        br block7(v28, v31)

        block5():
        v32 = const u64 0, !514
        revert v32, !516

        block7(v33: ptr { u64 }, v34: u64):
        v35 = get_local ptr { u64 }, __tmp_block_arg0
        v36 = get_local ptr u64, __tmp_block_arg01
        v37 = get_local ptr u64, __tmp_block_arg00
        br block8(v35, v34)

        block8(v38: ptr { u64 }, v39: u64):
        v40 = get_local ptr u64, __tmp_block_arg00
        v41 = const u64 0
        v42 = get_elem_ptr __ret_value, ptr u64, v41
        store v39 to v42
        ret ptr { u64 } __ret_value
    }

    pub fn add_19(self !517: u64, other !518: u64) -> u64, !519 {
        entry(self: u64, other: u64):
        v0 = add self, other
        v1 = const u64 65535, !521
        v2 = cmp gt v0 v1
        cbr v2, block0(), block1(), !522

        block0():
        v3 = const u64 0, !523
        revert v3, !524

        block1():
        ret u64 v0
    }

    pub fn from_22(bits: ptr b256, __ret_value: ptr { b256 }) -> ptr { b256 }, !525 {
        local { b256 } __anon_0

        entry(bits: ptr b256, __ret_value: ptr { b256 }):
        v0 = get_local ptr { b256 }, __anon_0, !526
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        mem_copy_val v2, bits
        mem_copy_val __ret_value, v0
        ret ptr { b256 } __ret_value
    }

    pub fn unwrap_24(self: ptr { u64, ( () | { b256 } ) }, __ret_value: ptr { b256 }) -> ptr { b256 }, !527 {
        local { u64, ( () | { b256 } ) } __matched_value_4

        entry(self: ptr { u64, ( () | { b256 } ) }, __ret_value: ptr { b256 }):
        v0 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !365
        mem_copy_val v0, self
        v1 = const u64 0
        v2 = get_elem_ptr self, ptr u64, v1
        v3 = load v2
        v4 = const u64 1, !368
        v5 = cmp eq v3 v4, !369
        cbr v5, block0(), block1(), !369

        block0():
        v6 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !368
        v7 = const u64 1
        v8 = const u64 1
        v9 = get_elem_ptr v6, ptr { b256 }, v7, v8
        mem_copy_val __ret_value, v9
        ret ptr { b256 } __ret_value

        block1():
        v10 = const u64 0, !389
        revert v10, !528
    }

    pub fn as_u256_40(self !529: u64, __ret_value: ptr u256) -> ptr u256, !530 {
        local { u64, u64, u64, u64 } __anon_0
        local u64 __anon_00
        local u64 __anon_016
        local u64 __anon_024
        local u64 __anon_08
        local { u64, u64, u64, u64 } input

        entry(self: u64, __ret_value: ptr u256):
        v0 = get_local ptr { u64, u64, u64, u64 }, __anon_0, !531
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr u64, v1, !531
        v3 = get_local ptr u64, __anon_00
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4, !531
        v6 = get_local ptr u64, __anon_08
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr u64, v7, !531
        v9 = get_local ptr u64, __anon_016
        v10 = const u64 3
        v11 = get_elem_ptr v0, ptr u64, v10, !531
        v12 = get_local ptr u64, __anon_024
        v13 = get_local ptr { u64, u64, u64, u64 }, input, !532
        v14 = get_local ptr u64, __anon_00
        v15 = get_local ptr u64, __anon_08
        v16 = get_local ptr u64, __anon_016
        v17 = get_local ptr u64, __anon_024
        v18 = const u64 0
        v19 = get_elem_ptr v13, ptr u64, v18
        v20 = const u64 0, !533
        store v20 to v19
        v21 = const u64 1
        v22 = get_elem_ptr v13, ptr u64, v21
        v23 = const u64 0, !534
        store v23 to v22
        v24 = const u64 2
        v25 = get_elem_ptr v13, ptr u64, v24
        v26 = const u64 0, !535
        store v26 to v25
        v27 = const u64 3
        v28 = get_elem_ptr v13, ptr u64, v27
        store self to v28
        v29 = get_local ptr { u64, u64, u64, u64 }, input, !536
        v30 = asm(input: v29) -> ptr u256 input {
        }
        mem_copy_val __ret_value, v30
        ret ptr u256 __ret_value
    }

    pub fn offset_46(self: ptr { b256, u64, b256 }) -> u64, !538 {
        entry(self: ptr { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 1
        v3 = get_elem_ptr v1, ptr u64, v2, !539
        v4 = load v3
        ret u64 v4
    }

    pub fn slot_51(self: ptr { b256, u64, b256 }, __ret_value: ptr b256) -> ptr b256, !540 {
        entry(self: ptr { b256, u64, b256 }, __ret_value: ptr b256):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !541
        mem_copy_val __ret_value, v3
        ret ptr b256 __ret_value
    }
}

// IR: [dce] Dead code elimination
contract {
    pub entry fn set_data_if_owner<c626c6e2>(new_value !1: u64) -> (), !4 {
        local { b256, u64, b256 } __anon_0
        local { u64, ( { b256 } | { b256 } ) } __anon_00
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_000
        local { u64, ( () | { b256 } ) } __anon_0000
        local { b256, u64, u64 } __anon_0001
        local { u64, ( () | { b256 } ) } __anon_01
        local { b256, u64, b256 } __anon_02
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __anon_03
        local { b256, u64, u64 } __anon_04
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_1
        local { u64, ( { b256 } | { u64 } ) } __anon_10
        local { u64, ( () | { b256 } ) } __anon_11
        local { u64, ( () | b256 ) } __anon_12
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64, ( () | b256 ) } __anon_21
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { u64 } ) } __anon_30
        local { u64, ( { b256 } | { b256 } ) } __anon_4
        local { u64, ( { b256 } | { u64 } ) } __anon_40
        local b256 __asm_arg
        local u256 __asm_arg0
        local b256 __asm_arg1
        local u256 __asm_arg2
        local b256 __const = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d
        local b256 __const0 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d
        local b256 __const1 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c
        local b256 __const2 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c
        local { u64, ( { b256 } | { u64 } ) } __matched_value_1
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __matched_value_12
        local { u64, ( () | { b256 } ) } __matched_value_3
        local { u64, ( () | { b256 } ) } __matched_value_31
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __matched_value_32
        local { u64, ( () | b256 ) } __matched_value_4
        local { u64 } __ret_val
        local { u64 } __ret_val0
        local { b256 } __ret_val1
        local b256 __ret_val10
        local b256 __ret_val11
        local { b256 } __ret_val2
        local { b256 } __ret_val3
        local { b256 } __ret_val4
        local { b256 } __ret_val5
        local u256 __ret_val6
        local u256 __ret_val7
        local u256 __ret_val8
        local u256 __ret_val9
        local { b256 } __tmp_arg
        local { b256 } __tmp_arg0
        local { b256 } __tmp_arg1
        local { b256, u64, b256 } __tmp_arg10
        local { b256, u64, b256 } __tmp_arg11
        local { b256, u64, b256 } __tmp_arg12
        local { b256, u64, b256 } __tmp_arg13
        local { b256 } __tmp_arg2
        local { b256 } __tmp_arg3
        local { b256 } __tmp_arg4
        local b256 __tmp_arg5
        local b256 __tmp_arg6
        local b256 __tmp_arg7
        local { u64, ( () | { b256 } ) } __tmp_arg8
        local { u64, ( () | { b256 } ) } __tmp_arg9
        local { u64 } __tmp_block_arg
        local { u64, ( () | { b256 } ) } __tmp_block_arg0
        local { u64, ( { b256 } | { u64 } ) } __tmp_block_arg1
        local { u64, ( { b256 } | { u64 } ) } __tmp_block_arg2
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __tmp_block_arg3
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __tmp_block_arg4
        local { u64, ( () | b256 ) } __tmp_block_arg5
        local u256 __wide_lhs
        local u256 __wide_lhs0
        local u256 __wide_lhs1
        local u256 __wide_lhs2
        local mut u256 __wide_result
        local mut u256 __wide_result0
        local mut u256 __wide_result1
        local mut u256 __wide_result2
        local u256 __wide_rhs
        local u256 __wide_rhs1
        local { b256 } addr1
        local { b256 } addr2
        local { b256 } address
        local mut { u64, ( () | { b256 } ) } candidate
        local { b256 } id1
        local { b256 } id2
        local { u64, ( { b256 } | { b256 } ) } inner_value
        local b256 inner_value0
        local b256 offset_slot
        local mut u256 offset_slot0
        local mut u256 offset_slot00
        local b256 offset_slot1
        local { b256 } owner
        local { u64, ( () | { b256 } ) } owner_of_input

        entry(new_value: u64):
        v0 = asm(r1) -> bool r1, !11 {
            gm     r1 i1, !12
        }
        cbr v0, only_owner_0_msg_sender_10_block0(), only_owner_0_msg_sender_10_block7(), !13

        only_owner_0_msg_sender_10_block0():
        v1 = const u64 0, !15
        v2 = gtf v1, 1, !21
        v3 = bitcast v2 to u8, !22
        v4 = const u8 0, !23
        v5 = cmp eq v3 v4, !25
        cbr v5, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1(), !26

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0():
        v6 = get_local ptr { u64 }, __tmp_block_arg
        v7 = const u64 0, !27
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v6, v7), !28

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1():
        v8 = const u8 1, !29
        v9 = cmp eq v3 v8, !31
        cbr v9, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3(), !32

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2():
        v10 = get_local ptr { u64 }, __tmp_block_arg
        v11 = const u64 1, !27
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v10, v11), !33

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3():
        v12 = const u64 0, !34
        revert v12, !38

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v13: ptr { u64 }, v14: u64):
        v15 = const u64 0, !19
        v16 = cmp eq v14 v15, !40
        cbr v16, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1(), !41

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0():
        v17 = const u64 0, !42
        v18 = gtf v17, 5, !44
        v19 = bitcast v18 to u64, !45
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v19), !46

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1():
        v20 = const u64 1, !19
        v21 = cmp eq v14 v20, !48
        cbr v21, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3(), !49

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2():
        v22 = const u64 0, !50
        v23 = gtf v22, 259, !52
        v24 = bitcast v23 to u64, !53
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v24), !54

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3():
        v25 = const u64 14757395258967588866, !55
        revert v25, !56

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v26: u64):
        v27 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0000, !59
        v28 = const u64 0
        v29 = get_elem_ptr v27, ptr u64, v28, !60
        v30 = const u64 0, !58
        store v30 to v29, !61
        v31 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !63
        mem_copy_val v31, v27
        v32 = const u64 0, !64
        br only_owner_0_msg_sender_10_caller_address_12_while(v32), !65

        only_owner_0_msg_sender_10_caller_address_12_while(v33: u64):
        v34 = cmp lt v33 v26, !67
        cbr v34, only_owner_0_msg_sender_10_caller_address_12_while_body(), only_owner_0_msg_sender_10_caller_address_12_end_while(), !68

        only_owner_0_msg_sender_10_caller_address_12_while_body():
        v35 = asm(input: v33) -> u64 input, !72 {
        }
        v36 = get_local ptr { u64 }, __ret_val
        v37 = call input_type_17(v35, v36)
        v38 = const u64 0
        v39 = get_elem_ptr v37, ptr u64, v38
        v40 = load v39
        v41 = const u64 0, !73
        v42 = cmp eq v40 v41, !75
        v43 = const unit (), !76
        cbr v42, only_owner_0_msg_sender_10_caller_address_12_block5(v43), only_owner_0_msg_sender_10_caller_address_12_block1(), !77

        only_owner_0_msg_sender_10_caller_address_12_block1():
        v44 = const u64 2, !73
        v45 = cmp eq v40 v44, !79
        v46 = const unit (), !80
        cbr v45, only_owner_0_msg_sender_10_caller_address_12_block5(v46), only_owner_0_msg_sender_10_caller_address_12_block3(), !81

        only_owner_0_msg_sender_10_caller_address_12_block3():
        v47 = const u64 1, !82
        v48 = call add_19(v33, v47), !84
        br only_owner_0_msg_sender_10_caller_address_12_while(v48), !85

        only_owner_0_msg_sender_10_caller_address_12_block5(v49: ()):
        v50 = asm(input: v33) -> u64 input, !87 {
        }
        v51 = get_local ptr { u64 }, __ret_val0
        v52 = call input_type_17(v50, v51)
        v53 = const u64 0
        v54 = get_elem_ptr v52, ptr u64, v53
        v55 = load v54
        v56 = const u64 0, !88
        v57 = cmp eq v55 v56, !91
        cbr v57, only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0(), only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1(), !92

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0():
        v58 = get_local ptr { u64, ( () | { b256 } ) }, __anon_01, !93
        v59 = const u64 0
        v60 = get_elem_ptr v58, ptr u64, v59, !94
        v61 = const u64 1, !58
        store v61 to v60, !95
        v62 = gtf v50, 515, !97
        v63 = int_to_ptr v62 to ptr b256, !98
        v64 = get_local ptr b256, __tmp_arg5
        mem_copy_val v64, v63
        v65 = get_local ptr { b256 }, __ret_val1
        v66 = call from_22(v64, v65)
        v67 = const u64 1
        v68 = const u64 1
        v69 = get_elem_ptr v58, ptr { b256 }, v67, v68, !99
        mem_copy_val v69, v66
        v70 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_block_arg0
        mem_copy_val v70, v58
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v70), !100

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1():
        v71 = get_local ptr { u64, ( () | { b256 } ) }, __anon_11, !101
        v72 = const u64 0
        v73 = get_elem_ptr v71, ptr u64, v72, !102
        v74 = const u64 0, !58
        store v74 to v73, !103
        v75 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_block_arg0
        mem_copy_val v75, v71
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v75), !104

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v76: ptr { u64, ( () | { b256 } ) }):
        v77 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !106
        mem_copy_val v77, v76
        v78 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !108
        v79 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !111
        mem_copy_val v79, v78
        v80 = get_local ptr { u64, ( () | { b256 } ) }, candidate
        v81 = const u64 0
        v82 = get_elem_ptr v80, ptr u64, v81
        v83 = load v82, !112
        v84 = const u64 1, !113
        v85 = cmp eq v83 v84, !115
        v86 = const bool false, !116
        cbr v85, only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v86), only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1(), !117

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1():
        v87 = const bool true, !118
        br only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v87), !119

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v88: bool):
        cbr v88, only_owner_0_msg_sender_10_caller_address_12_block6(), only_owner_0_msg_sender_10_caller_address_12_block7(), !120

        only_owner_0_msg_sender_10_caller_address_12_block6():
        v89 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !122
        v90 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !124
        mem_copy_val v90, v89
        v91 = const u64 1, !125
        v92 = call add_19(v33, v91), !127
        br only_owner_0_msg_sender_10_caller_address_12_while(v92), !128

        only_owner_0_msg_sender_10_caller_address_12_block7():
        v93 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !130
        v94 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_arg8
        mem_copy_val v94, v93
        v95 = get_local ptr { b256 }, __ret_val4
        v96 = call unwrap_24(v94, v95)
        v97 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !132
        v98 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_arg9
        mem_copy_val v98, v97
        v99 = get_local ptr { b256 }, __ret_val5
        v100 = call unwrap_24(v98, v99)
        v101 = get_local ptr { b256 }, __tmp_arg
        mem_copy_val v101, v96
        v102 = get_local ptr { b256 }, __tmp_arg0
        mem_copy_val v102, v100
        v103 = call eq_6(v101, v102)
        cbr v103, only_owner_0_msg_sender_10_caller_address_12_block9(), only_owner_0_msg_sender_10_caller_address_12_block10(), !134

        only_owner_0_msg_sender_10_caller_address_12_block9():
        v104 = const u64 1, !135
        v105 = call add_19(v33, v104), !137
        br only_owner_0_msg_sender_10_caller_address_12_while(v105), !138

        only_owner_0_msg_sender_10_caller_address_12_block10():
        v106 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_10, !141
        v107 = const u64 0
        v108 = get_elem_ptr v106, ptr u64, v107, !142
        v109 = const u64 1, !140
        store v109 to v108, !143
        v110 = const u64 1
        v111 = const u64 1
        v112 = get_elem_ptr v106, ptr { u64 }, v110, v111, !144
        v113 = const u64 0
        v114 = get_elem_ptr v112, ptr u64, v113
        v115 = const u64 0, !145
        store v115 to v114
        v116 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg2
        mem_copy_val v116, v106
        br only_owner_0_msg_sender_10_block10(v116), !147

        only_owner_0_msg_sender_10_caller_address_12_end_while():
        v117 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !149
        v118 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !151
        mem_copy_val v118, v117
        v119 = get_local ptr { u64, ( () | { b256 } ) }, candidate
        v120 = const u64 0
        v121 = get_elem_ptr v119, ptr u64, v120
        v122 = load v121, !152
        v123 = const u64 1, !148
        v124 = cmp eq v122 v123, !154
        cbr v124, only_owner_0_msg_sender_10_caller_address_12_block12(), only_owner_0_msg_sender_10_caller_address_12_block13(), !155

        only_owner_0_msg_sender_10_caller_address_12_block12():
        v125 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !156
        v126 = const u64 1
        v127 = const u64 1
        v128 = get_elem_ptr v125, ptr { b256 }, v126, v127, !157
        v129 = get_local ptr { b256 }, address, !159
        mem_copy_val v129, v128
        v130 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_30, !160
        v131 = const u64 0
        v132 = get_elem_ptr v130, ptr u64, v131, !161
        v133 = const u64 0, !140
        store v133 to v132, !162
        v134 = const u64 1
        v135 = const u64 0
        v136 = get_elem_ptr v130, ptr { b256 }, v134, v135, !163
        mem_copy_val v136, v128
        v137 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg1
        mem_copy_val v137, v130
        br only_owner_0_msg_sender_10_caller_address_12_block17(v137), !164

        only_owner_0_msg_sender_10_caller_address_12_block13():
        v138 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !165
        v139 = const u64 0
        v140 = get_elem_ptr v138, ptr u64, v139, !166
        v141 = load v140, !167
        v142 = const u64 0, !148
        v143 = cmp eq v141 v142, !169
        cbr v143, only_owner_0_msg_sender_10_caller_address_12_block14(), only_owner_0_msg_sender_10_caller_address_12_block15(), !170

        only_owner_0_msg_sender_10_caller_address_12_block14():
        v144 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_40, !171
        v145 = const u64 0
        v146 = get_elem_ptr v144, ptr u64, v145, !172
        v147 = const u64 1, !140
        store v147 to v146, !173
        v148 = const u64 1
        v149 = const u64 1
        v150 = get_elem_ptr v144, ptr { u64 }, v148, v149, !174
        v151 = const u64 0
        v152 = get_elem_ptr v150, ptr u64, v151
        v153 = const u64 1, !145
        store v153 to v152
        v154 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg1
        mem_copy_val v154, v144
        br only_owner_0_msg_sender_10_caller_address_12_block17(v154), !175

        only_owner_0_msg_sender_10_caller_address_12_block15():
        v155 = const u64 14757395258967588866, !150
        revert v155, !176

        only_owner_0_msg_sender_10_caller_address_12_block17(v156: ptr { u64, ( { b256 } | { u64 } ) }):
        v157 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg2
        mem_copy_val v157, v156
        br only_owner_0_msg_sender_10_block10(v157), !177

        only_owner_0_msg_sender_10_block10(v158: ptr { u64, ( { b256 } | { u64 } ) }):
        v159 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !179
        mem_copy_val v159, v158
        v160 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg2
        v161 = const u64 0
        v162 = get_elem_ptr v160, ptr u64, v161
        v163 = load v162, !180
        v164 = const u64 1, !16
        v165 = cmp eq v163 v164, !182
        cbr v165, only_owner_0_msg_sender_10_block1(), only_owner_0_msg_sender_10_block2(), !183

        only_owner_0_msg_sender_10_block1():
        v166 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !184
        v167 = const u64 1
        v168 = const u64 1
        v169 = get_elem_ptr v166, ptr { u64 }, v167, v168, !185
        v170 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_000, !186
        v171 = const u64 0
        v172 = get_elem_ptr v170, ptr u64, v171, !187
        v173 = const u64 1, !140
        store v173 to v172, !188
        v174 = const u64 1
        v175 = const u64 1
        v176 = get_elem_ptr v170, ptr { u64 }, v174, v175, !189
        mem_copy_val v176, v169
        v177 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg3
        mem_copy_val v177, v170
        br only_owner_0_msg_sender_10_block6(v177), !190

        only_owner_0_msg_sender_10_block2():
        v178 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !191
        v179 = const u64 0
        v180 = get_elem_ptr v178, ptr u64, v179, !192
        v181 = load v180, !193
        v182 = const u64 0, !16
        v183 = cmp eq v181 v182, !195
        cbr v183, only_owner_0_msg_sender_10_block3(), only_owner_0_msg_sender_10_block4(), !196

        only_owner_0_msg_sender_10_block3():
        v184 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !197
        v185 = const u64 1
        v186 = const u64 0
        v187 = get_elem_ptr v184, ptr { b256 }, v185, v186, !198
        v188 = get_local ptr { b256 }, owner, !200
        mem_copy_val v188, v187
        v189 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_1, !201
        v190 = const u64 0
        v191 = get_elem_ptr v189, ptr u64, v190, !202
        v192 = const u64 0, !140
        store v192 to v191, !203
        v193 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !206
        v194 = const u64 0
        v195 = get_elem_ptr v193, ptr u64, v194, !207
        v196 = const u64 0, !205
        store v196 to v195, !208
        v197 = const u64 1
        v198 = const u64 0
        v199 = get_elem_ptr v193, ptr { b256 }, v197, v198, !209
        mem_copy_val v199, v187
        v200 = const u64 1
        v201 = const u64 0
        v202 = get_elem_ptr v189, ptr { u64, ( { b256 } | { b256 } ) }, v200, v201, !210
        mem_copy_val v202, v193
        v203 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg3
        mem_copy_val v203, v189
        br only_owner_0_msg_sender_10_block6(v203), !211

        only_owner_0_msg_sender_10_block4():
        v204 = const u64 14757395258967588866, !178
        revert v204, !212

        only_owner_0_msg_sender_10_block6(v205: ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v206 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg4
        mem_copy_val v206, v205
        br only_owner_0_msg_sender_10_block8(v206), !213

        only_owner_0_msg_sender_10_block7():
        v207 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_3, !214
        v208 = const u64 0
        v209 = get_elem_ptr v207, ptr u64, v208, !215
        v210 = const u64 0, !140
        store v210 to v209, !216
        v211 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_4, !217
        v212 = const u64 0
        v213 = get_elem_ptr v211, ptr u64, v212, !218
        v214 = const u64 1, !205
        store v214 to v213, !219
        v215 = asm(r1) -> ptr b256 r1 {
            gm     r1 i2, !220
        }
        v216 = get_local ptr b256, __tmp_arg6
        mem_copy_val v216, v215
        v217 = get_local ptr { b256 }, __ret_val2
        v218 = call from_22(v216, v217)
        v219 = const u64 1
        v220 = const u64 1
        v221 = get_elem_ptr v211, ptr { b256 }, v219, v220, !221
        mem_copy_val v221, v218
        v222 = const u64 1
        v223 = const u64 0
        v224 = get_elem_ptr v207, ptr { u64, ( { b256 } | { b256 } ) }, v222, v223, !222
        mem_copy_val v224, v211
        v225 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg4
        mem_copy_val v225, v207
        br only_owner_0_msg_sender_10_block8(v225), !223

        only_owner_0_msg_sender_10_block8(v226: ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v227 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !226
        mem_copy_val v227, v226
        v228 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg4
        v229 = const u64 0
        v230 = get_elem_ptr v228, ptr u64, v229
        v231 = load v230, !227
        v232 = const u64 0, !228
        v233 = cmp eq v231 v232, !230
        cbr v233, only_owner_0_unwrap_9_block0(), only_owner_0_unwrap_9_block1(), !231

        only_owner_0_unwrap_9_block0():
        v234 = get_local ptr b256, __const
        v235 = get_local ptr b256, __const0
        v236 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !232
        v237 = const u64 1
        v238 = const u64 0
        v239 = get_elem_ptr v236, ptr { u64, ( { b256 } | { b256 } ) }, v237, v238, !233
        v240 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !235
        mem_copy_val v240, v239
        v241 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !237
        v242 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_00, !238
        v243 = const u64 0
        v244 = get_elem_ptr v242, ptr u64, v243, !239
        v245 = const u64 0, !205
        store v245 to v244, !240
        v246 = get_local ptr { b256, u64, b256 }, __anon_02, !243
        v247 = const u64 0
        v248 = get_elem_ptr v246, ptr b256, v247, !244
        mem_copy_val v248, v234
        v249 = const u64 1
        v250 = get_elem_ptr v246, ptr u64, v249, !245
        v251 = const u64 0
        store v251 to v250, !246
        v252 = const u64 2
        v253 = get_elem_ptr v246, ptr b256, v252, !247
        mem_copy_val v253, v235
        v254 = get_local ptr { b256, u64, b256 }, __tmp_arg12
        mem_copy_val v254, v246
        v255 = get_local ptr b256, __ret_val10
        v256 = call slot_51(v254, v255)
        v257 = get_local ptr { b256, u64, b256 }, __tmp_arg10
        mem_copy_val v257, v246
        v258 = call offset_46(v257)
        v259 = const u64 8, !249
        v260 = mul v258, v259, !255
        v261 = const u64 32
        v262 = add v260, v261, !257
        v263 = const u64 31, !258
        v264 = add v262, v263, !260
        v265 = const u64 5, !261
        v266 = rsh v264, v265, !263
        v267 = const u64 4, !264
        v268 = mod v258, v267, !266
        v269 = const u64 8, !267
        v270 = mul v268, v269, !269
        v271 = add v270, v261, !271
        v272 = const u64 31, !272
        v273 = add v271, v272, !274
        v274 = const u64 5, !275
        v275 = rsh v273, v274, !277
        v276 = get_local ptr b256, __asm_arg
        mem_copy_val v276, v256
        v277 = asm(input: v276) -> ptr u256 input {
        }
        v278 = get_local ptr u256, offset_slot0, !279
        mem_copy_val v278, v277
        v279 = get_local ptr u256, offset_slot0, !281
        v280 = get_local ptr u256, __ret_val6
        v281 = call as_u256_40(v266, v280)
        v282 = get_local ptr u256, __ret_val7
        v283 = call as_u256_40(v275, v282)
        v284 = get_local ptr u256, __wide_lhs
        mem_copy_val v284, v281
        v285 = get_local ptr u256, __wide_rhs
        mem_copy_val v285, v283
        v286 = get_local ptr u256, __wide_result, !283
        wide sub v284, v285 to v286, !283
        v287 = get_local ptr u256, __wide_lhs0, !284
        mem_copy_val v287, v279
        v288 = get_local ptr u256, __wide_result, !283
        v289 = get_local ptr u256, __wide_result0, !286
        wide add v287, v288 to v289, !286
        v290 = get_local ptr u256, offset_slot0, !287
        mem_copy_val v290, v289
        v291 = get_local ptr u256, __asm_arg0
        mem_copy_val v291, v289
        v292 = asm(input: v291) -> ptr b256 input {
        }
        v293 = get_local ptr { b256, u64, u64 }, __anon_0001, !289
        v294 = const u64 0
        v295 = get_elem_ptr v293, ptr b256, v294, !290
        mem_copy_val v295, v292
        v296 = const u64 1
        v297 = get_elem_ptr v293, ptr u64, v296, !291
        store v275 to v297, !292
        v298 = const u64 2
        v299 = get_elem_ptr v293, ptr u64, v298, !293
        store v268 to v299, !294
        v300 = get_local ptr { b256, u64, u64 }, __anon_0001, !296
        v301 = const u64 0
        v302 = get_elem_ptr v300, ptr b256, v301, !297
        v303 = get_local ptr b256, offset_slot, !298
        mem_copy_val v303, v302
        v304 = get_local ptr { b256, u64, u64 }, __anon_0001, !299
        v305 = const u64 1
        v306 = get_elem_ptr v304, ptr u64, v305, !300
        v307 = load v306, !301
        v308 = get_local ptr { b256, u64, u64 }, __anon_0001, !302
        v309 = const u64 2
        v310 = get_elem_ptr v308, ptr u64, v309, !303
        v311 = load v310, !304
        v312 = const u64 32, !305
        v313 = mul v307, v312, !307
        v314 = const u64 8
        v315 = mul v314, v313, !311
        v316 = asm(size: v315, ptr) -> u64 ptr, !313 {
            aloc   size, !314
            move   ptr hp, !315
        }
        v317 = get_local ptr b256, offset_slot, !317
        v318 = int_to_ptr v316 to ptr b256, !318
        v319 = state_load_quad_word v318, key v317, v307, !319
        cbr v319, only_owner_0_get_owner_27_read_28_read_30_block3(), only_owner_0_get_owner_27_read_28_read_30_block4(), !320

        only_owner_0_unwrap_9_block1():
        v320 = const u64 0, !321
        revert v320, !323

        only_owner_0_get_owner_27_read_28_read_30_block3():
        v321 = get_local ptr { u64, ( () | b256 ) }, __anon_12, !324
        v322 = const u64 0
        v323 = get_elem_ptr v321, ptr u64, v322, !325
        v324 = const u64 1, !58
        store v324 to v323, !326
        v325 = const u64 8
        v326 = mul v325, v311, !328
        v327 = add v316, v326, !329
        v328 = asm(ptr: v327) -> ptr b256 ptr {
        }
        v329 = const u64 1
        v330 = const u64 1
        v331 = get_elem_ptr v321, ptr b256, v329, v330, !330
        mem_copy_val v331, v328
        v332 = get_local ptr { u64, ( () | b256 ) }, __tmp_block_arg5
        mem_copy_val v332, v321
        br only_owner_0_get_owner_27_read_28_read_30_block5(v332), !331

        only_owner_0_get_owner_27_read_28_read_30_block4():
        v333 = get_local ptr { u64, ( () | b256 ) }, __anon_21, !332
        v334 = const u64 0
        v335 = get_elem_ptr v333, ptr u64, v334, !333
        v336 = const u64 0, !58
        store v336 to v335, !334
        v337 = get_local ptr { u64, ( () | b256 ) }, __tmp_block_arg5
        mem_copy_val v337, v333
        br only_owner_0_get_owner_27_read_28_read_30_block5(v337), !335

        only_owner_0_get_owner_27_read_28_read_30_block5(v338: ptr { u64, ( () | b256 ) }):
        v339 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !338
        mem_copy_val v339, v338
        v340 = get_local ptr { u64, ( () | b256 ) }, __tmp_block_arg5
        v341 = const u64 0
        v342 = get_elem_ptr v340, ptr u64, v341
        v343 = load v342, !339
        v344 = const u64 1, !340
        v345 = cmp eq v343 v344, !342
        cbr v345, only_owner_0_get_owner_27_read_28_unwrap_29_block0(), only_owner_0_get_owner_27_read_28_unwrap_29_block1(), !343

        only_owner_0_get_owner_27_read_28_unwrap_29_block0():
        v346 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !344
        v347 = const u64 1
        v348 = const u64 1
        v349 = get_elem_ptr v346, ptr b256, v347, v348, !345
        v350 = get_local ptr b256, inner_value0, !347
        mem_copy_val v350, v349
        v351 = get_local ptr b256, __tmp_arg7
        mem_copy_val v351, v349
        v352 = get_local ptr { b256 }, __ret_val3
        v353 = call from_22(v351, v352)
        v354 = const u64 1
        v355 = const u64 0
        v356 = get_elem_ptr v242, ptr { b256 }, v354, v355, !348
        mem_copy_val v356, v353
        v357 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_03, !351
        v358 = const u64 0
        v359 = get_elem_ptr v357, ptr { u64, ( { b256 } | { b256 } ) }, v358, !352
        mem_copy_val v359, v241
        v360 = const u64 1
        v361 = get_elem_ptr v357, ptr { u64, ( { b256 } | { b256 } ) }, v360, !353
        mem_copy_val v361, v242
        v362 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !355
        mem_copy_val v362, v357
        v363 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_03
        v364 = const u64 0
        v365 = const u64 0
        v366 = get_elem_ptr v363, ptr u64, v364, v365
        v367 = load v366, !356
        v368 = const u64 0, !357
        v369 = cmp eq v367 v368, !359
        cbr v369, only_owner_0_eq_4_block0(), only_owner_0_eq_4_block1(v369), !360

        only_owner_0_get_owner_27_read_28_unwrap_29_block1():
        v370 = const u64 0, !361
        revert v370, !363

        only_owner_0_eq_4_block0():
        v371 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !364
        v372 = const u64 1
        v373 = get_elem_ptr v371, ptr { u64, ( { b256 } | { b256 } ) }, v372, !365
        v374 = const u64 0
        v375 = get_elem_ptr v373, ptr u64, v374, !366
        v376 = load v375, !367
        v377 = const u64 0, !357
        v378 = cmp eq v376 v377, !368
        br only_owner_0_eq_4_block1(v378), !369

        only_owner_0_eq_4_block1(v379: bool):
        cbr v379, only_owner_0_eq_4_block2(), only_owner_0_eq_4_block3(), !370

        only_owner_0_eq_4_block2():
        v380 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !371
        v381 = const u64 0
        v382 = get_elem_ptr v380, ptr { u64, ( { b256 } | { b256 } ) }, v381, !372
        v383 = const u64 1
        v384 = const u64 0
        v385 = get_elem_ptr v382, ptr { b256 }, v383, v384, !373
        v386 = get_local ptr { b256 }, addr1, !375
        mem_copy_val v386, v385
        v387 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !376
        v388 = const u64 1
        v389 = get_elem_ptr v387, ptr { u64, ( { b256 } | { b256 } ) }, v388, !377
        v390 = const u64 1
        v391 = const u64 0
        v392 = get_elem_ptr v389, ptr { b256 }, v390, v391, !378
        v393 = get_local ptr { b256 }, addr2, !380
        mem_copy_val v393, v392
        v394 = get_local ptr { b256 }, __tmp_arg1
        mem_copy_val v394, v385
        v395 = get_local ptr { b256 }, __tmp_arg2
        mem_copy_val v395, v392
        v396 = call eq_6(v394, v395)
        br only_owner_0_eq_4_block9(v396), !381

        only_owner_0_eq_4_block3():
        v397 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !382
        v398 = const u64 0
        v399 = get_elem_ptr v397, ptr { u64, ( { b256 } | { b256 } ) }, v398, !384
        v400 = const u64 0
        v401 = get_elem_ptr v399, ptr u64, v400, !385
        v402 = load v401, !386
        v403 = const u64 1, !383
        v404 = cmp eq v402 v403, !388
        cbr v404, only_owner_0_eq_4_block4(), only_owner_0_eq_4_block5(v404), !389

        only_owner_0_eq_4_block4():
        v405 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !390
        v406 = const u64 1
        v407 = get_elem_ptr v405, ptr { u64, ( { b256 } | { b256 } ) }, v406, !391
        v408 = const u64 0
        v409 = get_elem_ptr v407, ptr u64, v408, !392
        v410 = load v409, !393
        v411 = const u64 1, !383
        v412 = cmp eq v410 v411, !394
        br only_owner_0_eq_4_block5(v412), !395

        only_owner_0_eq_4_block5(v413: bool):
        v414 = const bool false, !396
        cbr v413, only_owner_0_eq_4_block6(), only_owner_0_eq_4_block8(v414), !397

        only_owner_0_eq_4_block6():
        v415 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !398
        v416 = const u64 0
        v417 = get_elem_ptr v415, ptr { u64, ( { b256 } | { b256 } ) }, v416, !399
        v418 = const u64 1
        v419 = const u64 1
        v420 = get_elem_ptr v417, ptr { b256 }, v418, v419, !400
        v421 = get_local ptr { b256 }, id1, !402
        mem_copy_val v421, v420
        v422 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !403
        v423 = const u64 1
        v424 = get_elem_ptr v422, ptr { u64, ( { b256 } | { b256 } ) }, v423, !404
        v425 = const u64 1
        v426 = const u64 1
        v427 = get_elem_ptr v424, ptr { b256 }, v425, v426, !405
        v428 = get_local ptr { b256 }, id2, !407
        mem_copy_val v428, v427
        v429 = get_local ptr { b256 }, __tmp_arg3
        mem_copy_val v429, v420
        v430 = get_local ptr { b256 }, __tmp_arg4
        mem_copy_val v430, v427
        v431 = call eq_6(v429, v430)
        br only_owner_0_eq_4_block8(v431), !408

        only_owner_0_eq_4_block8(v432: bool):
        br only_owner_0_eq_4_block9(v432), !409

        only_owner_0_eq_4_block9(v433: bool):
        v434 = const bool false, !411
        v435 = cmp eq v433 v434, !415
        cbr v435, only_owner_0_assert_1_block0(), only_owner_0_assert_1_block1(), !416

        only_owner_0_assert_1_block0():
        v436 = const u64 18446744073709486084, !418
        revert v436, !420

        only_owner_0_assert_1_block1():
        v437 = get_local ptr b256, __const1
        v438 = get_local ptr b256, __const2
        v439 = get_local ptr { b256, u64, b256 }, __anon_0, !421
        v440 = const u64 0
        v441 = get_elem_ptr v439, ptr b256, v440
        mem_copy_val v441, v437
        v442 = const u64 1
        v443 = get_elem_ptr v439, ptr u64, v442
        v444 = const u64 0
        store v444 to v443, !421
        v445 = const u64 2
        v446 = get_elem_ptr v439, ptr b256, v445
        mem_copy_val v446, v438
        v447 = get_local ptr { b256, u64, b256 }, __tmp_arg13
        mem_copy_val v447, v439
        v448 = get_local ptr b256, __ret_val11
        v449 = call slot_51(v447, v448)
        v450 = get_local ptr { b256, u64, b256 }, __tmp_arg11
        mem_copy_val v450, v439
        v451 = call offset_46(v450)
        v452 = const u64 8, !249
        v453 = mul v451, v452, !425
        v454 = const u64 8
        v455 = add v453, v454, !426
        v456 = const u64 31, !258
        v457 = add v455, v456, !427
        v458 = const u64 5, !261
        v459 = rsh v457, v458, !428
        v460 = const u64 4, !264
        v461 = mod v451, v460, !429
        v462 = get_local ptr b256, __asm_arg1
        mem_copy_val v462, v449
        v463 = asm(input: v462) -> ptr u256 input {
        }
        v464 = get_local ptr u256, offset_slot00, !430
        mem_copy_val v464, v463
        v465 = get_local ptr u256, offset_slot00, !431
        v466 = get_local ptr u256, __ret_val8
        v467 = call as_u256_40(v459, v466)
        v468 = get_local ptr u256, __ret_val9
        v469 = const u64 1, !432
        v470 = call as_u256_40(v469, v468)
        v471 = get_local ptr u256, __wide_lhs1
        mem_copy_val v471, v467
        v472 = get_local ptr u256, __wide_rhs1
        mem_copy_val v472, v470
        v473 = get_local ptr u256, __wide_result1, !433
        wide sub v471, v472 to v473, !433
        v474 = get_local ptr u256, __wide_lhs2, !434
        mem_copy_val v474, v465
        v475 = get_local ptr u256, __wide_result1, !433
        v476 = get_local ptr u256, __wide_result2, !435
        wide add v474, v475 to v476, !435
        v477 = get_local ptr u256, offset_slot00, !436
        mem_copy_val v477, v476
        v478 = get_local ptr u256, __asm_arg2
        mem_copy_val v478, v476
        v479 = asm(input: v478) -> ptr b256 input {
        }
        v480 = get_local ptr { b256, u64, u64 }, __anon_04, !437
        v481 = const u64 0
        v482 = get_elem_ptr v480, ptr b256, v481, !438
        mem_copy_val v482, v479
        v483 = const u64 1
        v484 = get_elem_ptr v480, ptr u64, v483, !439
        store v469 to v484, !440
        v485 = const u64 2
        v486 = get_elem_ptr v480, ptr u64, v485, !441
        store v461 to v486, !442
        v487 = get_local ptr { b256, u64, u64 }, __anon_04, !444
        v488 = const u64 0
        v489 = get_elem_ptr v487, ptr b256, v488, !445
        v490 = get_local ptr b256, offset_slot1, !446
        mem_copy_val v490, v489
        v491 = get_local ptr { b256, u64, u64 }, __anon_04, !447
        v492 = const u64 1
        v493 = get_elem_ptr v491, ptr u64, v492, !448
        v494 = load v493, !449
        v495 = get_local ptr { b256, u64, u64 }, __anon_04, !450
        v496 = const u64 2
        v497 = get_elem_ptr v495, ptr u64, v496, !451
        v498 = load v497, !452
        v499 = const u64 32, !453
        v500 = mul v494, v499, !455
        v501 = mul v314, v500, !457
        v502 = asm(size: v501, ptr) -> u64 ptr, !458 {
            aloc   size, !314
            move   ptr hp, !315
        }
        v503 = get_local ptr b256, offset_slot1, !460
        v504 = int_to_ptr v502 to ptr b256, !461
        v505 = state_load_quad_word v504, key v503, v494, !462
        v506 = mul v325, v498, !464
        v507 = add v502, v506, !465
        v508 = asm(ptr: v507, val: new_value) {
            sw     ptr val i0, !467
        }
        v509 = get_local ptr b256, offset_slot1, !469
        v510 = int_to_ptr v502 to ptr b256, !470
        v511 = state_store_quad_word v510, key v509, v494, !471
        v512 = const unit ()
        ret () v512
    }

    pub fn eq_6(self: ptr { b256 }, other: ptr { b256 }) -> bool, !473 {
        local b256 __wide_lhs
        local b256 __wide_rhs

        entry(self: ptr { b256 }, other: ptr { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !474
        v4 = ptr_to_int other to u64
        v5 = int_to_ptr v4 to ptr { b256 }
        v6 = const u64 0
        v7 = get_elem_ptr v5, ptr b256, v6, !474
        v8 = get_local ptr b256, __wide_lhs
        mem_copy_val v8, v3
        v9 = get_local ptr b256, __wide_rhs
        mem_copy_val v9, v7
        v10 = wide cmp eq v8 v9, !475
        ret bool v10
    }

    pub fn input_type_17(index !476: u64, __ret_value: ptr { u64 }) -> ptr { u64 }, !477 {
        local { u64 } __tmp_block_arg
        local { u64 } __tmp_block_arg0

        entry(index: u64, __ret_value: ptr { u64 }):
        v0 = gtf index, 512, !478
        v1 = bitcast v0 to u8, !478
        v2 = const u8 0, !479
        v3 = cmp eq v1 v2, !480
        cbr v3, block0(), block1(), !480

        block0():
        v4 = get_local ptr { u64 }, __tmp_block_arg0
        v5 = const u64 0, !481
        br block8(v4, v5)

        block1():
        v6 = const u8 1, !482
        v7 = cmp eq v1 v6, !483
        cbr v7, block2(), block3(), !483

        block2():
        v8 = get_local ptr { u64 }, __tmp_block_arg
        v9 = const u64 1, !481
        br block7(v8, v9)

        block3():
        v10 = const u8 2, !484
        v11 = cmp eq v1 v10, !485
        cbr v11, block4(), block5(), !485

        block4():
        v12 = get_local ptr { u64 }, __tmp_block_arg
        v13 = const u64 2, !481
        br block7(v12, v13)

        block5():
        v14 = const u64 0, !486
        revert v14, !488

        block7(v15: ptr { u64 }, v16: u64):
        v17 = get_local ptr { u64 }, __tmp_block_arg0
        br block8(v17, v16)

        block8(v18: ptr { u64 }, v19: u64):
        v20 = const u64 0
        v21 = get_elem_ptr __ret_value, ptr u64, v20
        store v19 to v21
        ret ptr { u64 } __ret_value
    }

    pub fn add_19(self !489: u64, other !490: u64) -> u64, !491 {
        entry(self: u64, other: u64):
        v0 = add self, other
        v1 = const u64 65535, !493
        v2 = cmp gt v0 v1
        cbr v2, block0(), block1(), !494

        block0():
        v3 = const u64 0, !495
        revert v3, !496

        block1():
        ret u64 v0
    }

    pub fn from_22(bits: ptr b256, __ret_value: ptr { b256 }) -> ptr { b256 }, !497 {
        local { b256 } __anon_0

        entry(bits: ptr b256, __ret_value: ptr { b256 }):
        v0 = get_local ptr { b256 }, __anon_0, !498
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        mem_copy_val v2, bits
        mem_copy_val __ret_value, v0
        ret ptr { b256 } __ret_value
    }

    pub fn unwrap_24(self: ptr { u64, ( () | { b256 } ) }, __ret_value: ptr { b256 }) -> ptr { b256 }, !499 {
        local { u64, ( () | { b256 } ) } __matched_value_4

        entry(self: ptr { u64, ( () | { b256 } ) }, __ret_value: ptr { b256 }):
        v0 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !337
        mem_copy_val v0, self
        v1 = const u64 0
        v2 = get_elem_ptr self, ptr u64, v1
        v3 = load v2
        v4 = const u64 1, !340
        v5 = cmp eq v3 v4, !341
        cbr v5, block0(), block1(), !341

        block0():
        v6 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !340
        v7 = const u64 1
        v8 = const u64 1
        v9 = get_elem_ptr v6, ptr { b256 }, v7, v8
        mem_copy_val __ret_value, v9
        ret ptr { b256 } __ret_value

        block1():
        v10 = const u64 0, !361
        revert v10, !500
    }

    pub fn as_u256_40(self !501: u64, __ret_value: ptr u256) -> ptr u256, !502 {
        local { u64, u64, u64, u64 } input

        entry(self: u64, __ret_value: ptr u256):
        v0 = get_local ptr { u64, u64, u64, u64 }, input, !503
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr u64, v1
        v3 = const u64 0, !504
        store v3 to v2
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4
        v6 = const u64 0, !505
        store v6 to v5
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr u64, v7
        v9 = const u64 0, !506
        store v9 to v8
        v10 = const u64 3
        v11 = get_elem_ptr v0, ptr u64, v10
        store self to v11
        v12 = get_local ptr { u64, u64, u64, u64 }, input, !507
        v13 = asm(input: v12) -> ptr u256 input {
        }
        mem_copy_val __ret_value, v13
        ret ptr u256 __ret_value
    }

    pub fn offset_46(self: ptr { b256, u64, b256 }) -> u64, !509 {
        entry(self: ptr { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 1
        v3 = get_elem_ptr v1, ptr u64, v2, !510
        v4 = load v3
        ret u64 v4
    }

    pub fn slot_51(self: ptr { b256, u64, b256 }, __ret_value: ptr b256) -> ptr b256, !511 {
        entry(self: ptr { b256, u64, b256 }, __ret_value: ptr b256):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !512
        mem_copy_val __ret_value, v3
        ret ptr b256 __ret_value
    }
}

// IR: Final
contract {
    pub entry fn set_data_if_owner<c626c6e2>(new_value !1: u64) -> (), !4 {
        local { b256, u64, b256 } __anon_0
        local { u64, ( { b256 } | { b256 } ) } __anon_00
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_000
        local { u64, ( () | { b256 } ) } __anon_0000
        local { b256, u64, u64 } __anon_0001
        local { u64, ( () | { b256 } ) } __anon_01
        local { b256, u64, b256 } __anon_02
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __anon_03
        local { b256, u64, u64 } __anon_04
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_1
        local { u64, ( { b256 } | { u64 } ) } __anon_10
        local { u64, ( () | { b256 } ) } __anon_11
        local { u64, ( () | b256 ) } __anon_12
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64, ( () | b256 ) } __anon_21
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __anon_3
        local { u64, ( { b256 } | { u64 } ) } __anon_30
        local { u64, ( { b256 } | { b256 } ) } __anon_4
        local { u64, ( { b256 } | { u64 } ) } __anon_40
        local b256 __asm_arg
        local u256 __asm_arg0
        local b256 __asm_arg1
        local u256 __asm_arg2
        local b256 __const = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d
        local b256 __const0 = const b256 0x1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d
        local b256 __const1 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c
        local b256 __const2 = const b256 0xcd345addfdf2c26c3c1daaa92244ee7cef128b6fc6c1ac9c61c25cb15cd8144c
        local { u64, ( { b256 } | { u64 } ) } __matched_value_1
        local { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } } __matched_value_12
        local { u64, ( () | { b256 } ) } __matched_value_3
        local { u64, ( () | { b256 } ) } __matched_value_31
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __matched_value_32
        local { u64, ( () | b256 ) } __matched_value_4
        local { u64 } __ret_val
        local { u64 } __ret_val0
        local { b256 } __ret_val1
        local b256 __ret_val10
        local b256 __ret_val11
        local { b256 } __ret_val2
        local { b256 } __ret_val3
        local { b256 } __ret_val4
        local { b256 } __ret_val5
        local u256 __ret_val6
        local u256 __ret_val7
        local u256 __ret_val8
        local u256 __ret_val9
        local { b256 } __tmp_arg
        local { b256 } __tmp_arg0
        local { b256 } __tmp_arg1
        local { b256, u64, b256 } __tmp_arg10
        local { b256, u64, b256 } __tmp_arg11
        local { b256, u64, b256 } __tmp_arg12
        local { b256, u64, b256 } __tmp_arg13
        local { b256 } __tmp_arg2
        local { b256 } __tmp_arg3
        local { b256 } __tmp_arg4
        local b256 __tmp_arg5
        local b256 __tmp_arg6
        local b256 __tmp_arg7
        local { u64, ( () | { b256 } ) } __tmp_arg8
        local { u64, ( () | { b256 } ) } __tmp_arg9
        local { u64 } __tmp_block_arg
        local { u64, ( () | { b256 } ) } __tmp_block_arg0
        local { u64, ( { b256 } | { u64 } ) } __tmp_block_arg1
        local { u64, ( { b256 } | { u64 } ) } __tmp_block_arg2
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __tmp_block_arg3
        local { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) } __tmp_block_arg4
        local { u64, ( () | b256 ) } __tmp_block_arg5
        local u256 __wide_lhs
        local u256 __wide_lhs0
        local u256 __wide_lhs1
        local u256 __wide_lhs2
        local mut u256 __wide_result
        local mut u256 __wide_result0
        local mut u256 __wide_result1
        local mut u256 __wide_result2
        local u256 __wide_rhs
        local u256 __wide_rhs1
        local { b256 } addr1
        local { b256 } addr2
        local { b256 } address
        local mut { u64, ( () | { b256 } ) } candidate
        local { b256 } id1
        local { b256 } id2
        local { u64, ( { b256 } | { b256 } ) } inner_value
        local b256 inner_value0
        local b256 offset_slot
        local mut u256 offset_slot0
        local mut u256 offset_slot00
        local b256 offset_slot1
        local { b256 } owner
        local { u64, ( () | { b256 } ) } owner_of_input

        entry(new_value: u64):
        v0 = asm(r1) -> bool r1, !11 {
            gm     r1 i1, !12
        }
        cbr v0, only_owner_0_msg_sender_10_block0(), only_owner_0_msg_sender_10_block7(), !13

        only_owner_0_msg_sender_10_block0():
        v1 = const u64 0, !15
        v2 = gtf v1, 1, !21
        v3 = bitcast v2 to u8, !22
        v4 = const u8 0, !23
        v5 = cmp eq v3 v4, !25
        cbr v5, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1(), !26

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block0():
        v6 = get_local ptr { u64 }, __tmp_block_arg
        v7 = const u64 0, !27
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v6, v7), !28

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block1():
        v8 = const u8 1, !29
        v9 = cmp eq v3 v8, !31
        cbr v9, only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3(), !32

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block2():
        v10 = get_local ptr { u64 }, __tmp_block_arg
        v11 = const u64 1, !27
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v10, v11), !33

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block3():
        v12 = const u64 0, !34
        revert v12, !38

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_tx_type_14_block5(v13: ptr { u64 }, v14: u64):
        v15 = const u64 0, !19
        v16 = cmp eq v14 v15, !40
        cbr v16, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1(), !41

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block0():
        v17 = const u64 0, !42
        v18 = gtf v17, 5, !44
        v19 = bitcast v18 to u64, !45
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v19), !46

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block1():
        v20 = const u64 1, !19
        v21 = cmp eq v14 v20, !48
        cbr v21, only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2(), only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3(), !49

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block2():
        v22 = const u64 0, !50
        v23 = gtf v22, 259, !52
        v24 = bitcast v23 to u64, !53
        br only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v24), !54

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block3():
        v25 = const u64 14757395258967588866, !55
        revert v25, !56

        only_owner_0_msg_sender_10_caller_address_12_input_count_13_block5(v26: u64):
        v27 = get_local ptr { u64, ( () | { b256 } ) }, __anon_0000, !59
        v28 = const u64 0
        v29 = get_elem_ptr v27, ptr u64, v28, !60
        v30 = const u64 0, !58
        store v30 to v29, !61
        v31 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !63
        mem_copy_val v31, v27
        v32 = const u64 0, !64
        br only_owner_0_msg_sender_10_caller_address_12_while(v32), !65

        only_owner_0_msg_sender_10_caller_address_12_while(v33: u64):
        v34 = cmp lt v33 v26, !67
        cbr v34, only_owner_0_msg_sender_10_caller_address_12_while_body(), only_owner_0_msg_sender_10_caller_address_12_end_while(), !68

        only_owner_0_msg_sender_10_caller_address_12_while_body():
        v35 = asm(input: v33) -> u64 input, !72 {
        }
        v36 = get_local ptr { u64 }, __ret_val
        v37 = call input_type_17(v35, v36)
        v38 = const u64 0
        v39 = get_elem_ptr v37, ptr u64, v38
        v40 = load v39
        v41 = const u64 0, !73
        v42 = cmp eq v40 v41, !75
        v43 = const unit (), !76
        cbr v42, only_owner_0_msg_sender_10_caller_address_12_block5(v43), only_owner_0_msg_sender_10_caller_address_12_block1(), !77

        only_owner_0_msg_sender_10_caller_address_12_block1():
        v44 = const u64 2, !73
        v45 = cmp eq v40 v44, !79
        v46 = const unit (), !80
        cbr v45, only_owner_0_msg_sender_10_caller_address_12_block5(v46), only_owner_0_msg_sender_10_caller_address_12_block3(), !81

        only_owner_0_msg_sender_10_caller_address_12_block3():
        v47 = const u64 1, !82
        v48 = call add_19(v33, v47), !84
        br only_owner_0_msg_sender_10_caller_address_12_while(v48), !85

        only_owner_0_msg_sender_10_caller_address_12_block5(v49: ()):
        v50 = asm(input: v33) -> u64 input, !87 {
        }
        v51 = get_local ptr { u64 }, __ret_val0
        v52 = call input_type_17(v50, v51)
        v53 = const u64 0
        v54 = get_elem_ptr v52, ptr u64, v53
        v55 = load v54
        v56 = const u64 0, !88
        v57 = cmp eq v55 v56, !91
        cbr v57, only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0(), only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1(), !92

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block0():
        v58 = get_local ptr { u64, ( () | { b256 } ) }, __anon_01, !93
        v59 = const u64 0
        v60 = get_elem_ptr v58, ptr u64, v59, !94
        v61 = const u64 1, !58
        store v61 to v60, !95
        v62 = gtf v50, 515, !97
        v63 = int_to_ptr v62 to ptr b256, !98
        v64 = get_local ptr b256, __tmp_arg5
        mem_copy_val v64, v63
        v65 = get_local ptr { b256 }, __ret_val1
        v66 = call from_22(v64, v65)
        v67 = const u64 1
        v68 = const u64 1
        v69 = get_elem_ptr v58, ptr { b256 }, v67, v68, !99
        mem_copy_val v69, v66
        v70 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_block_arg0
        mem_copy_val v70, v58
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v70), !100

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block1():
        v71 = get_local ptr { u64, ( () | { b256 } ) }, __anon_11, !101
        v72 = const u64 0
        v73 = get_elem_ptr v71, ptr u64, v72, !102
        v74 = const u64 0, !58
        store v74 to v73, !103
        v75 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_block_arg0
        mem_copy_val v75, v71
        br only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v75), !104

        only_owner_0_msg_sender_10_caller_address_12_input_coin_owner_21_block2(v76: ptr { u64, ( () | { b256 } ) }):
        v77 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !106
        mem_copy_val v77, v76
        v78 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !108
        v79 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_31, !111
        mem_copy_val v79, v78
        v80 = get_local ptr { u64, ( () | { b256 } ) }, candidate
        v81 = const u64 0
        v82 = get_elem_ptr v80, ptr u64, v81
        v83 = load v82, !112
        v84 = const u64 1, !113
        v85 = cmp eq v83 v84, !115
        v86 = const bool false, !116
        cbr v85, only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v86), only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1(), !117

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block1():
        v87 = const bool true, !118
        br only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v87), !119

        only_owner_0_msg_sender_10_caller_address_12_is_none_23_block2(v88: bool):
        cbr v88, only_owner_0_msg_sender_10_caller_address_12_block6(), only_owner_0_msg_sender_10_caller_address_12_block7(), !120

        only_owner_0_msg_sender_10_caller_address_12_block6():
        v89 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !122
        v90 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !124
        mem_copy_val v90, v89
        v91 = const u64 1, !125
        v92 = call add_19(v33, v91), !127
        br only_owner_0_msg_sender_10_caller_address_12_while(v92), !128

        only_owner_0_msg_sender_10_caller_address_12_block7():
        v93 = get_local ptr { u64, ( () | { b256 } ) }, owner_of_input, !130
        v94 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_arg8
        mem_copy_val v94, v93
        v95 = get_local ptr { b256 }, __ret_val4
        v96 = call unwrap_24(v94, v95)
        v97 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !132
        v98 = get_local ptr { u64, ( () | { b256 } ) }, __tmp_arg9
        mem_copy_val v98, v97
        v99 = get_local ptr { b256 }, __ret_val5
        v100 = call unwrap_24(v98, v99)
        v101 = get_local ptr { b256 }, __tmp_arg
        mem_copy_val v101, v96
        v102 = get_local ptr { b256 }, __tmp_arg0
        mem_copy_val v102, v100
        v103 = call eq_6(v101, v102)
        cbr v103, only_owner_0_msg_sender_10_caller_address_12_block9(), only_owner_0_msg_sender_10_caller_address_12_block10(), !134

        only_owner_0_msg_sender_10_caller_address_12_block9():
        v104 = const u64 1, !135
        v105 = call add_19(v33, v104), !137
        br only_owner_0_msg_sender_10_caller_address_12_while(v105), !138

        only_owner_0_msg_sender_10_caller_address_12_block10():
        v106 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_10, !141
        v107 = const u64 0
        v108 = get_elem_ptr v106, ptr u64, v107, !142
        v109 = const u64 1, !140
        store v109 to v108, !143
        v110 = const u64 1
        v111 = const u64 1
        v112 = get_elem_ptr v106, ptr { u64 }, v110, v111, !144
        v113 = const u64 0
        v114 = get_elem_ptr v112, ptr u64, v113
        v115 = const u64 0, !145
        store v115 to v114
        v116 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg2
        mem_copy_val v116, v106
        br only_owner_0_msg_sender_10_block10(v116), !147

        only_owner_0_msg_sender_10_caller_address_12_end_while():
        v117 = get_local ptr { u64, ( () | { b256 } ) }, candidate, !149
        v118 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !151
        mem_copy_val v118, v117
        v119 = get_local ptr { u64, ( () | { b256 } ) }, candidate
        v120 = const u64 0
        v121 = get_elem_ptr v119, ptr u64, v120
        v122 = load v121, !152
        v123 = const u64 1, !148
        v124 = cmp eq v122 v123, !154
        cbr v124, only_owner_0_msg_sender_10_caller_address_12_block12(), only_owner_0_msg_sender_10_caller_address_12_block13(), !155

        only_owner_0_msg_sender_10_caller_address_12_block12():
        v125 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !156
        v126 = const u64 1
        v127 = const u64 1
        v128 = get_elem_ptr v125, ptr { b256 }, v126, v127, !157
        v129 = get_local ptr { b256 }, address, !159
        mem_copy_val v129, v128
        v130 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_30, !160
        v131 = const u64 0
        v132 = get_elem_ptr v130, ptr u64, v131, !161
        v133 = const u64 0, !140
        store v133 to v132, !162
        v134 = const u64 1
        v135 = const u64 0
        v136 = get_elem_ptr v130, ptr { b256 }, v134, v135, !163
        mem_copy_val v136, v128
        v137 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg1
        mem_copy_val v137, v130
        br only_owner_0_msg_sender_10_caller_address_12_block17(v137), !164

        only_owner_0_msg_sender_10_caller_address_12_block13():
        v138 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_3, !165
        v139 = const u64 0
        v140 = get_elem_ptr v138, ptr u64, v139, !166
        v141 = load v140, !167
        v142 = const u64 0, !148
        v143 = cmp eq v141 v142, !169
        cbr v143, only_owner_0_msg_sender_10_caller_address_12_block14(), only_owner_0_msg_sender_10_caller_address_12_block15(), !170

        only_owner_0_msg_sender_10_caller_address_12_block14():
        v144 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __anon_40, !171
        v145 = const u64 0
        v146 = get_elem_ptr v144, ptr u64, v145, !172
        v147 = const u64 1, !140
        store v147 to v146, !173
        v148 = const u64 1
        v149 = const u64 1
        v150 = get_elem_ptr v144, ptr { u64 }, v148, v149, !174
        v151 = const u64 0
        v152 = get_elem_ptr v150, ptr u64, v151
        v153 = const u64 1, !145
        store v153 to v152
        v154 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg1
        mem_copy_val v154, v144
        br only_owner_0_msg_sender_10_caller_address_12_block17(v154), !175

        only_owner_0_msg_sender_10_caller_address_12_block15():
        v155 = const u64 14757395258967588866, !150
        revert v155, !176

        only_owner_0_msg_sender_10_caller_address_12_block17(v156: ptr { u64, ( { b256 } | { u64 } ) }):
        v157 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg2
        mem_copy_val v157, v156
        br only_owner_0_msg_sender_10_block10(v157), !177

        only_owner_0_msg_sender_10_block10(v158: ptr { u64, ( { b256 } | { u64 } ) }):
        v159 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !179
        mem_copy_val v159, v158
        v160 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __tmp_block_arg2
        v161 = const u64 0
        v162 = get_elem_ptr v160, ptr u64, v161
        v163 = load v162, !180
        v164 = const u64 1, !16
        v165 = cmp eq v163 v164, !182
        cbr v165, only_owner_0_msg_sender_10_block1(), only_owner_0_msg_sender_10_block2(), !183

        only_owner_0_msg_sender_10_block1():
        v166 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !184
        v167 = const u64 1
        v168 = const u64 1
        v169 = get_elem_ptr v166, ptr { u64 }, v167, v168, !185
        v170 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_000, !186
        v171 = const u64 0
        v172 = get_elem_ptr v170, ptr u64, v171, !187
        v173 = const u64 1, !140
        store v173 to v172, !188
        v174 = const u64 1
        v175 = const u64 1
        v176 = get_elem_ptr v170, ptr { u64 }, v174, v175, !189
        mem_copy_val v176, v169
        v177 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg3
        mem_copy_val v177, v170
        br only_owner_0_msg_sender_10_block6(v177), !190

        only_owner_0_msg_sender_10_block2():
        v178 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !191
        v179 = const u64 0
        v180 = get_elem_ptr v178, ptr u64, v179, !192
        v181 = load v180, !193
        v182 = const u64 0, !16
        v183 = cmp eq v181 v182, !195
        cbr v183, only_owner_0_msg_sender_10_block3(), only_owner_0_msg_sender_10_block4(), !196

        only_owner_0_msg_sender_10_block3():
        v184 = get_local ptr { u64, ( { b256 } | { u64 } ) }, __matched_value_1, !197
        v185 = const u64 1
        v186 = const u64 0
        v187 = get_elem_ptr v184, ptr { b256 }, v185, v186, !198
        v188 = get_local ptr { b256 }, owner, !200
        mem_copy_val v188, v187
        v189 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_1, !201
        v190 = const u64 0
        v191 = get_elem_ptr v189, ptr u64, v190, !202
        v192 = const u64 0, !140
        store v192 to v191, !203
        v193 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !206
        v194 = const u64 0
        v195 = get_elem_ptr v193, ptr u64, v194, !207
        v196 = const u64 0, !205
        store v196 to v195, !208
        v197 = const u64 1
        v198 = const u64 0
        v199 = get_elem_ptr v193, ptr { b256 }, v197, v198, !209
        mem_copy_val v199, v187
        v200 = const u64 1
        v201 = const u64 0
        v202 = get_elem_ptr v189, ptr { u64, ( { b256 } | { b256 } ) }, v200, v201, !210
        mem_copy_val v202, v193
        v203 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg3
        mem_copy_val v203, v189
        br only_owner_0_msg_sender_10_block6(v203), !211

        only_owner_0_msg_sender_10_block4():
        v204 = const u64 14757395258967588866, !178
        revert v204, !212

        only_owner_0_msg_sender_10_block6(v205: ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v206 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg4
        mem_copy_val v206, v205
        br only_owner_0_msg_sender_10_block8(v206), !213

        only_owner_0_msg_sender_10_block7():
        v207 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __anon_3, !214
        v208 = const u64 0
        v209 = get_elem_ptr v207, ptr u64, v208, !215
        v210 = const u64 0, !140
        store v210 to v209, !216
        v211 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_4, !217
        v212 = const u64 0
        v213 = get_elem_ptr v211, ptr u64, v212, !218
        v214 = const u64 1, !205
        store v214 to v213, !219
        v215 = asm(r1) -> ptr b256 r1 {
            gm     r1 i2, !220
        }
        v216 = get_local ptr b256, __tmp_arg6
        mem_copy_val v216, v215
        v217 = get_local ptr { b256 }, __ret_val2
        v218 = call from_22(v216, v217)
        v219 = const u64 1
        v220 = const u64 1
        v221 = get_elem_ptr v211, ptr { b256 }, v219, v220, !221
        mem_copy_val v221, v218
        v222 = const u64 1
        v223 = const u64 0
        v224 = get_elem_ptr v207, ptr { u64, ( { b256 } | { b256 } ) }, v222, v223, !222
        mem_copy_val v224, v211
        v225 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg4
        mem_copy_val v225, v207
        br only_owner_0_msg_sender_10_block8(v225), !223

        only_owner_0_msg_sender_10_block8(v226: ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }):
        v227 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !226
        mem_copy_val v227, v226
        v228 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __tmp_block_arg4
        v229 = const u64 0
        v230 = get_elem_ptr v228, ptr u64, v229
        v231 = load v230, !227
        v232 = const u64 0, !228
        v233 = cmp eq v231 v232, !230
        cbr v233, only_owner_0_unwrap_9_block0(), only_owner_0_unwrap_9_block1(), !231

        only_owner_0_unwrap_9_block0():
        v234 = get_local ptr b256, __const
        v235 = get_local ptr b256, __const0
        v236 = get_local ptr { u64, ( { u64, ( { b256 } | { b256 } ) } | { u64 } ) }, __matched_value_32, !232
        v237 = const u64 1
        v238 = const u64 0
        v239 = get_elem_ptr v236, ptr { u64, ( { b256 } | { b256 } ) }, v237, v238, !233
        v240 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !235
        mem_copy_val v240, v239
        v241 = get_local ptr { u64, ( { b256 } | { b256 } ) }, inner_value, !237
        v242 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_00, !238
        v243 = const u64 0
        v244 = get_elem_ptr v242, ptr u64, v243, !239
        v245 = const u64 0, !205
        store v245 to v244, !240
        v246 = get_local ptr { b256, u64, b256 }, __anon_02, !243
        v247 = const u64 0
        v248 = get_elem_ptr v246, ptr b256, v247, !244
        mem_copy_val v248, v234
        v249 = const u64 1
        v250 = get_elem_ptr v246, ptr u64, v249, !245
        v251 = const u64 0
        store v251 to v250, !246
        v252 = const u64 2
        v253 = get_elem_ptr v246, ptr b256, v252, !247
        mem_copy_val v253, v235
        v254 = get_local ptr { b256, u64, b256 }, __tmp_arg12
        mem_copy_val v254, v246
        v255 = get_local ptr b256, __ret_val10
        v256 = call slot_51(v254, v255)
        v257 = get_local ptr { b256, u64, b256 }, __tmp_arg10
        mem_copy_val v257, v246
        v258 = call offset_46(v257)
        v259 = const u64 8, !249
        v260 = mul v258, v259, !255
        v261 = const u64 32
        v262 = add v260, v261, !257
        v263 = const u64 31, !258
        v264 = add v262, v263, !260
        v265 = const u64 5, !261
        v266 = rsh v264, v265, !263
        v267 = const u64 4, !264
        v268 = mod v258, v267, !266
        v269 = const u64 8, !267
        v270 = mul v268, v269, !269
        v271 = add v270, v261, !271
        v272 = const u64 31, !272
        v273 = add v271, v272, !274
        v274 = const u64 5, !275
        v275 = rsh v273, v274, !277
        v276 = get_local ptr b256, __asm_arg
        mem_copy_val v276, v256
        v277 = asm(input: v276) -> ptr u256 input {
        }
        v278 = get_local ptr u256, offset_slot0, !279
        mem_copy_val v278, v277
        v279 = get_local ptr u256, offset_slot0, !281
        v280 = get_local ptr u256, __ret_val6
        v281 = call as_u256_40(v266, v280)
        v282 = get_local ptr u256, __ret_val7
        v283 = call as_u256_40(v275, v282)
        v284 = get_local ptr u256, __wide_lhs
        mem_copy_val v284, v281
        v285 = get_local ptr u256, __wide_rhs
        mem_copy_val v285, v283
        v286 = get_local ptr u256, __wide_result, !283
        wide sub v284, v285 to v286, !283
        v287 = get_local ptr u256, __wide_lhs0, !284
        mem_copy_val v287, v279
        v288 = get_local ptr u256, __wide_result, !283
        v289 = get_local ptr u256, __wide_result0, !286
        wide add v287, v288 to v289, !286
        v290 = get_local ptr u256, offset_slot0, !287
        mem_copy_val v290, v289
        v291 = get_local ptr u256, __asm_arg0
        mem_copy_val v291, v289
        v292 = asm(input: v291) -> ptr b256 input {
        }
        v293 = get_local ptr { b256, u64, u64 }, __anon_0001, !289
        v294 = const u64 0
        v295 = get_elem_ptr v293, ptr b256, v294, !290
        mem_copy_val v295, v292
        v296 = const u64 1
        v297 = get_elem_ptr v293, ptr u64, v296, !291
        store v275 to v297, !292
        v298 = const u64 2
        v299 = get_elem_ptr v293, ptr u64, v298, !293
        store v268 to v299, !294
        v300 = get_local ptr { b256, u64, u64 }, __anon_0001, !296
        v301 = const u64 0
        v302 = get_elem_ptr v300, ptr b256, v301, !297
        v303 = get_local ptr b256, offset_slot, !298
        mem_copy_val v303, v302
        v304 = get_local ptr { b256, u64, u64 }, __anon_0001, !299
        v305 = const u64 1
        v306 = get_elem_ptr v304, ptr u64, v305, !300
        v307 = load v306, !301
        v308 = get_local ptr { b256, u64, u64 }, __anon_0001, !302
        v309 = const u64 2
        v310 = get_elem_ptr v308, ptr u64, v309, !303
        v311 = load v310, !304
        v312 = const u64 32, !305
        v313 = mul v307, v312, !307
        v314 = const u64 8
        v315 = mul v314, v313, !311
        v316 = asm(size: v315, ptr) -> u64 ptr, !313 {
            aloc   size, !314
            move   ptr hp, !315
        }
        v317 = get_local ptr b256, offset_slot, !317
        v318 = int_to_ptr v316 to ptr b256, !318
        v319 = state_load_quad_word v318, key v317, v307, !319
        cbr v319, only_owner_0_get_owner_27_read_28_read_30_block3(), only_owner_0_get_owner_27_read_28_read_30_block4(), !320

        only_owner_0_unwrap_9_block1():
        v320 = const u64 0, !321
        revert v320, !323

        only_owner_0_get_owner_27_read_28_read_30_block3():
        v321 = get_local ptr { u64, ( () | b256 ) }, __anon_12, !324
        v322 = const u64 0
        v323 = get_elem_ptr v321, ptr u64, v322, !325
        v324 = const u64 1, !58
        store v324 to v323, !326
        v325 = const u64 8
        v326 = mul v325, v311, !328
        v327 = add v316, v326, !329
        v328 = asm(ptr: v327) -> ptr b256 ptr {
        }
        v329 = const u64 1
        v330 = const u64 1
        v331 = get_elem_ptr v321, ptr b256, v329, v330, !330
        mem_copy_val v331, v328
        v332 = get_local ptr { u64, ( () | b256 ) }, __tmp_block_arg5
        mem_copy_val v332, v321
        br only_owner_0_get_owner_27_read_28_read_30_block5(v332), !331

        only_owner_0_get_owner_27_read_28_read_30_block4():
        v333 = get_local ptr { u64, ( () | b256 ) }, __anon_21, !332
        v334 = const u64 0
        v335 = get_elem_ptr v333, ptr u64, v334, !333
        v336 = const u64 0, !58
        store v336 to v335, !334
        v337 = get_local ptr { u64, ( () | b256 ) }, __tmp_block_arg5
        mem_copy_val v337, v333
        br only_owner_0_get_owner_27_read_28_read_30_block5(v337), !335

        only_owner_0_get_owner_27_read_28_read_30_block5(v338: ptr { u64, ( () | b256 ) }):
        v339 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !338
        mem_copy_val v339, v338
        v340 = get_local ptr { u64, ( () | b256 ) }, __tmp_block_arg5
        v341 = const u64 0
        v342 = get_elem_ptr v340, ptr u64, v341
        v343 = load v342, !339
        v344 = const u64 1, !340
        v345 = cmp eq v343 v344, !342
        cbr v345, only_owner_0_get_owner_27_read_28_unwrap_29_block0(), only_owner_0_get_owner_27_read_28_unwrap_29_block1(), !343

        only_owner_0_get_owner_27_read_28_unwrap_29_block0():
        v346 = get_local ptr { u64, ( () | b256 ) }, __matched_value_4, !344
        v347 = const u64 1
        v348 = const u64 1
        v349 = get_elem_ptr v346, ptr b256, v347, v348, !345
        v350 = get_local ptr b256, inner_value0, !347
        mem_copy_val v350, v349
        v351 = get_local ptr b256, __tmp_arg7
        mem_copy_val v351, v349
        v352 = get_local ptr { b256 }, __ret_val3
        v353 = call from_22(v351, v352)
        v354 = const u64 1
        v355 = const u64 0
        v356 = get_elem_ptr v242, ptr { b256 }, v354, v355, !348
        mem_copy_val v356, v353
        v357 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_03, !351
        v358 = const u64 0
        v359 = get_elem_ptr v357, ptr { u64, ( { b256 } | { b256 } ) }, v358, !352
        mem_copy_val v359, v241
        v360 = const u64 1
        v361 = get_elem_ptr v357, ptr { u64, ( { b256 } | { b256 } ) }, v360, !353
        mem_copy_val v361, v242
        v362 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !355
        mem_copy_val v362, v357
        v363 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __anon_03
        v364 = const u64 0
        v365 = const u64 0
        v366 = get_elem_ptr v363, ptr u64, v364, v365
        v367 = load v366, !356
        v368 = const u64 0, !357
        v369 = cmp eq v367 v368, !359
        cbr v369, only_owner_0_eq_4_block0(), only_owner_0_eq_4_block1(v369), !360

        only_owner_0_get_owner_27_read_28_unwrap_29_block1():
        v370 = const u64 0, !361
        revert v370, !363

        only_owner_0_eq_4_block0():
        v371 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !364
        v372 = const u64 1
        v373 = get_elem_ptr v371, ptr { u64, ( { b256 } | { b256 } ) }, v372, !365
        v374 = const u64 0
        v375 = get_elem_ptr v373, ptr u64, v374, !366
        v376 = load v375, !367
        v377 = const u64 0, !357
        v378 = cmp eq v376 v377, !368
        br only_owner_0_eq_4_block1(v378), !369

        only_owner_0_eq_4_block1(v379: bool):
        cbr v379, only_owner_0_eq_4_block2(), only_owner_0_eq_4_block3(), !370

        only_owner_0_eq_4_block2():
        v380 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !371
        v381 = const u64 0
        v382 = get_elem_ptr v380, ptr { u64, ( { b256 } | { b256 } ) }, v381, !372
        v383 = const u64 1
        v384 = const u64 0
        v385 = get_elem_ptr v382, ptr { b256 }, v383, v384, !373
        v386 = get_local ptr { b256 }, addr1, !375
        mem_copy_val v386, v385
        v387 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !376
        v388 = const u64 1
        v389 = get_elem_ptr v387, ptr { u64, ( { b256 } | { b256 } ) }, v388, !377
        v390 = const u64 1
        v391 = const u64 0
        v392 = get_elem_ptr v389, ptr { b256 }, v390, v391, !378
        v393 = get_local ptr { b256 }, addr2, !380
        mem_copy_val v393, v392
        v394 = get_local ptr { b256 }, __tmp_arg1
        mem_copy_val v394, v385
        v395 = get_local ptr { b256 }, __tmp_arg2
        mem_copy_val v395, v392
        v396 = call eq_6(v394, v395)
        br only_owner_0_eq_4_block9(v396), !381

        only_owner_0_eq_4_block3():
        v397 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !382
        v398 = const u64 0
        v399 = get_elem_ptr v397, ptr { u64, ( { b256 } | { b256 } ) }, v398, !384
        v400 = const u64 0
        v401 = get_elem_ptr v399, ptr u64, v400, !385
        v402 = load v401, !386
        v403 = const u64 1, !383
        v404 = cmp eq v402 v403, !388
        cbr v404, only_owner_0_eq_4_block4(), only_owner_0_eq_4_block5(v404), !389

        only_owner_0_eq_4_block4():
        v405 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !390
        v406 = const u64 1
        v407 = get_elem_ptr v405, ptr { u64, ( { b256 } | { b256 } ) }, v406, !391
        v408 = const u64 0
        v409 = get_elem_ptr v407, ptr u64, v408, !392
        v410 = load v409, !393
        v411 = const u64 1, !383
        v412 = cmp eq v410 v411, !394
        br only_owner_0_eq_4_block5(v412), !395

        only_owner_0_eq_4_block5(v413: bool):
        v414 = const bool false, !396
        cbr v413, only_owner_0_eq_4_block6(), only_owner_0_eq_4_block8(v414), !397

        only_owner_0_eq_4_block6():
        v415 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !398
        v416 = const u64 0
        v417 = get_elem_ptr v415, ptr { u64, ( { b256 } | { b256 } ) }, v416, !399
        v418 = const u64 1
        v419 = const u64 1
        v420 = get_elem_ptr v417, ptr { b256 }, v418, v419, !400
        v421 = get_local ptr { b256 }, id1, !402
        mem_copy_val v421, v420
        v422 = get_local ptr { { u64, ( { b256 } | { b256 } ) }, { u64, ( { b256 } | { b256 } ) } }, __matched_value_12, !403
        v423 = const u64 1
        v424 = get_elem_ptr v422, ptr { u64, ( { b256 } | { b256 } ) }, v423, !404
        v425 = const u64 1
        v426 = const u64 1
        v427 = get_elem_ptr v424, ptr { b256 }, v425, v426, !405
        v428 = get_local ptr { b256 }, id2, !407
        mem_copy_val v428, v427
        v429 = get_local ptr { b256 }, __tmp_arg3
        mem_copy_val v429, v420
        v430 = get_local ptr { b256 }, __tmp_arg4
        mem_copy_val v430, v427
        v431 = call eq_6(v429, v430)
        br only_owner_0_eq_4_block8(v431), !408

        only_owner_0_eq_4_block8(v432: bool):
        br only_owner_0_eq_4_block9(v432), !409

        only_owner_0_eq_4_block9(v433: bool):
        v434 = const bool false, !411
        v435 = cmp eq v433 v434, !415
        cbr v435, only_owner_0_assert_1_block0(), only_owner_0_assert_1_block1(), !416

        only_owner_0_assert_1_block0():
        v436 = const u64 18446744073709486084, !418
        revert v436, !420

        only_owner_0_assert_1_block1():
        v437 = get_local ptr b256, __const1
        v438 = get_local ptr b256, __const2
        v439 = get_local ptr { b256, u64, b256 }, __anon_0, !421
        v440 = const u64 0
        v441 = get_elem_ptr v439, ptr b256, v440
        mem_copy_val v441, v437
        v442 = const u64 1
        v443 = get_elem_ptr v439, ptr u64, v442
        v444 = const u64 0
        store v444 to v443, !421
        v445 = const u64 2
        v446 = get_elem_ptr v439, ptr b256, v445
        mem_copy_val v446, v438
        v447 = get_local ptr { b256, u64, b256 }, __tmp_arg13
        mem_copy_val v447, v439
        v448 = get_local ptr b256, __ret_val11
        v449 = call slot_51(v447, v448)
        v450 = get_local ptr { b256, u64, b256 }, __tmp_arg11
        mem_copy_val v450, v439
        v451 = call offset_46(v450)
        v452 = const u64 8, !249
        v453 = mul v451, v452, !425
        v454 = const u64 8
        v455 = add v453, v454, !426
        v456 = const u64 31, !258
        v457 = add v455, v456, !427
        v458 = const u64 5, !261
        v459 = rsh v457, v458, !428
        v460 = const u64 4, !264
        v461 = mod v451, v460, !429
        v462 = get_local ptr b256, __asm_arg1
        mem_copy_val v462, v449
        v463 = asm(input: v462) -> ptr u256 input {
        }
        v464 = get_local ptr u256, offset_slot00, !430
        mem_copy_val v464, v463
        v465 = get_local ptr u256, offset_slot00, !431
        v466 = get_local ptr u256, __ret_val8
        v467 = call as_u256_40(v459, v466)
        v468 = get_local ptr u256, __ret_val9
        v469 = const u64 1, !432
        v470 = call as_u256_40(v469, v468)
        v471 = get_local ptr u256, __wide_lhs1
        mem_copy_val v471, v467
        v472 = get_local ptr u256, __wide_rhs1
        mem_copy_val v472, v470
        v473 = get_local ptr u256, __wide_result1, !433
        wide sub v471, v472 to v473, !433
        v474 = get_local ptr u256, __wide_lhs2, !434
        mem_copy_val v474, v465
        v475 = get_local ptr u256, __wide_result1, !433
        v476 = get_local ptr u256, __wide_result2, !435
        wide add v474, v475 to v476, !435
        v477 = get_local ptr u256, offset_slot00, !436
        mem_copy_val v477, v476
        v478 = get_local ptr u256, __asm_arg2
        mem_copy_val v478, v476
        v479 = asm(input: v478) -> ptr b256 input {
        }
        v480 = get_local ptr { b256, u64, u64 }, __anon_04, !437
        v481 = const u64 0
        v482 = get_elem_ptr v480, ptr b256, v481, !438
        mem_copy_val v482, v479
        v483 = const u64 1
        v484 = get_elem_ptr v480, ptr u64, v483, !439
        store v469 to v484, !440
        v485 = const u64 2
        v486 = get_elem_ptr v480, ptr u64, v485, !441
        store v461 to v486, !442
        v487 = get_local ptr { b256, u64, u64 }, __anon_04, !444
        v488 = const u64 0
        v489 = get_elem_ptr v487, ptr b256, v488, !445
        v490 = get_local ptr b256, offset_slot1, !446
        mem_copy_val v490, v489
        v491 = get_local ptr { b256, u64, u64 }, __anon_04, !447
        v492 = const u64 1
        v493 = get_elem_ptr v491, ptr u64, v492, !448
        v494 = load v493, !449
        v495 = get_local ptr { b256, u64, u64 }, __anon_04, !450
        v496 = const u64 2
        v497 = get_elem_ptr v495, ptr u64, v496, !451
        v498 = load v497, !452
        v499 = const u64 32, !453
        v500 = mul v494, v499, !455
        v501 = mul v314, v500, !457
        v502 = asm(size: v501, ptr) -> u64 ptr, !458 {
            aloc   size, !314
            move   ptr hp, !315
        }
        v503 = get_local ptr b256, offset_slot1, !460
        v504 = int_to_ptr v502 to ptr b256, !461
        v505 = state_load_quad_word v504, key v503, v494, !462
        v506 = mul v325, v498, !464
        v507 = add v502, v506, !465
        v508 = asm(ptr: v507, val: new_value) {
            sw     ptr val i0, !467
        }
        v509 = get_local ptr b256, offset_slot1, !469
        v510 = int_to_ptr v502 to ptr b256, !470
        v511 = state_store_quad_word v510, key v509, v494, !471
        v512 = const unit ()
        ret () v512
    }

    pub fn eq_6(self: ptr { b256 }, other: ptr { b256 }) -> bool, !473 {
        local b256 __wide_lhs
        local b256 __wide_rhs

        entry(self: ptr { b256 }, other: ptr { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !474
        v4 = ptr_to_int other to u64
        v5 = int_to_ptr v4 to ptr { b256 }
        v6 = const u64 0
        v7 = get_elem_ptr v5, ptr b256, v6, !474
        v8 = get_local ptr b256, __wide_lhs
        mem_copy_val v8, v3
        v9 = get_local ptr b256, __wide_rhs
        mem_copy_val v9, v7
        v10 = wide cmp eq v8 v9, !475
        ret bool v10
    }

    pub fn input_type_17(index !476: u64, __ret_value: ptr { u64 }) -> ptr { u64 }, !477 {
        local { u64 } __tmp_block_arg
        local { u64 } __tmp_block_arg0

        entry(index: u64, __ret_value: ptr { u64 }):
        v0 = gtf index, 512, !478
        v1 = bitcast v0 to u8, !478
        v2 = const u8 0, !479
        v3 = cmp eq v1 v2, !480
        cbr v3, block0(), block1(), !480

        block0():
        v4 = get_local ptr { u64 }, __tmp_block_arg0
        v5 = const u64 0, !481
        br block8(v4, v5)

        block1():
        v6 = const u8 1, !482
        v7 = cmp eq v1 v6, !483
        cbr v7, block2(), block3(), !483

        block2():
        v8 = get_local ptr { u64 }, __tmp_block_arg
        v9 = const u64 1, !481
        br block7(v8, v9)

        block3():
        v10 = const u8 2, !484
        v11 = cmp eq v1 v10, !485
        cbr v11, block4(), block5(), !485

        block4():
        v12 = get_local ptr { u64 }, __tmp_block_arg
        v13 = const u64 2, !481
        br block7(v12, v13)

        block5():
        v14 = const u64 0, !486
        revert v14, !488

        block7(v15: ptr { u64 }, v16: u64):
        v17 = get_local ptr { u64 }, __tmp_block_arg0
        br block8(v17, v16)

        block8(v18: ptr { u64 }, v19: u64):
        v20 = const u64 0
        v21 = get_elem_ptr __ret_value, ptr u64, v20
        store v19 to v21
        ret ptr { u64 } __ret_value
    }

    pub fn add_19(self !489: u64, other !490: u64) -> u64, !491 {
        entry(self: u64, other: u64):
        v0 = add self, other
        v1 = const u64 65535, !493
        v2 = cmp gt v0 v1
        cbr v2, block0(), block1(), !494

        block0():
        v3 = const u64 0, !495
        revert v3, !496

        block1():
        ret u64 v0
    }

    pub fn from_22(bits: ptr b256, __ret_value: ptr { b256 }) -> ptr { b256 }, !497 {
        local { b256 } __anon_0

        entry(bits: ptr b256, __ret_value: ptr { b256 }):
        v0 = get_local ptr { b256 }, __anon_0, !498
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        mem_copy_val v2, bits
        mem_copy_val __ret_value, v0
        ret ptr { b256 } __ret_value
    }

    pub fn unwrap_24(self: ptr { u64, ( () | { b256 } ) }, __ret_value: ptr { b256 }) -> ptr { b256 }, !499 {
        local { u64, ( () | { b256 } ) } __matched_value_4

        entry(self: ptr { u64, ( () | { b256 } ) }, __ret_value: ptr { b256 }):
        v0 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !337
        mem_copy_val v0, self
        v1 = const u64 0
        v2 = get_elem_ptr self, ptr u64, v1
        v3 = load v2
        v4 = const u64 1, !340
        v5 = cmp eq v3 v4, !341
        cbr v5, block0(), block1(), !341

        block0():
        v6 = get_local ptr { u64, ( () | { b256 } ) }, __matched_value_4, !340
        v7 = const u64 1
        v8 = const u64 1
        v9 = get_elem_ptr v6, ptr { b256 }, v7, v8
        mem_copy_val __ret_value, v9
        ret ptr { b256 } __ret_value

        block1():
        v10 = const u64 0, !361
        revert v10, !500
    }

    pub fn as_u256_40(self !501: u64, __ret_value: ptr u256) -> ptr u256, !502 {
        local { u64, u64, u64, u64 } input

        entry(self: u64, __ret_value: ptr u256):
        v0 = get_local ptr { u64, u64, u64, u64 }, input, !503
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr u64, v1
        v3 = const u64 0, !504
        store v3 to v2
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4
        v6 = const u64 0, !505
        store v6 to v5
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr u64, v7
        v9 = const u64 0, !506
        store v9 to v8
        v10 = const u64 3
        v11 = get_elem_ptr v0, ptr u64, v10
        store self to v11
        v12 = get_local ptr { u64, u64, u64, u64 }, input, !507
        v13 = asm(input: v12) -> ptr u256 input {
        }
        mem_copy_val __ret_value, v13
        ret ptr u256 __ret_value
    }

    pub fn offset_46(self: ptr { b256, u64, b256 }) -> u64, !509 {
        entry(self: ptr { b256, u64, b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 1
        v3 = get_elem_ptr v1, ptr u64, v2, !510
        v4 = load v3
        ret u64 v4
    }

    pub fn slot_51(self: ptr { b256, u64, b256 }, __ret_value: ptr b256) -> ptr b256, !511 {
        entry(self: ptr { b256, u64, b256 }, __ret_value: ptr b256):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256, u64, b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !512
        mem_copy_val __ret_value, v3
        ret ptr b256 __ret_value
    }
}
