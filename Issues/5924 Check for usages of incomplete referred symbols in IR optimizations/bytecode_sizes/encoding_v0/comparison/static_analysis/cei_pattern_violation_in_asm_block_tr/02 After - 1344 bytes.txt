// IR: Initial
library {
}

// IR: Final
library {
}

// IR: Initial
contract {
    pub entry fn deposit<2df2cef7>() -> (), !1 {
        local { b256, u64, u64 } __anon_0
        local b256 __anon_1
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local b256 address
        local u64 amount
        local { b256 } asset
        local { b256 } pool

        entry():
        v0 = get_local ptr { b256, u64, u64 }, __anon_0, !2
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        v3 = const b256 0x3dba0a4455b598b7655a7fb430883d96c9527ef275b49739e7b0ad12f8280eae, !3
        store v3 to v2, !2
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4
        v6 = const u64 770887415, !2
        store v6 to v5, !2
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr u64, v7
        v9 = const u64 0
        store v9 to v8, !2
        v10 = get_local ptr b256, __anon_1
        v11 = const b256 0x0000000000000000000000000000000000000000000000000000000000000000, !2
        store v11 to v10
        v12 = read_register cgas, !2
        v13 = const u64 0, !2
        v14 = contract_call () deposit v0, v13, v10, v12, !2
        v15 = get_local ptr u64, amount, !4
        v16 = const u64 10, !5
        store v16 to v15, !4
        v17 = get_local ptr b256, address, !6
        v18 = const b256 0x0000000000000000000000000000000000000000000000000000000000000001, !7
        store v18 to v17, !6
        v19 = get_local ptr b256, address, !8
        v20 = load v19
        v21 = call from_0(v20), !9
        v22 = get_local ptr { b256 }, asset, !10
        store v21 to v22, !10
        v23 = get_local ptr b256, address, !11
        v24 = load v23
        v25 = call from_1(v24), !12
        v26 = get_local ptr { b256 }, pool, !13
        store v25 to v26, !13
        v27 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !15
        v28 = const u64 0
        v29 = get_elem_ptr v27, ptr u64, v28, !15
        v30 = const u64 1, !15
        store v30 to v29, !15
        v31 = get_local ptr { b256 }, pool, !16
        v32 = load v31
        v33 = const u64 1
        v34 = const u64 1
        v35 = get_elem_ptr v27, ptr { b256 }, v33, v34, !15
        store v32 to v35, !15
        v36 = load v27
        v37 = get_local ptr { b256 }, asset, !17
        v38 = load v37
        v39 = get_local ptr u64, amount, !18
        v40 = load v39
        v41 = call transfer_2(v36, v38, v40), !19
        v42 = const unit ()
        ret () v42
    }

    pub fn from_0(bits !21: b256) -> { b256 }, !22 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !23
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !23
        v3 = load v0
        ret { b256 } v3
    }

    pub fn from_1(bits !25: b256) -> { b256 }, !26 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !27
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !27
        v3 = load v0
        ret { b256 } v3
    }

    pub fn transfer_2(to !29: { u64, ( { b256 } | { b256 } ) }, asset_id !30: { b256 }, amount !31: u64) -> (), !32 {
        local { u64, ( { b256 } | { b256 } ) } __matched_value_1
        local { b256 } addr
        local { b256 } id

        entry(to: { u64, ( { b256 } | { b256 } ) }, asset_id: { b256 }, amount: u64):
        v0 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !33
        store to to v0, !33
        v1 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !34
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !34
        v4 = load v3
        v5 = const u64 0, !34
        v6 = call eq_3(v4, v5), !35
        cbr v6, block0(), block1(), !35

        block0():
        v7 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !34
        v8 = const u64 1
        v9 = const u64 0
        v10 = get_elem_ptr v7, ptr { b256 }, v8, v9
        v11 = load v10
        v12 = get_local ptr { b256 }, addr, !36
        store v11 to v12, !36
        v13 = get_local ptr { b256 }, addr, !37
        v14 = load v13
        v15 = call transfer_to_address_4(v14, asset_id, amount), !38
        br block5(v15)

        block1():
        v16 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !34
        v17 = const u64 0
        v18 = get_elem_ptr v16, ptr u64, v17, !34
        v19 = load v18
        v20 = const u64 1, !34
        v21 = call eq_3(v19, v20), !39
        cbr v21, block2(), block3(), !39

        block2():
        v22 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !34
        v23 = const u64 1
        v24 = const u64 1
        v25 = get_elem_ptr v22, ptr { b256 }, v23, v24
        v26 = load v25
        v27 = get_local ptr { b256 }, id, !40
        store v26 to v27, !40
        v28 = get_local ptr { b256 }, id, !41
        v29 = load v28
        v30 = call force_transfer_to_contract_15(v29, asset_id, amount), !42
        br block4(v30)

        block3():
        v31 = const u64 14757395258967588866, !33
        revert v31, !33

        block4(v32: ()):
        br block5(v32)

        block5(v33: ()):
        v34 = const unit ()
        ret () v34
    }

    pub fn eq_3(self !44: u64, other !45: u64) -> bool, !46 {
        entry(self: u64, other: u64):
        v0 = cmp eq self other
        ret bool v0
    }

    fn transfer_to_address_4(to !47: { b256 }, asset_id !48: { b256 }, amount !49: u64) -> (), !50 {
        local { u64 } __matched_value_2
        local mut u64 index
        local u64 number_of_outputs

        entry(to: { b256 }, asset_id: { b256 }, amount: u64):
        v0 = get_local ptr u64, index, !51
        v1 = const u64 0, !52
        store v1 to v0, !51
        v2 = call output_count_5(), !53
        v3 = get_local ptr u64, number_of_outputs, !54
        store v2 to v3, !54
        br while()

        while():
        v4 = get_local ptr u64, index, !55
        v5 = load v4
        v6 = get_local ptr u64, number_of_outputs, !56
        v7 = load v6
        v8 = call lt_9(v5, v7), !57
        cbr v8, while_body(), end_while()

        while_break():
        br end_while()

        while_body():
        v9 = get_local ptr u64, index, !58
        v10 = load v9
        v11 = call output_type_10(v10), !59
        v12 = get_local ptr { u64 }, __matched_value_2, !60
        store v11 to v12, !60
        v13 = get_local ptr { u64 }, __matched_value_2, !59
        v14 = const u64 0
        v15 = get_elem_ptr v13, ptr u64, v14, !59
        v16 = load v15
        v17 = const u64 3, !59
        v18 = call eq_3(v16, v17), !61
        cbr v18, block0(), block4(), !61

        block0():
        v19 = get_local ptr u64, index, !62
        v20 = load v19
        v21 = call output_amount_11(v20), !63
        v22 = const u64 0, !64
        v23 = call eq_3(v21, v22), !65
        cbr v23, block1(), block2(), !65

        block1():
        v24 = call bits_13(to), !66
        v25 = get_local ptr u64, index, !67
        v26 = load v25
        v27 = asm(r1: v24, r2: v26, r3: amount, r4: asset_id) {
            tro    r1 r2 r3 r4, !68
        }
        v28 = const unit (), !69
        ret () v28, !69

        block2():
        v29 = const unit ()
        br block3(v29)

        block3(v30: ()):
        br block5(v30)

        block4():
        v31 = const unit ()
        br block5(v31)

        block5(v32: ()):
        v33 = get_local ptr u64, index, !70
        v34 = load v33
        v35 = const u64 1, !71
        v36 = call add_14(v34, v35), !72
        v37 = get_local ptr u64, index, !72
        store v36 to v37, !72
        br while()

        end_while():
        v38 = const u64 18446744073709486081, !74
        v39 = call revert_8(v38), !75
        v40 = const unit ()
        ret () v40
    }

    pub fn output_count_5() -> u64, !77 {
        local { u64 } __matched_value_3

        entry():
        v0 = call tx_type_6(), !78
        v1 = get_local ptr { u64 }, __matched_value_3, !79
        store v0 to v1, !79
        v2 = get_local ptr { u64 }, __matched_value_3, !78
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !78
        v5 = load v4
        v6 = const u64 0, !78
        v7 = call eq_3(v5, v6), !80
        cbr v7, block0(), block1(), !80

        block0():
        v8 = const u64 0, !81
        v9 = gtf v8, 6, !82
        v10 = bitcast v9 to u64, !82
        br block5(v10)

        block1():
        v11 = get_local ptr { u64 }, __matched_value_3, !78
        v12 = const u64 0
        v13 = get_elem_ptr v11, ptr u64, v12, !78
        v14 = load v13
        v15 = const u64 1, !78
        v16 = call eq_3(v14, v15), !83
        cbr v16, block2(), block3(), !83

        block2():
        v17 = const u64 0, !84
        v18 = gtf v17, 260, !85
        v19 = bitcast v18 to u64, !85
        br block4(v19)

        block3():
        v20 = const u64 14757395258967588866, !79
        revert v20, !79

        block4(v21: u64):
        br block5(v21)

        block5(v22: u64):
        ret u64 v22
    }

    pub fn tx_type_6() -> { u64 }, !87 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local u8 __matched_value_1

        entry():
        v0 = const u64 0, !88
        v1 = gtf v0, 1, !89
        v2 = bitcast v1 to u8, !89
        v3 = get_local ptr u8, __matched_value_1, !90
        store v2 to v3, !90
        v4 = get_local ptr u8, __matched_value_1, !89
        v5 = load v4
        v6 = const u8 0, !91
        v7 = call eq_7(v5, v6), !92
        cbr v7, block0(), block1(), !92

        block0():
        v8 = get_local ptr { u64 }, __anon_0, !93
        v9 = const u64 0
        v10 = get_elem_ptr v8, ptr u64, v9, !93
        v11 = const u64 0, !93
        store v11 to v10, !93
        v12 = load v8
        br block5(v12)

        block1():
        v13 = get_local ptr u8, __matched_value_1, !89
        v14 = load v13
        v15 = const u8 1, !94
        v16 = call eq_7(v14, v15), !95
        cbr v16, block2(), block3(), !95

        block2():
        v17 = get_local ptr { u64 }, __anon_1, !93
        v18 = const u64 0
        v19 = get_elem_ptr v17, ptr u64, v18, !93
        v20 = const u64 1, !93
        store v20 to v19, !93
        v21 = load v17
        br block4(v21)

        block3():
        v22 = const u64 0, !96
        v23 = call revert_8(v22), !97
        br block4(v23)

        block4(v24: { u64 }):
        br block5(v24)

        block5(v25: { u64 }):
        ret { u64 } v25
    }

    pub fn eq_7(self !98: u8, other !99: u8) -> bool, !100 {
        entry(self: u8, other: u8):
        v0 = cmp eq self other
        ret bool v0
    }

    pub fn revert_8(code !102: u64) -> never, !103 {
        entry(code: u64):
        revert code, !104
    }

    pub fn lt_9(self !105: u64, other !106: u64) -> bool, !107 {
        entry(self: u64, other: u64):
        v0 = cmp lt self other
        ret bool v0
    }

    pub fn output_type_10(index !108: u64) -> { u64 }, !109 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local { u64 } __anon_3
        local u8 __matched_value_1

        entry(index: u64):
        v0 = gtf index, 768, !110
        v1 = bitcast v0 to u8, !110
        v2 = get_local ptr u8, __matched_value_1, !111
        store v1 to v2, !111
        v3 = get_local ptr u8, __matched_value_1, !110
        v4 = load v3
        v5 = const u8 0, !112
        v6 = call eq_7(v4, v5), !113
        cbr v6, block0(), block1(), !113

        block0():
        v7 = get_local ptr { u64 }, __anon_0, !114
        v8 = const u64 0
        v9 = get_elem_ptr v7, ptr u64, v8, !114
        v10 = const u64 0, !114
        store v10 to v9, !114
        v11 = load v7
        br block11(v11)

        block1():
        v12 = get_local ptr u8, __matched_value_1, !110
        v13 = load v12
        v14 = const u8 1, !115
        v15 = call eq_7(v13, v14), !116
        cbr v15, block2(), block3(), !116

        block2():
        v16 = get_local ptr { u64 }, __anon_1, !114
        v17 = const u64 0
        v18 = get_elem_ptr v16, ptr u64, v17, !114
        v19 = const u64 1, !114
        store v19 to v18, !114
        v20 = load v16
        br block10(v20)

        block3():
        v21 = get_local ptr u8, __matched_value_1, !110
        v22 = load v21
        v23 = const u8 2, !117
        v24 = call eq_7(v22, v23), !118
        cbr v24, block4(), block5(), !118

        block4():
        v25 = get_local ptr { u64 }, __anon_2, !114
        v26 = const u64 0
        v27 = get_elem_ptr v25, ptr u64, v26, !114
        v28 = const u64 2, !114
        store v28 to v27, !114
        v29 = load v25
        br block9(v29)

        block5():
        v30 = get_local ptr u8, __matched_value_1, !110
        v31 = load v30
        v32 = const u8 3, !119
        v33 = call eq_7(v31, v32), !120
        cbr v33, block6(), block7(), !120

        block6():
        v34 = get_local ptr { u64 }, __anon_3, !114
        v35 = const u64 0
        v36 = get_elem_ptr v34, ptr u64, v35, !114
        v37 = const u64 3, !114
        store v37 to v36, !114
        v38 = load v34
        br block8(v38)

        block7():
        v39 = const u64 0, !121
        v40 = call revert_8(v39), !122
        br block8(v40)

        block8(v41: { u64 }):
        br block9(v41)

        block9(v42: { u64 }):
        br block10(v42)

        block10(v43: { u64 }):
        br block11(v43)

        block11(v44: { u64 }):
        ret { u64 } v44
    }

    pub fn output_amount_11(index !123: u64) -> u64, !124 {
        local { u64 } __matched_value_4
        local u64 ptr

        entry(index: u64):
        v0 = call output_type_10(index), !125
        v1 = get_local ptr { u64 }, __matched_value_4, !126
        store v0 to v1, !126
        v2 = get_local ptr { u64 }, __matched_value_4, !125
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !125
        v5 = load v4
        v6 = const u64 0, !125
        v7 = call eq_3(v5, v6), !127
        cbr v7, block0(), block1(), !127

        block0():
        v8 = gtf index, 770, !128
        v9 = bitcast v8 to u64, !128
        br block11(v9)

        block1():
        v10 = get_local ptr { u64 }, __matched_value_4, !125
        v11 = const u64 0
        v12 = get_elem_ptr v10, ptr u64, v11, !125
        v13 = load v12
        v14 = const u64 1, !125
        v15 = call eq_3(v13, v14), !129
        cbr v15, block2(), block3(), !129

        block2():
        v16 = const u64 0, !130
        v17 = call revert_8(v16), !131
        br block10(v17)

        block3():
        v18 = get_local ptr { u64 }, __matched_value_4, !125
        v19 = const u64 0
        v20 = get_elem_ptr v18, ptr u64, v19, !125
        v21 = load v20
        v22 = const u64 2, !125
        v23 = call eq_3(v21, v22), !132
        cbr v23, block4(), block5(), !132

        block4():
        v24 = const u64 0, !133
        br block9(v24)

        block5():
        v25 = get_local ptr { u64 }, __matched_value_4, !125
        v26 = const u64 0
        v27 = get_elem_ptr v25, ptr u64, v26, !125
        v28 = load v27
        v29 = const u64 3, !125
        v30 = call eq_3(v28, v29), !134
        cbr v30, block6(), block7(), !134

        block6():
        v31 = call output_pointer_12(index), !135
        v32 = get_local ptr u64, ptr, !136
        store v31 to v32, !136
        v33 = get_local ptr u64, ptr, !137
        v34 = load v33
        v35 = asm(r1, r2, r3: v34) -> u64 r1, !138 {
            addi   r2 r3 i40, !139
            lw     r1 r2 i0, !140
        }
        br block8(v35)

        block7():
        v36 = const u64 14757395258967588866, !126
        revert v36, !126

        block8(v37: u64):
        br block9(v37)

        block9(v38: u64):
        br block10(v38)

        block10(v39: u64):
        br block11(v39)

        block11(v40: u64):
        ret u64 v40
    }

    pub fn output_pointer_12(index !141: u64) -> u64, !142 {
        local { u64 } __matched_value_2

        entry(index: u64):
        v0 = call tx_type_6(), !143
        v1 = get_local ptr { u64 }, __matched_value_2, !144
        store v0 to v1, !144
        v2 = get_local ptr { u64 }, __matched_value_2, !143
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !143
        v5 = load v4
        v6 = const u64 0, !143
        v7 = call eq_3(v5, v6), !145
        cbr v7, block0(), block1(), !145

        block0():
        v8 = gtf index, 12, !146
        v9 = bitcast v8 to u64, !146
        br block5(v9)

        block1():
        v10 = get_local ptr { u64 }, __matched_value_2, !143
        v11 = const u64 0
        v12 = get_elem_ptr v10, ptr u64, v11, !143
        v13 = load v12
        v14 = const u64 1, !143
        v15 = call eq_3(v13, v14), !147
        cbr v15, block2(), block3(), !147

        block2():
        v16 = gtf index, 265, !148
        v17 = bitcast v16 to u64, !148
        br block4(v17)

        block3():
        v18 = const u64 14757395258967588866, !144
        revert v18, !144

        block4(v19: u64):
        br block5(v19)

        block5(v20: u64):
        ret u64 v20
    }

    pub fn bits_13(self !150: { b256 }) -> b256, !151 {
        entry(self: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !152
        v4 = load v3
        ret b256 v4
    }

    pub fn add_14(self !153: u64, other !154: u64) -> u64, !155 {
        entry(self: u64, other: u64):
        v0 = add self, other
        ret u64 v0
    }

    fn force_transfer_to_contract_15(to !156: { b256 }, asset_id !157: { b256 }, amount !158: u64) -> (), !159 {
        entry(to: { b256 }, asset_id: { b256 }, amount: u64):
        v0 = call bits_16(to), !160
        v1 = asm(r1: amount, r2: asset_id, r3: v0) {
            tr     r3 r1 r2, !161
        }
        v2 = const unit ()
        ret () v2
    }

    pub fn bits_16(self !162: { b256 }) -> b256, !163 {
        entry(self: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !164
        v4 = load v3
        ret b256 v4
    }
}

!0 = "/home/kebradalaonda/p/sway/test/src/e2e_vm_tests/test_programs/should_pass/static_analysis/cei_pattern_violation_in_asm_block_tr/src/main.sw"
!1 = span !0 105 713
!2 = span !0 263 287
!3 = span !0 162 228
!4 = span !0 387 403
!5 = span !0 400 402
!6 = span !0 412 493
!7 = span !0 426 492
!8 = span !0 528 535
!9 = span !0 514 536
!10 = span !0 502 537
!11 = span !0 574 581
!12 = span !0 557 582
!13 = span !0 546 583
!14 = "/home/kebradalaonda/p/sway/sway-lib-std/src/identity.sw"
!15 = span !14 477 548
!16 = span !0 685 689
!17 = span !0 692 697
!18 = span !0 699 705
!19 = span !0 655 706
!20 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset_id.sw"
!21 = span !20 1300 1304
!22 = span !20 1292 1349
!23 = span !20 1330 1343
!24 = "/home/kebradalaonda/p/sway/sway-lib-std/src/contract_id.sw"
!25 = span !24 1321 1325
!26 = span !24 1313 1370
!27 = span !24 1351 1364
!28 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset.sw"
!29 = span !28 3777 3779
!30 = span !28 3791 3799
!31 = span !28 3810 3816
!32 = span !28 3761 4014
!33 = span !28 3829 4011
!34 = span !28 3835 3837
!35 = span !28 3848 3919
!36 = span !28 3866 3870
!37 = span !28 3895 3899
!38 = span !28 3875 3918
!39 = span !28 3928 4005
!40 = span !28 3949 3951
!41 = span !28 3983 3985
!42 = span !28 3956 4004
!43 = "/home/kebradalaonda/p/sway/sway-lib-core/src/ops.sw"
!44 = span !43 12645 12649
!45 = span !43 12651 12656
!46 = span !43 12639 12705
!47 = span !28 5752 5754
!48 = span !28 5765 5773
!49 = span !28 5784 5790
!50 = span !28 5729 6558
!51 = span !28 5877 5895
!52 = span !28 5893 5894
!53 = span !28 6153 6167
!54 = span !28 6129 6168
!55 = span !28 6179 6184
!56 = span !28 6187 6204
!57 = span !28 6179 6204
!58 = span !28 6253 6258
!59 = span !28 6241 6259
!60 = span !28 6215 6482
!61 = span !28 6222 6482
!62 = span !28 6291 6296
!63 = span !28 6277 6297
!64 = span !28 6301 6302
!65 = span !28 6277 6302
!66 = span !28 6329 6338
!67 = span !28 6344 6349
!68 = span !28 6399 6414
!69 = span !28 6451 6457
!70 = span !28 6491 6496
!71 = span !28 6500 6501
!72 = span !28 6491 6501
!73 = "/home/kebradalaonda/p/sway/sway-lib-std/src/error_signals.sw"
!74 = span !73 566 587
!75 = span !28 6514 6555
!76 = "/home/kebradalaonda/p/sway/sway-lib-std/src/outputs.sw"
!77 = span !76 3394 3602
!78 = span !76 3435 3444
!79 = span !76 3429 3600
!80 = span !76 3455 3520
!81 = span !76 3491 3492
!82 = span !76 3478 3519
!83 = span !76 3529 3594
!84 = span !76 3565 3566
!85 = span !76 3552 3593
!86 = "/home/kebradalaonda/p/sway/sway-lib-std/src/tx.sw"
!87 = span !86 2271 2445
!88 = span !86 2327 2328
!89 = span !86 2315 2339
!90 = span !86 2309 2443
!91 = span !86 2350 2353
!92 = span !86 2350 2377
!93 = span !86 1445 1616
!94 = span !86 2386 2389
!95 = span !86 2386 2413
!96 = span !86 2434 2435
!97 = span !86 2427 2436
!98 = span !43 12920 12924
!99 = span !43 12926 12931
!100 = span !43 12914 12980
!101 = "/home/kebradalaonda/p/sway/sway-lib-std/src/revert.sw"
!102 = span !101 669 673
!103 = span !101 655 707
!104 = span !101 691 705
!105 = span !43 15192 15196
!106 = span !43 15198 15203
!107 = span !43 15186 15252
!108 = span !76 1936 1941
!109 = span !76 1917 2165
!110 = span !76 1970 2005
!111 = span !76 1964 2163
!112 = span !76 2016 2019
!113 = span !76 2016 2036
!114 = span !76 956 1170
!115 = span !76 2045 2048
!116 = span !76 2045 2069
!117 = span !76 2078 2081
!118 = span !76 2078 2100
!119 = span !76 2109 2112
!120 = span !76 2109 2133
!121 = span !76 2154 2155
!122 = span !76 2147 2156
!123 = span !76 4512 4517
!124 = span !76 4491 5461
!125 = span !76 4543 4561
!126 = span !76 4537 5459
!127 = span !76 4572 4632
!128 = span !76 4588 4631
!129 = span !76 4641 4671
!130 = span !76 4668 4669
!131 = span !76 4661 4670
!132 = span !76 5018 5038
!133 = span !76 5036 5037
!134 = span !76 5242 5453
!135 = span !76 5286 5307
!136 = span !76 5276 5308
!137 = span !76 5337 5340
!138 = span !76 5321 5442
!139 = span !76 5360 5374
!140 = span !76 5392 5403
!141 = span !76 2742 2747
!142 = span !76 2720 2952
!143 = span !76 2773 2782
!144 = span !76 2767 2950
!145 = span !76 2793 2864
!146 = span !76 2816 2863
!147 = span !76 2873 2944
!148 = span !76 2896 2943
!149 = "/home/kebradalaonda/p/sway/sway-lib-std/src/address.sw"
!150 = span !149 679 683
!151 = span !149 667 718
!152 = span !149 292 302
!153 = span !43 1050 1054
!154 = span !43 1056 1061
!155 = span !43 1043 1111
!156 = span !28 4941 4943
!157 = span !28 4957 4965
!158 = span !28 4976 4982
!159 = span !28 4911 5070
!160 = span !28 5029 5038
!161 = span !28 5050 5061
!162 = span !24 707 711
!163 = span !24 695 746
!164 = span !24 305 315

// IR: [mem2reg] Promotion of local memory to SSA registers
contract {
    pub entry fn deposit<2df2cef7>() -> (), !1 {
        local { b256, u64, u64 } __anon_0
        local b256 __anon_1
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local b256 address
        local u64 amount
        local { b256 } asset
        local { b256 } pool

        entry():
        v0 = get_local ptr { b256, u64, u64 }, __anon_0, !2
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        v3 = const b256 0x3dba0a4455b598b7655a7fb430883d96c9527ef275b49739e7b0ad12f8280eae, !3
        store v3 to v2, !2
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4
        v6 = const u64 770887415, !2
        store v6 to v5, !2
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr u64, v7
        v9 = const u64 0
        store v9 to v8, !2
        v10 = get_local ptr b256, __anon_1
        v11 = const b256 0x0000000000000000000000000000000000000000000000000000000000000000, !2
        store v11 to v10
        v12 = read_register cgas, !2
        v13 = const u64 0, !2
        v14 = contract_call () deposit v0, v13, v10, v12, !2
        v15 = get_local ptr u64, amount, !4
        v16 = get_local ptr b256, address, !5
        v17 = const b256 0x0000000000000000000000000000000000000000000000000000000000000001, !6
        store v17 to v16, !5
        v18 = get_local ptr b256, address, !7
        v19 = load v18
        v20 = call from_0(v19), !8
        v21 = get_local ptr { b256 }, asset, !9
        store v20 to v21, !9
        v22 = get_local ptr b256, address, !10
        v23 = load v22
        v24 = call from_1(v23), !11
        v25 = get_local ptr { b256 }, pool, !12
        store v24 to v25, !12
        v26 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !14
        v27 = const u64 0
        v28 = get_elem_ptr v26, ptr u64, v27, !14
        v29 = const u64 1, !14
        store v29 to v28, !14
        v30 = get_local ptr { b256 }, pool, !15
        v31 = load v30
        v32 = const u64 1
        v33 = const u64 1
        v34 = get_elem_ptr v26, ptr { b256 }, v32, v33, !14
        store v31 to v34, !14
        v35 = load v26
        v36 = get_local ptr { b256 }, asset, !16
        v37 = load v36
        v38 = get_local ptr u64, amount, !17
        v39 = const u64 10, !18
        v40 = call transfer_2(v35, v37, v39), !19
        v41 = const unit ()
        ret () v41
    }

    pub fn from_0(bits !21: b256) -> { b256 }, !22 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !23
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !23
        v3 = load v0
        ret { b256 } v3
    }

    pub fn from_1(bits !25: b256) -> { b256 }, !26 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !27
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !27
        v3 = load v0
        ret { b256 } v3
    }

    pub fn transfer_2(to !29: { u64, ( { b256 } | { b256 } ) }, asset_id !30: { b256 }, amount !31: u64) -> (), !32 {
        local { u64, ( { b256 } | { b256 } ) } __matched_value_1
        local { b256 } addr
        local { b256 } id

        entry(to: { u64, ( { b256 } | { b256 } ) }, asset_id: { b256 }, amount: u64):
        v0 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !33
        store to to v0, !33
        v1 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !34
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !34
        v4 = load v3
        v5 = const u64 0, !34
        v6 = call eq_3(v4, v5), !35
        cbr v6, block0(), block1(), !35

        block0():
        v7 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !34
        v8 = const u64 1
        v9 = const u64 0
        v10 = get_elem_ptr v7, ptr { b256 }, v8, v9
        v11 = load v10
        v12 = get_local ptr { b256 }, addr, !36
        store v11 to v12, !36
        v13 = get_local ptr { b256 }, addr, !37
        v14 = load v13
        v15 = call transfer_to_address_4(v14, asset_id, amount), !38
        br block5(v15)

        block1():
        v16 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !34
        v17 = const u64 0
        v18 = get_elem_ptr v16, ptr u64, v17, !34
        v19 = load v18
        v20 = const u64 1, !34
        v21 = call eq_3(v19, v20), !39
        cbr v21, block2(), block3(), !39

        block2():
        v22 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !34
        v23 = const u64 1
        v24 = const u64 1
        v25 = get_elem_ptr v22, ptr { b256 }, v23, v24
        v26 = load v25
        v27 = get_local ptr { b256 }, id, !40
        store v26 to v27, !40
        v28 = get_local ptr { b256 }, id, !41
        v29 = load v28
        v30 = call force_transfer_to_contract_15(v29, asset_id, amount), !42
        br block4(v30)

        block3():
        v31 = const u64 14757395258967588866, !33
        revert v31, !33

        block4(v32: ()):
        br block5(v32)

        block5(v33: ()):
        v34 = const unit ()
        ret () v34
    }

    pub fn eq_3(self !44: u64, other !45: u64) -> bool, !46 {
        entry(self: u64, other: u64):
        v0 = cmp eq self other
        ret bool v0
    }

    fn transfer_to_address_4(to !47: { b256 }, asset_id !48: { b256 }, amount !49: u64) -> (), !50 {
        local { u64 } __matched_value_2
        local mut u64 index
        local u64 number_of_outputs

        entry(to: { b256 }, asset_id: { b256 }, amount: u64):
        v0 = get_local ptr u64, index, !51
        v1 = call output_count_5(), !52
        v2 = get_local ptr u64, number_of_outputs, !53
        v3 = const u64 0, !54
        br while(v3)

        while(v4: u64):
        v5 = get_local ptr u64, index, !55
        v6 = get_local ptr u64, number_of_outputs, !56
        v7 = call lt_9(v4, v1), !57
        cbr v7, while_body(), end_while()

        while_break():
        br end_while()

        while_body():
        v8 = get_local ptr u64, index, !58
        v9 = call output_type_10(v4), !59
        v10 = get_local ptr { u64 }, __matched_value_2, !60
        store v9 to v10, !60
        v11 = get_local ptr { u64 }, __matched_value_2, !59
        v12 = const u64 0
        v13 = get_elem_ptr v11, ptr u64, v12, !59
        v14 = load v13
        v15 = const u64 3, !59
        v16 = call eq_3(v14, v15), !61
        cbr v16, block0(), block4(), !61

        block0():
        v17 = get_local ptr u64, index, !62
        v18 = call output_amount_11(v4), !63
        v19 = const u64 0, !64
        v20 = call eq_3(v18, v19), !65
        cbr v20, block1(), block2(), !65

        block1():
        v21 = call bits_13(to), !66
        v22 = get_local ptr u64, index, !67
        v23 = asm(r1: v21, r2: v4, r3: amount, r4: asset_id) {
            tro    r1 r2 r3 r4, !68
        }
        v24 = const unit (), !69
        ret () v24, !69

        block2():
        v25 = const unit ()
        br block3(v25)

        block3(v26: ()):
        br block5(v26)

        block4():
        v27 = const unit ()
        br block5(v27)

        block5(v28: ()):
        v29 = get_local ptr u64, index, !70
        v30 = const u64 1, !71
        v31 = call add_14(v4, v30), !72
        v32 = get_local ptr u64, index, !72
        br while(v31)

        end_while():
        v33 = const u64 18446744073709486081, !74
        v34 = call revert_8(v33), !75
        v35 = const unit ()
        ret () v35
    }

    pub fn output_count_5() -> u64, !77 {
        local { u64 } __matched_value_3

        entry():
        v0 = call tx_type_6(), !78
        v1 = get_local ptr { u64 }, __matched_value_3, !79
        store v0 to v1, !79
        v2 = get_local ptr { u64 }, __matched_value_3, !78
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !78
        v5 = load v4
        v6 = const u64 0, !78
        v7 = call eq_3(v5, v6), !80
        cbr v7, block0(), block1(), !80

        block0():
        v8 = const u64 0, !81
        v9 = gtf v8, 6, !82
        v10 = bitcast v9 to u64, !82
        br block5(v10)

        block1():
        v11 = get_local ptr { u64 }, __matched_value_3, !78
        v12 = const u64 0
        v13 = get_elem_ptr v11, ptr u64, v12, !78
        v14 = load v13
        v15 = const u64 1, !78
        v16 = call eq_3(v14, v15), !83
        cbr v16, block2(), block3(), !83

        block2():
        v17 = const u64 0, !84
        v18 = gtf v17, 260, !85
        v19 = bitcast v18 to u64, !85
        br block4(v19)

        block3():
        v20 = const u64 14757395258967588866, !79
        revert v20, !79

        block4(v21: u64):
        br block5(v21)

        block5(v22: u64):
        ret u64 v22
    }

    pub fn tx_type_6() -> { u64 }, !87 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local u8 __matched_value_1

        entry():
        v0 = const u64 0, !88
        v1 = gtf v0, 1, !89
        v2 = bitcast v1 to u8, !89
        v3 = get_local ptr u8, __matched_value_1, !90
        v4 = get_local ptr u8, __matched_value_1, !89
        v5 = const u8 0, !91
        v6 = call eq_7(v2, v5), !92
        cbr v6, block0(), block1(), !92

        block0():
        v7 = get_local ptr { u64 }, __anon_0, !93
        v8 = const u64 0
        v9 = get_elem_ptr v7, ptr u64, v8, !93
        v10 = const u64 0, !93
        store v10 to v9, !93
        v11 = load v7
        br block5(v11)

        block1():
        v12 = get_local ptr u8, __matched_value_1, !89
        v13 = const u8 1, !94
        v14 = call eq_7(v2, v13), !95
        cbr v14, block2(), block3(), !95

        block2():
        v15 = get_local ptr { u64 }, __anon_1, !93
        v16 = const u64 0
        v17 = get_elem_ptr v15, ptr u64, v16, !93
        v18 = const u64 1, !93
        store v18 to v17, !93
        v19 = load v15
        br block4(v19)

        block3():
        v20 = const u64 0, !96
        v21 = call revert_8(v20), !97
        br block4(v21)

        block4(v22: { u64 }):
        br block5(v22)

        block5(v23: { u64 }):
        ret { u64 } v23
    }

    pub fn eq_7(self !98: u8, other !99: u8) -> bool, !100 {
        entry(self: u8, other: u8):
        v0 = cmp eq self other
        ret bool v0
    }

    pub fn revert_8(code !102: u64) -> never, !103 {
        entry(code: u64):
        revert code, !104
    }

    pub fn lt_9(self !105: u64, other !106: u64) -> bool, !107 {
        entry(self: u64, other: u64):
        v0 = cmp lt self other
        ret bool v0
    }

    pub fn output_type_10(index !108: u64) -> { u64 }, !109 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local { u64 } __anon_3
        local u8 __matched_value_1

        entry(index: u64):
        v0 = gtf index, 768, !110
        v1 = bitcast v0 to u8, !110
        v2 = get_local ptr u8, __matched_value_1, !111
        v3 = get_local ptr u8, __matched_value_1, !110
        v4 = const u8 0, !112
        v5 = call eq_7(v1, v4), !113
        cbr v5, block0(), block1(), !113

        block0():
        v6 = get_local ptr { u64 }, __anon_0, !114
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr u64, v7, !114
        v9 = const u64 0, !114
        store v9 to v8, !114
        v10 = load v6
        br block11(v10)

        block1():
        v11 = get_local ptr u8, __matched_value_1, !110
        v12 = const u8 1, !115
        v13 = call eq_7(v1, v12), !116
        cbr v13, block2(), block3(), !116

        block2():
        v14 = get_local ptr { u64 }, __anon_1, !114
        v15 = const u64 0
        v16 = get_elem_ptr v14, ptr u64, v15, !114
        v17 = const u64 1, !114
        store v17 to v16, !114
        v18 = load v14
        br block10(v18)

        block3():
        v19 = get_local ptr u8, __matched_value_1, !110
        v20 = const u8 2, !117
        v21 = call eq_7(v1, v20), !118
        cbr v21, block4(), block5(), !118

        block4():
        v22 = get_local ptr { u64 }, __anon_2, !114
        v23 = const u64 0
        v24 = get_elem_ptr v22, ptr u64, v23, !114
        v25 = const u64 2, !114
        store v25 to v24, !114
        v26 = load v22
        br block9(v26)

        block5():
        v27 = get_local ptr u8, __matched_value_1, !110
        v28 = const u8 3, !119
        v29 = call eq_7(v1, v28), !120
        cbr v29, block6(), block7(), !120

        block6():
        v30 = get_local ptr { u64 }, __anon_3, !114
        v31 = const u64 0
        v32 = get_elem_ptr v30, ptr u64, v31, !114
        v33 = const u64 3, !114
        store v33 to v32, !114
        v34 = load v30
        br block8(v34)

        block7():
        v35 = const u64 0, !121
        v36 = call revert_8(v35), !122
        br block8(v36)

        block8(v37: { u64 }):
        br block9(v37)

        block9(v38: { u64 }):
        br block10(v38)

        block10(v39: { u64 }):
        br block11(v39)

        block11(v40: { u64 }):
        ret { u64 } v40
    }

    pub fn output_amount_11(index !123: u64) -> u64, !124 {
        local { u64 } __matched_value_4
        local u64 ptr

        entry(index: u64):
        v0 = call output_type_10(index), !125
        v1 = get_local ptr { u64 }, __matched_value_4, !126
        store v0 to v1, !126
        v2 = get_local ptr { u64 }, __matched_value_4, !125
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !125
        v5 = load v4
        v6 = const u64 0, !125
        v7 = call eq_3(v5, v6), !127
        cbr v7, block0(), block1(), !127

        block0():
        v8 = gtf index, 770, !128
        v9 = bitcast v8 to u64, !128
        br block11(v9)

        block1():
        v10 = get_local ptr { u64 }, __matched_value_4, !125
        v11 = const u64 0
        v12 = get_elem_ptr v10, ptr u64, v11, !125
        v13 = load v12
        v14 = const u64 1, !125
        v15 = call eq_3(v13, v14), !129
        cbr v15, block2(), block3(), !129

        block2():
        v16 = const u64 0, !130
        v17 = call revert_8(v16), !131
        br block10(v17)

        block3():
        v18 = get_local ptr { u64 }, __matched_value_4, !125
        v19 = const u64 0
        v20 = get_elem_ptr v18, ptr u64, v19, !125
        v21 = load v20
        v22 = const u64 2, !125
        v23 = call eq_3(v21, v22), !132
        cbr v23, block4(), block5(), !132

        block4():
        v24 = const u64 0, !133
        br block9(v24)

        block5():
        v25 = get_local ptr { u64 }, __matched_value_4, !125
        v26 = const u64 0
        v27 = get_elem_ptr v25, ptr u64, v26, !125
        v28 = load v27
        v29 = const u64 3, !125
        v30 = call eq_3(v28, v29), !134
        cbr v30, block6(), block7(), !134

        block6():
        v31 = call output_pointer_12(index), !135
        v32 = get_local ptr u64, ptr, !136
        v33 = get_local ptr u64, ptr, !137
        v34 = asm(r1, r2, r3: v31) -> u64 r1, !138 {
            addi   r2 r3 i40, !139
            lw     r1 r2 i0, !140
        }
        br block8(v34)

        block7():
        v35 = const u64 14757395258967588866, !126
        revert v35, !126

        block8(v36: u64):
        br block9(v36)

        block9(v37: u64):
        br block10(v37)

        block10(v38: u64):
        br block11(v38)

        block11(v39: u64):
        ret u64 v39
    }

    pub fn output_pointer_12(index !141: u64) -> u64, !142 {
        local { u64 } __matched_value_2

        entry(index: u64):
        v0 = call tx_type_6(), !143
        v1 = get_local ptr { u64 }, __matched_value_2, !144
        store v0 to v1, !144
        v2 = get_local ptr { u64 }, __matched_value_2, !143
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !143
        v5 = load v4
        v6 = const u64 0, !143
        v7 = call eq_3(v5, v6), !145
        cbr v7, block0(), block1(), !145

        block0():
        v8 = gtf index, 12, !146
        v9 = bitcast v8 to u64, !146
        br block5(v9)

        block1():
        v10 = get_local ptr { u64 }, __matched_value_2, !143
        v11 = const u64 0
        v12 = get_elem_ptr v10, ptr u64, v11, !143
        v13 = load v12
        v14 = const u64 1, !143
        v15 = call eq_3(v13, v14), !147
        cbr v15, block2(), block3(), !147

        block2():
        v16 = gtf index, 265, !148
        v17 = bitcast v16 to u64, !148
        br block4(v17)

        block3():
        v18 = const u64 14757395258967588866, !144
        revert v18, !144

        block4(v19: u64):
        br block5(v19)

        block5(v20: u64):
        ret u64 v20
    }

    pub fn bits_13(self !150: { b256 }) -> b256, !151 {
        entry(self: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !152
        v4 = load v3
        ret b256 v4
    }

    pub fn add_14(self !153: u64, other !154: u64) -> u64, !155 {
        entry(self: u64, other: u64):
        v0 = add self, other
        ret u64 v0
    }

    fn force_transfer_to_contract_15(to !156: { b256 }, asset_id !157: { b256 }, amount !158: u64) -> (), !159 {
        entry(to: { b256 }, asset_id: { b256 }, amount: u64):
        v0 = call bits_16(to), !160
        v1 = asm(r1: amount, r2: asset_id, r3: v0) {
            tr     r3 r1 r2, !161
        }
        v2 = const unit ()
        ret () v2
    }

    pub fn bits_16(self !162: { b256 }) -> b256, !163 {
        entry(self: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !164
        v4 = load v3
        ret b256 v4
    }
}

!0 = "/home/kebradalaonda/p/sway/test/src/e2e_vm_tests/test_programs/should_pass/static_analysis/cei_pattern_violation_in_asm_block_tr/src/main.sw"
!1 = span !0 105 713
!2 = span !0 263 287
!3 = span !0 162 228
!4 = span !0 387 403
!5 = span !0 412 493
!6 = span !0 426 492
!7 = span !0 528 535
!8 = span !0 514 536
!9 = span !0 502 537
!10 = span !0 574 581
!11 = span !0 557 582
!12 = span !0 546 583
!13 = "/home/kebradalaonda/p/sway/sway-lib-std/src/identity.sw"
!14 = span !13 477 548
!15 = span !0 685 689
!16 = span !0 692 697
!17 = span !0 699 705
!18 = span !0 400 402
!19 = span !0 655 706
!20 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset_id.sw"
!21 = span !20 1300 1304
!22 = span !20 1292 1349
!23 = span !20 1330 1343
!24 = "/home/kebradalaonda/p/sway/sway-lib-std/src/contract_id.sw"
!25 = span !24 1321 1325
!26 = span !24 1313 1370
!27 = span !24 1351 1364
!28 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset.sw"
!29 = span !28 3777 3779
!30 = span !28 3791 3799
!31 = span !28 3810 3816
!32 = span !28 3761 4014
!33 = span !28 3829 4011
!34 = span !28 3835 3837
!35 = span !28 3848 3919
!36 = span !28 3866 3870
!37 = span !28 3895 3899
!38 = span !28 3875 3918
!39 = span !28 3928 4005
!40 = span !28 3949 3951
!41 = span !28 3983 3985
!42 = span !28 3956 4004
!43 = "/home/kebradalaonda/p/sway/sway-lib-core/src/ops.sw"
!44 = span !43 12645 12649
!45 = span !43 12651 12656
!46 = span !43 12639 12705
!47 = span !28 5752 5754
!48 = span !28 5765 5773
!49 = span !28 5784 5790
!50 = span !28 5729 6558
!51 = span !28 5877 5895
!52 = span !28 6153 6167
!53 = span !28 6129 6168
!54 = span !28 5893 5894
!55 = span !28 6179 6184
!56 = span !28 6187 6204
!57 = span !28 6179 6204
!58 = span !28 6253 6258
!59 = span !28 6241 6259
!60 = span !28 6215 6482
!61 = span !28 6222 6482
!62 = span !28 6291 6296
!63 = span !28 6277 6297
!64 = span !28 6301 6302
!65 = span !28 6277 6302
!66 = span !28 6329 6338
!67 = span !28 6344 6349
!68 = span !28 6399 6414
!69 = span !28 6451 6457
!70 = span !28 6491 6496
!71 = span !28 6500 6501
!72 = span !28 6491 6501
!73 = "/home/kebradalaonda/p/sway/sway-lib-std/src/error_signals.sw"
!74 = span !73 566 587
!75 = span !28 6514 6555
!76 = "/home/kebradalaonda/p/sway/sway-lib-std/src/outputs.sw"
!77 = span !76 3394 3602
!78 = span !76 3435 3444
!79 = span !76 3429 3600
!80 = span !76 3455 3520
!81 = span !76 3491 3492
!82 = span !76 3478 3519
!83 = span !76 3529 3594
!84 = span !76 3565 3566
!85 = span !76 3552 3593
!86 = "/home/kebradalaonda/p/sway/sway-lib-std/src/tx.sw"
!87 = span !86 2271 2445
!88 = span !86 2327 2328
!89 = span !86 2315 2339
!90 = span !86 2309 2443
!91 = span !86 2350 2353
!92 = span !86 2350 2377
!93 = span !86 1445 1616
!94 = span !86 2386 2389
!95 = span !86 2386 2413
!96 = span !86 2434 2435
!97 = span !86 2427 2436
!98 = span !43 12920 12924
!99 = span !43 12926 12931
!100 = span !43 12914 12980
!101 = "/home/kebradalaonda/p/sway/sway-lib-std/src/revert.sw"
!102 = span !101 669 673
!103 = span !101 655 707
!104 = span !101 691 705
!105 = span !43 15192 15196
!106 = span !43 15198 15203
!107 = span !43 15186 15252
!108 = span !76 1936 1941
!109 = span !76 1917 2165
!110 = span !76 1970 2005
!111 = span !76 1964 2163
!112 = span !76 2016 2019
!113 = span !76 2016 2036
!114 = span !76 956 1170
!115 = span !76 2045 2048
!116 = span !76 2045 2069
!117 = span !76 2078 2081
!118 = span !76 2078 2100
!119 = span !76 2109 2112
!120 = span !76 2109 2133
!121 = span !76 2154 2155
!122 = span !76 2147 2156
!123 = span !76 4512 4517
!124 = span !76 4491 5461
!125 = span !76 4543 4561
!126 = span !76 4537 5459
!127 = span !76 4572 4632
!128 = span !76 4588 4631
!129 = span !76 4641 4671
!130 = span !76 4668 4669
!131 = span !76 4661 4670
!132 = span !76 5018 5038
!133 = span !76 5036 5037
!134 = span !76 5242 5453
!135 = span !76 5286 5307
!136 = span !76 5276 5308
!137 = span !76 5337 5340
!138 = span !76 5321 5442
!139 = span !76 5360 5374
!140 = span !76 5392 5403
!141 = span !76 2742 2747
!142 = span !76 2720 2952
!143 = span !76 2773 2782
!144 = span !76 2767 2950
!145 = span !76 2793 2864
!146 = span !76 2816 2863
!147 = span !76 2873 2944
!148 = span !76 2896 2943
!149 = "/home/kebradalaonda/p/sway/sway-lib-std/src/address.sw"
!150 = span !149 679 683
!151 = span !149 667 718
!152 = span !149 292 302
!153 = span !43 1050 1054
!154 = span !43 1056 1061
!155 = span !43 1043 1111
!156 = span !28 4941 4943
!157 = span !28 4957 4965
!158 = span !28 4976 4982
!159 = span !28 4911 5070
!160 = span !28 5029 5038
!161 = span !28 5050 5061
!162 = span !24 707 711
!163 = span !24 695 746
!164 = span !24 305 315

// IR: [fn-dedup-release] Function deduplication with metadata ignored
contract {
    pub entry fn deposit<2df2cef7>() -> (), !1 {
        local { b256, u64, u64 } __anon_0
        local b256 __anon_1
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local b256 address
        local u64 amount
        local { b256 } asset
        local { b256 } pool

        entry():
        v0 = get_local ptr { b256, u64, u64 }, __anon_0, !2
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        v3 = const b256 0x3dba0a4455b598b7655a7fb430883d96c9527ef275b49739e7b0ad12f8280eae, !3
        store v3 to v2, !2
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4
        v6 = const u64 770887415, !2
        store v6 to v5, !2
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr u64, v7
        v9 = const u64 0
        store v9 to v8, !2
        v10 = get_local ptr b256, __anon_1
        v11 = const b256 0x0000000000000000000000000000000000000000000000000000000000000000, !2
        store v11 to v10
        v12 = read_register cgas, !2
        v13 = const u64 0, !2
        v14 = contract_call () deposit v0, v13, v10, v12, !2
        v15 = get_local ptr u64, amount, !4
        v16 = get_local ptr b256, address, !5
        v17 = const b256 0x0000000000000000000000000000000000000000000000000000000000000001, !6
        store v17 to v16, !5
        v18 = get_local ptr b256, address, !7
        v19 = load v18
        v20 = call from_0(v19), !8
        v21 = get_local ptr { b256 }, asset, !9
        store v20 to v21, !9
        v22 = get_local ptr b256, address, !10
        v23 = load v22
        v24 = call from_0(v23), !11
        v25 = get_local ptr { b256 }, pool, !12
        store v24 to v25, !12
        v26 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !14
        v27 = const u64 0
        v28 = get_elem_ptr v26, ptr u64, v27, !14
        v29 = const u64 1, !14
        store v29 to v28, !14
        v30 = get_local ptr { b256 }, pool, !15
        v31 = load v30
        v32 = const u64 1
        v33 = const u64 1
        v34 = get_elem_ptr v26, ptr { b256 }, v32, v33, !14
        store v31 to v34, !14
        v35 = load v26
        v36 = get_local ptr { b256 }, asset, !16
        v37 = load v36
        v38 = get_local ptr u64, amount, !17
        v39 = const u64 10, !18
        v40 = call transfer_2(v35, v37, v39), !19
        v41 = const unit ()
        ret () v41
    }

    pub fn from_0(bits !21: b256) -> { b256 }, !22 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !23
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !23
        v3 = load v0
        ret { b256 } v3
    }

    pub fn from_1(bits !25: b256) -> { b256 }, !26 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !27
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !27
        v3 = load v0
        ret { b256 } v3
    }

    pub fn transfer_2(to !29: { u64, ( { b256 } | { b256 } ) }, asset_id !30: { b256 }, amount !31: u64) -> (), !32 {
        local { u64, ( { b256 } | { b256 } ) } __matched_value_1
        local { b256 } addr
        local { b256 } id

        entry(to: { u64, ( { b256 } | { b256 } ) }, asset_id: { b256 }, amount: u64):
        v0 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !33
        store to to v0, !33
        v1 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !34
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !34
        v4 = load v3
        v5 = const u64 0, !34
        v6 = call eq_3(v4, v5), !35
        cbr v6, block0(), block1(), !35

        block0():
        v7 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !34
        v8 = const u64 1
        v9 = const u64 0
        v10 = get_elem_ptr v7, ptr { b256 }, v8, v9
        v11 = load v10
        v12 = get_local ptr { b256 }, addr, !36
        store v11 to v12, !36
        v13 = get_local ptr { b256 }, addr, !37
        v14 = load v13
        v15 = call transfer_to_address_4(v14, asset_id, amount), !38
        br block5(v15)

        block1():
        v16 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !34
        v17 = const u64 0
        v18 = get_elem_ptr v16, ptr u64, v17, !34
        v19 = load v18
        v20 = const u64 1, !34
        v21 = call eq_3(v19, v20), !39
        cbr v21, block2(), block3(), !39

        block2():
        v22 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !34
        v23 = const u64 1
        v24 = const u64 1
        v25 = get_elem_ptr v22, ptr { b256 }, v23, v24
        v26 = load v25
        v27 = get_local ptr { b256 }, id, !40
        store v26 to v27, !40
        v28 = get_local ptr { b256 }, id, !41
        v29 = load v28
        v30 = call force_transfer_to_contract_15(v29, asset_id, amount), !42
        br block4(v30)

        block3():
        v31 = const u64 14757395258967588866, !33
        revert v31, !33

        block4(v32: ()):
        br block5(v32)

        block5(v33: ()):
        v34 = const unit ()
        ret () v34
    }

    pub fn eq_3(self !44: u64, other !45: u64) -> bool, !46 {
        entry(self: u64, other: u64):
        v0 = cmp eq self other
        ret bool v0
    }

    fn transfer_to_address_4(to !47: { b256 }, asset_id !48: { b256 }, amount !49: u64) -> (), !50 {
        local { u64 } __matched_value_2
        local mut u64 index
        local u64 number_of_outputs

        entry(to: { b256 }, asset_id: { b256 }, amount: u64):
        v0 = get_local ptr u64, index, !51
        v1 = call output_count_5(), !52
        v2 = get_local ptr u64, number_of_outputs, !53
        v3 = const u64 0, !54
        br while(v3)

        while(v4: u64):
        v5 = get_local ptr u64, index, !55
        v6 = get_local ptr u64, number_of_outputs, !56
        v7 = call lt_9(v4, v1), !57
        cbr v7, while_body(), end_while()

        while_break():
        br end_while()

        while_body():
        v8 = get_local ptr u64, index, !58
        v9 = call output_type_10(v4), !59
        v10 = get_local ptr { u64 }, __matched_value_2, !60
        store v9 to v10, !60
        v11 = get_local ptr { u64 }, __matched_value_2, !59
        v12 = const u64 0
        v13 = get_elem_ptr v11, ptr u64, v12, !59
        v14 = load v13
        v15 = const u64 3, !59
        v16 = call eq_3(v14, v15), !61
        cbr v16, block0(), block4(), !61

        block0():
        v17 = get_local ptr u64, index, !62
        v18 = call output_amount_11(v4), !63
        v19 = const u64 0, !64
        v20 = call eq_3(v18, v19), !65
        cbr v20, block1(), block2(), !65

        block1():
        v21 = call bits_16(to), !66
        v22 = get_local ptr u64, index, !67
        v23 = asm(r1: v21, r2: v4, r3: amount, r4: asset_id) {
            tro    r1 r2 r3 r4, !68
        }
        v24 = const unit (), !69
        ret () v24, !69

        block2():
        v25 = const unit ()
        br block3(v25)

        block3(v26: ()):
        br block5(v26)

        block4():
        v27 = const unit ()
        br block5(v27)

        block5(v28: ()):
        v29 = get_local ptr u64, index, !70
        v30 = const u64 1, !71
        v31 = call add_14(v4, v30), !72
        v32 = get_local ptr u64, index, !72
        br while(v31)

        end_while():
        v33 = const u64 18446744073709486081, !74
        v34 = call revert_8(v33), !75
        v35 = const unit ()
        ret () v35
    }

    pub fn output_count_5() -> u64, !77 {
        local { u64 } __matched_value_3

        entry():
        v0 = call tx_type_6(), !78
        v1 = get_local ptr { u64 }, __matched_value_3, !79
        store v0 to v1, !79
        v2 = get_local ptr { u64 }, __matched_value_3, !78
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !78
        v5 = load v4
        v6 = const u64 0, !78
        v7 = call eq_3(v5, v6), !80
        cbr v7, block0(), block1(), !80

        block0():
        v8 = const u64 0, !81
        v9 = gtf v8, 6, !82
        v10 = bitcast v9 to u64, !82
        br block5(v10)

        block1():
        v11 = get_local ptr { u64 }, __matched_value_3, !78
        v12 = const u64 0
        v13 = get_elem_ptr v11, ptr u64, v12, !78
        v14 = load v13
        v15 = const u64 1, !78
        v16 = call eq_3(v14, v15), !83
        cbr v16, block2(), block3(), !83

        block2():
        v17 = const u64 0, !84
        v18 = gtf v17, 260, !85
        v19 = bitcast v18 to u64, !85
        br block4(v19)

        block3():
        v20 = const u64 14757395258967588866, !79
        revert v20, !79

        block4(v21: u64):
        br block5(v21)

        block5(v22: u64):
        ret u64 v22
    }

    pub fn tx_type_6() -> { u64 }, !87 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local u8 __matched_value_1

        entry():
        v0 = const u64 0, !88
        v1 = gtf v0, 1, !89
        v2 = bitcast v1 to u8, !89
        v3 = get_local ptr u8, __matched_value_1, !90
        v4 = get_local ptr u8, __matched_value_1, !89
        v5 = const u8 0, !91
        v6 = call eq_7(v2, v5), !92
        cbr v6, block0(), block1(), !92

        block0():
        v7 = get_local ptr { u64 }, __anon_0, !93
        v8 = const u64 0
        v9 = get_elem_ptr v7, ptr u64, v8, !93
        v10 = const u64 0, !93
        store v10 to v9, !93
        v11 = load v7
        br block5(v11)

        block1():
        v12 = get_local ptr u8, __matched_value_1, !89
        v13 = const u8 1, !94
        v14 = call eq_7(v2, v13), !95
        cbr v14, block2(), block3(), !95

        block2():
        v15 = get_local ptr { u64 }, __anon_1, !93
        v16 = const u64 0
        v17 = get_elem_ptr v15, ptr u64, v16, !93
        v18 = const u64 1, !93
        store v18 to v17, !93
        v19 = load v15
        br block4(v19)

        block3():
        v20 = const u64 0, !96
        v21 = call revert_8(v20), !97
        br block4(v21)

        block4(v22: { u64 }):
        br block5(v22)

        block5(v23: { u64 }):
        ret { u64 } v23
    }

    pub fn eq_7(self !98: u8, other !99: u8) -> bool, !100 {
        entry(self: u8, other: u8):
        v0 = cmp eq self other
        ret bool v0
    }

    pub fn revert_8(code !102: u64) -> never, !103 {
        entry(code: u64):
        revert code, !104
    }

    pub fn lt_9(self !105: u64, other !106: u64) -> bool, !107 {
        entry(self: u64, other: u64):
        v0 = cmp lt self other
        ret bool v0
    }

    pub fn output_type_10(index !108: u64) -> { u64 }, !109 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local { u64 } __anon_3
        local u8 __matched_value_1

        entry(index: u64):
        v0 = gtf index, 768, !110
        v1 = bitcast v0 to u8, !110
        v2 = get_local ptr u8, __matched_value_1, !111
        v3 = get_local ptr u8, __matched_value_1, !110
        v4 = const u8 0, !112
        v5 = call eq_7(v1, v4), !113
        cbr v5, block0(), block1(), !113

        block0():
        v6 = get_local ptr { u64 }, __anon_0, !114
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr u64, v7, !114
        v9 = const u64 0, !114
        store v9 to v8, !114
        v10 = load v6
        br block11(v10)

        block1():
        v11 = get_local ptr u8, __matched_value_1, !110
        v12 = const u8 1, !115
        v13 = call eq_7(v1, v12), !116
        cbr v13, block2(), block3(), !116

        block2():
        v14 = get_local ptr { u64 }, __anon_1, !114
        v15 = const u64 0
        v16 = get_elem_ptr v14, ptr u64, v15, !114
        v17 = const u64 1, !114
        store v17 to v16, !114
        v18 = load v14
        br block10(v18)

        block3():
        v19 = get_local ptr u8, __matched_value_1, !110
        v20 = const u8 2, !117
        v21 = call eq_7(v1, v20), !118
        cbr v21, block4(), block5(), !118

        block4():
        v22 = get_local ptr { u64 }, __anon_2, !114
        v23 = const u64 0
        v24 = get_elem_ptr v22, ptr u64, v23, !114
        v25 = const u64 2, !114
        store v25 to v24, !114
        v26 = load v22
        br block9(v26)

        block5():
        v27 = get_local ptr u8, __matched_value_1, !110
        v28 = const u8 3, !119
        v29 = call eq_7(v1, v28), !120
        cbr v29, block6(), block7(), !120

        block6():
        v30 = get_local ptr { u64 }, __anon_3, !114
        v31 = const u64 0
        v32 = get_elem_ptr v30, ptr u64, v31, !114
        v33 = const u64 3, !114
        store v33 to v32, !114
        v34 = load v30
        br block8(v34)

        block7():
        v35 = const u64 0, !121
        v36 = call revert_8(v35), !122
        br block8(v36)

        block8(v37: { u64 }):
        br block9(v37)

        block9(v38: { u64 }):
        br block10(v38)

        block10(v39: { u64 }):
        br block11(v39)

        block11(v40: { u64 }):
        ret { u64 } v40
    }

    pub fn output_amount_11(index !123: u64) -> u64, !124 {
        local { u64 } __matched_value_4
        local u64 ptr

        entry(index: u64):
        v0 = call output_type_10(index), !125
        v1 = get_local ptr { u64 }, __matched_value_4, !126
        store v0 to v1, !126
        v2 = get_local ptr { u64 }, __matched_value_4, !125
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !125
        v5 = load v4
        v6 = const u64 0, !125
        v7 = call eq_3(v5, v6), !127
        cbr v7, block0(), block1(), !127

        block0():
        v8 = gtf index, 770, !128
        v9 = bitcast v8 to u64, !128
        br block11(v9)

        block1():
        v10 = get_local ptr { u64 }, __matched_value_4, !125
        v11 = const u64 0
        v12 = get_elem_ptr v10, ptr u64, v11, !125
        v13 = load v12
        v14 = const u64 1, !125
        v15 = call eq_3(v13, v14), !129
        cbr v15, block2(), block3(), !129

        block2():
        v16 = const u64 0, !130
        v17 = call revert_8(v16), !131
        br block10(v17)

        block3():
        v18 = get_local ptr { u64 }, __matched_value_4, !125
        v19 = const u64 0
        v20 = get_elem_ptr v18, ptr u64, v19, !125
        v21 = load v20
        v22 = const u64 2, !125
        v23 = call eq_3(v21, v22), !132
        cbr v23, block4(), block5(), !132

        block4():
        v24 = const u64 0, !133
        br block9(v24)

        block5():
        v25 = get_local ptr { u64 }, __matched_value_4, !125
        v26 = const u64 0
        v27 = get_elem_ptr v25, ptr u64, v26, !125
        v28 = load v27
        v29 = const u64 3, !125
        v30 = call eq_3(v28, v29), !134
        cbr v30, block6(), block7(), !134

        block6():
        v31 = call output_pointer_12(index), !135
        v32 = get_local ptr u64, ptr, !136
        v33 = get_local ptr u64, ptr, !137
        v34 = asm(r1, r2, r3: v31) -> u64 r1, !138 {
            addi   r2 r3 i40, !139
            lw     r1 r2 i0, !140
        }
        br block8(v34)

        block7():
        v35 = const u64 14757395258967588866, !126
        revert v35, !126

        block8(v36: u64):
        br block9(v36)

        block9(v37: u64):
        br block10(v37)

        block10(v38: u64):
        br block11(v38)

        block11(v39: u64):
        ret u64 v39
    }

    pub fn output_pointer_12(index !141: u64) -> u64, !142 {
        local { u64 } __matched_value_2

        entry(index: u64):
        v0 = call tx_type_6(), !143
        v1 = get_local ptr { u64 }, __matched_value_2, !144
        store v0 to v1, !144
        v2 = get_local ptr { u64 }, __matched_value_2, !143
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !143
        v5 = load v4
        v6 = const u64 0, !143
        v7 = call eq_3(v5, v6), !145
        cbr v7, block0(), block1(), !145

        block0():
        v8 = gtf index, 12, !146
        v9 = bitcast v8 to u64, !146
        br block5(v9)

        block1():
        v10 = get_local ptr { u64 }, __matched_value_2, !143
        v11 = const u64 0
        v12 = get_elem_ptr v10, ptr u64, v11, !143
        v13 = load v12
        v14 = const u64 1, !143
        v15 = call eq_3(v13, v14), !147
        cbr v15, block2(), block3(), !147

        block2():
        v16 = gtf index, 265, !148
        v17 = bitcast v16 to u64, !148
        br block4(v17)

        block3():
        v18 = const u64 14757395258967588866, !144
        revert v18, !144

        block4(v19: u64):
        br block5(v19)

        block5(v20: u64):
        ret u64 v20
    }

    pub fn bits_13(self !150: { b256 }) -> b256, !151 {
        entry(self: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !152
        v4 = load v3
        ret b256 v4
    }

    pub fn add_14(self !153: u64, other !154: u64) -> u64, !155 {
        entry(self: u64, other: u64):
        v0 = add self, other
        ret u64 v0
    }

    fn force_transfer_to_contract_15(to !156: { b256 }, asset_id !157: { b256 }, amount !158: u64) -> (), !159 {
        entry(to: { b256 }, asset_id: { b256 }, amount: u64):
        v0 = call bits_16(to), !160
        v1 = asm(r1: amount, r2: asset_id, r3: v0) {
            tr     r3 r1 r2, !161
        }
        v2 = const unit ()
        ret () v2
    }

    pub fn bits_16(self !162: { b256 }) -> b256, !163 {
        entry(self: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !164
        v4 = load v3
        ret b256 v4
    }
}

!0 = "/home/kebradalaonda/p/sway/test/src/e2e_vm_tests/test_programs/should_pass/static_analysis/cei_pattern_violation_in_asm_block_tr/src/main.sw"
!1 = span !0 105 713
!2 = span !0 263 287
!3 = span !0 162 228
!4 = span !0 387 403
!5 = span !0 412 493
!6 = span !0 426 492
!7 = span !0 528 535
!8 = span !0 514 536
!9 = span !0 502 537
!10 = span !0 574 581
!11 = span !0 557 582
!12 = span !0 546 583
!13 = "/home/kebradalaonda/p/sway/sway-lib-std/src/identity.sw"
!14 = span !13 477 548
!15 = span !0 685 689
!16 = span !0 692 697
!17 = span !0 699 705
!18 = span !0 400 402
!19 = span !0 655 706
!20 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset_id.sw"
!21 = span !20 1300 1304
!22 = span !20 1292 1349
!23 = span !20 1330 1343
!24 = "/home/kebradalaonda/p/sway/sway-lib-std/src/contract_id.sw"
!25 = span !24 1321 1325
!26 = span !24 1313 1370
!27 = span !24 1351 1364
!28 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset.sw"
!29 = span !28 3777 3779
!30 = span !28 3791 3799
!31 = span !28 3810 3816
!32 = span !28 3761 4014
!33 = span !28 3829 4011
!34 = span !28 3835 3837
!35 = span !28 3848 3919
!36 = span !28 3866 3870
!37 = span !28 3895 3899
!38 = span !28 3875 3918
!39 = span !28 3928 4005
!40 = span !28 3949 3951
!41 = span !28 3983 3985
!42 = span !28 3956 4004
!43 = "/home/kebradalaonda/p/sway/sway-lib-core/src/ops.sw"
!44 = span !43 12645 12649
!45 = span !43 12651 12656
!46 = span !43 12639 12705
!47 = span !28 5752 5754
!48 = span !28 5765 5773
!49 = span !28 5784 5790
!50 = span !28 5729 6558
!51 = span !28 5877 5895
!52 = span !28 6153 6167
!53 = span !28 6129 6168
!54 = span !28 5893 5894
!55 = span !28 6179 6184
!56 = span !28 6187 6204
!57 = span !28 6179 6204
!58 = span !28 6253 6258
!59 = span !28 6241 6259
!60 = span !28 6215 6482
!61 = span !28 6222 6482
!62 = span !28 6291 6296
!63 = span !28 6277 6297
!64 = span !28 6301 6302
!65 = span !28 6277 6302
!66 = span !28 6329 6338
!67 = span !28 6344 6349
!68 = span !28 6399 6414
!69 = span !28 6451 6457
!70 = span !28 6491 6496
!71 = span !28 6500 6501
!72 = span !28 6491 6501
!73 = "/home/kebradalaonda/p/sway/sway-lib-std/src/error_signals.sw"
!74 = span !73 566 587
!75 = span !28 6514 6555
!76 = "/home/kebradalaonda/p/sway/sway-lib-std/src/outputs.sw"
!77 = span !76 3394 3602
!78 = span !76 3435 3444
!79 = span !76 3429 3600
!80 = span !76 3455 3520
!81 = span !76 3491 3492
!82 = span !76 3478 3519
!83 = span !76 3529 3594
!84 = span !76 3565 3566
!85 = span !76 3552 3593
!86 = "/home/kebradalaonda/p/sway/sway-lib-std/src/tx.sw"
!87 = span !86 2271 2445
!88 = span !86 2327 2328
!89 = span !86 2315 2339
!90 = span !86 2309 2443
!91 = span !86 2350 2353
!92 = span !86 2350 2377
!93 = span !86 1445 1616
!94 = span !86 2386 2389
!95 = span !86 2386 2413
!96 = span !86 2434 2435
!97 = span !86 2427 2436
!98 = span !43 12920 12924
!99 = span !43 12926 12931
!100 = span !43 12914 12980
!101 = "/home/kebradalaonda/p/sway/sway-lib-std/src/revert.sw"
!102 = span !101 669 673
!103 = span !101 655 707
!104 = span !101 691 705
!105 = span !43 15192 15196
!106 = span !43 15198 15203
!107 = span !43 15186 15252
!108 = span !76 1936 1941
!109 = span !76 1917 2165
!110 = span !76 1970 2005
!111 = span !76 1964 2163
!112 = span !76 2016 2019
!113 = span !76 2016 2036
!114 = span !76 956 1170
!115 = span !76 2045 2048
!116 = span !76 2045 2069
!117 = span !76 2078 2081
!118 = span !76 2078 2100
!119 = span !76 2109 2112
!120 = span !76 2109 2133
!121 = span !76 2154 2155
!122 = span !76 2147 2156
!123 = span !76 4512 4517
!124 = span !76 4491 5461
!125 = span !76 4543 4561
!126 = span !76 4537 5459
!127 = span !76 4572 4632
!128 = span !76 4588 4631
!129 = span !76 4641 4671
!130 = span !76 4668 4669
!131 = span !76 4661 4670
!132 = span !76 5018 5038
!133 = span !76 5036 5037
!134 = span !76 5242 5453
!135 = span !76 5286 5307
!136 = span !76 5276 5308
!137 = span !76 5337 5340
!138 = span !76 5321 5442
!139 = span !76 5360 5374
!140 = span !76 5392 5403
!141 = span !76 2742 2747
!142 = span !76 2720 2952
!143 = span !76 2773 2782
!144 = span !76 2767 2950
!145 = span !76 2793 2864
!146 = span !76 2816 2863
!147 = span !76 2873 2944
!148 = span !76 2896 2943
!149 = "/home/kebradalaonda/p/sway/sway-lib-std/src/address.sw"
!150 = span !149 679 683
!151 = span !149 667 718
!152 = span !149 292 302
!153 = span !43 1050 1054
!154 = span !43 1056 1061
!155 = span !43 1043 1111
!156 = span !28 4941 4943
!157 = span !28 4957 4965
!158 = span !28 4976 4982
!159 = span !28 4911 5070
!160 = span !28 5029 5038
!161 = span !28 5050 5061
!162 = span !24 707 711
!163 = span !24 695 746
!164 = span !24 305 315

// IR: [inline] Function inlining
contract {
    pub entry fn deposit<2df2cef7>() -> (), !1 {
        local { b256, u64, u64 } __anon_0
        local b256 __anon_1
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64, ( { b256 } | { b256 } ) } __matched_value_1
        local { u64 } __matched_value_2
        local { u64 } __matched_value_20
        local { u64 } __matched_value_3
        local { u64 } __matched_value_4
        local { b256 } addr
        local b256 address
        local u64 amount
        local { b256 } asset
        local { b256 } id
        local mut u64 index
        local u64 number_of_outputs
        local { b256 } pool
        local u64 ptr

        entry():
        v0 = get_local ptr { b256, u64, u64 }, __anon_0, !2
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        v3 = const b256 0x3dba0a4455b598b7655a7fb430883d96c9527ef275b49739e7b0ad12f8280eae, !3
        store v3 to v2, !2
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4
        v6 = const u64 770887415, !2
        store v6 to v5, !2
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr u64, v7
        v9 = const u64 0
        store v9 to v8, !2
        v10 = get_local ptr b256, __anon_1
        v11 = const b256 0x0000000000000000000000000000000000000000000000000000000000000000, !2
        store v11 to v10
        v12 = read_register cgas, !2
        v13 = const u64 0, !2
        v14 = contract_call () deposit v0, v13, v10, v12, !2
        v15 = get_local ptr u64, amount, !4
        v16 = get_local ptr b256, address, !5
        v17 = const b256 0x0000000000000000000000000000000000000000000000000000000000000001, !6
        store v17 to v16, !5
        v18 = get_local ptr b256, address, !7
        v19 = load v18
        v20 = call from_0(v19), !8
        v21 = get_local ptr { b256 }, asset, !9
        store v20 to v21, !9
        v22 = get_local ptr b256, address, !10
        v23 = load v22
        v24 = call from_0(v23), !11
        v25 = get_local ptr { b256 }, pool, !12
        store v24 to v25, !12
        v26 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !14
        v27 = const u64 0
        v28 = get_elem_ptr v26, ptr u64, v27, !14
        v29 = const u64 1, !14
        store v29 to v28, !14
        v30 = get_local ptr { b256 }, pool, !15
        v31 = load v30
        v32 = const u64 1
        v33 = const u64 1
        v34 = get_elem_ptr v26, ptr { b256 }, v32, v33, !14
        store v31 to v34, !14
        v35 = load v26
        v36 = get_local ptr { b256 }, asset, !16
        v37 = load v36
        v38 = get_local ptr u64, amount, !17
        v39 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !21
        store v35 to v39, !22
        v40 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !24
        v41 = const u64 0
        v42 = get_elem_ptr v40, ptr u64, v41, !25
        v43 = load v42, !18
        v44 = const u64 0, !23
        v45 = cmp eq v43 v44, !27
        br transfer_2_block6(v45), !28

        transfer_2_block6(v46: bool):
        cbr v46, transfer_2_block0(), transfer_2_block1(), !29

        transfer_2_block0():
        v47 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !30
        v48 = const u64 1
        v49 = const u64 0
        v50 = get_elem_ptr v47, ptr { b256 }, v48, v49, !18
        v51 = load v50, !18
        v52 = get_local ptr { b256 }, addr, !32
        store v51 to v52, !33
        v53 = get_local ptr { b256 }, addr, !35
        v54 = load v53, !18
        v55 = get_local ptr u64, index, !38
        v56 = call tx_type_6(), !42
        v57 = get_local ptr { u64 }, __matched_value_3, !44
        store v56 to v57, !45
        v58 = get_local ptr { u64 }, __matched_value_3, !46
        v59 = const u64 0
        v60 = get_elem_ptr v58, ptr u64, v59, !47
        v61 = load v60, !48
        v62 = const u64 0, !41
        v63 = cmp eq v61 v62, !50
        br transfer_2_transfer_to_address_4_output_count_5_block6(v63), !51

        transfer_2_transfer_to_address_4_output_count_5_block6(v64: bool):
        cbr v64, transfer_2_transfer_to_address_4_output_count_5_block0(), transfer_2_transfer_to_address_4_output_count_5_block1(), !52

        transfer_2_transfer_to_address_4_output_count_5_block0():
        v65 = const u64 0, !53
        v66 = gtf v65, 6, !55
        v67 = bitcast v66 to u64, !56
        br transfer_2_transfer_to_address_4_output_count_5_block5(v67), !57

        transfer_2_transfer_to_address_4_output_count_5_block1():
        v68 = get_local ptr { u64 }, __matched_value_3, !58
        v69 = const u64 0
        v70 = get_elem_ptr v68, ptr u64, v69, !59
        v71 = load v70, !60
        v72 = const u64 1, !41
        v73 = cmp eq v71 v72, !62
        br transfer_2_transfer_to_address_4_output_count_5_block7(v73), !63

        transfer_2_transfer_to_address_4_output_count_5_block7(v74: bool):
        cbr v74, transfer_2_transfer_to_address_4_output_count_5_block2(), transfer_2_transfer_to_address_4_output_count_5_block3(), !64

        transfer_2_transfer_to_address_4_output_count_5_block2():
        v75 = const u64 0, !65
        v76 = gtf v75, 260, !67
        v77 = bitcast v76 to u64, !68
        br transfer_2_transfer_to_address_4_output_count_5_block4(v77), !69

        transfer_2_transfer_to_address_4_output_count_5_block3():
        v78 = const u64 14757395258967588866, !43
        revert v78, !70

        transfer_2_transfer_to_address_4_output_count_5_block4(v79: u64):
        br transfer_2_transfer_to_address_4_output_count_5_block5(v79), !71

        transfer_2_transfer_to_address_4_output_count_5_block5(v80: u64):
        br transfer_2_transfer_to_address_4_block6(v80), !72

        transfer_2_transfer_to_address_4_block6(v81: u64):
        v82 = get_local ptr u64, number_of_outputs, !74
        v83 = const u64 0, !75
        br transfer_2_transfer_to_address_4_while(v83), !76

        transfer_2_transfer_to_address_4_while(v84: u64):
        v85 = get_local ptr u64, index, !78
        v86 = get_local ptr u64, number_of_outputs, !80
        v87 = cmp lt v84 v81, !82
        br transfer_2_transfer_to_address_4_block7(v87), !83

        transfer_2_transfer_to_address_4_block7(v88: bool):
        cbr v88, transfer_2_transfer_to_address_4_while_body(), transfer_2_transfer_to_address_4_end_while(), !84

        transfer_2_transfer_to_address_4_while_break():
        br transfer_2_transfer_to_address_4_end_while(), !85

        transfer_2_transfer_to_address_4_while_body():
        v89 = get_local ptr u64, index, !87
        v90 = call output_type_10(v84), !89
        v91 = get_local ptr { u64 }, __matched_value_2, !91
        store v90 to v91, !92
        v92 = get_local ptr { u64 }, __matched_value_2, !93
        v93 = const u64 0
        v94 = get_elem_ptr v92, ptr u64, v93, !94
        v95 = load v94, !95
        v96 = const u64 3, !88
        v97 = cmp eq v95 v96, !97
        br transfer_2_transfer_to_address_4_block8(v97), !98

        transfer_2_transfer_to_address_4_block8(v98: bool):
        cbr v98, transfer_2_transfer_to_address_4_block0(), transfer_2_transfer_to_address_4_block4(), !99

        transfer_2_transfer_to_address_4_block0():
        v99 = get_local ptr u64, index, !101
        v100 = call output_type_10(v84), !104
        v101 = get_local ptr { u64 }, __matched_value_4, !106
        store v100 to v101, !107
        v102 = get_local ptr { u64 }, __matched_value_4, !108
        v103 = const u64 0
        v104 = get_elem_ptr v102, ptr u64, v103, !109
        v105 = load v104, !110
        v106 = const u64 0, !103
        v107 = cmp eq v105 v106, !112
        br transfer_2_transfer_to_address_4_output_amount_11_block12(v107), !113

        transfer_2_transfer_to_address_4_output_amount_11_block12(v108: bool):
        cbr v108, transfer_2_transfer_to_address_4_output_amount_11_block0(), transfer_2_transfer_to_address_4_output_amount_11_block1(), !114

        transfer_2_transfer_to_address_4_output_amount_11_block0():
        v109 = gtf v84, 770, !116
        v110 = bitcast v109 to u64, !117
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v110), !118

        transfer_2_transfer_to_address_4_output_amount_11_block1():
        v111 = get_local ptr { u64 }, __matched_value_4, !119
        v112 = const u64 0
        v113 = get_elem_ptr v111, ptr u64, v112, !120
        v114 = load v113, !121
        v115 = const u64 1, !103
        v116 = cmp eq v114 v115, !123
        br transfer_2_transfer_to_address_4_output_amount_11_block13(v116), !124

        transfer_2_transfer_to_address_4_output_amount_11_block13(v117: bool):
        cbr v117, transfer_2_transfer_to_address_4_output_amount_11_block2(), transfer_2_transfer_to_address_4_output_amount_11_block3(), !125

        transfer_2_transfer_to_address_4_output_amount_11_block2():
        v118 = const u64 0, !126
        revert v118, !130

        transfer_2_transfer_to_address_4_output_amount_11_block14(v119: never):
        br transfer_2_transfer_to_address_4_output_amount_11_block10(v119), !131

        transfer_2_transfer_to_address_4_output_amount_11_block3():
        v120 = get_local ptr { u64 }, __matched_value_4, !132
        v121 = const u64 0
        v122 = get_elem_ptr v120, ptr u64, v121, !133
        v123 = load v122, !134
        v124 = const u64 2, !103
        v125 = cmp eq v123 v124, !136
        br transfer_2_transfer_to_address_4_output_amount_11_block15(v125), !137

        transfer_2_transfer_to_address_4_output_amount_11_block15(v126: bool):
        cbr v126, transfer_2_transfer_to_address_4_output_amount_11_block4(), transfer_2_transfer_to_address_4_output_amount_11_block5(), !138

        transfer_2_transfer_to_address_4_output_amount_11_block4():
        v127 = const u64 0, !139
        br transfer_2_transfer_to_address_4_output_amount_11_block9(v127), !140

        transfer_2_transfer_to_address_4_output_amount_11_block5():
        v128 = get_local ptr { u64 }, __matched_value_4, !141
        v129 = const u64 0
        v130 = get_elem_ptr v128, ptr u64, v129, !142
        v131 = load v130, !143
        v132 = const u64 3, !103
        v133 = cmp eq v131 v132, !145
        br transfer_2_transfer_to_address_4_output_amount_11_block16(v133), !146

        transfer_2_transfer_to_address_4_output_amount_11_block16(v134: bool):
        cbr v134, transfer_2_transfer_to_address_4_output_amount_11_block6(), transfer_2_transfer_to_address_4_output_amount_11_block7(), !147

        transfer_2_transfer_to_address_4_output_amount_11_block6():
        v135 = call tx_type_6(), !150
        v136 = get_local ptr { u64 }, __matched_value_20, !152
        store v135 to v136, !153
        v137 = get_local ptr { u64 }, __matched_value_20, !154
        v138 = const u64 0
        v139 = get_elem_ptr v137, ptr u64, v138, !155
        v140 = load v139, !156
        v141 = const u64 0, !149
        v142 = cmp eq v140 v141, !158
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block6(v142), !159

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block6(v143: bool):
        cbr v143, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1(), !160

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0():
        v144 = gtf v84, 12, !162
        v145 = bitcast v144 to u64, !163
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v145), !164

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1():
        v146 = get_local ptr { u64 }, __matched_value_20, !165
        v147 = const u64 0
        v148 = get_elem_ptr v146, ptr u64, v147, !166
        v149 = load v148, !167
        v150 = const u64 1, !149
        v151 = cmp eq v149 v150, !169
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block7(v151), !170

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block7(v152: bool):
        cbr v152, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3(), !171

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2():
        v153 = gtf v84, 265, !173
        v154 = bitcast v153 to u64, !174
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block4(v154), !175

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3():
        v155 = const u64 14757395258967588866, !151
        revert v155, !176

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block4(v156: u64):
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v156), !177

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v157: u64):
        br transfer_2_transfer_to_address_4_output_amount_11_block17(v157), !178

        transfer_2_transfer_to_address_4_output_amount_11_block17(v158: u64):
        v159 = get_local ptr u64, ptr, !180
        v160 = get_local ptr u64, ptr, !182
        v161 = asm(r1, r2, r3: v158) -> u64 r1, !184 {
            addi   r2 r3 i40, !185
            lw     r1 r2 i0, !186
        }
        br transfer_2_transfer_to_address_4_output_amount_11_block8(v161), !187

        transfer_2_transfer_to_address_4_output_amount_11_block7():
        v162 = const u64 14757395258967588866, !105
        revert v162, !188

        transfer_2_transfer_to_address_4_output_amount_11_block8(v163: u64):
        br transfer_2_transfer_to_address_4_output_amount_11_block9(v163), !189

        transfer_2_transfer_to_address_4_output_amount_11_block9(v164: u64):
        br transfer_2_transfer_to_address_4_output_amount_11_block10(v164), !190

        transfer_2_transfer_to_address_4_output_amount_11_block10(v165: u64):
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v165), !191

        transfer_2_transfer_to_address_4_output_amount_11_block11(v166: u64):
        br transfer_2_transfer_to_address_4_block9(v166), !192

        transfer_2_transfer_to_address_4_block9(v167: u64):
        v168 = const u64 0, !193
        v169 = cmp eq v167 v168, !195
        br transfer_2_transfer_to_address_4_block10(v169), !196

        transfer_2_transfer_to_address_4_block10(v170: bool):
        cbr v170, transfer_2_transfer_to_address_4_block1(), transfer_2_transfer_to_address_4_block2(), !197

        transfer_2_transfer_to_address_4_block1():
        v171 = call bits_16(v54), !199
        v172 = get_local ptr u64, index, !201
        v173 = const u64 10, !202
        v174 = asm(r1: v171, r2: v84, r3: v173, r4: v37) {
            tro    r1 r2 r3 r4, !203
        }
        v175 = const unit (), !204
        br transfer_2_block7(v175), !205

        transfer_2_transfer_to_address_4_block2():
        v176 = const unit ()
        br transfer_2_transfer_to_address_4_block3(v176), !206

        transfer_2_transfer_to_address_4_block3(v177: ()):
        br transfer_2_transfer_to_address_4_block5(v177), !207

        transfer_2_transfer_to_address_4_block4():
        v178 = const unit ()
        br transfer_2_transfer_to_address_4_block5(v178), !208

        transfer_2_transfer_to_address_4_block5(v179: ()):
        v180 = get_local ptr u64, index, !210
        v181 = const u64 1, !211
        v182 = add v84, v181, !213
        br transfer_2_transfer_to_address_4_block11(v182), !214

        transfer_2_transfer_to_address_4_block11(v183: u64):
        v184 = get_local ptr u64, index, !215
        br transfer_2_transfer_to_address_4_while(v183), !216

        transfer_2_transfer_to_address_4_end_while():
        v185 = const u64 18446744073709486081, !218
        revert v185, !220

        transfer_2_transfer_to_address_4_block12(v186: never):
        v187 = const unit ()
        br transfer_2_block7(v187), !221

        transfer_2_block7(v188: ()):
        br transfer_2_block5(v188), !18

        transfer_2_block1():
        v189 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !222
        v190 = const u64 0
        v191 = get_elem_ptr v189, ptr u64, v190, !223
        v192 = load v191, !18
        v193 = const u64 1, !23
        v194 = cmp eq v192 v193, !225
        br transfer_2_block8(v194), !226

        transfer_2_block8(v195: bool):
        cbr v195, transfer_2_block2(), transfer_2_block3(), !227

        transfer_2_block2():
        v196 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !228
        v197 = const u64 1
        v198 = const u64 1
        v199 = get_elem_ptr v196, ptr { b256 }, v197, v198, !18
        v200 = load v199, !18
        v201 = get_local ptr { b256 }, id, !230
        store v200 to v201, !231
        v202 = get_local ptr { b256 }, id, !233
        v203 = load v202, !18
        v204 = call bits_16(v203), !236
        v205 = asm(r1: v173, r2: v37, r3: v204) {
            tr     r3 r1 r2, !237
        }
        v206 = const unit ()
        br transfer_2_block9(v206), !238

        transfer_2_block9(v207: ()):
        br transfer_2_block4(v207), !18

        transfer_2_block3():
        v208 = const u64 14757395258967588866, !20
        revert v208, !239

        transfer_2_block4(v209: ()):
        br transfer_2_block5(v209), !18

        transfer_2_block5(v210: ()):
        v211 = const unit ()
        br block0(v211), !18

        block0(v212: ()):
        v213 = const unit ()
        ret () v213
    }

    pub fn from_0(bits !241: b256) -> { b256 }, !242 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !243
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !243
        v3 = load v0
        ret { b256 } v3
    }

    pub fn from_1(bits !245: b256) -> { b256 }, !246 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !247
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !247
        v3 = load v0
        ret { b256 } v3
    }

    pub fn transfer_2(to !248: { u64, ( { b256 } | { b256 } ) }, asset_id !249: { b256 }, amount !250: u64) -> (), !251 {
        local { u64, ( { b256 } | { b256 } ) } __matched_value_1
        local { u64 } __matched_value_2
        local { u64 } __matched_value_20
        local { u64 } __matched_value_3
        local { u64 } __matched_value_4
        local { b256 } addr
        local { b256 } id
        local mut u64 index
        local u64 number_of_outputs
        local u64 ptr

        entry(to: { u64, ( { b256 } | { b256 } ) }, asset_id: { b256 }, amount: u64):
        v0 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !20
        store to to v0, !20
        v1 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !23
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !23
        v4 = load v3
        v5 = const u64 0, !23
        v6 = cmp eq v4 v5, !26
        br block6(v6), !26

        block6(v7: bool):
        cbr v7, block0(), block1(), !26

        block0():
        v8 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !23
        v9 = const u64 1
        v10 = const u64 0
        v11 = get_elem_ptr v8, ptr { b256 }, v9, v10
        v12 = load v11
        v13 = get_local ptr { b256 }, addr, !31
        store v12 to v13, !31
        v14 = get_local ptr { b256 }, addr, !34
        v15 = load v14
        v16 = get_local ptr u64, index, !252
        v17 = call tx_type_6(), !253
        v18 = get_local ptr { u64 }, __matched_value_3, !254
        store v17 to v18, !255
        v19 = get_local ptr { u64 }, __matched_value_3, !256
        v20 = const u64 0
        v21 = get_elem_ptr v19, ptr u64, v20, !257
        v22 = load v21, !258
        v23 = const u64 0, !41
        v24 = cmp eq v22 v23, !259
        br transfer_to_address_4_output_count_5_block6(v24), !260

        transfer_to_address_4_output_count_5_block6(v25: bool):
        cbr v25, transfer_to_address_4_output_count_5_block0(), transfer_to_address_4_output_count_5_block1(), !261

        transfer_to_address_4_output_count_5_block0():
        v26 = const u64 0, !53
        v27 = gtf v26, 6, !262
        v28 = bitcast v27 to u64, !263
        br transfer_to_address_4_output_count_5_block5(v28), !264

        transfer_to_address_4_output_count_5_block1():
        v29 = get_local ptr { u64 }, __matched_value_3, !265
        v30 = const u64 0
        v31 = get_elem_ptr v29, ptr u64, v30, !266
        v32 = load v31, !267
        v33 = const u64 1, !41
        v34 = cmp eq v32 v33, !268
        br transfer_to_address_4_output_count_5_block7(v34), !269

        transfer_to_address_4_output_count_5_block7(v35: bool):
        cbr v35, transfer_to_address_4_output_count_5_block2(), transfer_to_address_4_output_count_5_block3(), !270

        transfer_to_address_4_output_count_5_block2():
        v36 = const u64 0, !65
        v37 = gtf v36, 260, !271
        v38 = bitcast v37 to u64, !272
        br transfer_to_address_4_output_count_5_block4(v38), !273

        transfer_to_address_4_output_count_5_block3():
        v39 = const u64 14757395258967588866, !43
        revert v39, !274

        transfer_to_address_4_output_count_5_block4(v40: u64):
        br transfer_to_address_4_output_count_5_block5(v40), !275

        transfer_to_address_4_output_count_5_block5(v41: u64):
        br transfer_to_address_4_block6(v41), !276

        transfer_to_address_4_block6(v42: u64):
        v43 = get_local ptr u64, number_of_outputs, !277
        v44 = const u64 0, !75
        br transfer_to_address_4_while(v44), !36

        transfer_to_address_4_while(v45: u64):
        v46 = get_local ptr u64, index, !278
        v47 = get_local ptr u64, number_of_outputs, !279
        v48 = cmp lt v45 v42, !280
        br transfer_to_address_4_block7(v48), !281

        transfer_to_address_4_block7(v49: bool):
        cbr v49, transfer_to_address_4_while_body(), transfer_to_address_4_end_while(), !36

        transfer_to_address_4_while_break():
        br transfer_to_address_4_end_while(), !36

        transfer_to_address_4_while_body():
        v50 = get_local ptr u64, index, !282
        v51 = call output_type_10(v45), !283
        v52 = get_local ptr { u64 }, __matched_value_2, !284
        store v51 to v52, !285
        v53 = get_local ptr { u64 }, __matched_value_2, !286
        v54 = const u64 0
        v55 = get_elem_ptr v53, ptr u64, v54, !287
        v56 = load v55, !36
        v57 = const u64 3, !88
        v58 = cmp eq v56 v57, !288
        br transfer_to_address_4_block8(v58), !289

        transfer_to_address_4_block8(v59: bool):
        cbr v59, transfer_to_address_4_block0(), transfer_to_address_4_block4(), !290

        transfer_to_address_4_block0():
        v60 = get_local ptr u64, index, !291
        v61 = call output_type_10(v45), !292
        v62 = get_local ptr { u64 }, __matched_value_4, !293
        store v61 to v62, !294
        v63 = get_local ptr { u64 }, __matched_value_4, !295
        v64 = const u64 0
        v65 = get_elem_ptr v63, ptr u64, v64, !296
        v66 = load v65, !297
        v67 = const u64 0, !103
        v68 = cmp eq v66 v67, !298
        br transfer_to_address_4_output_amount_11_block12(v68), !299

        transfer_to_address_4_output_amount_11_block12(v69: bool):
        cbr v69, transfer_to_address_4_output_amount_11_block0(), transfer_to_address_4_output_amount_11_block1(), !300

        transfer_to_address_4_output_amount_11_block0():
        v70 = gtf v45, 770, !301
        v71 = bitcast v70 to u64, !302
        br transfer_to_address_4_output_amount_11_block11(v71), !303

        transfer_to_address_4_output_amount_11_block1():
        v72 = get_local ptr { u64 }, __matched_value_4, !304
        v73 = const u64 0
        v74 = get_elem_ptr v72, ptr u64, v73, !305
        v75 = load v74, !306
        v76 = const u64 1, !103
        v77 = cmp eq v75 v76, !307
        br transfer_to_address_4_output_amount_11_block13(v77), !308

        transfer_to_address_4_output_amount_11_block13(v78: bool):
        cbr v78, transfer_to_address_4_output_amount_11_block2(), transfer_to_address_4_output_amount_11_block3(), !309

        transfer_to_address_4_output_amount_11_block2():
        v79 = const u64 0, !126
        revert v79, !310

        transfer_to_address_4_output_amount_11_block14(v80: never):
        br transfer_to_address_4_output_amount_11_block10(v80), !311

        transfer_to_address_4_output_amount_11_block3():
        v81 = get_local ptr { u64 }, __matched_value_4, !312
        v82 = const u64 0
        v83 = get_elem_ptr v81, ptr u64, v82, !313
        v84 = load v83, !314
        v85 = const u64 2, !103
        v86 = cmp eq v84 v85, !315
        br transfer_to_address_4_output_amount_11_block15(v86), !316

        transfer_to_address_4_output_amount_11_block15(v87: bool):
        cbr v87, transfer_to_address_4_output_amount_11_block4(), transfer_to_address_4_output_amount_11_block5(), !317

        transfer_to_address_4_output_amount_11_block4():
        v88 = const u64 0, !139
        br transfer_to_address_4_output_amount_11_block9(v88), !318

        transfer_to_address_4_output_amount_11_block5():
        v89 = get_local ptr { u64 }, __matched_value_4, !319
        v90 = const u64 0
        v91 = get_elem_ptr v89, ptr u64, v90, !320
        v92 = load v91, !321
        v93 = const u64 3, !103
        v94 = cmp eq v92 v93, !322
        br transfer_to_address_4_output_amount_11_block16(v94), !323

        transfer_to_address_4_output_amount_11_block16(v95: bool):
        cbr v95, transfer_to_address_4_output_amount_11_block6(), transfer_to_address_4_output_amount_11_block7(), !324

        transfer_to_address_4_output_amount_11_block6():
        v96 = call tx_type_6(), !325
        v97 = get_local ptr { u64 }, __matched_value_20, !326
        store v96 to v97, !327
        v98 = get_local ptr { u64 }, __matched_value_20, !328
        v99 = const u64 0
        v100 = get_elem_ptr v98, ptr u64, v99, !329
        v101 = load v100, !330
        v102 = const u64 0, !149
        v103 = cmp eq v101 v102, !331
        br transfer_to_address_4_output_amount_11_output_pointer_12_block6(v103), !332

        transfer_to_address_4_output_amount_11_output_pointer_12_block6(v104: bool):
        cbr v104, transfer_to_address_4_output_amount_11_output_pointer_12_block0(), transfer_to_address_4_output_amount_11_output_pointer_12_block1(), !333

        transfer_to_address_4_output_amount_11_output_pointer_12_block0():
        v105 = gtf v45, 12, !334
        v106 = bitcast v105 to u64, !335
        br transfer_to_address_4_output_amount_11_output_pointer_12_block5(v106), !336

        transfer_to_address_4_output_amount_11_output_pointer_12_block1():
        v107 = get_local ptr { u64 }, __matched_value_20, !337
        v108 = const u64 0
        v109 = get_elem_ptr v107, ptr u64, v108, !338
        v110 = load v109, !339
        v111 = const u64 1, !149
        v112 = cmp eq v110 v111, !340
        br transfer_to_address_4_output_amount_11_output_pointer_12_block7(v112), !341

        transfer_to_address_4_output_amount_11_output_pointer_12_block7(v113: bool):
        cbr v113, transfer_to_address_4_output_amount_11_output_pointer_12_block2(), transfer_to_address_4_output_amount_11_output_pointer_12_block3(), !342

        transfer_to_address_4_output_amount_11_output_pointer_12_block2():
        v114 = gtf v45, 265, !343
        v115 = bitcast v114 to u64, !344
        br transfer_to_address_4_output_amount_11_output_pointer_12_block4(v115), !345

        transfer_to_address_4_output_amount_11_output_pointer_12_block3():
        v116 = const u64 14757395258967588866, !151
        revert v116, !346

        transfer_to_address_4_output_amount_11_output_pointer_12_block4(v117: u64):
        br transfer_to_address_4_output_amount_11_output_pointer_12_block5(v117), !347

        transfer_to_address_4_output_amount_11_output_pointer_12_block5(v118: u64):
        br transfer_to_address_4_output_amount_11_block17(v118), !348

        transfer_to_address_4_output_amount_11_block17(v119: u64):
        v120 = get_local ptr u64, ptr, !349
        v121 = get_local ptr u64, ptr, !350
        v122 = asm(r1, r2, r3: v119) -> u64 r1, !351 {
            addi   r2 r3 i40, !185
            lw     r1 r2 i0, !186
        }
        br transfer_to_address_4_output_amount_11_block8(v122), !352

        transfer_to_address_4_output_amount_11_block7():
        v123 = const u64 14757395258967588866, !105
        revert v123, !353

        transfer_to_address_4_output_amount_11_block8(v124: u64):
        br transfer_to_address_4_output_amount_11_block9(v124), !354

        transfer_to_address_4_output_amount_11_block9(v125: u64):
        br transfer_to_address_4_output_amount_11_block10(v125), !355

        transfer_to_address_4_output_amount_11_block10(v126: u64):
        br transfer_to_address_4_output_amount_11_block11(v126), !356

        transfer_to_address_4_output_amount_11_block11(v127: u64):
        br transfer_to_address_4_block9(v127), !357

        transfer_to_address_4_block9(v128: u64):
        v129 = const u64 0, !193
        v130 = cmp eq v128 v129, !358
        br transfer_to_address_4_block10(v130), !359

        transfer_to_address_4_block10(v131: bool):
        cbr v131, transfer_to_address_4_block1(), transfer_to_address_4_block2(), !360

        transfer_to_address_4_block1():
        v132 = call bits_16(v15), !361
        v133 = get_local ptr u64, index, !362
        v134 = asm(r1: v132, r2: v45, r3: amount, r4: asset_id) {
            tro    r1 r2 r3 r4, !203
        }
        v135 = const unit (), !204
        br block7(v135), !363

        transfer_to_address_4_block2():
        v136 = const unit ()
        br transfer_to_address_4_block3(v136), !36

        transfer_to_address_4_block3(v137: ()):
        br transfer_to_address_4_block5(v137), !36

        transfer_to_address_4_block4():
        v138 = const unit ()
        br transfer_to_address_4_block5(v138), !36

        transfer_to_address_4_block5(v139: ()):
        v140 = get_local ptr u64, index, !364
        v141 = const u64 1, !211
        v142 = add v45, v141, !365
        br transfer_to_address_4_block11(v142), !366

        transfer_to_address_4_block11(v143: u64):
        v144 = get_local ptr u64, index, !367
        br transfer_to_address_4_while(v143), !36

        transfer_to_address_4_end_while():
        v145 = const u64 18446744073709486081, !218
        revert v145, !368

        transfer_to_address_4_block12(v146: never):
        v147 = const unit ()
        br block7(v147), !36

        block7(v148: ()):
        br block5(v148)

        block1():
        v149 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !23
        v150 = const u64 0
        v151 = get_elem_ptr v149, ptr u64, v150, !23
        v152 = load v151
        v153 = const u64 1, !23
        v154 = cmp eq v152 v153, !224
        br block8(v154), !224

        block8(v155: bool):
        cbr v155, block2(), block3(), !224

        block2():
        v156 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !23
        v157 = const u64 1
        v158 = const u64 1
        v159 = get_elem_ptr v156, ptr { b256 }, v157, v158
        v160 = load v159
        v161 = get_local ptr { b256 }, id, !229
        store v160 to v161, !229
        v162 = get_local ptr { b256 }, id, !232
        v163 = load v162
        v164 = call bits_16(v163), !369
        v165 = asm(r1: amount, r2: asset_id, r3: v164) {
            tr     r3 r1 r2, !237
        }
        v166 = const unit ()
        br block9(v166), !234

        block9(v167: ()):
        br block4(v167)

        block3():
        v168 = const u64 14757395258967588866, !20
        revert v168, !20

        block4(v169: ()):
        br block5(v169)

        block5(v170: ()):
        v171 = const unit ()
        ret () v171
    }

    pub fn eq_3(self !371: u64, other !372: u64) -> bool, !373 {
        entry(self: u64, other: u64):
        v0 = cmp eq self other
        ret bool v0
    }

    fn transfer_to_address_4(to !374: { b256 }, asset_id !375: { b256 }, amount !376: u64) -> (), !377 {
        local { u64 } __matched_value_2
        local { u64 } __matched_value_20
        local { u64 } __matched_value_3
        local { u64 } __matched_value_4
        local mut u64 index
        local u64 number_of_outputs
        local u64 ptr

        entry(to: { b256 }, asset_id: { b256 }, amount: u64):
        v0 = get_local ptr u64, index, !37
        v1 = call tx_type_6(), !378
        v2 = get_local ptr { u64 }, __matched_value_3, !379
        store v1 to v2, !380
        v3 = get_local ptr { u64 }, __matched_value_3, !381
        v4 = const u64 0
        v5 = get_elem_ptr v3, ptr u64, v4, !382
        v6 = load v5, !39
        v7 = const u64 0, !41
        v8 = cmp eq v6 v7, !383
        br output_count_5_block6(v8), !384

        output_count_5_block6(v9: bool):
        cbr v9, output_count_5_block0(), output_count_5_block1(), !385

        output_count_5_block0():
        v10 = const u64 0, !53
        v11 = gtf v10, 6, !386
        v12 = bitcast v11 to u64, !387
        br output_count_5_block5(v12), !39

        output_count_5_block1():
        v13 = get_local ptr { u64 }, __matched_value_3, !388
        v14 = const u64 0
        v15 = get_elem_ptr v13, ptr u64, v14, !389
        v16 = load v15, !39
        v17 = const u64 1, !41
        v18 = cmp eq v16 v17, !390
        br output_count_5_block7(v18), !391

        output_count_5_block7(v19: bool):
        cbr v19, output_count_5_block2(), output_count_5_block3(), !392

        output_count_5_block2():
        v20 = const u64 0, !65
        v21 = gtf v20, 260, !393
        v22 = bitcast v21 to u64, !394
        br output_count_5_block4(v22), !39

        output_count_5_block3():
        v23 = const u64 14757395258967588866, !43
        revert v23, !395

        output_count_5_block4(v24: u64):
        br output_count_5_block5(v24), !39

        output_count_5_block5(v25: u64):
        br block6(v25), !39

        block6(v26: u64):
        v27 = get_local ptr u64, number_of_outputs, !73
        v28 = const u64 0, !75
        br while(v28)

        while(v29: u64):
        v30 = get_local ptr u64, index, !77
        v31 = get_local ptr u64, number_of_outputs, !79
        v32 = cmp lt v29 v26, !81
        br block7(v32), !81

        block7(v33: bool):
        cbr v33, while_body(), end_while()

        while_break():
        br end_while()

        while_body():
        v34 = get_local ptr u64, index, !86
        v35 = call output_type_10(v29), !88
        v36 = get_local ptr { u64 }, __matched_value_2, !90
        store v35 to v36, !90
        v37 = get_local ptr { u64 }, __matched_value_2, !88
        v38 = const u64 0
        v39 = get_elem_ptr v37, ptr u64, v38, !88
        v40 = load v39
        v41 = const u64 3, !88
        v42 = cmp eq v40 v41, !96
        br block8(v42), !96

        block8(v43: bool):
        cbr v43, block0(), block4(), !96

        block0():
        v44 = get_local ptr u64, index, !100
        v45 = call output_type_10(v29), !396
        v46 = get_local ptr { u64 }, __matched_value_4, !397
        store v45 to v46, !398
        v47 = get_local ptr { u64 }, __matched_value_4, !399
        v48 = const u64 0
        v49 = get_elem_ptr v47, ptr u64, v48, !400
        v50 = load v49, !102
        v51 = const u64 0, !103
        v52 = cmp eq v50 v51, !401
        br output_amount_11_block12(v52), !402

        output_amount_11_block12(v53: bool):
        cbr v53, output_amount_11_block0(), output_amount_11_block1(), !403

        output_amount_11_block0():
        v54 = gtf v29, 770, !404
        v55 = bitcast v54 to u64, !405
        br output_amount_11_block11(v55), !102

        output_amount_11_block1():
        v56 = get_local ptr { u64 }, __matched_value_4, !406
        v57 = const u64 0
        v58 = get_elem_ptr v56, ptr u64, v57, !407
        v59 = load v58, !102
        v60 = const u64 1, !103
        v61 = cmp eq v59 v60, !408
        br output_amount_11_block13(v61), !409

        output_amount_11_block13(v62: bool):
        cbr v62, output_amount_11_block2(), output_amount_11_block3(), !410

        output_amount_11_block2():
        v63 = const u64 0, !126
        revert v63, !411

        output_amount_11_block14(v64: never):
        br output_amount_11_block10(v64), !102

        output_amount_11_block3():
        v65 = get_local ptr { u64 }, __matched_value_4, !412
        v66 = const u64 0
        v67 = get_elem_ptr v65, ptr u64, v66, !413
        v68 = load v67, !102
        v69 = const u64 2, !103
        v70 = cmp eq v68 v69, !414
        br output_amount_11_block15(v70), !415

        output_amount_11_block15(v71: bool):
        cbr v71, output_amount_11_block4(), output_amount_11_block5(), !416

        output_amount_11_block4():
        v72 = const u64 0, !139
        br output_amount_11_block9(v72), !102

        output_amount_11_block5():
        v73 = get_local ptr { u64 }, __matched_value_4, !417
        v74 = const u64 0
        v75 = get_elem_ptr v73, ptr u64, v74, !418
        v76 = load v75, !102
        v77 = const u64 3, !103
        v78 = cmp eq v76 v77, !419
        br output_amount_11_block16(v78), !420

        output_amount_11_block16(v79: bool):
        cbr v79, output_amount_11_block6(), output_amount_11_block7(), !421

        output_amount_11_block6():
        v80 = call tx_type_6(), !422
        v81 = get_local ptr { u64 }, __matched_value_20, !423
        store v80 to v81, !424
        v82 = get_local ptr { u64 }, __matched_value_20, !425
        v83 = const u64 0
        v84 = get_elem_ptr v82, ptr u64, v83, !426
        v85 = load v84, !427
        v86 = const u64 0, !149
        v87 = cmp eq v85 v86, !428
        br output_amount_11_output_pointer_12_block6(v87), !429

        output_amount_11_output_pointer_12_block6(v88: bool):
        cbr v88, output_amount_11_output_pointer_12_block0(), output_amount_11_output_pointer_12_block1(), !430

        output_amount_11_output_pointer_12_block0():
        v89 = gtf v29, 12, !431
        v90 = bitcast v89 to u64, !432
        br output_amount_11_output_pointer_12_block5(v90), !433

        output_amount_11_output_pointer_12_block1():
        v91 = get_local ptr { u64 }, __matched_value_20, !434
        v92 = const u64 0
        v93 = get_elem_ptr v91, ptr u64, v92, !435
        v94 = load v93, !436
        v95 = const u64 1, !149
        v96 = cmp eq v94 v95, !437
        br output_amount_11_output_pointer_12_block7(v96), !438

        output_amount_11_output_pointer_12_block7(v97: bool):
        cbr v97, output_amount_11_output_pointer_12_block2(), output_amount_11_output_pointer_12_block3(), !439

        output_amount_11_output_pointer_12_block2():
        v98 = gtf v29, 265, !440
        v99 = bitcast v98 to u64, !441
        br output_amount_11_output_pointer_12_block4(v99), !442

        output_amount_11_output_pointer_12_block3():
        v100 = const u64 14757395258967588866, !151
        revert v100, !443

        output_amount_11_output_pointer_12_block4(v101: u64):
        br output_amount_11_output_pointer_12_block5(v101), !444

        output_amount_11_output_pointer_12_block5(v102: u64):
        br output_amount_11_block17(v102), !445

        output_amount_11_block17(v103: u64):
        v104 = get_local ptr u64, ptr, !446
        v105 = get_local ptr u64, ptr, !447
        v106 = asm(r1, r2, r3: v103) -> u64 r1, !448 {
            addi   r2 r3 i40, !185
            lw     r1 r2 i0, !186
        }
        br output_amount_11_block8(v106), !102

        output_amount_11_block7():
        v107 = const u64 14757395258967588866, !105
        revert v107, !449

        output_amount_11_block8(v108: u64):
        br output_amount_11_block9(v108), !102

        output_amount_11_block9(v109: u64):
        br output_amount_11_block10(v109), !102

        output_amount_11_block10(v110: u64):
        br output_amount_11_block11(v110), !102

        output_amount_11_block11(v111: u64):
        br block9(v111), !102

        block9(v112: u64):
        v113 = const u64 0, !193
        v114 = cmp eq v112 v113, !194
        br block10(v114), !194

        block10(v115: bool):
        cbr v115, block1(), block2(), !194

        block1():
        v116 = call bits_16(to), !198
        v117 = get_local ptr u64, index, !200
        v118 = asm(r1: v116, r2: v29, r3: amount, r4: asset_id) {
            tro    r1 r2 r3 r4, !203
        }
        v119 = const unit (), !204
        ret () v119, !204

        block2():
        v120 = const unit ()
        br block3(v120)

        block3(v121: ()):
        br block5(v121)

        block4():
        v122 = const unit ()
        br block5(v122)

        block5(v123: ()):
        v124 = get_local ptr u64, index, !209
        v125 = const u64 1, !211
        v126 = add v29, v125, !212
        br block11(v126), !212

        block11(v127: u64):
        v128 = get_local ptr u64, index, !212
        br while(v127)

        end_while():
        v129 = const u64 18446744073709486081, !218
        revert v129, !450

        block12(v130: never):
        v131 = const unit ()
        ret () v131
    }

    pub fn output_count_5() -> u64, !451 {
        local { u64 } __matched_value_3

        entry():
        v0 = call tx_type_6(), !41
        v1 = get_local ptr { u64 }, __matched_value_3, !43
        store v0 to v1, !43
        v2 = get_local ptr { u64 }, __matched_value_3, !41
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !41
        v5 = load v4
        v6 = const u64 0, !41
        v7 = cmp eq v5 v6, !49
        br block6(v7), !49

        block6(v8: bool):
        cbr v8, block0(), block1(), !49

        block0():
        v9 = const u64 0, !53
        v10 = gtf v9, 6, !54
        v11 = bitcast v10 to u64, !54
        br block5(v11)

        block1():
        v12 = get_local ptr { u64 }, __matched_value_3, !41
        v13 = const u64 0
        v14 = get_elem_ptr v12, ptr u64, v13, !41
        v15 = load v14
        v16 = const u64 1, !41
        v17 = cmp eq v15 v16, !61
        br block7(v17), !61

        block7(v18: bool):
        cbr v18, block2(), block3(), !61

        block2():
        v19 = const u64 0, !65
        v20 = gtf v19, 260, !66
        v21 = bitcast v20 to u64, !66
        br block4(v21)

        block3():
        v22 = const u64 14757395258967588866, !43
        revert v22, !43

        block4(v23: u64):
        br block5(v23)

        block5(v24: u64):
        ret u64 v24
    }

    pub fn tx_type_6() -> { u64 }, !453 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local u8 __matched_value_1

        entry():
        v0 = const u64 0, !454
        v1 = gtf v0, 1, !455
        v2 = bitcast v1 to u8, !455
        v3 = get_local ptr u8, __matched_value_1, !456
        v4 = get_local ptr u8, __matched_value_1, !455
        v5 = const u8 0, !457
        v6 = cmp eq v2 v5, !458
        br block6(v6), !458

        block6(v7: bool):
        cbr v7, block0(), block1(), !458

        block0():
        v8 = get_local ptr { u64 }, __anon_0, !459
        v9 = const u64 0
        v10 = get_elem_ptr v8, ptr u64, v9, !459
        v11 = const u64 0, !459
        store v11 to v10, !459
        v12 = load v8
        br block5(v12)

        block1():
        v13 = get_local ptr u8, __matched_value_1, !455
        v14 = const u8 1, !460
        v15 = cmp eq v2 v14, !461
        br block7(v15), !461

        block7(v16: bool):
        cbr v16, block2(), block3(), !461

        block2():
        v17 = get_local ptr { u64 }, __anon_1, !459
        v18 = const u64 0
        v19 = get_elem_ptr v17, ptr u64, v18, !459
        v20 = const u64 1, !459
        store v20 to v19, !459
        v21 = load v17
        br block4(v21)

        block3():
        v22 = const u64 0, !462
        revert v22, !464

        block8(v23: never):
        br block4(v23)

        block4(v24: { u64 }):
        br block5(v24)

        block5(v25: { u64 }):
        ret { u64 } v25
    }

    pub fn eq_7(self !465: u8, other !466: u8) -> bool, !467 {
        entry(self: u8, other: u8):
        v0 = cmp eq self other
        ret bool v0
    }

    pub fn revert_8(code !468: u64) -> never, !469 {
        entry(code: u64):
        revert code, !129
    }

    pub fn lt_9(self !470: u64, other !471: u64) -> bool, !472 {
        entry(self: u64, other: u64):
        v0 = cmp lt self other
        ret bool v0
    }

    pub fn output_type_10(index !473: u64) -> { u64 }, !474 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local { u64 } __anon_3
        local u8 __matched_value_1

        entry(index: u64):
        v0 = gtf index, 768, !475
        v1 = bitcast v0 to u8, !475
        v2 = get_local ptr u8, __matched_value_1, !476
        v3 = get_local ptr u8, __matched_value_1, !475
        v4 = const u8 0, !477
        v5 = cmp eq v1 v4, !478
        br block12(v5), !478

        block12(v6: bool):
        cbr v6, block0(), block1(), !478

        block0():
        v7 = get_local ptr { u64 }, __anon_0, !479
        v8 = const u64 0
        v9 = get_elem_ptr v7, ptr u64, v8, !479
        v10 = const u64 0, !479
        store v10 to v9, !479
        v11 = load v7
        br block11(v11)

        block1():
        v12 = get_local ptr u8, __matched_value_1, !475
        v13 = const u8 1, !480
        v14 = cmp eq v1 v13, !481
        br block13(v14), !481

        block13(v15: bool):
        cbr v15, block2(), block3(), !481

        block2():
        v16 = get_local ptr { u64 }, __anon_1, !479
        v17 = const u64 0
        v18 = get_elem_ptr v16, ptr u64, v17, !479
        v19 = const u64 1, !479
        store v19 to v18, !479
        v20 = load v16
        br block10(v20)

        block3():
        v21 = get_local ptr u8, __matched_value_1, !475
        v22 = const u8 2, !482
        v23 = cmp eq v1 v22, !483
        br block14(v23), !483

        block14(v24: bool):
        cbr v24, block4(), block5(), !483

        block4():
        v25 = get_local ptr { u64 }, __anon_2, !479
        v26 = const u64 0
        v27 = get_elem_ptr v25, ptr u64, v26, !479
        v28 = const u64 2, !479
        store v28 to v27, !479
        v29 = load v25
        br block9(v29)

        block5():
        v30 = get_local ptr u8, __matched_value_1, !475
        v31 = const u8 3, !484
        v32 = cmp eq v1 v31, !485
        br block15(v32), !485

        block15(v33: bool):
        cbr v33, block6(), block7(), !485

        block6():
        v34 = get_local ptr { u64 }, __anon_3, !479
        v35 = const u64 0
        v36 = get_elem_ptr v34, ptr u64, v35, !479
        v37 = const u64 3, !479
        store v37 to v36, !479
        v38 = load v34
        br block8(v38)

        block7():
        v39 = const u64 0, !486
        revert v39, !488

        block16(v40: never):
        br block8(v40)

        block8(v41: { u64 }):
        br block9(v41)

        block9(v42: { u64 }):
        br block10(v42)

        block10(v43: { u64 }):
        br block11(v43)

        block11(v44: { u64 }):
        ret { u64 } v44
    }

    pub fn output_amount_11(index !489: u64) -> u64, !490 {
        local { u64 } __matched_value_2
        local { u64 } __matched_value_4
        local u64 ptr

        entry(index: u64):
        v0 = call output_type_10(index), !103
        v1 = get_local ptr { u64 }, __matched_value_4, !105
        store v0 to v1, !105
        v2 = get_local ptr { u64 }, __matched_value_4, !103
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !103
        v5 = load v4
        v6 = const u64 0, !103
        v7 = cmp eq v5 v6, !111
        br block12(v7), !111

        block12(v8: bool):
        cbr v8, block0(), block1(), !111

        block0():
        v9 = gtf index, 770, !115
        v10 = bitcast v9 to u64, !115
        br block11(v10)

        block1():
        v11 = get_local ptr { u64 }, __matched_value_4, !103
        v12 = const u64 0
        v13 = get_elem_ptr v11, ptr u64, v12, !103
        v14 = load v13
        v15 = const u64 1, !103
        v16 = cmp eq v14 v15, !122
        br block13(v16), !122

        block13(v17: bool):
        cbr v17, block2(), block3(), !122

        block2():
        v18 = const u64 0, !126
        revert v18, !491

        block14(v19: never):
        br block10(v19)

        block3():
        v20 = get_local ptr { u64 }, __matched_value_4, !103
        v21 = const u64 0
        v22 = get_elem_ptr v20, ptr u64, v21, !103
        v23 = load v22
        v24 = const u64 2, !103
        v25 = cmp eq v23 v24, !135
        br block15(v25), !135

        block15(v26: bool):
        cbr v26, block4(), block5(), !135

        block4():
        v27 = const u64 0, !139
        br block9(v27)

        block5():
        v28 = get_local ptr { u64 }, __matched_value_4, !103
        v29 = const u64 0
        v30 = get_elem_ptr v28, ptr u64, v29, !103
        v31 = load v30
        v32 = const u64 3, !103
        v33 = cmp eq v31 v32, !144
        br block16(v33), !144

        block16(v34: bool):
        cbr v34, block6(), block7(), !144

        block6():
        v35 = call tx_type_6(), !492
        v36 = get_local ptr { u64 }, __matched_value_2, !493
        store v35 to v36, !494
        v37 = get_local ptr { u64 }, __matched_value_2, !495
        v38 = const u64 0
        v39 = get_elem_ptr v37, ptr u64, v38, !496
        v40 = load v39, !148
        v41 = const u64 0, !149
        v42 = cmp eq v40 v41, !497
        br output_pointer_12_block6(v42), !498

        output_pointer_12_block6(v43: bool):
        cbr v43, output_pointer_12_block0(), output_pointer_12_block1(), !499

        output_pointer_12_block0():
        v44 = gtf index, 12, !500
        v45 = bitcast v44 to u64, !501
        br output_pointer_12_block5(v45), !148

        output_pointer_12_block1():
        v46 = get_local ptr { u64 }, __matched_value_2, !502
        v47 = const u64 0
        v48 = get_elem_ptr v46, ptr u64, v47, !503
        v49 = load v48, !148
        v50 = const u64 1, !149
        v51 = cmp eq v49 v50, !504
        br output_pointer_12_block7(v51), !505

        output_pointer_12_block7(v52: bool):
        cbr v52, output_pointer_12_block2(), output_pointer_12_block3(), !506

        output_pointer_12_block2():
        v53 = gtf index, 265, !507
        v54 = bitcast v53 to u64, !508
        br output_pointer_12_block4(v54), !148

        output_pointer_12_block3():
        v55 = const u64 14757395258967588866, !151
        revert v55, !509

        output_pointer_12_block4(v56: u64):
        br output_pointer_12_block5(v56), !148

        output_pointer_12_block5(v57: u64):
        br block17(v57), !148

        block17(v58: u64):
        v59 = get_local ptr u64, ptr, !179
        v60 = get_local ptr u64, ptr, !181
        v61 = asm(r1, r2, r3: v58) -> u64 r1, !183 {
            addi   r2 r3 i40, !185
            lw     r1 r2 i0, !186
        }
        br block8(v61)

        block7():
        v62 = const u64 14757395258967588866, !105
        revert v62, !105

        block8(v63: u64):
        br block9(v63)

        block9(v64: u64):
        br block10(v64)

        block10(v65: u64):
        br block11(v65)

        block11(v66: u64):
        ret u64 v66
    }

    pub fn output_pointer_12(index !510: u64) -> u64, !511 {
        local { u64 } __matched_value_2

        entry(index: u64):
        v0 = call tx_type_6(), !149
        v1 = get_local ptr { u64 }, __matched_value_2, !151
        store v0 to v1, !151
        v2 = get_local ptr { u64 }, __matched_value_2, !149
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !149
        v5 = load v4
        v6 = const u64 0, !149
        v7 = cmp eq v5 v6, !157
        br block6(v7), !157

        block6(v8: bool):
        cbr v8, block0(), block1(), !157

        block0():
        v9 = gtf index, 12, !161
        v10 = bitcast v9 to u64, !161
        br block5(v10)

        block1():
        v11 = get_local ptr { u64 }, __matched_value_2, !149
        v12 = const u64 0
        v13 = get_elem_ptr v11, ptr u64, v12, !149
        v14 = load v13
        v15 = const u64 1, !149
        v16 = cmp eq v14 v15, !168
        br block7(v16), !168

        block7(v17: bool):
        cbr v17, block2(), block3(), !168

        block2():
        v18 = gtf index, 265, !172
        v19 = bitcast v18 to u64, !172
        br block4(v19)

        block3():
        v20 = const u64 14757395258967588866, !151
        revert v20, !151

        block4(v21: u64):
        br block5(v21)

        block5(v22: u64):
        ret u64 v22
    }

    pub fn bits_13(self !513: { b256 }) -> b256, !514 {
        entry(self: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !515
        v4 = load v3
        ret b256 v4
    }

    pub fn add_14(self !516: u64, other !517: u64) -> u64, !518 {
        entry(self: u64, other: u64):
        v0 = add self, other
        ret u64 v0
    }

    fn force_transfer_to_contract_15(to !519: { b256 }, asset_id !520: { b256 }, amount !521: u64) -> (), !522 {
        entry(to: { b256 }, asset_id: { b256 }, amount: u64):
        v0 = call bits_16(to), !235
        v1 = asm(r1: amount, r2: asset_id, r3: v0) {
            tr     r3 r1 r2, !237
        }
        v2 = const unit ()
        ret () v2
    }

    pub fn bits_16(self !523: { b256 }) -> b256, !524 {
        entry(self: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !525
        v4 = load v3
        ret b256 v4
    }
}

!0 = "/home/kebradalaonda/p/sway/test/src/e2e_vm_tests/test_programs/should_pass/static_analysis/cei_pattern_violation_in_asm_block_tr/src/main.sw"
!1 = span !0 105 713
!2 = span !0 263 287
!3 = span !0 162 228
!4 = span !0 387 403
!5 = span !0 412 493
!6 = span !0 426 492
!7 = span !0 528 535
!8 = span !0 514 536
!9 = span !0 502 537
!10 = span !0 574 581
!11 = span !0 557 582
!12 = span !0 546 583
!13 = "/home/kebradalaonda/p/sway/sway-lib-std/src/identity.sw"
!14 = span !13 477 548
!15 = span !0 685 689
!16 = span !0 692 697
!17 = span !0 699 705
!18 = span !0 655 706
!19 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset.sw"
!20 = span !19 3829 4011
!21 = (!18 !20)
!22 = (!18 !20)
!23 = span !19 3835 3837
!24 = (!18 !23)
!25 = (!18 !23)
!26 = span !19 3848 3919
!27 = (!18 !26)
!28 = (!18 !26)
!29 = (!18 !26)
!30 = (!18 !23)
!31 = span !19 3866 3870
!32 = (!18 !31)
!33 = (!18 !31)
!34 = span !19 3895 3899
!35 = (!18 !34)
!36 = span !19 3875 3918
!37 = span !19 5877 5895
!38 = (!18 !36 !37)
!39 = span !19 6153 6167
!40 = "/home/kebradalaonda/p/sway/sway-lib-std/src/outputs.sw"
!41 = span !40 3435 3444
!42 = (!18 !36 !39 !41)
!43 = span !40 3429 3600
!44 = (!18 !36 !39 !43)
!45 = (!18 !36 !39 !43)
!46 = (!18 !36 !39 !41)
!47 = (!18 !36 !39 !41)
!48 = (!18 !36 !39)
!49 = span !40 3455 3520
!50 = (!18 !36 !39 !49)
!51 = (!18 !36 !39 !49)
!52 = (!18 !36 !39 !49)
!53 = span !40 3491 3492
!54 = span !40 3478 3519
!55 = (!18 !36 !39 !54)
!56 = (!18 !36 !39 !54)
!57 = (!18 !36 !39)
!58 = (!18 !36 !39 !41)
!59 = (!18 !36 !39 !41)
!60 = (!18 !36 !39)
!61 = span !40 3529 3594
!62 = (!18 !36 !39 !61)
!63 = (!18 !36 !39 !61)
!64 = (!18 !36 !39 !61)
!65 = span !40 3565 3566
!66 = span !40 3552 3593
!67 = (!18 !36 !39 !66)
!68 = (!18 !36 !39 !66)
!69 = (!18 !36 !39)
!70 = (!18 !36 !39 !43)
!71 = (!18 !36 !39)
!72 = (!18 !36 !39)
!73 = span !19 6129 6168
!74 = (!18 !36 !73)
!75 = span !19 5893 5894
!76 = (!18 !36)
!77 = span !19 6179 6184
!78 = (!18 !36 !77)
!79 = span !19 6187 6204
!80 = (!18 !36 !79)
!81 = span !19 6179 6204
!82 = (!18 !36 !81)
!83 = (!18 !36 !81)
!84 = (!18 !36)
!85 = (!18 !36)
!86 = span !19 6253 6258
!87 = (!18 !36 !86)
!88 = span !19 6241 6259
!89 = (!18 !36 !88)
!90 = span !19 6215 6482
!91 = (!18 !36 !90)
!92 = (!18 !36 !90)
!93 = (!18 !36 !88)
!94 = (!18 !36 !88)
!95 = (!18 !36)
!96 = span !19 6222 6482
!97 = (!18 !36 !96)
!98 = (!18 !36 !96)
!99 = (!18 !36 !96)
!100 = span !19 6291 6296
!101 = (!18 !36 !100)
!102 = span !19 6277 6297
!103 = span !40 4543 4561
!104 = (!18 !36 !102 !103)
!105 = span !40 4537 5459
!106 = (!18 !36 !102 !105)
!107 = (!18 !36 !102 !105)
!108 = (!18 !36 !102 !103)
!109 = (!18 !36 !102 !103)
!110 = (!18 !36 !102)
!111 = span !40 4572 4632
!112 = (!18 !36 !102 !111)
!113 = (!18 !36 !102 !111)
!114 = (!18 !36 !102 !111)
!115 = span !40 4588 4631
!116 = (!18 !36 !102 !115)
!117 = (!18 !36 !102 !115)
!118 = (!18 !36 !102)
!119 = (!18 !36 !102 !103)
!120 = (!18 !36 !102 !103)
!121 = (!18 !36 !102)
!122 = span !40 4641 4671
!123 = (!18 !36 !102 !122)
!124 = (!18 !36 !102 !122)
!125 = (!18 !36 !102 !122)
!126 = span !40 4668 4669
!127 = span !40 4661 4670
!128 = "/home/kebradalaonda/p/sway/sway-lib-std/src/revert.sw"
!129 = span !128 691 705
!130 = (!18 !36 !102 !127 !129)
!131 = (!18 !36 !102)
!132 = (!18 !36 !102 !103)
!133 = (!18 !36 !102 !103)
!134 = (!18 !36 !102)
!135 = span !40 5018 5038
!136 = (!18 !36 !102 !135)
!137 = (!18 !36 !102 !135)
!138 = (!18 !36 !102 !135)
!139 = span !40 5036 5037
!140 = (!18 !36 !102)
!141 = (!18 !36 !102 !103)
!142 = (!18 !36 !102 !103)
!143 = (!18 !36 !102)
!144 = span !40 5242 5453
!145 = (!18 !36 !102 !144)
!146 = (!18 !36 !102 !144)
!147 = (!18 !36 !102 !144)
!148 = span !40 5286 5307
!149 = span !40 2773 2782
!150 = (!18 !36 !102 !148 !149)
!151 = span !40 2767 2950
!152 = (!18 !36 !102 !148 !151)
!153 = (!18 !36 !102 !148 !151)
!154 = (!18 !36 !102 !148 !149)
!155 = (!18 !36 !102 !148 !149)
!156 = (!18 !36 !102 !148)
!157 = span !40 2793 2864
!158 = (!18 !36 !102 !148 !157)
!159 = (!18 !36 !102 !148 !157)
!160 = (!18 !36 !102 !148 !157)
!161 = span !40 2816 2863
!162 = (!18 !36 !102 !148 !161)
!163 = (!18 !36 !102 !148 !161)
!164 = (!18 !36 !102 !148)
!165 = (!18 !36 !102 !148 !149)
!166 = (!18 !36 !102 !148 !149)
!167 = (!18 !36 !102 !148)
!168 = span !40 2873 2944
!169 = (!18 !36 !102 !148 !168)
!170 = (!18 !36 !102 !148 !168)
!171 = (!18 !36 !102 !148 !168)
!172 = span !40 2896 2943
!173 = (!18 !36 !102 !148 !172)
!174 = (!18 !36 !102 !148 !172)
!175 = (!18 !36 !102 !148)
!176 = (!18 !36 !102 !148 !151)
!177 = (!18 !36 !102 !148)
!178 = (!18 !36 !102 !148)
!179 = span !40 5276 5308
!180 = (!18 !36 !102 !179)
!181 = span !40 5337 5340
!182 = (!18 !36 !102 !181)
!183 = span !40 5321 5442
!184 = (!18 !36 !102 !183)
!185 = span !40 5360 5374
!186 = span !40 5392 5403
!187 = (!18 !36 !102)
!188 = (!18 !36 !102 !105)
!189 = (!18 !36 !102)
!190 = (!18 !36 !102)
!191 = (!18 !36 !102)
!192 = (!18 !36 !102)
!193 = span !19 6301 6302
!194 = span !19 6277 6302
!195 = (!18 !36 !194)
!196 = (!18 !36 !194)
!197 = (!18 !36 !194)
!198 = span !19 6329 6338
!199 = (!18 !36 !198)
!200 = span !19 6344 6349
!201 = (!18 !36 !200)
!202 = span !0 400 402
!203 = span !19 6399 6414
!204 = span !19 6451 6457
!205 = (!18 !36 !204)
!206 = (!18 !36)
!207 = (!18 !36)
!208 = (!18 !36)
!209 = span !19 6491 6496
!210 = (!18 !36 !209)
!211 = span !19 6500 6501
!212 = span !19 6491 6501
!213 = (!18 !36 !212)
!214 = (!18 !36 !212)
!215 = (!18 !36 !212)
!216 = (!18 !36)
!217 = "/home/kebradalaonda/p/sway/sway-lib-std/src/error_signals.sw"
!218 = span !217 566 587
!219 = span !19 6514 6555
!220 = (!18 !36 !219 !129)
!221 = (!18 !36)
!222 = (!18 !23)
!223 = (!18 !23)
!224 = span !19 3928 4005
!225 = (!18 !224)
!226 = (!18 !224)
!227 = (!18 !224)
!228 = (!18 !23)
!229 = span !19 3949 3951
!230 = (!18 !229)
!231 = (!18 !229)
!232 = span !19 3983 3985
!233 = (!18 !232)
!234 = span !19 3956 4004
!235 = span !19 5029 5038
!236 = (!18 !234 !235)
!237 = span !19 5050 5061
!238 = (!18 !234)
!239 = (!18 !20)
!240 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset_id.sw"
!241 = span !240 1300 1304
!242 = span !240 1292 1349
!243 = span !240 1330 1343
!244 = "/home/kebradalaonda/p/sway/sway-lib-std/src/contract_id.sw"
!245 = span !244 1321 1325
!246 = span !244 1313 1370
!247 = span !244 1351 1364
!248 = span !19 3777 3779
!249 = span !19 3791 3799
!250 = span !19 3810 3816
!251 = span !19 3761 4014
!252 = (!36 !37)
!253 = (!36 !39 !41)
!254 = (!36 !39 !43)
!255 = (!36 !39 !43)
!256 = (!36 !39 !41)
!257 = (!36 !39 !41)
!258 = (!36 !39)
!259 = (!36 !39 !49)
!260 = (!36 !39 !49)
!261 = (!36 !39 !49)
!262 = (!36 !39 !54)
!263 = (!36 !39 !54)
!264 = (!36 !39)
!265 = (!36 !39 !41)
!266 = (!36 !39 !41)
!267 = (!36 !39)
!268 = (!36 !39 !61)
!269 = (!36 !39 !61)
!270 = (!36 !39 !61)
!271 = (!36 !39 !66)
!272 = (!36 !39 !66)
!273 = (!36 !39)
!274 = (!36 !39 !43)
!275 = (!36 !39)
!276 = (!36 !39)
!277 = (!36 !73)
!278 = (!36 !77)
!279 = (!36 !79)
!280 = (!36 !81)
!281 = (!36 !81)
!282 = (!36 !86)
!283 = (!36 !88)
!284 = (!36 !90)
!285 = (!36 !90)
!286 = (!36 !88)
!287 = (!36 !88)
!288 = (!36 !96)
!289 = (!36 !96)
!290 = (!36 !96)
!291 = (!36 !100)
!292 = (!36 !102 !103)
!293 = (!36 !102 !105)
!294 = (!36 !102 !105)
!295 = (!36 !102 !103)
!296 = (!36 !102 !103)
!297 = (!36 !102)
!298 = (!36 !102 !111)
!299 = (!36 !102 !111)
!300 = (!36 !102 !111)
!301 = (!36 !102 !115)
!302 = (!36 !102 !115)
!303 = (!36 !102)
!304 = (!36 !102 !103)
!305 = (!36 !102 !103)
!306 = (!36 !102)
!307 = (!36 !102 !122)
!308 = (!36 !102 !122)
!309 = (!36 !102 !122)
!310 = (!36 !102 !127 !129)
!311 = (!36 !102)
!312 = (!36 !102 !103)
!313 = (!36 !102 !103)
!314 = (!36 !102)
!315 = (!36 !102 !135)
!316 = (!36 !102 !135)
!317 = (!36 !102 !135)
!318 = (!36 !102)
!319 = (!36 !102 !103)
!320 = (!36 !102 !103)
!321 = (!36 !102)
!322 = (!36 !102 !144)
!323 = (!36 !102 !144)
!324 = (!36 !102 !144)
!325 = (!36 !102 !148 !149)
!326 = (!36 !102 !148 !151)
!327 = (!36 !102 !148 !151)
!328 = (!36 !102 !148 !149)
!329 = (!36 !102 !148 !149)
!330 = (!36 !102 !148)
!331 = (!36 !102 !148 !157)
!332 = (!36 !102 !148 !157)
!333 = (!36 !102 !148 !157)
!334 = (!36 !102 !148 !161)
!335 = (!36 !102 !148 !161)
!336 = (!36 !102 !148)
!337 = (!36 !102 !148 !149)
!338 = (!36 !102 !148 !149)
!339 = (!36 !102 !148)
!340 = (!36 !102 !148 !168)
!341 = (!36 !102 !148 !168)
!342 = (!36 !102 !148 !168)
!343 = (!36 !102 !148 !172)
!344 = (!36 !102 !148 !172)
!345 = (!36 !102 !148)
!346 = (!36 !102 !148 !151)
!347 = (!36 !102 !148)
!348 = (!36 !102 !148)
!349 = (!36 !102 !179)
!350 = (!36 !102 !181)
!351 = (!36 !102 !183)
!352 = (!36 !102)
!353 = (!36 !102 !105)
!354 = (!36 !102)
!355 = (!36 !102)
!356 = (!36 !102)
!357 = (!36 !102)
!358 = (!36 !194)
!359 = (!36 !194)
!360 = (!36 !194)
!361 = (!36 !198)
!362 = (!36 !200)
!363 = (!36 !204)
!364 = (!36 !209)
!365 = (!36 !212)
!366 = (!36 !212)
!367 = (!36 !212)
!368 = (!36 !219 !129)
!369 = (!234 !235)
!370 = "/home/kebradalaonda/p/sway/sway-lib-core/src/ops.sw"
!371 = span !370 12645 12649
!372 = span !370 12651 12656
!373 = span !370 12639 12705
!374 = span !19 5752 5754
!375 = span !19 5765 5773
!376 = span !19 5784 5790
!377 = span !19 5729 6558
!378 = (!39 !41)
!379 = (!39 !43)
!380 = (!39 !43)
!381 = (!39 !41)
!382 = (!39 !41)
!383 = (!39 !49)
!384 = (!39 !49)
!385 = (!39 !49)
!386 = (!39 !54)
!387 = (!39 !54)
!388 = (!39 !41)
!389 = (!39 !41)
!390 = (!39 !61)
!391 = (!39 !61)
!392 = (!39 !61)
!393 = (!39 !66)
!394 = (!39 !66)
!395 = (!39 !43)
!396 = (!102 !103)
!397 = (!102 !105)
!398 = (!102 !105)
!399 = (!102 !103)
!400 = (!102 !103)
!401 = (!102 !111)
!402 = (!102 !111)
!403 = (!102 !111)
!404 = (!102 !115)
!405 = (!102 !115)
!406 = (!102 !103)
!407 = (!102 !103)
!408 = (!102 !122)
!409 = (!102 !122)
!410 = (!102 !122)
!411 = (!102 !127 !129)
!412 = (!102 !103)
!413 = (!102 !103)
!414 = (!102 !135)
!415 = (!102 !135)
!416 = (!102 !135)
!417 = (!102 !103)
!418 = (!102 !103)
!419 = (!102 !144)
!420 = (!102 !144)
!421 = (!102 !144)
!422 = (!102 !148 !149)
!423 = (!102 !148 !151)
!424 = (!102 !148 !151)
!425 = (!102 !148 !149)
!426 = (!102 !148 !149)
!427 = (!102 !148)
!428 = (!102 !148 !157)
!429 = (!102 !148 !157)
!430 = (!102 !148 !157)
!431 = (!102 !148 !161)
!432 = (!102 !148 !161)
!433 = (!102 !148)
!434 = (!102 !148 !149)
!435 = (!102 !148 !149)
!436 = (!102 !148)
!437 = (!102 !148 !168)
!438 = (!102 !148 !168)
!439 = (!102 !148 !168)
!440 = (!102 !148 !172)
!441 = (!102 !148 !172)
!442 = (!102 !148)
!443 = (!102 !148 !151)
!444 = (!102 !148)
!445 = (!102 !148)
!446 = (!102 !179)
!447 = (!102 !181)
!448 = (!102 !183)
!449 = (!102 !105)
!450 = (!219 !129)
!451 = span !40 3394 3602
!452 = "/home/kebradalaonda/p/sway/sway-lib-std/src/tx.sw"
!453 = span !452 2271 2445
!454 = span !452 2327 2328
!455 = span !452 2315 2339
!456 = span !452 2309 2443
!457 = span !452 2350 2353
!458 = span !452 2350 2377
!459 = span !452 1445 1616
!460 = span !452 2386 2389
!461 = span !452 2386 2413
!462 = span !452 2434 2435
!463 = span !452 2427 2436
!464 = (!463 !129)
!465 = span !370 12920 12924
!466 = span !370 12926 12931
!467 = span !370 12914 12980
!468 = span !128 669 673
!469 = span !128 655 707
!470 = span !370 15192 15196
!471 = span !370 15198 15203
!472 = span !370 15186 15252
!473 = span !40 1936 1941
!474 = span !40 1917 2165
!475 = span !40 1970 2005
!476 = span !40 1964 2163
!477 = span !40 2016 2019
!478 = span !40 2016 2036
!479 = span !40 956 1170
!480 = span !40 2045 2048
!481 = span !40 2045 2069
!482 = span !40 2078 2081
!483 = span !40 2078 2100
!484 = span !40 2109 2112
!485 = span !40 2109 2133
!486 = span !40 2154 2155
!487 = span !40 2147 2156
!488 = (!487 !129)
!489 = span !40 4512 4517
!490 = span !40 4491 5461
!491 = (!127 !129)
!492 = (!148 !149)
!493 = (!148 !151)
!494 = (!148 !151)
!495 = (!148 !149)
!496 = (!148 !149)
!497 = (!148 !157)
!498 = (!148 !157)
!499 = (!148 !157)
!500 = (!148 !161)
!501 = (!148 !161)
!502 = (!148 !149)
!503 = (!148 !149)
!504 = (!148 !168)
!505 = (!148 !168)
!506 = (!148 !168)
!507 = (!148 !172)
!508 = (!148 !172)
!509 = (!148 !151)
!510 = span !40 2742 2747
!511 = span !40 2720 2952
!512 = "/home/kebradalaonda/p/sway/sway-lib-std/src/address.sw"
!513 = span !512 679 683
!514 = span !512 667 718
!515 = span !512 292 302
!516 = span !370 1050 1054
!517 = span !370 1056 1061
!518 = span !370 1043 1111
!519 = span !19 4941 4943
!520 = span !19 4957 4965
!521 = span !19 4976 4982
!522 = span !19 4911 5070
!523 = span !244 707 711
!524 = span !244 695 746
!525 = span !244 305 315

// IR: [simplify-cfg] Simplify the control flow graph (CFG)
contract {
    pub entry fn deposit<2df2cef7>() -> (), !1 {
        local { b256, u64, u64 } __anon_0
        local b256 __anon_1
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64, ( { b256 } | { b256 } ) } __matched_value_1
        local { u64 } __matched_value_2
        local { u64 } __matched_value_20
        local { u64 } __matched_value_3
        local { u64 } __matched_value_4
        local { b256 } addr
        local b256 address
        local u64 amount
        local { b256 } asset
        local { b256 } id
        local mut u64 index
        local u64 number_of_outputs
        local { b256 } pool
        local u64 ptr

        entry():
        v0 = get_local ptr { b256, u64, u64 }, __anon_0, !2
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        v3 = const b256 0x3dba0a4455b598b7655a7fb430883d96c9527ef275b49739e7b0ad12f8280eae, !3
        store v3 to v2, !2
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4
        v6 = const u64 770887415, !2
        store v6 to v5, !2
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr u64, v7
        v9 = const u64 0
        store v9 to v8, !2
        v10 = get_local ptr b256, __anon_1
        v11 = const b256 0x0000000000000000000000000000000000000000000000000000000000000000, !2
        store v11 to v10
        v12 = read_register cgas, !2
        v13 = const u64 0, !2
        v14 = contract_call () deposit v0, v13, v10, v12, !2
        v15 = get_local ptr u64, amount, !4
        v16 = get_local ptr b256, address, !5
        v17 = const b256 0x0000000000000000000000000000000000000000000000000000000000000001, !6
        store v17 to v16, !5
        v18 = get_local ptr b256, address, !7
        v19 = load v18
        v20 = call from_0(v19), !8
        v21 = get_local ptr { b256 }, asset, !9
        store v20 to v21, !9
        v22 = get_local ptr b256, address, !10
        v23 = load v22
        v24 = call from_0(v23), !11
        v25 = get_local ptr { b256 }, pool, !12
        store v24 to v25, !12
        v26 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !14
        v27 = const u64 0
        v28 = get_elem_ptr v26, ptr u64, v27, !14
        v29 = const u64 1, !14
        store v29 to v28, !14
        v30 = get_local ptr { b256 }, pool, !15
        v31 = load v30
        v32 = const u64 1
        v33 = const u64 1
        v34 = get_elem_ptr v26, ptr { b256 }, v32, v33, !14
        store v31 to v34, !14
        v35 = load v26
        v36 = get_local ptr { b256 }, asset, !16
        v37 = load v36
        v38 = get_local ptr u64, amount, !17
        v39 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !21
        store v35 to v39, !22
        v40 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !24
        v41 = const u64 0
        v42 = get_elem_ptr v40, ptr u64, v41, !25
        v43 = load v42, !18
        v44 = const u64 0, !23
        v45 = cmp eq v43 v44, !27
        cbr v45, transfer_2_block0(), transfer_2_block1(), !28

        transfer_2_block0():
        v46 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !29
        v47 = const u64 1
        v48 = const u64 0
        v49 = get_elem_ptr v46, ptr { b256 }, v47, v48, !18
        v50 = load v49, !18
        v51 = get_local ptr { b256 }, addr, !31
        store v50 to v51, !32
        v52 = get_local ptr { b256 }, addr, !34
        v53 = load v52, !18
        v54 = get_local ptr u64, index, !37
        v55 = call tx_type_6(), !41
        v56 = get_local ptr { u64 }, __matched_value_3, !43
        store v55 to v56, !44
        v57 = get_local ptr { u64 }, __matched_value_3, !45
        v58 = const u64 0
        v59 = get_elem_ptr v57, ptr u64, v58, !46
        v60 = load v59, !47
        v61 = const u64 0, !40
        v62 = cmp eq v60 v61, !49
        cbr v62, transfer_2_transfer_to_address_4_output_count_5_block0(), transfer_2_transfer_to_address_4_output_count_5_block1(), !50

        transfer_2_transfer_to_address_4_output_count_5_block0():
        v63 = const u64 0, !51
        v64 = gtf v63, 6, !53
        v65 = bitcast v64 to u64, !54
        br transfer_2_transfer_to_address_4_output_count_5_block5(v65), !55

        transfer_2_transfer_to_address_4_output_count_5_block1():
        v66 = get_local ptr { u64 }, __matched_value_3, !56
        v67 = const u64 0
        v68 = get_elem_ptr v66, ptr u64, v67, !57
        v69 = load v68, !58
        v70 = const u64 1, !40
        v71 = cmp eq v69 v70, !60
        cbr v71, transfer_2_transfer_to_address_4_output_count_5_block2(), transfer_2_transfer_to_address_4_output_count_5_block3(), !61

        transfer_2_transfer_to_address_4_output_count_5_block2():
        v72 = const u64 0, !62
        v73 = gtf v72, 260, !64
        v74 = bitcast v73 to u64, !65
        br transfer_2_transfer_to_address_4_output_count_5_block5(v74), !66

        transfer_2_transfer_to_address_4_output_count_5_block3():
        v75 = const u64 14757395258967588866, !42
        revert v75, !67

        transfer_2_transfer_to_address_4_output_count_5_block5(v76: u64):
        v77 = get_local ptr u64, number_of_outputs, !69
        v78 = const u64 0, !70
        br transfer_2_transfer_to_address_4_while(v78), !71

        transfer_2_transfer_to_address_4_while(v79: u64):
        v80 = get_local ptr u64, index, !73
        v81 = get_local ptr u64, number_of_outputs, !75
        v82 = cmp lt v79 v76, !77
        cbr v82, transfer_2_transfer_to_address_4_while_body(), transfer_2_transfer_to_address_4_end_while(), !78

        transfer_2_transfer_to_address_4_while_body():
        v83 = get_local ptr u64, index, !80
        v84 = call output_type_10(v79), !82
        v85 = get_local ptr { u64 }, __matched_value_2, !84
        store v84 to v85, !85
        v86 = get_local ptr { u64 }, __matched_value_2, !86
        v87 = const u64 0
        v88 = get_elem_ptr v86, ptr u64, v87, !87
        v89 = load v88, !88
        v90 = const u64 3, !81
        v91 = cmp eq v89 v90, !90
        v92 = const unit ()
        cbr v91, transfer_2_transfer_to_address_4_block0(), transfer_2_transfer_to_address_4_block5(v92), !91

        transfer_2_transfer_to_address_4_block0():
        v93 = get_local ptr u64, index, !93
        v94 = call output_type_10(v79), !96
        v95 = get_local ptr { u64 }, __matched_value_4, !98
        store v94 to v95, !99
        v96 = get_local ptr { u64 }, __matched_value_4, !100
        v97 = const u64 0
        v98 = get_elem_ptr v96, ptr u64, v97, !101
        v99 = load v98, !102
        v100 = const u64 0, !95
        v101 = cmp eq v99 v100, !104
        cbr v101, transfer_2_transfer_to_address_4_output_amount_11_block0(), transfer_2_transfer_to_address_4_output_amount_11_block1(), !105

        transfer_2_transfer_to_address_4_output_amount_11_block0():
        v102 = gtf v79, 770, !107
        v103 = bitcast v102 to u64, !108
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v103), !109

        transfer_2_transfer_to_address_4_output_amount_11_block1():
        v104 = get_local ptr { u64 }, __matched_value_4, !110
        v105 = const u64 0
        v106 = get_elem_ptr v104, ptr u64, v105, !111
        v107 = load v106, !112
        v108 = const u64 1, !95
        v109 = cmp eq v107 v108, !114
        cbr v109, transfer_2_transfer_to_address_4_output_amount_11_block2(), transfer_2_transfer_to_address_4_output_amount_11_block3(), !115

        transfer_2_transfer_to_address_4_output_amount_11_block2():
        v110 = const u64 0, !116
        revert v110, !120

        transfer_2_transfer_to_address_4_output_amount_11_block3():
        v111 = get_local ptr { u64 }, __matched_value_4, !121
        v112 = const u64 0
        v113 = get_elem_ptr v111, ptr u64, v112, !122
        v114 = load v113, !123
        v115 = const u64 2, !95
        v116 = cmp eq v114 v115, !125
        v117 = const u64 0, !126
        cbr v116, transfer_2_transfer_to_address_4_output_amount_11_block9(v117), transfer_2_transfer_to_address_4_output_amount_11_block5(), !127

        transfer_2_transfer_to_address_4_output_amount_11_block5():
        v118 = get_local ptr { u64 }, __matched_value_4, !128
        v119 = const u64 0
        v120 = get_elem_ptr v118, ptr u64, v119, !129
        v121 = load v120, !130
        v122 = const u64 3, !95
        v123 = cmp eq v121 v122, !132
        cbr v123, transfer_2_transfer_to_address_4_output_amount_11_block6(), transfer_2_transfer_to_address_4_output_amount_11_block7(), !133

        transfer_2_transfer_to_address_4_output_amount_11_block6():
        v124 = call tx_type_6(), !136
        v125 = get_local ptr { u64 }, __matched_value_20, !138
        store v124 to v125, !139
        v126 = get_local ptr { u64 }, __matched_value_20, !140
        v127 = const u64 0
        v128 = get_elem_ptr v126, ptr u64, v127, !141
        v129 = load v128, !142
        v130 = const u64 0, !135
        v131 = cmp eq v129 v130, !144
        cbr v131, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1(), !145

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0():
        v132 = gtf v79, 12, !147
        v133 = bitcast v132 to u64, !148
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v133), !149

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1():
        v134 = get_local ptr { u64 }, __matched_value_20, !150
        v135 = const u64 0
        v136 = get_elem_ptr v134, ptr u64, v135, !151
        v137 = load v136, !152
        v138 = const u64 1, !135
        v139 = cmp eq v137 v138, !154
        cbr v139, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3(), !155

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2():
        v140 = gtf v79, 265, !157
        v141 = bitcast v140 to u64, !158
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v141), !159

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3():
        v142 = const u64 14757395258967588866, !137
        revert v142, !160

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v143: u64):
        v144 = get_local ptr u64, ptr, !162
        v145 = get_local ptr u64, ptr, !164
        v146 = asm(r1, r2, r3: v143) -> u64 r1, !166 {
            addi   r2 r3 i40, !167
            lw     r1 r2 i0, !168
        }
        br transfer_2_transfer_to_address_4_output_amount_11_block9(v146), !169

        transfer_2_transfer_to_address_4_output_amount_11_block7():
        v147 = const u64 14757395258967588866, !97
        revert v147, !170

        transfer_2_transfer_to_address_4_output_amount_11_block9(v148: u64):
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v148), !171

        transfer_2_transfer_to_address_4_output_amount_11_block11(v149: u64):
        v150 = const u64 0, !172
        v151 = cmp eq v149 v150, !174
        v152 = const unit ()
        cbr v151, transfer_2_transfer_to_address_4_block1(), transfer_2_transfer_to_address_4_block5(v152), !175

        transfer_2_transfer_to_address_4_block1():
        v153 = call bits_16(v53), !177
        v154 = get_local ptr u64, index, !179
        v155 = const u64 10, !180
        v156 = asm(r1: v153, r2: v79, r3: v155, r4: v37) {
            tro    r1 r2 r3 r4, !181
        }
        v157 = const unit (), !182
        br transfer_2_block5(v157), !18

        transfer_2_transfer_to_address_4_block5(v158: ()):
        v159 = get_local ptr u64, index, !184
        v160 = const u64 1, !185
        v161 = add v79, v160, !187
        v162 = get_local ptr u64, index, !188
        br transfer_2_transfer_to_address_4_while(v161), !189

        transfer_2_transfer_to_address_4_end_while():
        v163 = const u64 18446744073709486081, !191
        revert v163, !193

        transfer_2_block1():
        v164 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !194
        v165 = const u64 0
        v166 = get_elem_ptr v164, ptr u64, v165, !195
        v167 = load v166, !18
        v168 = const u64 1, !23
        v169 = cmp eq v167 v168, !197
        cbr v169, transfer_2_block2(), transfer_2_block3(), !198

        transfer_2_block2():
        v170 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !199
        v171 = const u64 1
        v172 = const u64 1
        v173 = get_elem_ptr v170, ptr { b256 }, v171, v172, !18
        v174 = load v173, !18
        v175 = get_local ptr { b256 }, id, !201
        store v174 to v175, !202
        v176 = get_local ptr { b256 }, id, !204
        v177 = load v176, !18
        v178 = call bits_16(v177), !207
        v179 = asm(r1: v155, r2: v37, r3: v178) {
            tr     r3 r1 r2, !208
        }
        v180 = const unit ()
        br transfer_2_block5(v180), !18

        transfer_2_block3():
        v181 = const u64 14757395258967588866, !20
        revert v181, !209

        transfer_2_block5(v182: ()):
        v183 = const unit ()
        ret () v183
    }

    pub fn from_0(bits !211: b256) -> { b256 }, !212 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !213
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !213
        v3 = load v0
        ret { b256 } v3
    }

    pub fn from_1(bits !215: b256) -> { b256 }, !216 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !217
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !217
        v3 = load v0
        ret { b256 } v3
    }

    pub fn transfer_2(to !218: { u64, ( { b256 } | { b256 } ) }, asset_id !219: { b256 }, amount !220: u64) -> (), !221 {
        local { u64, ( { b256 } | { b256 } ) } __matched_value_1
        local { u64 } __matched_value_2
        local { u64 } __matched_value_20
        local { u64 } __matched_value_3
        local { u64 } __matched_value_4
        local { b256 } addr
        local { b256 } id
        local mut u64 index
        local u64 number_of_outputs
        local u64 ptr

        entry(to: { u64, ( { b256 } | { b256 } ) }, asset_id: { b256 }, amount: u64):
        v0 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !20
        store to to v0, !20
        v1 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !23
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr u64, v2, !23
        v4 = load v3
        v5 = const u64 0, !23
        v6 = cmp eq v4 v5, !26
        cbr v6, block0(), block1(), !26

        block0():
        v7 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !23
        v8 = const u64 1
        v9 = const u64 0
        v10 = get_elem_ptr v7, ptr { b256 }, v8, v9
        v11 = load v10
        v12 = get_local ptr { b256 }, addr, !30
        store v11 to v12, !30
        v13 = get_local ptr { b256 }, addr, !33
        v14 = load v13
        v15 = get_local ptr u64, index, !222
        v16 = call tx_type_6(), !223
        v17 = get_local ptr { u64 }, __matched_value_3, !224
        store v16 to v17, !225
        v18 = get_local ptr { u64 }, __matched_value_3, !226
        v19 = const u64 0
        v20 = get_elem_ptr v18, ptr u64, v19, !227
        v21 = load v20, !228
        v22 = const u64 0, !40
        v23 = cmp eq v21 v22, !229
        cbr v23, transfer_to_address_4_output_count_5_block0(), transfer_to_address_4_output_count_5_block1(), !230

        transfer_to_address_4_output_count_5_block0():
        v24 = const u64 0, !51
        v25 = gtf v24, 6, !231
        v26 = bitcast v25 to u64, !232
        br transfer_to_address_4_output_count_5_block5(v26), !233

        transfer_to_address_4_output_count_5_block1():
        v27 = get_local ptr { u64 }, __matched_value_3, !234
        v28 = const u64 0
        v29 = get_elem_ptr v27, ptr u64, v28, !235
        v30 = load v29, !236
        v31 = const u64 1, !40
        v32 = cmp eq v30 v31, !237
        cbr v32, transfer_to_address_4_output_count_5_block2(), transfer_to_address_4_output_count_5_block3(), !238

        transfer_to_address_4_output_count_5_block2():
        v33 = const u64 0, !62
        v34 = gtf v33, 260, !239
        v35 = bitcast v34 to u64, !240
        br transfer_to_address_4_output_count_5_block5(v35), !241

        transfer_to_address_4_output_count_5_block3():
        v36 = const u64 14757395258967588866, !42
        revert v36, !242

        transfer_to_address_4_output_count_5_block5(v37: u64):
        v38 = get_local ptr u64, number_of_outputs, !243
        v39 = const u64 0, !70
        br transfer_to_address_4_while(v39), !35

        transfer_to_address_4_while(v40: u64):
        v41 = get_local ptr u64, index, !244
        v42 = get_local ptr u64, number_of_outputs, !245
        v43 = cmp lt v40 v37, !246
        cbr v43, transfer_to_address_4_while_body(), transfer_to_address_4_end_while(), !35

        transfer_to_address_4_while_body():
        v44 = get_local ptr u64, index, !247
        v45 = call output_type_10(v40), !248
        v46 = get_local ptr { u64 }, __matched_value_2, !249
        store v45 to v46, !250
        v47 = get_local ptr { u64 }, __matched_value_2, !251
        v48 = const u64 0
        v49 = get_elem_ptr v47, ptr u64, v48, !252
        v50 = load v49, !35
        v51 = const u64 3, !81
        v52 = cmp eq v50 v51, !253
        v53 = const unit ()
        cbr v52, transfer_to_address_4_block0(), transfer_to_address_4_block5(v53), !254

        transfer_to_address_4_block0():
        v54 = get_local ptr u64, index, !255
        v55 = call output_type_10(v40), !256
        v56 = get_local ptr { u64 }, __matched_value_4, !257
        store v55 to v56, !258
        v57 = get_local ptr { u64 }, __matched_value_4, !259
        v58 = const u64 0
        v59 = get_elem_ptr v57, ptr u64, v58, !260
        v60 = load v59, !261
        v61 = const u64 0, !95
        v62 = cmp eq v60 v61, !262
        cbr v62, transfer_to_address_4_output_amount_11_block0(), transfer_to_address_4_output_amount_11_block1(), !263

        transfer_to_address_4_output_amount_11_block0():
        v63 = gtf v40, 770, !264
        v64 = bitcast v63 to u64, !265
        br transfer_to_address_4_output_amount_11_block11(v64), !266

        transfer_to_address_4_output_amount_11_block1():
        v65 = get_local ptr { u64 }, __matched_value_4, !267
        v66 = const u64 0
        v67 = get_elem_ptr v65, ptr u64, v66, !268
        v68 = load v67, !269
        v69 = const u64 1, !95
        v70 = cmp eq v68 v69, !270
        cbr v70, transfer_to_address_4_output_amount_11_block2(), transfer_to_address_4_output_amount_11_block3(), !271

        transfer_to_address_4_output_amount_11_block2():
        v71 = const u64 0, !116
        revert v71, !272

        transfer_to_address_4_output_amount_11_block3():
        v72 = get_local ptr { u64 }, __matched_value_4, !273
        v73 = const u64 0
        v74 = get_elem_ptr v72, ptr u64, v73, !274
        v75 = load v74, !275
        v76 = const u64 2, !95
        v77 = cmp eq v75 v76, !276
        v78 = const u64 0, !126
        cbr v77, transfer_to_address_4_output_amount_11_block9(v78), transfer_to_address_4_output_amount_11_block5(), !277

        transfer_to_address_4_output_amount_11_block5():
        v79 = get_local ptr { u64 }, __matched_value_4, !278
        v80 = const u64 0
        v81 = get_elem_ptr v79, ptr u64, v80, !279
        v82 = load v81, !280
        v83 = const u64 3, !95
        v84 = cmp eq v82 v83, !281
        cbr v84, transfer_to_address_4_output_amount_11_block6(), transfer_to_address_4_output_amount_11_block7(), !282

        transfer_to_address_4_output_amount_11_block6():
        v85 = call tx_type_6(), !283
        v86 = get_local ptr { u64 }, __matched_value_20, !284
        store v85 to v86, !285
        v87 = get_local ptr { u64 }, __matched_value_20, !286
        v88 = const u64 0
        v89 = get_elem_ptr v87, ptr u64, v88, !287
        v90 = load v89, !288
        v91 = const u64 0, !135
        v92 = cmp eq v90 v91, !289
        cbr v92, transfer_to_address_4_output_amount_11_output_pointer_12_block0(), transfer_to_address_4_output_amount_11_output_pointer_12_block1(), !290

        transfer_to_address_4_output_amount_11_output_pointer_12_block0():
        v93 = gtf v40, 12, !291
        v94 = bitcast v93 to u64, !292
        br transfer_to_address_4_output_amount_11_output_pointer_12_block5(v94), !293

        transfer_to_address_4_output_amount_11_output_pointer_12_block1():
        v95 = get_local ptr { u64 }, __matched_value_20, !294
        v96 = const u64 0
        v97 = get_elem_ptr v95, ptr u64, v96, !295
        v98 = load v97, !296
        v99 = const u64 1, !135
        v100 = cmp eq v98 v99, !297
        cbr v100, transfer_to_address_4_output_amount_11_output_pointer_12_block2(), transfer_to_address_4_output_amount_11_output_pointer_12_block3(), !298

        transfer_to_address_4_output_amount_11_output_pointer_12_block2():
        v101 = gtf v40, 265, !299
        v102 = bitcast v101 to u64, !300
        br transfer_to_address_4_output_amount_11_output_pointer_12_block5(v102), !301

        transfer_to_address_4_output_amount_11_output_pointer_12_block3():
        v103 = const u64 14757395258967588866, !137
        revert v103, !302

        transfer_to_address_4_output_amount_11_output_pointer_12_block5(v104: u64):
        v105 = get_local ptr u64, ptr, !303
        v106 = get_local ptr u64, ptr, !304
        v107 = asm(r1, r2, r3: v104) -> u64 r1, !305 {
            addi   r2 r3 i40, !167
            lw     r1 r2 i0, !168
        }
        br transfer_to_address_4_output_amount_11_block9(v107), !306

        transfer_to_address_4_output_amount_11_block7():
        v108 = const u64 14757395258967588866, !97
        revert v108, !307

        transfer_to_address_4_output_amount_11_block9(v109: u64):
        br transfer_to_address_4_output_amount_11_block11(v109), !308

        transfer_to_address_4_output_amount_11_block11(v110: u64):
        v111 = const u64 0, !172
        v112 = cmp eq v110 v111, !309
        v113 = const unit ()
        cbr v112, transfer_to_address_4_block1(), transfer_to_address_4_block5(v113), !310

        transfer_to_address_4_block1():
        v114 = call bits_16(v14), !311
        v115 = get_local ptr u64, index, !312
        v116 = asm(r1: v114, r2: v40, r3: amount, r4: asset_id) {
            tro    r1 r2 r3 r4, !181
        }
        v117 = const unit (), !182
        br block5(v117)

        transfer_to_address_4_block5(v118: ()):
        v119 = get_local ptr u64, index, !313
        v120 = const u64 1, !185
        v121 = add v40, v120, !314
        v122 = get_local ptr u64, index, !315
        br transfer_to_address_4_while(v121), !35

        transfer_to_address_4_end_while():
        v123 = const u64 18446744073709486081, !191
        revert v123, !316

        block1():
        v124 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !23
        v125 = const u64 0
        v126 = get_elem_ptr v124, ptr u64, v125, !23
        v127 = load v126
        v128 = const u64 1, !23
        v129 = cmp eq v127 v128, !196
        cbr v129, block2(), block3(), !196

        block2():
        v130 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !23
        v131 = const u64 1
        v132 = const u64 1
        v133 = get_elem_ptr v130, ptr { b256 }, v131, v132
        v134 = load v133
        v135 = get_local ptr { b256 }, id, !200
        store v134 to v135, !200
        v136 = get_local ptr { b256 }, id, !203
        v137 = load v136
        v138 = call bits_16(v137), !317
        v139 = asm(r1: amount, r2: asset_id, r3: v138) {
            tr     r3 r1 r2, !208
        }
        v140 = const unit ()
        br block5(v140)

        block3():
        v141 = const u64 14757395258967588866, !20
        revert v141, !20

        block5(v142: ()):
        v143 = const unit ()
        ret () v143
    }

    pub fn eq_3(self !319: u64, other !320: u64) -> bool, !321 {
        entry(self: u64, other: u64):
        v0 = cmp eq self other
        ret bool v0
    }

    fn transfer_to_address_4(to !322: { b256 }, asset_id !323: { b256 }, amount !324: u64) -> (), !325 {
        local { u64 } __matched_value_2
        local { u64 } __matched_value_20
        local { u64 } __matched_value_3
        local { u64 } __matched_value_4
        local mut u64 index
        local u64 number_of_outputs
        local u64 ptr

        entry(to: { b256 }, asset_id: { b256 }, amount: u64):
        v0 = get_local ptr u64, index, !36
        v1 = call tx_type_6(), !326
        v2 = get_local ptr { u64 }, __matched_value_3, !327
        store v1 to v2, !328
        v3 = get_local ptr { u64 }, __matched_value_3, !329
        v4 = const u64 0
        v5 = get_elem_ptr v3, ptr u64, v4, !330
        v6 = load v5, !38
        v7 = const u64 0, !40
        v8 = cmp eq v6 v7, !331
        cbr v8, output_count_5_block0(), output_count_5_block1(), !332

        output_count_5_block0():
        v9 = const u64 0, !51
        v10 = gtf v9, 6, !333
        v11 = bitcast v10 to u64, !334
        br output_count_5_block5(v11), !38

        output_count_5_block1():
        v12 = get_local ptr { u64 }, __matched_value_3, !335
        v13 = const u64 0
        v14 = get_elem_ptr v12, ptr u64, v13, !336
        v15 = load v14, !38
        v16 = const u64 1, !40
        v17 = cmp eq v15 v16, !337
        cbr v17, output_count_5_block2(), output_count_5_block3(), !338

        output_count_5_block2():
        v18 = const u64 0, !62
        v19 = gtf v18, 260, !339
        v20 = bitcast v19 to u64, !340
        br output_count_5_block5(v20), !38

        output_count_5_block3():
        v21 = const u64 14757395258967588866, !42
        revert v21, !341

        output_count_5_block5(v22: u64):
        v23 = get_local ptr u64, number_of_outputs, !68
        v24 = const u64 0, !70
        br while(v24)

        while(v25: u64):
        v26 = get_local ptr u64, index, !72
        v27 = get_local ptr u64, number_of_outputs, !74
        v28 = cmp lt v25 v22, !76
        cbr v28, while_body(), end_while()

        while_body():
        v29 = get_local ptr u64, index, !79
        v30 = call output_type_10(v25), !81
        v31 = get_local ptr { u64 }, __matched_value_2, !83
        store v30 to v31, !83
        v32 = get_local ptr { u64 }, __matched_value_2, !81
        v33 = const u64 0
        v34 = get_elem_ptr v32, ptr u64, v33, !81
        v35 = load v34
        v36 = const u64 3, !81
        v37 = cmp eq v35 v36, !89
        v38 = const unit ()
        cbr v37, block0(), block5(v38), !89

        block0():
        v39 = get_local ptr u64, index, !92
        v40 = call output_type_10(v25), !342
        v41 = get_local ptr { u64 }, __matched_value_4, !343
        store v40 to v41, !344
        v42 = get_local ptr { u64 }, __matched_value_4, !345
        v43 = const u64 0
        v44 = get_elem_ptr v42, ptr u64, v43, !346
        v45 = load v44, !94
        v46 = const u64 0, !95
        v47 = cmp eq v45 v46, !347
        cbr v47, output_amount_11_block0(), output_amount_11_block1(), !348

        output_amount_11_block0():
        v48 = gtf v25, 770, !349
        v49 = bitcast v48 to u64, !350
        br output_amount_11_block11(v49), !94

        output_amount_11_block1():
        v50 = get_local ptr { u64 }, __matched_value_4, !351
        v51 = const u64 0
        v52 = get_elem_ptr v50, ptr u64, v51, !352
        v53 = load v52, !94
        v54 = const u64 1, !95
        v55 = cmp eq v53 v54, !353
        cbr v55, output_amount_11_block2(), output_amount_11_block3(), !354

        output_amount_11_block2():
        v56 = const u64 0, !116
        revert v56, !355

        output_amount_11_block3():
        v57 = get_local ptr { u64 }, __matched_value_4, !356
        v58 = const u64 0
        v59 = get_elem_ptr v57, ptr u64, v58, !357
        v60 = load v59, !94
        v61 = const u64 2, !95
        v62 = cmp eq v60 v61, !358
        v63 = const u64 0, !126
        cbr v62, output_amount_11_block9(v63), output_amount_11_block5(), !359

        output_amount_11_block5():
        v64 = get_local ptr { u64 }, __matched_value_4, !360
        v65 = const u64 0
        v66 = get_elem_ptr v64, ptr u64, v65, !361
        v67 = load v66, !94
        v68 = const u64 3, !95
        v69 = cmp eq v67 v68, !362
        cbr v69, output_amount_11_block6(), output_amount_11_block7(), !363

        output_amount_11_block6():
        v70 = call tx_type_6(), !364
        v71 = get_local ptr { u64 }, __matched_value_20, !365
        store v70 to v71, !366
        v72 = get_local ptr { u64 }, __matched_value_20, !367
        v73 = const u64 0
        v74 = get_elem_ptr v72, ptr u64, v73, !368
        v75 = load v74, !369
        v76 = const u64 0, !135
        v77 = cmp eq v75 v76, !370
        cbr v77, output_amount_11_output_pointer_12_block0(), output_amount_11_output_pointer_12_block1(), !371

        output_amount_11_output_pointer_12_block0():
        v78 = gtf v25, 12, !372
        v79 = bitcast v78 to u64, !373
        br output_amount_11_output_pointer_12_block5(v79), !374

        output_amount_11_output_pointer_12_block1():
        v80 = get_local ptr { u64 }, __matched_value_20, !375
        v81 = const u64 0
        v82 = get_elem_ptr v80, ptr u64, v81, !376
        v83 = load v82, !377
        v84 = const u64 1, !135
        v85 = cmp eq v83 v84, !378
        cbr v85, output_amount_11_output_pointer_12_block2(), output_amount_11_output_pointer_12_block3(), !379

        output_amount_11_output_pointer_12_block2():
        v86 = gtf v25, 265, !380
        v87 = bitcast v86 to u64, !381
        br output_amount_11_output_pointer_12_block5(v87), !382

        output_amount_11_output_pointer_12_block3():
        v88 = const u64 14757395258967588866, !137
        revert v88, !383

        output_amount_11_output_pointer_12_block5(v89: u64):
        v90 = get_local ptr u64, ptr, !384
        v91 = get_local ptr u64, ptr, !385
        v92 = asm(r1, r2, r3: v89) -> u64 r1, !386 {
            addi   r2 r3 i40, !167
            lw     r1 r2 i0, !168
        }
        br output_amount_11_block9(v92), !94

        output_amount_11_block7():
        v93 = const u64 14757395258967588866, !97
        revert v93, !387

        output_amount_11_block9(v94: u64):
        br output_amount_11_block11(v94), !94

        output_amount_11_block11(v95: u64):
        v96 = const u64 0, !172
        v97 = cmp eq v95 v96, !173
        v98 = const unit ()
        cbr v97, block1(), block5(v98), !173

        block1():
        v99 = call bits_16(to), !176
        v100 = get_local ptr u64, index, !178
        v101 = asm(r1: v99, r2: v25, r3: amount, r4: asset_id) {
            tro    r1 r2 r3 r4, !181
        }
        v102 = const unit (), !182
        ret () v102, !182

        block5(v103: ()):
        v104 = get_local ptr u64, index, !183
        v105 = const u64 1, !185
        v106 = add v25, v105, !186
        v107 = get_local ptr u64, index, !186
        br while(v106)

        end_while():
        v108 = const u64 18446744073709486081, !191
        revert v108, !388
    }

    pub fn output_count_5() -> u64, !389 {
        local { u64 } __matched_value_3

        entry():
        v0 = call tx_type_6(), !40
        v1 = get_local ptr { u64 }, __matched_value_3, !42
        store v0 to v1, !42
        v2 = get_local ptr { u64 }, __matched_value_3, !40
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !40
        v5 = load v4
        v6 = const u64 0, !40
        v7 = cmp eq v5 v6, !48
        cbr v7, block0(), block1(), !48

        block0():
        v8 = const u64 0, !51
        v9 = gtf v8, 6, !52
        v10 = bitcast v9 to u64, !52
        br block5(v10)

        block1():
        v11 = get_local ptr { u64 }, __matched_value_3, !40
        v12 = const u64 0
        v13 = get_elem_ptr v11, ptr u64, v12, !40
        v14 = load v13
        v15 = const u64 1, !40
        v16 = cmp eq v14 v15, !59
        cbr v16, block2(), block3(), !59

        block2():
        v17 = const u64 0, !62
        v18 = gtf v17, 260, !63
        v19 = bitcast v18 to u64, !63
        br block5(v19)

        block3():
        v20 = const u64 14757395258967588866, !42
        revert v20, !42

        block5(v21: u64):
        ret u64 v21
    }

    pub fn tx_type_6() -> { u64 }, !391 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local u8 __matched_value_1

        entry():
        v0 = const u64 0, !392
        v1 = gtf v0, 1, !393
        v2 = bitcast v1 to u8, !393
        v3 = get_local ptr u8, __matched_value_1, !394
        v4 = get_local ptr u8, __matched_value_1, !393
        v5 = const u8 0, !395
        v6 = cmp eq v2 v5, !396
        cbr v6, block0(), block1(), !396

        block0():
        v7 = get_local ptr { u64 }, __anon_0, !397
        v8 = const u64 0
        v9 = get_elem_ptr v7, ptr u64, v8, !397
        v10 = const u64 0, !397
        store v10 to v9, !397
        v11 = load v7
        br block5(v11)

        block1():
        v12 = get_local ptr u8, __matched_value_1, !393
        v13 = const u8 1, !398
        v14 = cmp eq v2 v13, !399
        cbr v14, block2(), block3(), !399

        block2():
        v15 = get_local ptr { u64 }, __anon_1, !397
        v16 = const u64 0
        v17 = get_elem_ptr v15, ptr u64, v16, !397
        v18 = const u64 1, !397
        store v18 to v17, !397
        v19 = load v15
        br block5(v19)

        block3():
        v20 = const u64 0, !400
        revert v20, !402

        block5(v21: { u64 }):
        ret { u64 } v21
    }

    pub fn eq_7(self !403: u8, other !404: u8) -> bool, !405 {
        entry(self: u8, other: u8):
        v0 = cmp eq self other
        ret bool v0
    }

    pub fn revert_8(code !406: u64) -> never, !407 {
        entry(code: u64):
        revert code, !119
    }

    pub fn lt_9(self !408: u64, other !409: u64) -> bool, !410 {
        entry(self: u64, other: u64):
        v0 = cmp lt self other
        ret bool v0
    }

    pub fn output_type_10(index !411: u64) -> { u64 }, !412 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local { u64 } __anon_3
        local u8 __matched_value_1

        entry(index: u64):
        v0 = gtf index, 768, !413
        v1 = bitcast v0 to u8, !413
        v2 = get_local ptr u8, __matched_value_1, !414
        v3 = get_local ptr u8, __matched_value_1, !413
        v4 = const u8 0, !415
        v5 = cmp eq v1 v4, !416
        cbr v5, block0(), block1(), !416

        block0():
        v6 = get_local ptr { u64 }, __anon_0, !417
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr u64, v7, !417
        v9 = const u64 0, !417
        store v9 to v8, !417
        v10 = load v6
        br block11(v10)

        block1():
        v11 = get_local ptr u8, __matched_value_1, !413
        v12 = const u8 1, !418
        v13 = cmp eq v1 v12, !419
        cbr v13, block2(), block3(), !419

        block2():
        v14 = get_local ptr { u64 }, __anon_1, !417
        v15 = const u64 0
        v16 = get_elem_ptr v14, ptr u64, v15, !417
        v17 = const u64 1, !417
        store v17 to v16, !417
        v18 = load v14
        br block10(v18)

        block3():
        v19 = get_local ptr u8, __matched_value_1, !413
        v20 = const u8 2, !420
        v21 = cmp eq v1 v20, !421
        cbr v21, block4(), block5(), !421

        block4():
        v22 = get_local ptr { u64 }, __anon_2, !417
        v23 = const u64 0
        v24 = get_elem_ptr v22, ptr u64, v23, !417
        v25 = const u64 2, !417
        store v25 to v24, !417
        v26 = load v22
        br block9(v26)

        block5():
        v27 = get_local ptr u8, __matched_value_1, !413
        v28 = const u8 3, !422
        v29 = cmp eq v1 v28, !423
        cbr v29, block6(), block7(), !423

        block6():
        v30 = get_local ptr { u64 }, __anon_3, !417
        v31 = const u64 0
        v32 = get_elem_ptr v30, ptr u64, v31, !417
        v33 = const u64 3, !417
        store v33 to v32, !417
        v34 = load v30
        br block9(v34)

        block7():
        v35 = const u64 0, !424
        revert v35, !426

        block9(v36: { u64 }):
        br block10(v36)

        block10(v37: { u64 }):
        br block11(v37)

        block11(v38: { u64 }):
        ret { u64 } v38
    }

    pub fn output_amount_11(index !427: u64) -> u64, !428 {
        local { u64 } __matched_value_2
        local { u64 } __matched_value_4
        local u64 ptr

        entry(index: u64):
        v0 = call output_type_10(index), !95
        v1 = get_local ptr { u64 }, __matched_value_4, !97
        store v0 to v1, !97
        v2 = get_local ptr { u64 }, __matched_value_4, !95
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !95
        v5 = load v4
        v6 = const u64 0, !95
        v7 = cmp eq v5 v6, !103
        cbr v7, block0(), block1(), !103

        block0():
        v8 = gtf index, 770, !106
        v9 = bitcast v8 to u64, !106
        br block11(v9)

        block1():
        v10 = get_local ptr { u64 }, __matched_value_4, !95
        v11 = const u64 0
        v12 = get_elem_ptr v10, ptr u64, v11, !95
        v13 = load v12
        v14 = const u64 1, !95
        v15 = cmp eq v13 v14, !113
        cbr v15, block2(), block3(), !113

        block2():
        v16 = const u64 0, !116
        revert v16, !429

        block3():
        v17 = get_local ptr { u64 }, __matched_value_4, !95
        v18 = const u64 0
        v19 = get_elem_ptr v17, ptr u64, v18, !95
        v20 = load v19
        v21 = const u64 2, !95
        v22 = cmp eq v20 v21, !124
        v23 = const u64 0, !126
        cbr v22, block9(v23), block5(), !124

        block5():
        v24 = get_local ptr { u64 }, __matched_value_4, !95
        v25 = const u64 0
        v26 = get_elem_ptr v24, ptr u64, v25, !95
        v27 = load v26
        v28 = const u64 3, !95
        v29 = cmp eq v27 v28, !131
        cbr v29, block6(), block7(), !131

        block6():
        v30 = call tx_type_6(), !430
        v31 = get_local ptr { u64 }, __matched_value_2, !431
        store v30 to v31, !432
        v32 = get_local ptr { u64 }, __matched_value_2, !433
        v33 = const u64 0
        v34 = get_elem_ptr v32, ptr u64, v33, !434
        v35 = load v34, !134
        v36 = const u64 0, !135
        v37 = cmp eq v35 v36, !435
        cbr v37, output_pointer_12_block0(), output_pointer_12_block1(), !436

        output_pointer_12_block0():
        v38 = gtf index, 12, !437
        v39 = bitcast v38 to u64, !438
        br output_pointer_12_block5(v39), !134

        output_pointer_12_block1():
        v40 = get_local ptr { u64 }, __matched_value_2, !439
        v41 = const u64 0
        v42 = get_elem_ptr v40, ptr u64, v41, !440
        v43 = load v42, !134
        v44 = const u64 1, !135
        v45 = cmp eq v43 v44, !441
        cbr v45, output_pointer_12_block2(), output_pointer_12_block3(), !442

        output_pointer_12_block2():
        v46 = gtf index, 265, !443
        v47 = bitcast v46 to u64, !444
        br output_pointer_12_block5(v47), !134

        output_pointer_12_block3():
        v48 = const u64 14757395258967588866, !137
        revert v48, !445

        output_pointer_12_block5(v49: u64):
        v50 = get_local ptr u64, ptr, !161
        v51 = get_local ptr u64, ptr, !163
        v52 = asm(r1, r2, r3: v49) -> u64 r1, !165 {
            addi   r2 r3 i40, !167
            lw     r1 r2 i0, !168
        }
        br block9(v52)

        block7():
        v53 = const u64 14757395258967588866, !97
        revert v53, !97

        block9(v54: u64):
        br block11(v54)

        block11(v55: u64):
        ret u64 v55
    }

    pub fn output_pointer_12(index !446: u64) -> u64, !447 {
        local { u64 } __matched_value_2

        entry(index: u64):
        v0 = call tx_type_6(), !135
        v1 = get_local ptr { u64 }, __matched_value_2, !137
        store v0 to v1, !137
        v2 = get_local ptr { u64 }, __matched_value_2, !135
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr u64, v3, !135
        v5 = load v4
        v6 = const u64 0, !135
        v7 = cmp eq v5 v6, !143
        cbr v7, block0(), block1(), !143

        block0():
        v8 = gtf index, 12, !146
        v9 = bitcast v8 to u64, !146
        br block5(v9)

        block1():
        v10 = get_local ptr { u64 }, __matched_value_2, !135
        v11 = const u64 0
        v12 = get_elem_ptr v10, ptr u64, v11, !135
        v13 = load v12
        v14 = const u64 1, !135
        v15 = cmp eq v13 v14, !153
        cbr v15, block2(), block3(), !153

        block2():
        v16 = gtf index, 265, !156
        v17 = bitcast v16 to u64, !156
        br block5(v17)

        block3():
        v18 = const u64 14757395258967588866, !137
        revert v18, !137

        block5(v19: u64):
        ret u64 v19
    }

    pub fn bits_13(self !449: { b256 }) -> b256, !450 {
        entry(self: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !451
        v4 = load v3
        ret b256 v4
    }

    pub fn add_14(self !452: u64, other !453: u64) -> u64, !454 {
        entry(self: u64, other: u64):
        v0 = add self, other
        ret u64 v0
    }

    fn force_transfer_to_contract_15(to !455: { b256 }, asset_id !456: { b256 }, amount !457: u64) -> (), !458 {
        entry(to: { b256 }, asset_id: { b256 }, amount: u64):
        v0 = call bits_16(to), !206
        v1 = asm(r1: amount, r2: asset_id, r3: v0) {
            tr     r3 r1 r2, !208
        }
        v2 = const unit ()
        ret () v2
    }

    pub fn bits_16(self !459: { b256 }) -> b256, !460 {
        entry(self: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !461
        v4 = load v3
        ret b256 v4
    }
}

!0 = "/home/kebradalaonda/p/sway/test/src/e2e_vm_tests/test_programs/should_pass/static_analysis/cei_pattern_violation_in_asm_block_tr/src/main.sw"
!1 = span !0 105 713
!2 = span !0 263 287
!3 = span !0 162 228
!4 = span !0 387 403
!5 = span !0 412 493
!6 = span !0 426 492
!7 = span !0 528 535
!8 = span !0 514 536
!9 = span !0 502 537
!10 = span !0 574 581
!11 = span !0 557 582
!12 = span !0 546 583
!13 = "/home/kebradalaonda/p/sway/sway-lib-std/src/identity.sw"
!14 = span !13 477 548
!15 = span !0 685 689
!16 = span !0 692 697
!17 = span !0 699 705
!18 = span !0 655 706
!19 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset.sw"
!20 = span !19 3829 4011
!21 = (!18 !20)
!22 = (!18 !20)
!23 = span !19 3835 3837
!24 = (!18 !23)
!25 = (!18 !23)
!26 = span !19 3848 3919
!27 = (!18 !26)
!28 = (!18 !26)
!29 = (!18 !23)
!30 = span !19 3866 3870
!31 = (!18 !30)
!32 = (!18 !30)
!33 = span !19 3895 3899
!34 = (!18 !33)
!35 = span !19 3875 3918
!36 = span !19 5877 5895
!37 = (!18 !35 !36)
!38 = span !19 6153 6167
!39 = "/home/kebradalaonda/p/sway/sway-lib-std/src/outputs.sw"
!40 = span !39 3435 3444
!41 = (!18 !35 !38 !40)
!42 = span !39 3429 3600
!43 = (!18 !35 !38 !42)
!44 = (!18 !35 !38 !42)
!45 = (!18 !35 !38 !40)
!46 = (!18 !35 !38 !40)
!47 = (!18 !35 !38)
!48 = span !39 3455 3520
!49 = (!18 !35 !38 !48)
!50 = (!18 !35 !38 !48)
!51 = span !39 3491 3492
!52 = span !39 3478 3519
!53 = (!18 !35 !38 !52)
!54 = (!18 !35 !38 !52)
!55 = (!18 !35 !38)
!56 = (!18 !35 !38 !40)
!57 = (!18 !35 !38 !40)
!58 = (!18 !35 !38)
!59 = span !39 3529 3594
!60 = (!18 !35 !38 !59)
!61 = (!18 !35 !38 !59)
!62 = span !39 3565 3566
!63 = span !39 3552 3593
!64 = (!18 !35 !38 !63)
!65 = (!18 !35 !38 !63)
!66 = (!18 !35 !38)
!67 = (!18 !35 !38 !42)
!68 = span !19 6129 6168
!69 = (!18 !35 !68)
!70 = span !19 5893 5894
!71 = (!18 !35)
!72 = span !19 6179 6184
!73 = (!18 !35 !72)
!74 = span !19 6187 6204
!75 = (!18 !35 !74)
!76 = span !19 6179 6204
!77 = (!18 !35 !76)
!78 = (!18 !35)
!79 = span !19 6253 6258
!80 = (!18 !35 !79)
!81 = span !19 6241 6259
!82 = (!18 !35 !81)
!83 = span !19 6215 6482
!84 = (!18 !35 !83)
!85 = (!18 !35 !83)
!86 = (!18 !35 !81)
!87 = (!18 !35 !81)
!88 = (!18 !35)
!89 = span !19 6222 6482
!90 = (!18 !35 !89)
!91 = (!18 !35 !89)
!92 = span !19 6291 6296
!93 = (!18 !35 !92)
!94 = span !19 6277 6297
!95 = span !39 4543 4561
!96 = (!18 !35 !94 !95)
!97 = span !39 4537 5459
!98 = (!18 !35 !94 !97)
!99 = (!18 !35 !94 !97)
!100 = (!18 !35 !94 !95)
!101 = (!18 !35 !94 !95)
!102 = (!18 !35 !94)
!103 = span !39 4572 4632
!104 = (!18 !35 !94 !103)
!105 = (!18 !35 !94 !103)
!106 = span !39 4588 4631
!107 = (!18 !35 !94 !106)
!108 = (!18 !35 !94 !106)
!109 = (!18 !35 !94)
!110 = (!18 !35 !94 !95)
!111 = (!18 !35 !94 !95)
!112 = (!18 !35 !94)
!113 = span !39 4641 4671
!114 = (!18 !35 !94 !113)
!115 = (!18 !35 !94 !113)
!116 = span !39 4668 4669
!117 = span !39 4661 4670
!118 = "/home/kebradalaonda/p/sway/sway-lib-std/src/revert.sw"
!119 = span !118 691 705
!120 = (!18 !35 !94 !117 !119)
!121 = (!18 !35 !94 !95)
!122 = (!18 !35 !94 !95)
!123 = (!18 !35 !94)
!124 = span !39 5018 5038
!125 = (!18 !35 !94 !124)
!126 = span !39 5036 5037
!127 = (!18 !35 !94 !124)
!128 = (!18 !35 !94 !95)
!129 = (!18 !35 !94 !95)
!130 = (!18 !35 !94)
!131 = span !39 5242 5453
!132 = (!18 !35 !94 !131)
!133 = (!18 !35 !94 !131)
!134 = span !39 5286 5307
!135 = span !39 2773 2782
!136 = (!18 !35 !94 !134 !135)
!137 = span !39 2767 2950
!138 = (!18 !35 !94 !134 !137)
!139 = (!18 !35 !94 !134 !137)
!140 = (!18 !35 !94 !134 !135)
!141 = (!18 !35 !94 !134 !135)
!142 = (!18 !35 !94 !134)
!143 = span !39 2793 2864
!144 = (!18 !35 !94 !134 !143)
!145 = (!18 !35 !94 !134 !143)
!146 = span !39 2816 2863
!147 = (!18 !35 !94 !134 !146)
!148 = (!18 !35 !94 !134 !146)
!149 = (!18 !35 !94 !134)
!150 = (!18 !35 !94 !134 !135)
!151 = (!18 !35 !94 !134 !135)
!152 = (!18 !35 !94 !134)
!153 = span !39 2873 2944
!154 = (!18 !35 !94 !134 !153)
!155 = (!18 !35 !94 !134 !153)
!156 = span !39 2896 2943
!157 = (!18 !35 !94 !134 !156)
!158 = (!18 !35 !94 !134 !156)
!159 = (!18 !35 !94 !134)
!160 = (!18 !35 !94 !134 !137)
!161 = span !39 5276 5308
!162 = (!18 !35 !94 !161)
!163 = span !39 5337 5340
!164 = (!18 !35 !94 !163)
!165 = span !39 5321 5442
!166 = (!18 !35 !94 !165)
!167 = span !39 5360 5374
!168 = span !39 5392 5403
!169 = (!18 !35 !94)
!170 = (!18 !35 !94 !97)
!171 = (!18 !35 !94)
!172 = span !19 6301 6302
!173 = span !19 6277 6302
!174 = (!18 !35 !173)
!175 = (!18 !35 !173)
!176 = span !19 6329 6338
!177 = (!18 !35 !176)
!178 = span !19 6344 6349
!179 = (!18 !35 !178)
!180 = span !0 400 402
!181 = span !19 6399 6414
!182 = span !19 6451 6457
!183 = span !19 6491 6496
!184 = (!18 !35 !183)
!185 = span !19 6500 6501
!186 = span !19 6491 6501
!187 = (!18 !35 !186)
!188 = (!18 !35 !186)
!189 = (!18 !35)
!190 = "/home/kebradalaonda/p/sway/sway-lib-std/src/error_signals.sw"
!191 = span !190 566 587
!192 = span !19 6514 6555
!193 = (!18 !35 !192 !119)
!194 = (!18 !23)
!195 = (!18 !23)
!196 = span !19 3928 4005
!197 = (!18 !196)
!198 = (!18 !196)
!199 = (!18 !23)
!200 = span !19 3949 3951
!201 = (!18 !200)
!202 = (!18 !200)
!203 = span !19 3983 3985
!204 = (!18 !203)
!205 = span !19 3956 4004
!206 = span !19 5029 5038
!207 = (!18 !205 !206)
!208 = span !19 5050 5061
!209 = (!18 !20)
!210 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset_id.sw"
!211 = span !210 1300 1304
!212 = span !210 1292 1349
!213 = span !210 1330 1343
!214 = "/home/kebradalaonda/p/sway/sway-lib-std/src/contract_id.sw"
!215 = span !214 1321 1325
!216 = span !214 1313 1370
!217 = span !214 1351 1364
!218 = span !19 3777 3779
!219 = span !19 3791 3799
!220 = span !19 3810 3816
!221 = span !19 3761 4014
!222 = (!35 !36)
!223 = (!35 !38 !40)
!224 = (!35 !38 !42)
!225 = (!35 !38 !42)
!226 = (!35 !38 !40)
!227 = (!35 !38 !40)
!228 = (!35 !38)
!229 = (!35 !38 !48)
!230 = (!35 !38 !48)
!231 = (!35 !38 !52)
!232 = (!35 !38 !52)
!233 = (!35 !38)
!234 = (!35 !38 !40)
!235 = (!35 !38 !40)
!236 = (!35 !38)
!237 = (!35 !38 !59)
!238 = (!35 !38 !59)
!239 = (!35 !38 !63)
!240 = (!35 !38 !63)
!241 = (!35 !38)
!242 = (!35 !38 !42)
!243 = (!35 !68)
!244 = (!35 !72)
!245 = (!35 !74)
!246 = (!35 !76)
!247 = (!35 !79)
!248 = (!35 !81)
!249 = (!35 !83)
!250 = (!35 !83)
!251 = (!35 !81)
!252 = (!35 !81)
!253 = (!35 !89)
!254 = (!35 !89)
!255 = (!35 !92)
!256 = (!35 !94 !95)
!257 = (!35 !94 !97)
!258 = (!35 !94 !97)
!259 = (!35 !94 !95)
!260 = (!35 !94 !95)
!261 = (!35 !94)
!262 = (!35 !94 !103)
!263 = (!35 !94 !103)
!264 = (!35 !94 !106)
!265 = (!35 !94 !106)
!266 = (!35 !94)
!267 = (!35 !94 !95)
!268 = (!35 !94 !95)
!269 = (!35 !94)
!270 = (!35 !94 !113)
!271 = (!35 !94 !113)
!272 = (!35 !94 !117 !119)
!273 = (!35 !94 !95)
!274 = (!35 !94 !95)
!275 = (!35 !94)
!276 = (!35 !94 !124)
!277 = (!35 !94 !124)
!278 = (!35 !94 !95)
!279 = (!35 !94 !95)
!280 = (!35 !94)
!281 = (!35 !94 !131)
!282 = (!35 !94 !131)
!283 = (!35 !94 !134 !135)
!284 = (!35 !94 !134 !137)
!285 = (!35 !94 !134 !137)
!286 = (!35 !94 !134 !135)
!287 = (!35 !94 !134 !135)
!288 = (!35 !94 !134)
!289 = (!35 !94 !134 !143)
!290 = (!35 !94 !134 !143)
!291 = (!35 !94 !134 !146)
!292 = (!35 !94 !134 !146)
!293 = (!35 !94 !134)
!294 = (!35 !94 !134 !135)
!295 = (!35 !94 !134 !135)
!296 = (!35 !94 !134)
!297 = (!35 !94 !134 !153)
!298 = (!35 !94 !134 !153)
!299 = (!35 !94 !134 !156)
!300 = (!35 !94 !134 !156)
!301 = (!35 !94 !134)
!302 = (!35 !94 !134 !137)
!303 = (!35 !94 !161)
!304 = (!35 !94 !163)
!305 = (!35 !94 !165)
!306 = (!35 !94)
!307 = (!35 !94 !97)
!308 = (!35 !94)
!309 = (!35 !173)
!310 = (!35 !173)
!311 = (!35 !176)
!312 = (!35 !178)
!313 = (!35 !183)
!314 = (!35 !186)
!315 = (!35 !186)
!316 = (!35 !192 !119)
!317 = (!205 !206)
!318 = "/home/kebradalaonda/p/sway/sway-lib-core/src/ops.sw"
!319 = span !318 12645 12649
!320 = span !318 12651 12656
!321 = span !318 12639 12705
!322 = span !19 5752 5754
!323 = span !19 5765 5773
!324 = span !19 5784 5790
!325 = span !19 5729 6558
!326 = (!38 !40)
!327 = (!38 !42)
!328 = (!38 !42)
!329 = (!38 !40)
!330 = (!38 !40)
!331 = (!38 !48)
!332 = (!38 !48)
!333 = (!38 !52)
!334 = (!38 !52)
!335 = (!38 !40)
!336 = (!38 !40)
!337 = (!38 !59)
!338 = (!38 !59)
!339 = (!38 !63)
!340 = (!38 !63)
!341 = (!38 !42)
!342 = (!94 !95)
!343 = (!94 !97)
!344 = (!94 !97)
!345 = (!94 !95)
!346 = (!94 !95)
!347 = (!94 !103)
!348 = (!94 !103)
!349 = (!94 !106)
!350 = (!94 !106)
!351 = (!94 !95)
!352 = (!94 !95)
!353 = (!94 !113)
!354 = (!94 !113)
!355 = (!94 !117 !119)
!356 = (!94 !95)
!357 = (!94 !95)
!358 = (!94 !124)
!359 = (!94 !124)
!360 = (!94 !95)
!361 = (!94 !95)
!362 = (!94 !131)
!363 = (!94 !131)
!364 = (!94 !134 !135)
!365 = (!94 !134 !137)
!366 = (!94 !134 !137)
!367 = (!94 !134 !135)
!368 = (!94 !134 !135)
!369 = (!94 !134)
!370 = (!94 !134 !143)
!371 = (!94 !134 !143)
!372 = (!94 !134 !146)
!373 = (!94 !134 !146)
!374 = (!94 !134)
!375 = (!94 !134 !135)
!376 = (!94 !134 !135)
!377 = (!94 !134)
!378 = (!94 !134 !153)
!379 = (!94 !134 !153)
!380 = (!94 !134 !156)
!381 = (!94 !134 !156)
!382 = (!94 !134)
!383 = (!94 !134 !137)
!384 = (!94 !161)
!385 = (!94 !163)
!386 = (!94 !165)
!387 = (!94 !97)
!388 = (!192 !119)
!389 = span !39 3394 3602
!390 = "/home/kebradalaonda/p/sway/sway-lib-std/src/tx.sw"
!391 = span !390 2271 2445
!392 = span !390 2327 2328
!393 = span !390 2315 2339
!394 = span !390 2309 2443
!395 = span !390 2350 2353
!396 = span !390 2350 2377
!397 = span !390 1445 1616
!398 = span !390 2386 2389
!399 = span !390 2386 2413
!400 = span !390 2434 2435
!401 = span !390 2427 2436
!402 = (!401 !119)
!403 = span !318 12920 12924
!404 = span !318 12926 12931
!405 = span !318 12914 12980
!406 = span !118 669 673
!407 = span !118 655 707
!408 = span !318 15192 15196
!409 = span !318 15198 15203
!410 = span !318 15186 15252
!411 = span !39 1936 1941
!412 = span !39 1917 2165
!413 = span !39 1970 2005
!414 = span !39 1964 2163
!415 = span !39 2016 2019
!416 = span !39 2016 2036
!417 = span !39 956 1170
!418 = span !39 2045 2048
!419 = span !39 2045 2069
!420 = span !39 2078 2081
!421 = span !39 2078 2100
!422 = span !39 2109 2112
!423 = span !39 2109 2133
!424 = span !39 2154 2155
!425 = span !39 2147 2156
!426 = (!425 !119)
!427 = span !39 4512 4517
!428 = span !39 4491 5461
!429 = (!117 !119)
!430 = (!134 !135)
!431 = (!134 !137)
!432 = (!134 !137)
!433 = (!134 !135)
!434 = (!134 !135)
!435 = (!134 !143)
!436 = (!134 !143)
!437 = (!134 !146)
!438 = (!134 !146)
!439 = (!134 !135)
!440 = (!134 !135)
!441 = (!134 !153)
!442 = (!134 !153)
!443 = (!134 !156)
!444 = (!134 !156)
!445 = (!134 !137)
!446 = span !39 2742 2747
!447 = span !39 2720 2952
!448 = "/home/kebradalaonda/p/sway/sway-lib-std/src/address.sw"
!449 = span !448 679 683
!450 = span !448 667 718
!451 = span !448 292 302
!452 = span !318 1050 1054
!453 = span !318 1056 1061
!454 = span !318 1043 1111
!455 = span !19 4941 4943
!456 = span !19 4957 4965
!457 = span !19 4976 4982
!458 = span !19 4911 5070
!459 = span !214 707 711
!460 = span !214 695 746
!461 = span !214 305 315

// IR: [fn-dce] Dead function elimination
contract {
    pub entry fn deposit<2df2cef7>() -> (), !1 {
        local { b256, u64, u64 } __anon_0
        local b256 __anon_1
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64, ( { b256 } | { b256 } ) } __matched_value_1
        local { u64 } __matched_value_2
        local { u64 } __matched_value_20
        local { u64 } __matched_value_3
        local { u64 } __matched_value_4
        local { b256 } addr
        local b256 address
        local u64 amount
        local { b256 } asset
        local { b256 } id
        local mut u64 index
        local u64 number_of_outputs
        local { b256 } pool
        local u64 ptr

        entry():
        v0 = get_local ptr { b256, u64, u64 }, __anon_0, !2
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        v3 = const b256 0x3dba0a4455b598b7655a7fb430883d96c9527ef275b49739e7b0ad12f8280eae, !3
        store v3 to v2, !2
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4
        v6 = const u64 770887415, !2
        store v6 to v5, !2
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr u64, v7
        v9 = const u64 0
        store v9 to v8, !2
        v10 = get_local ptr b256, __anon_1
        v11 = const b256 0x0000000000000000000000000000000000000000000000000000000000000000, !2
        store v11 to v10
        v12 = read_register cgas, !2
        v13 = const u64 0, !2
        v14 = contract_call () deposit v0, v13, v10, v12, !2
        v15 = get_local ptr u64, amount, !4
        v16 = get_local ptr b256, address, !5
        v17 = const b256 0x0000000000000000000000000000000000000000000000000000000000000001, !6
        store v17 to v16, !5
        v18 = get_local ptr b256, address, !7
        v19 = load v18
        v20 = call from_0(v19), !8
        v21 = get_local ptr { b256 }, asset, !9
        store v20 to v21, !9
        v22 = get_local ptr b256, address, !10
        v23 = load v22
        v24 = call from_0(v23), !11
        v25 = get_local ptr { b256 }, pool, !12
        store v24 to v25, !12
        v26 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !14
        v27 = const u64 0
        v28 = get_elem_ptr v26, ptr u64, v27, !14
        v29 = const u64 1, !14
        store v29 to v28, !14
        v30 = get_local ptr { b256 }, pool, !15
        v31 = load v30
        v32 = const u64 1
        v33 = const u64 1
        v34 = get_elem_ptr v26, ptr { b256 }, v32, v33, !14
        store v31 to v34, !14
        v35 = load v26
        v36 = get_local ptr { b256 }, asset, !16
        v37 = load v36
        v38 = get_local ptr u64, amount, !17
        v39 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !21
        store v35 to v39, !22
        v40 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !24
        v41 = const u64 0
        v42 = get_elem_ptr v40, ptr u64, v41, !25
        v43 = load v42, !18
        v44 = const u64 0, !23
        v45 = cmp eq v43 v44, !27
        cbr v45, transfer_2_block0(), transfer_2_block1(), !28

        transfer_2_block0():
        v46 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !29
        v47 = const u64 1
        v48 = const u64 0
        v49 = get_elem_ptr v46, ptr { b256 }, v47, v48, !18
        v50 = load v49, !18
        v51 = get_local ptr { b256 }, addr, !31
        store v50 to v51, !32
        v52 = get_local ptr { b256 }, addr, !34
        v53 = load v52, !18
        v54 = get_local ptr u64, index, !37
        v55 = call tx_type_6(), !41
        v56 = get_local ptr { u64 }, __matched_value_3, !43
        store v55 to v56, !44
        v57 = get_local ptr { u64 }, __matched_value_3, !45
        v58 = const u64 0
        v59 = get_elem_ptr v57, ptr u64, v58, !46
        v60 = load v59, !47
        v61 = const u64 0, !40
        v62 = cmp eq v60 v61, !49
        cbr v62, transfer_2_transfer_to_address_4_output_count_5_block0(), transfer_2_transfer_to_address_4_output_count_5_block1(), !50

        transfer_2_transfer_to_address_4_output_count_5_block0():
        v63 = const u64 0, !51
        v64 = gtf v63, 6, !53
        v65 = bitcast v64 to u64, !54
        br transfer_2_transfer_to_address_4_output_count_5_block5(v65), !55

        transfer_2_transfer_to_address_4_output_count_5_block1():
        v66 = get_local ptr { u64 }, __matched_value_3, !56
        v67 = const u64 0
        v68 = get_elem_ptr v66, ptr u64, v67, !57
        v69 = load v68, !58
        v70 = const u64 1, !40
        v71 = cmp eq v69 v70, !60
        cbr v71, transfer_2_transfer_to_address_4_output_count_5_block2(), transfer_2_transfer_to_address_4_output_count_5_block3(), !61

        transfer_2_transfer_to_address_4_output_count_5_block2():
        v72 = const u64 0, !62
        v73 = gtf v72, 260, !64
        v74 = bitcast v73 to u64, !65
        br transfer_2_transfer_to_address_4_output_count_5_block5(v74), !66

        transfer_2_transfer_to_address_4_output_count_5_block3():
        v75 = const u64 14757395258967588866, !42
        revert v75, !67

        transfer_2_transfer_to_address_4_output_count_5_block5(v76: u64):
        v77 = get_local ptr u64, number_of_outputs, !69
        v78 = const u64 0, !70
        br transfer_2_transfer_to_address_4_while(v78), !71

        transfer_2_transfer_to_address_4_while(v79: u64):
        v80 = get_local ptr u64, index, !73
        v81 = get_local ptr u64, number_of_outputs, !75
        v82 = cmp lt v79 v76, !77
        cbr v82, transfer_2_transfer_to_address_4_while_body(), transfer_2_transfer_to_address_4_end_while(), !78

        transfer_2_transfer_to_address_4_while_body():
        v83 = get_local ptr u64, index, !80
        v84 = call output_type_10(v79), !82
        v85 = get_local ptr { u64 }, __matched_value_2, !84
        store v84 to v85, !85
        v86 = get_local ptr { u64 }, __matched_value_2, !86
        v87 = const u64 0
        v88 = get_elem_ptr v86, ptr u64, v87, !87
        v89 = load v88, !88
        v90 = const u64 3, !81
        v91 = cmp eq v89 v90, !90
        v92 = const unit ()
        cbr v91, transfer_2_transfer_to_address_4_block0(), transfer_2_transfer_to_address_4_block5(v92), !91

        transfer_2_transfer_to_address_4_block0():
        v93 = get_local ptr u64, index, !93
        v94 = call output_type_10(v79), !96
        v95 = get_local ptr { u64 }, __matched_value_4, !98
        store v94 to v95, !99
        v96 = get_local ptr { u64 }, __matched_value_4, !100
        v97 = const u64 0
        v98 = get_elem_ptr v96, ptr u64, v97, !101
        v99 = load v98, !102
        v100 = const u64 0, !95
        v101 = cmp eq v99 v100, !104
        cbr v101, transfer_2_transfer_to_address_4_output_amount_11_block0(), transfer_2_transfer_to_address_4_output_amount_11_block1(), !105

        transfer_2_transfer_to_address_4_output_amount_11_block0():
        v102 = gtf v79, 770, !107
        v103 = bitcast v102 to u64, !108
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v103), !109

        transfer_2_transfer_to_address_4_output_amount_11_block1():
        v104 = get_local ptr { u64 }, __matched_value_4, !110
        v105 = const u64 0
        v106 = get_elem_ptr v104, ptr u64, v105, !111
        v107 = load v106, !112
        v108 = const u64 1, !95
        v109 = cmp eq v107 v108, !114
        cbr v109, transfer_2_transfer_to_address_4_output_amount_11_block2(), transfer_2_transfer_to_address_4_output_amount_11_block3(), !115

        transfer_2_transfer_to_address_4_output_amount_11_block2():
        v110 = const u64 0, !116
        revert v110, !120

        transfer_2_transfer_to_address_4_output_amount_11_block3():
        v111 = get_local ptr { u64 }, __matched_value_4, !121
        v112 = const u64 0
        v113 = get_elem_ptr v111, ptr u64, v112, !122
        v114 = load v113, !123
        v115 = const u64 2, !95
        v116 = cmp eq v114 v115, !125
        v117 = const u64 0, !126
        cbr v116, transfer_2_transfer_to_address_4_output_amount_11_block9(v117), transfer_2_transfer_to_address_4_output_amount_11_block5(), !127

        transfer_2_transfer_to_address_4_output_amount_11_block5():
        v118 = get_local ptr { u64 }, __matched_value_4, !128
        v119 = const u64 0
        v120 = get_elem_ptr v118, ptr u64, v119, !129
        v121 = load v120, !130
        v122 = const u64 3, !95
        v123 = cmp eq v121 v122, !132
        cbr v123, transfer_2_transfer_to_address_4_output_amount_11_block6(), transfer_2_transfer_to_address_4_output_amount_11_block7(), !133

        transfer_2_transfer_to_address_4_output_amount_11_block6():
        v124 = call tx_type_6(), !136
        v125 = get_local ptr { u64 }, __matched_value_20, !138
        store v124 to v125, !139
        v126 = get_local ptr { u64 }, __matched_value_20, !140
        v127 = const u64 0
        v128 = get_elem_ptr v126, ptr u64, v127, !141
        v129 = load v128, !142
        v130 = const u64 0, !135
        v131 = cmp eq v129 v130, !144
        cbr v131, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1(), !145

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0():
        v132 = gtf v79, 12, !147
        v133 = bitcast v132 to u64, !148
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v133), !149

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1():
        v134 = get_local ptr { u64 }, __matched_value_20, !150
        v135 = const u64 0
        v136 = get_elem_ptr v134, ptr u64, v135, !151
        v137 = load v136, !152
        v138 = const u64 1, !135
        v139 = cmp eq v137 v138, !154
        cbr v139, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3(), !155

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2():
        v140 = gtf v79, 265, !157
        v141 = bitcast v140 to u64, !158
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v141), !159

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3():
        v142 = const u64 14757395258967588866, !137
        revert v142, !160

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v143: u64):
        v144 = get_local ptr u64, ptr, !162
        v145 = get_local ptr u64, ptr, !164
        v146 = asm(r1, r2, r3: v143) -> u64 r1, !166 {
            addi   r2 r3 i40, !167
            lw     r1 r2 i0, !168
        }
        br transfer_2_transfer_to_address_4_output_amount_11_block9(v146), !169

        transfer_2_transfer_to_address_4_output_amount_11_block7():
        v147 = const u64 14757395258967588866, !97
        revert v147, !170

        transfer_2_transfer_to_address_4_output_amount_11_block9(v148: u64):
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v148), !171

        transfer_2_transfer_to_address_4_output_amount_11_block11(v149: u64):
        v150 = const u64 0, !172
        v151 = cmp eq v149 v150, !174
        v152 = const unit ()
        cbr v151, transfer_2_transfer_to_address_4_block1(), transfer_2_transfer_to_address_4_block5(v152), !175

        transfer_2_transfer_to_address_4_block1():
        v153 = call bits_16(v53), !177
        v154 = get_local ptr u64, index, !179
        v155 = const u64 10, !180
        v156 = asm(r1: v153, r2: v79, r3: v155, r4: v37) {
            tro    r1 r2 r3 r4, !181
        }
        v157 = const unit (), !182
        br transfer_2_block5(v157), !18

        transfer_2_transfer_to_address_4_block5(v158: ()):
        v159 = get_local ptr u64, index, !184
        v160 = const u64 1, !185
        v161 = add v79, v160, !187
        v162 = get_local ptr u64, index, !188
        br transfer_2_transfer_to_address_4_while(v161), !189

        transfer_2_transfer_to_address_4_end_while():
        v163 = const u64 18446744073709486081, !191
        revert v163, !193

        transfer_2_block1():
        v164 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !194
        v165 = const u64 0
        v166 = get_elem_ptr v164, ptr u64, v165, !195
        v167 = load v166, !18
        v168 = const u64 1, !23
        v169 = cmp eq v167 v168, !197
        cbr v169, transfer_2_block2(), transfer_2_block3(), !198

        transfer_2_block2():
        v170 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !199
        v171 = const u64 1
        v172 = const u64 1
        v173 = get_elem_ptr v170, ptr { b256 }, v171, v172, !18
        v174 = load v173, !18
        v175 = get_local ptr { b256 }, id, !201
        store v174 to v175, !202
        v176 = get_local ptr { b256 }, id, !204
        v177 = load v176, !18
        v178 = call bits_16(v177), !207
        v179 = asm(r1: v155, r2: v37, r3: v178) {
            tr     r3 r1 r2, !208
        }
        v180 = const unit ()
        br transfer_2_block5(v180), !18

        transfer_2_block3():
        v181 = const u64 14757395258967588866, !20
        revert v181, !209

        transfer_2_block5(v182: ()):
        v183 = const unit ()
        ret () v183
    }

    pub fn from_0(bits !211: b256) -> { b256 }, !212 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !213
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !213
        v3 = load v0
        ret { b256 } v3
    }

    pub fn tx_type_6() -> { u64 }, !215 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local u8 __matched_value_1

        entry():
        v0 = const u64 0, !216
        v1 = gtf v0, 1, !217
        v2 = bitcast v1 to u8, !217
        v3 = get_local ptr u8, __matched_value_1, !218
        v4 = get_local ptr u8, __matched_value_1, !217
        v5 = const u8 0, !219
        v6 = cmp eq v2 v5, !220
        cbr v6, block0(), block1(), !220

        block0():
        v7 = get_local ptr { u64 }, __anon_0, !221
        v8 = const u64 0
        v9 = get_elem_ptr v7, ptr u64, v8, !221
        v10 = const u64 0, !221
        store v10 to v9, !221
        v11 = load v7
        br block5(v11)

        block1():
        v12 = get_local ptr u8, __matched_value_1, !217
        v13 = const u8 1, !222
        v14 = cmp eq v2 v13, !223
        cbr v14, block2(), block3(), !223

        block2():
        v15 = get_local ptr { u64 }, __anon_1, !221
        v16 = const u64 0
        v17 = get_elem_ptr v15, ptr u64, v16, !221
        v18 = const u64 1, !221
        store v18 to v17, !221
        v19 = load v15
        br block5(v19)

        block3():
        v20 = const u64 0, !224
        revert v20, !226

        block5(v21: { u64 }):
        ret { u64 } v21
    }

    pub fn output_type_10(index !227: u64) -> { u64 }, !228 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local { u64 } __anon_3
        local u8 __matched_value_1

        entry(index: u64):
        v0 = gtf index, 768, !229
        v1 = bitcast v0 to u8, !229
        v2 = get_local ptr u8, __matched_value_1, !230
        v3 = get_local ptr u8, __matched_value_1, !229
        v4 = const u8 0, !231
        v5 = cmp eq v1 v4, !232
        cbr v5, block0(), block1(), !232

        block0():
        v6 = get_local ptr { u64 }, __anon_0, !233
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr u64, v7, !233
        v9 = const u64 0, !233
        store v9 to v8, !233
        v10 = load v6
        br block11(v10)

        block1():
        v11 = get_local ptr u8, __matched_value_1, !229
        v12 = const u8 1, !234
        v13 = cmp eq v1 v12, !235
        cbr v13, block2(), block3(), !235

        block2():
        v14 = get_local ptr { u64 }, __anon_1, !233
        v15 = const u64 0
        v16 = get_elem_ptr v14, ptr u64, v15, !233
        v17 = const u64 1, !233
        store v17 to v16, !233
        v18 = load v14
        br block10(v18)

        block3():
        v19 = get_local ptr u8, __matched_value_1, !229
        v20 = const u8 2, !236
        v21 = cmp eq v1 v20, !237
        cbr v21, block4(), block5(), !237

        block4():
        v22 = get_local ptr { u64 }, __anon_2, !233
        v23 = const u64 0
        v24 = get_elem_ptr v22, ptr u64, v23, !233
        v25 = const u64 2, !233
        store v25 to v24, !233
        v26 = load v22
        br block9(v26)

        block5():
        v27 = get_local ptr u8, __matched_value_1, !229
        v28 = const u8 3, !238
        v29 = cmp eq v1 v28, !239
        cbr v29, block6(), block7(), !239

        block6():
        v30 = get_local ptr { u64 }, __anon_3, !233
        v31 = const u64 0
        v32 = get_elem_ptr v30, ptr u64, v31, !233
        v33 = const u64 3, !233
        store v33 to v32, !233
        v34 = load v30
        br block9(v34)

        block7():
        v35 = const u64 0, !240
        revert v35, !242

        block9(v36: { u64 }):
        br block10(v36)

        block10(v37: { u64 }):
        br block11(v37)

        block11(v38: { u64 }):
        ret { u64 } v38
    }

    pub fn bits_16(self !244: { b256 }) -> b256, !245 {
        entry(self: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !246
        v4 = load v3
        ret b256 v4
    }
}

!0 = "/home/kebradalaonda/p/sway/test/src/e2e_vm_tests/test_programs/should_pass/static_analysis/cei_pattern_violation_in_asm_block_tr/src/main.sw"
!1 = span !0 105 713
!2 = span !0 263 287
!3 = span !0 162 228
!4 = span !0 387 403
!5 = span !0 412 493
!6 = span !0 426 492
!7 = span !0 528 535
!8 = span !0 514 536
!9 = span !0 502 537
!10 = span !0 574 581
!11 = span !0 557 582
!12 = span !0 546 583
!13 = "/home/kebradalaonda/p/sway/sway-lib-std/src/identity.sw"
!14 = span !13 477 548
!15 = span !0 685 689
!16 = span !0 692 697
!17 = span !0 699 705
!18 = span !0 655 706
!19 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset.sw"
!20 = span !19 3829 4011
!21 = (!18 !20)
!22 = (!18 !20)
!23 = span !19 3835 3837
!24 = (!18 !23)
!25 = (!18 !23)
!26 = span !19 3848 3919
!27 = (!18 !26)
!28 = (!18 !26)
!29 = (!18 !23)
!30 = span !19 3866 3870
!31 = (!18 !30)
!32 = (!18 !30)
!33 = span !19 3895 3899
!34 = (!18 !33)
!35 = span !19 3875 3918
!36 = span !19 5877 5895
!37 = (!18 !35 !36)
!38 = span !19 6153 6167
!39 = "/home/kebradalaonda/p/sway/sway-lib-std/src/outputs.sw"
!40 = span !39 3435 3444
!41 = (!18 !35 !38 !40)
!42 = span !39 3429 3600
!43 = (!18 !35 !38 !42)
!44 = (!18 !35 !38 !42)
!45 = (!18 !35 !38 !40)
!46 = (!18 !35 !38 !40)
!47 = (!18 !35 !38)
!48 = span !39 3455 3520
!49 = (!18 !35 !38 !48)
!50 = (!18 !35 !38 !48)
!51 = span !39 3491 3492
!52 = span !39 3478 3519
!53 = (!18 !35 !38 !52)
!54 = (!18 !35 !38 !52)
!55 = (!18 !35 !38)
!56 = (!18 !35 !38 !40)
!57 = (!18 !35 !38 !40)
!58 = (!18 !35 !38)
!59 = span !39 3529 3594
!60 = (!18 !35 !38 !59)
!61 = (!18 !35 !38 !59)
!62 = span !39 3565 3566
!63 = span !39 3552 3593
!64 = (!18 !35 !38 !63)
!65 = (!18 !35 !38 !63)
!66 = (!18 !35 !38)
!67 = (!18 !35 !38 !42)
!68 = span !19 6129 6168
!69 = (!18 !35 !68)
!70 = span !19 5893 5894
!71 = (!18 !35)
!72 = span !19 6179 6184
!73 = (!18 !35 !72)
!74 = span !19 6187 6204
!75 = (!18 !35 !74)
!76 = span !19 6179 6204
!77 = (!18 !35 !76)
!78 = (!18 !35)
!79 = span !19 6253 6258
!80 = (!18 !35 !79)
!81 = span !19 6241 6259
!82 = (!18 !35 !81)
!83 = span !19 6215 6482
!84 = (!18 !35 !83)
!85 = (!18 !35 !83)
!86 = (!18 !35 !81)
!87 = (!18 !35 !81)
!88 = (!18 !35)
!89 = span !19 6222 6482
!90 = (!18 !35 !89)
!91 = (!18 !35 !89)
!92 = span !19 6291 6296
!93 = (!18 !35 !92)
!94 = span !19 6277 6297
!95 = span !39 4543 4561
!96 = (!18 !35 !94 !95)
!97 = span !39 4537 5459
!98 = (!18 !35 !94 !97)
!99 = (!18 !35 !94 !97)
!100 = (!18 !35 !94 !95)
!101 = (!18 !35 !94 !95)
!102 = (!18 !35 !94)
!103 = span !39 4572 4632
!104 = (!18 !35 !94 !103)
!105 = (!18 !35 !94 !103)
!106 = span !39 4588 4631
!107 = (!18 !35 !94 !106)
!108 = (!18 !35 !94 !106)
!109 = (!18 !35 !94)
!110 = (!18 !35 !94 !95)
!111 = (!18 !35 !94 !95)
!112 = (!18 !35 !94)
!113 = span !39 4641 4671
!114 = (!18 !35 !94 !113)
!115 = (!18 !35 !94 !113)
!116 = span !39 4668 4669
!117 = span !39 4661 4670
!118 = "/home/kebradalaonda/p/sway/sway-lib-std/src/revert.sw"
!119 = span !118 691 705
!120 = (!18 !35 !94 !117 !119)
!121 = (!18 !35 !94 !95)
!122 = (!18 !35 !94 !95)
!123 = (!18 !35 !94)
!124 = span !39 5018 5038
!125 = (!18 !35 !94 !124)
!126 = span !39 5036 5037
!127 = (!18 !35 !94 !124)
!128 = (!18 !35 !94 !95)
!129 = (!18 !35 !94 !95)
!130 = (!18 !35 !94)
!131 = span !39 5242 5453
!132 = (!18 !35 !94 !131)
!133 = (!18 !35 !94 !131)
!134 = span !39 5286 5307
!135 = span !39 2773 2782
!136 = (!18 !35 !94 !134 !135)
!137 = span !39 2767 2950
!138 = (!18 !35 !94 !134 !137)
!139 = (!18 !35 !94 !134 !137)
!140 = (!18 !35 !94 !134 !135)
!141 = (!18 !35 !94 !134 !135)
!142 = (!18 !35 !94 !134)
!143 = span !39 2793 2864
!144 = (!18 !35 !94 !134 !143)
!145 = (!18 !35 !94 !134 !143)
!146 = span !39 2816 2863
!147 = (!18 !35 !94 !134 !146)
!148 = (!18 !35 !94 !134 !146)
!149 = (!18 !35 !94 !134)
!150 = (!18 !35 !94 !134 !135)
!151 = (!18 !35 !94 !134 !135)
!152 = (!18 !35 !94 !134)
!153 = span !39 2873 2944
!154 = (!18 !35 !94 !134 !153)
!155 = (!18 !35 !94 !134 !153)
!156 = span !39 2896 2943
!157 = (!18 !35 !94 !134 !156)
!158 = (!18 !35 !94 !134 !156)
!159 = (!18 !35 !94 !134)
!160 = (!18 !35 !94 !134 !137)
!161 = span !39 5276 5308
!162 = (!18 !35 !94 !161)
!163 = span !39 5337 5340
!164 = (!18 !35 !94 !163)
!165 = span !39 5321 5442
!166 = (!18 !35 !94 !165)
!167 = span !39 5360 5374
!168 = span !39 5392 5403
!169 = (!18 !35 !94)
!170 = (!18 !35 !94 !97)
!171 = (!18 !35 !94)
!172 = span !19 6301 6302
!173 = span !19 6277 6302
!174 = (!18 !35 !173)
!175 = (!18 !35 !173)
!176 = span !19 6329 6338
!177 = (!18 !35 !176)
!178 = span !19 6344 6349
!179 = (!18 !35 !178)
!180 = span !0 400 402
!181 = span !19 6399 6414
!182 = span !19 6451 6457
!183 = span !19 6491 6496
!184 = (!18 !35 !183)
!185 = span !19 6500 6501
!186 = span !19 6491 6501
!187 = (!18 !35 !186)
!188 = (!18 !35 !186)
!189 = (!18 !35)
!190 = "/home/kebradalaonda/p/sway/sway-lib-std/src/error_signals.sw"
!191 = span !190 566 587
!192 = span !19 6514 6555
!193 = (!18 !35 !192 !119)
!194 = (!18 !23)
!195 = (!18 !23)
!196 = span !19 3928 4005
!197 = (!18 !196)
!198 = (!18 !196)
!199 = (!18 !23)
!200 = span !19 3949 3951
!201 = (!18 !200)
!202 = (!18 !200)
!203 = span !19 3983 3985
!204 = (!18 !203)
!205 = span !19 3956 4004
!206 = span !19 5029 5038
!207 = (!18 !205 !206)
!208 = span !19 5050 5061
!209 = (!18 !20)
!210 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset_id.sw"
!211 = span !210 1300 1304
!212 = span !210 1292 1349
!213 = span !210 1330 1343
!214 = "/home/kebradalaonda/p/sway/sway-lib-std/src/tx.sw"
!215 = span !214 2271 2445
!216 = span !214 2327 2328
!217 = span !214 2315 2339
!218 = span !214 2309 2443
!219 = span !214 2350 2353
!220 = span !214 2350 2377
!221 = span !214 1445 1616
!222 = span !214 2386 2389
!223 = span !214 2386 2413
!224 = span !214 2434 2435
!225 = span !214 2427 2436
!226 = (!225 !119)
!227 = span !39 1936 1941
!228 = span !39 1917 2165
!229 = span !39 1970 2005
!230 = span !39 1964 2163
!231 = span !39 2016 2019
!232 = span !39 2016 2036
!233 = span !39 956 1170
!234 = span !39 2045 2048
!235 = span !39 2045 2069
!236 = span !39 2078 2081
!237 = span !39 2078 2100
!238 = span !39 2109 2112
!239 = span !39 2109 2133
!240 = span !39 2154 2155
!241 = span !39 2147 2156
!242 = (!241 !119)
!243 = "/home/kebradalaonda/p/sway/sway-lib-std/src/contract_id.sw"
!244 = span !243 707 711
!245 = span !243 695 746
!246 = span !243 305 315

// IR: [dce] Dead code elimination
contract {
    pub entry fn deposit<2df2cef7>() -> (), !1 {
        local { b256, u64, u64 } __anon_0
        local b256 __anon_1
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local { u64, ( { b256 } | { b256 } ) } __matched_value_1
        local { u64 } __matched_value_2
        local { u64 } __matched_value_20
        local { u64 } __matched_value_3
        local { u64 } __matched_value_4
        local { b256 } addr
        local b256 address
        local { b256 } asset
        local { b256 } id
        local { b256 } pool

        entry():
        v0 = get_local ptr { b256, u64, u64 }, __anon_0, !2
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        v3 = const b256 0x3dba0a4455b598b7655a7fb430883d96c9527ef275b49739e7b0ad12f8280eae, !3
        store v3 to v2, !2
        v4 = const u64 1
        v5 = get_elem_ptr v0, ptr u64, v4
        v6 = const u64 770887415, !2
        store v6 to v5, !2
        v7 = const u64 2
        v8 = get_elem_ptr v0, ptr u64, v7
        v9 = const u64 0
        store v9 to v8, !2
        v10 = get_local ptr b256, __anon_1
        v11 = const b256 0x0000000000000000000000000000000000000000000000000000000000000000, !2
        store v11 to v10
        v12 = read_register cgas, !2
        v13 = const u64 0, !2
        v14 = contract_call () deposit v0, v13, v10, v12, !2
        v15 = get_local ptr b256, address, !4
        v16 = const b256 0x0000000000000000000000000000000000000000000000000000000000000001, !5
        store v16 to v15, !4
        v17 = get_local ptr b256, address, !6
        v18 = load v17
        v19 = call from_0(v18), !7
        v20 = get_local ptr { b256 }, asset, !8
        store v19 to v20, !8
        v21 = get_local ptr b256, address, !9
        v22 = load v21
        v23 = call from_0(v22), !10
        v24 = get_local ptr { b256 }, pool, !11
        store v23 to v24, !11
        v25 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !13
        v26 = const u64 0
        v27 = get_elem_ptr v25, ptr u64, v26, !13
        v28 = const u64 1, !13
        store v28 to v27, !13
        v29 = get_local ptr { b256 }, pool, !14
        v30 = load v29
        v31 = const u64 1
        v32 = const u64 1
        v33 = get_elem_ptr v25, ptr { b256 }, v31, v32, !13
        store v30 to v33, !13
        v34 = load v25
        v35 = get_local ptr { b256 }, asset, !15
        v36 = load v35
        v37 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !19
        store v34 to v37, !20
        v38 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !22
        v39 = const u64 0
        v40 = get_elem_ptr v38, ptr u64, v39, !23
        v41 = load v40, !16
        v42 = const u64 0, !21
        v43 = cmp eq v41 v42, !25
        cbr v43, transfer_2_block0(), transfer_2_block1(), !26

        transfer_2_block0():
        v44 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !27
        v45 = const u64 1
        v46 = const u64 0
        v47 = get_elem_ptr v44, ptr { b256 }, v45, v46, !16
        v48 = load v47, !16
        v49 = get_local ptr { b256 }, addr, !29
        store v48 to v49, !30
        v50 = get_local ptr { b256 }, addr, !32
        v51 = load v50, !16
        v52 = call tx_type_6(), !37
        v53 = get_local ptr { u64 }, __matched_value_3, !39
        store v52 to v53, !40
        v54 = get_local ptr { u64 }, __matched_value_3, !41
        v55 = const u64 0
        v56 = get_elem_ptr v54, ptr u64, v55, !42
        v57 = load v56, !43
        v58 = const u64 0, !36
        v59 = cmp eq v57 v58, !45
        cbr v59, transfer_2_transfer_to_address_4_output_count_5_block0(), transfer_2_transfer_to_address_4_output_count_5_block1(), !46

        transfer_2_transfer_to_address_4_output_count_5_block0():
        v60 = const u64 0, !47
        v61 = gtf v60, 6, !49
        v62 = bitcast v61 to u64, !50
        br transfer_2_transfer_to_address_4_output_count_5_block5(v62), !51

        transfer_2_transfer_to_address_4_output_count_5_block1():
        v63 = get_local ptr { u64 }, __matched_value_3, !52
        v64 = const u64 0
        v65 = get_elem_ptr v63, ptr u64, v64, !53
        v66 = load v65, !54
        v67 = const u64 1, !36
        v68 = cmp eq v66 v67, !56
        cbr v68, transfer_2_transfer_to_address_4_output_count_5_block2(), transfer_2_transfer_to_address_4_output_count_5_block3(), !57

        transfer_2_transfer_to_address_4_output_count_5_block2():
        v69 = const u64 0, !58
        v70 = gtf v69, 260, !60
        v71 = bitcast v70 to u64, !61
        br transfer_2_transfer_to_address_4_output_count_5_block5(v71), !62

        transfer_2_transfer_to_address_4_output_count_5_block3():
        v72 = const u64 14757395258967588866, !38
        revert v72, !63

        transfer_2_transfer_to_address_4_output_count_5_block5(v73: u64):
        v74 = const u64 0, !64
        br transfer_2_transfer_to_address_4_while(v74), !65

        transfer_2_transfer_to_address_4_while(v75: u64):
        v76 = cmp lt v75 v73, !67
        cbr v76, transfer_2_transfer_to_address_4_while_body(), transfer_2_transfer_to_address_4_end_while(), !68

        transfer_2_transfer_to_address_4_while_body():
        v77 = call output_type_10(v75), !70
        v78 = get_local ptr { u64 }, __matched_value_2, !72
        store v77 to v78, !73
        v79 = get_local ptr { u64 }, __matched_value_2, !74
        v80 = const u64 0
        v81 = get_elem_ptr v79, ptr u64, v80, !75
        v82 = load v81, !76
        v83 = const u64 3, !69
        v84 = cmp eq v82 v83, !78
        v85 = const unit ()
        cbr v84, transfer_2_transfer_to_address_4_block0(), transfer_2_transfer_to_address_4_block5(v85), !79

        transfer_2_transfer_to_address_4_block0():
        v86 = call output_type_10(v75), !82
        v87 = get_local ptr { u64 }, __matched_value_4, !84
        store v86 to v87, !85
        v88 = get_local ptr { u64 }, __matched_value_4, !86
        v89 = const u64 0
        v90 = get_elem_ptr v88, ptr u64, v89, !87
        v91 = load v90, !88
        v92 = const u64 0, !81
        v93 = cmp eq v91 v92, !90
        cbr v93, transfer_2_transfer_to_address_4_output_amount_11_block0(), transfer_2_transfer_to_address_4_output_amount_11_block1(), !91

        transfer_2_transfer_to_address_4_output_amount_11_block0():
        v94 = gtf v75, 770, !93
        v95 = bitcast v94 to u64, !94
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v95), !95

        transfer_2_transfer_to_address_4_output_amount_11_block1():
        v96 = get_local ptr { u64 }, __matched_value_4, !96
        v97 = const u64 0
        v98 = get_elem_ptr v96, ptr u64, v97, !97
        v99 = load v98, !98
        v100 = const u64 1, !81
        v101 = cmp eq v99 v100, !100
        cbr v101, transfer_2_transfer_to_address_4_output_amount_11_block2(), transfer_2_transfer_to_address_4_output_amount_11_block3(), !101

        transfer_2_transfer_to_address_4_output_amount_11_block2():
        v102 = const u64 0, !102
        revert v102, !106

        transfer_2_transfer_to_address_4_output_amount_11_block3():
        v103 = get_local ptr { u64 }, __matched_value_4, !107
        v104 = const u64 0
        v105 = get_elem_ptr v103, ptr u64, v104, !108
        v106 = load v105, !109
        v107 = const u64 2, !81
        v108 = cmp eq v106 v107, !111
        v109 = const u64 0, !112
        cbr v108, transfer_2_transfer_to_address_4_output_amount_11_block9(v109), transfer_2_transfer_to_address_4_output_amount_11_block5(), !113

        transfer_2_transfer_to_address_4_output_amount_11_block5():
        v110 = get_local ptr { u64 }, __matched_value_4, !114
        v111 = const u64 0
        v112 = get_elem_ptr v110, ptr u64, v111, !115
        v113 = load v112, !116
        v114 = const u64 3, !81
        v115 = cmp eq v113 v114, !118
        cbr v115, transfer_2_transfer_to_address_4_output_amount_11_block6(), transfer_2_transfer_to_address_4_output_amount_11_block7(), !119

        transfer_2_transfer_to_address_4_output_amount_11_block6():
        v116 = call tx_type_6(), !122
        v117 = get_local ptr { u64 }, __matched_value_20, !124
        store v116 to v117, !125
        v118 = get_local ptr { u64 }, __matched_value_20, !126
        v119 = const u64 0
        v120 = get_elem_ptr v118, ptr u64, v119, !127
        v121 = load v120, !128
        v122 = const u64 0, !121
        v123 = cmp eq v121 v122, !130
        cbr v123, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1(), !131

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0():
        v124 = gtf v75, 12, !133
        v125 = bitcast v124 to u64, !134
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v125), !135

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1():
        v126 = get_local ptr { u64 }, __matched_value_20, !136
        v127 = const u64 0
        v128 = get_elem_ptr v126, ptr u64, v127, !137
        v129 = load v128, !138
        v130 = const u64 1, !121
        v131 = cmp eq v129 v130, !140
        cbr v131, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3(), !141

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2():
        v132 = gtf v75, 265, !143
        v133 = bitcast v132 to u64, !144
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v133), !145

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3():
        v134 = const u64 14757395258967588866, !123
        revert v134, !146

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v135: u64):
        v136 = asm(r1, r2, r3: v135) -> u64 r1, !148 {
            addi   r2 r3 i40, !149
            lw     r1 r2 i0, !150
        }
        br transfer_2_transfer_to_address_4_output_amount_11_block9(v136), !151

        transfer_2_transfer_to_address_4_output_amount_11_block7():
        v137 = const u64 14757395258967588866, !83
        revert v137, !152

        transfer_2_transfer_to_address_4_output_amount_11_block9(v138: u64):
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v138), !153

        transfer_2_transfer_to_address_4_output_amount_11_block11(v139: u64):
        v140 = const u64 0, !154
        v141 = cmp eq v139 v140, !156
        v142 = const unit ()
        cbr v141, transfer_2_transfer_to_address_4_block1(), transfer_2_transfer_to_address_4_block5(v142), !157

        transfer_2_transfer_to_address_4_block1():
        v143 = call bits_16(v51), !159
        v144 = const u64 10, !160
        v145 = asm(r1: v143, r2: v75, r3: v144, r4: v36) {
            tro    r1 r2 r3 r4, !161
        }
        v146 = const unit (), !162
        br transfer_2_block5(v146), !16

        transfer_2_transfer_to_address_4_block5(v147: ()):
        v148 = const u64 1, !163
        v149 = add v75, v148, !165
        br transfer_2_transfer_to_address_4_while(v149), !166

        transfer_2_transfer_to_address_4_end_while():
        v150 = const u64 18446744073709486081, !168
        revert v150, !170

        transfer_2_block1():
        v151 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !171
        v152 = const u64 0
        v153 = get_elem_ptr v151, ptr u64, v152, !172
        v154 = load v153, !16
        v155 = const u64 1, !21
        v156 = cmp eq v154 v155, !174
        cbr v156, transfer_2_block2(), transfer_2_block3(), !175

        transfer_2_block2():
        v157 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !176
        v158 = const u64 1
        v159 = const u64 1
        v160 = get_elem_ptr v157, ptr { b256 }, v158, v159, !16
        v161 = load v160, !16
        v162 = get_local ptr { b256 }, id, !178
        store v161 to v162, !179
        v163 = get_local ptr { b256 }, id, !181
        v164 = load v163, !16
        v165 = call bits_16(v164), !184
        v166 = asm(r1: v144, r2: v36, r3: v165) {
            tr     r3 r1 r2, !185
        }
        v167 = const unit ()
        br transfer_2_block5(v167), !16

        transfer_2_block3():
        v168 = const u64 14757395258967588866, !18
        revert v168, !186

        transfer_2_block5(v169: ()):
        v170 = const unit ()
        ret () v170
    }

    pub fn from_0(bits !188: b256) -> { b256 }, !189 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !190
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !190
        v3 = load v0
        ret { b256 } v3
    }

    pub fn tx_type_6() -> { u64 }, !192 {
        local { u64 } __anon_0
        local { u64 } __anon_1

        entry():
        v0 = const u64 0, !193
        v1 = gtf v0, 1, !194
        v2 = bitcast v1 to u8, !194
        v3 = const u8 0, !195
        v4 = cmp eq v2 v3, !196
        cbr v4, block0(), block1(), !196

        block0():
        v5 = get_local ptr { u64 }, __anon_0, !197
        v6 = const u64 0
        v7 = get_elem_ptr v5, ptr u64, v6, !197
        v8 = const u64 0, !197
        store v8 to v7, !197
        v9 = load v5
        br block5(v9)

        block1():
        v10 = const u8 1, !198
        v11 = cmp eq v2 v10, !199
        cbr v11, block2(), block3(), !199

        block2():
        v12 = get_local ptr { u64 }, __anon_1, !197
        v13 = const u64 0
        v14 = get_elem_ptr v12, ptr u64, v13, !197
        v15 = const u64 1, !197
        store v15 to v14, !197
        v16 = load v12
        br block5(v16)

        block3():
        v17 = const u64 0, !200
        revert v17, !202

        block5(v18: { u64 }):
        ret { u64 } v18
    }

    pub fn output_type_10(index !203: u64) -> { u64 }, !204 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local { u64 } __anon_3

        entry(index: u64):
        v0 = gtf index, 768, !205
        v1 = bitcast v0 to u8, !205
        v2 = const u8 0, !206
        v3 = cmp eq v1 v2, !207
        cbr v3, block0(), block1(), !207

        block0():
        v4 = get_local ptr { u64 }, __anon_0, !208
        v5 = const u64 0
        v6 = get_elem_ptr v4, ptr u64, v5, !208
        v7 = const u64 0, !208
        store v7 to v6, !208
        v8 = load v4
        br block11(v8)

        block1():
        v9 = const u8 1, !209
        v10 = cmp eq v1 v9, !210
        cbr v10, block2(), block3(), !210

        block2():
        v11 = get_local ptr { u64 }, __anon_1, !208
        v12 = const u64 0
        v13 = get_elem_ptr v11, ptr u64, v12, !208
        v14 = const u64 1, !208
        store v14 to v13, !208
        v15 = load v11
        br block10(v15)

        block3():
        v16 = const u8 2, !211
        v17 = cmp eq v1 v16, !212
        cbr v17, block4(), block5(), !212

        block4():
        v18 = get_local ptr { u64 }, __anon_2, !208
        v19 = const u64 0
        v20 = get_elem_ptr v18, ptr u64, v19, !208
        v21 = const u64 2, !208
        store v21 to v20, !208
        v22 = load v18
        br block9(v22)

        block5():
        v23 = const u8 3, !213
        v24 = cmp eq v1 v23, !214
        cbr v24, block6(), block7(), !214

        block6():
        v25 = get_local ptr { u64 }, __anon_3, !208
        v26 = const u64 0
        v27 = get_elem_ptr v25, ptr u64, v26, !208
        v28 = const u64 3, !208
        store v28 to v27, !208
        v29 = load v25
        br block9(v29)

        block7():
        v30 = const u64 0, !215
        revert v30, !217

        block9(v31: { u64 }):
        br block10(v31)

        block10(v32: { u64 }):
        br block11(v32)

        block11(v33: { u64 }):
        ret { u64 } v33
    }

    pub fn bits_16(self !219: { b256 }) -> b256, !220 {
        entry(self: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !221
        v4 = load v3
        ret b256 v4
    }
}

!0 = "/home/kebradalaonda/p/sway/test/src/e2e_vm_tests/test_programs/should_pass/static_analysis/cei_pattern_violation_in_asm_block_tr/src/main.sw"
!1 = span !0 105 713
!2 = span !0 263 287
!3 = span !0 162 228
!4 = span !0 412 493
!5 = span !0 426 492
!6 = span !0 528 535
!7 = span !0 514 536
!8 = span !0 502 537
!9 = span !0 574 581
!10 = span !0 557 582
!11 = span !0 546 583
!12 = "/home/kebradalaonda/p/sway/sway-lib-std/src/identity.sw"
!13 = span !12 477 548
!14 = span !0 685 689
!15 = span !0 692 697
!16 = span !0 655 706
!17 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset.sw"
!18 = span !17 3829 4011
!19 = (!16 !18)
!20 = (!16 !18)
!21 = span !17 3835 3837
!22 = (!16 !21)
!23 = (!16 !21)
!24 = span !17 3848 3919
!25 = (!16 !24)
!26 = (!16 !24)
!27 = (!16 !21)
!28 = span !17 3866 3870
!29 = (!16 !28)
!30 = (!16 !28)
!31 = span !17 3895 3899
!32 = (!16 !31)
!33 = span !17 3875 3918
!34 = span !17 6153 6167
!35 = "/home/kebradalaonda/p/sway/sway-lib-std/src/outputs.sw"
!36 = span !35 3435 3444
!37 = (!16 !33 !34 !36)
!38 = span !35 3429 3600
!39 = (!16 !33 !34 !38)
!40 = (!16 !33 !34 !38)
!41 = (!16 !33 !34 !36)
!42 = (!16 !33 !34 !36)
!43 = (!16 !33 !34)
!44 = span !35 3455 3520
!45 = (!16 !33 !34 !44)
!46 = (!16 !33 !34 !44)
!47 = span !35 3491 3492
!48 = span !35 3478 3519
!49 = (!16 !33 !34 !48)
!50 = (!16 !33 !34 !48)
!51 = (!16 !33 !34)
!52 = (!16 !33 !34 !36)
!53 = (!16 !33 !34 !36)
!54 = (!16 !33 !34)
!55 = span !35 3529 3594
!56 = (!16 !33 !34 !55)
!57 = (!16 !33 !34 !55)
!58 = span !35 3565 3566
!59 = span !35 3552 3593
!60 = (!16 !33 !34 !59)
!61 = (!16 !33 !34 !59)
!62 = (!16 !33 !34)
!63 = (!16 !33 !34 !38)
!64 = span !17 5893 5894
!65 = (!16 !33)
!66 = span !17 6179 6204
!67 = (!16 !33 !66)
!68 = (!16 !33)
!69 = span !17 6241 6259
!70 = (!16 !33 !69)
!71 = span !17 6215 6482
!72 = (!16 !33 !71)
!73 = (!16 !33 !71)
!74 = (!16 !33 !69)
!75 = (!16 !33 !69)
!76 = (!16 !33)
!77 = span !17 6222 6482
!78 = (!16 !33 !77)
!79 = (!16 !33 !77)
!80 = span !17 6277 6297
!81 = span !35 4543 4561
!82 = (!16 !33 !80 !81)
!83 = span !35 4537 5459
!84 = (!16 !33 !80 !83)
!85 = (!16 !33 !80 !83)
!86 = (!16 !33 !80 !81)
!87 = (!16 !33 !80 !81)
!88 = (!16 !33 !80)
!89 = span !35 4572 4632
!90 = (!16 !33 !80 !89)
!91 = (!16 !33 !80 !89)
!92 = span !35 4588 4631
!93 = (!16 !33 !80 !92)
!94 = (!16 !33 !80 !92)
!95 = (!16 !33 !80)
!96 = (!16 !33 !80 !81)
!97 = (!16 !33 !80 !81)
!98 = (!16 !33 !80)
!99 = span !35 4641 4671
!100 = (!16 !33 !80 !99)
!101 = (!16 !33 !80 !99)
!102 = span !35 4668 4669
!103 = span !35 4661 4670
!104 = "/home/kebradalaonda/p/sway/sway-lib-std/src/revert.sw"
!105 = span !104 691 705
!106 = (!16 !33 !80 !103 !105)
!107 = (!16 !33 !80 !81)
!108 = (!16 !33 !80 !81)
!109 = (!16 !33 !80)
!110 = span !35 5018 5038
!111 = (!16 !33 !80 !110)
!112 = span !35 5036 5037
!113 = (!16 !33 !80 !110)
!114 = (!16 !33 !80 !81)
!115 = (!16 !33 !80 !81)
!116 = (!16 !33 !80)
!117 = span !35 5242 5453
!118 = (!16 !33 !80 !117)
!119 = (!16 !33 !80 !117)
!120 = span !35 5286 5307
!121 = span !35 2773 2782
!122 = (!16 !33 !80 !120 !121)
!123 = span !35 2767 2950
!124 = (!16 !33 !80 !120 !123)
!125 = (!16 !33 !80 !120 !123)
!126 = (!16 !33 !80 !120 !121)
!127 = (!16 !33 !80 !120 !121)
!128 = (!16 !33 !80 !120)
!129 = span !35 2793 2864
!130 = (!16 !33 !80 !120 !129)
!131 = (!16 !33 !80 !120 !129)
!132 = span !35 2816 2863
!133 = (!16 !33 !80 !120 !132)
!134 = (!16 !33 !80 !120 !132)
!135 = (!16 !33 !80 !120)
!136 = (!16 !33 !80 !120 !121)
!137 = (!16 !33 !80 !120 !121)
!138 = (!16 !33 !80 !120)
!139 = span !35 2873 2944
!140 = (!16 !33 !80 !120 !139)
!141 = (!16 !33 !80 !120 !139)
!142 = span !35 2896 2943
!143 = (!16 !33 !80 !120 !142)
!144 = (!16 !33 !80 !120 !142)
!145 = (!16 !33 !80 !120)
!146 = (!16 !33 !80 !120 !123)
!147 = span !35 5321 5442
!148 = (!16 !33 !80 !147)
!149 = span !35 5360 5374
!150 = span !35 5392 5403
!151 = (!16 !33 !80)
!152 = (!16 !33 !80 !83)
!153 = (!16 !33 !80)
!154 = span !17 6301 6302
!155 = span !17 6277 6302
!156 = (!16 !33 !155)
!157 = (!16 !33 !155)
!158 = span !17 6329 6338
!159 = (!16 !33 !158)
!160 = span !0 400 402
!161 = span !17 6399 6414
!162 = span !17 6451 6457
!163 = span !17 6500 6501
!164 = span !17 6491 6501
!165 = (!16 !33 !164)
!166 = (!16 !33)
!167 = "/home/kebradalaonda/p/sway/sway-lib-std/src/error_signals.sw"
!168 = span !167 566 587
!169 = span !17 6514 6555
!170 = (!16 !33 !169 !105)
!171 = (!16 !21)
!172 = (!16 !21)
!173 = span !17 3928 4005
!174 = (!16 !173)
!175 = (!16 !173)
!176 = (!16 !21)
!177 = span !17 3949 3951
!178 = (!16 !177)
!179 = (!16 !177)
!180 = span !17 3983 3985
!181 = (!16 !180)
!182 = span !17 3956 4004
!183 = span !17 5029 5038
!184 = (!16 !182 !183)
!185 = span !17 5050 5061
!186 = (!16 !18)
!187 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset_id.sw"
!188 = span !187 1300 1304
!189 = span !187 1292 1349
!190 = span !187 1330 1343
!191 = "/home/kebradalaonda/p/sway/sway-lib-std/src/tx.sw"
!192 = span !191 2271 2445
!193 = span !191 2327 2328
!194 = span !191 2315 2339
!195 = span !191 2350 2353
!196 = span !191 2350 2377
!197 = span !191 1445 1616
!198 = span !191 2386 2389
!199 = span !191 2386 2413
!200 = span !191 2434 2435
!201 = span !191 2427 2436
!202 = (!201 !105)
!203 = span !35 1936 1941
!204 = span !35 1917 2165
!205 = span !35 1970 2005
!206 = span !35 2016 2019
!207 = span !35 2016 2036
!208 = span !35 956 1170
!209 = span !35 2045 2048
!210 = span !35 2045 2069
!211 = span !35 2078 2081
!212 = span !35 2078 2100
!213 = span !35 2109 2112
!214 = span !35 2109 2133
!215 = span !35 2154 2155
!216 = span !35 2147 2156
!217 = (!216 !105)
!218 = "/home/kebradalaonda/p/sway/sway-lib-std/src/contract_id.sw"
!219 = span !218 707 711
!220 = span !218 695 746
!221 = span !218 305 315

// IR: [const-demotion] Demotion of by-value constants to by-reference
contract {
    pub entry fn deposit<2df2cef7>() -> (), !1 {
        local { b256, u64, u64 } __anon_0
        local b256 __anon_1
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local b256 __const = const b256 0x3dba0a4455b598b7655a7fb430883d96c9527ef275b49739e7b0ad12f8280eae
        local b256 __const0 = const b256 0x0000000000000000000000000000000000000000000000000000000000000000
        local b256 __const1 = const b256 0x0000000000000000000000000000000000000000000000000000000000000001
        local { u64, ( { b256 } | { b256 } ) } __matched_value_1
        local { u64 } __matched_value_2
        local { u64 } __matched_value_20
        local { u64 } __matched_value_3
        local { u64 } __matched_value_4
        local { b256 } addr
        local b256 address
        local { b256 } asset
        local { b256 } id
        local { b256 } pool

        entry():
        v0 = get_local ptr b256, __const
        v1 = load v0
        v2 = get_local ptr b256, __const0
        v3 = load v2
        v4 = get_local ptr b256, __const1
        v5 = load v4
        v6 = get_local ptr { b256, u64, u64 }, __anon_0, !2
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr b256, v7
        store v1 to v8, !2
        v9 = const u64 1
        v10 = get_elem_ptr v6, ptr u64, v9
        v11 = const u64 770887415, !2
        store v11 to v10, !2
        v12 = const u64 2
        v13 = get_elem_ptr v6, ptr u64, v12
        v14 = const u64 0
        store v14 to v13, !2
        v15 = get_local ptr b256, __anon_1
        store v3 to v15
        v16 = read_register cgas, !2
        v17 = const u64 0, !2
        v18 = contract_call () deposit v6, v17, v15, v16, !2
        v19 = get_local ptr b256, address, !3
        store v5 to v19, !3
        v20 = get_local ptr b256, address, !4
        v21 = load v20
        v22 = call from_0(v21), !5
        v23 = get_local ptr { b256 }, asset, !6
        store v22 to v23, !6
        v24 = get_local ptr b256, address, !7
        v25 = load v24
        v26 = call from_0(v25), !8
        v27 = get_local ptr { b256 }, pool, !9
        store v26 to v27, !9
        v28 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !11
        v29 = const u64 0
        v30 = get_elem_ptr v28, ptr u64, v29, !11
        v31 = const u64 1, !11
        store v31 to v30, !11
        v32 = get_local ptr { b256 }, pool, !12
        v33 = load v32
        v34 = const u64 1
        v35 = const u64 1
        v36 = get_elem_ptr v28, ptr { b256 }, v34, v35, !11
        store v33 to v36, !11
        v37 = load v28
        v38 = get_local ptr { b256 }, asset, !13
        v39 = load v38
        v40 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !17
        store v37 to v40, !18
        v41 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !20
        v42 = const u64 0
        v43 = get_elem_ptr v41, ptr u64, v42, !21
        v44 = load v43, !14
        v45 = const u64 0, !19
        v46 = cmp eq v44 v45, !23
        cbr v46, transfer_2_block0(), transfer_2_block1(), !24

        transfer_2_block0():
        v47 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !25
        v48 = const u64 1
        v49 = const u64 0
        v50 = get_elem_ptr v47, ptr { b256 }, v48, v49, !14
        v51 = load v50, !14
        v52 = get_local ptr { b256 }, addr, !27
        store v51 to v52, !28
        v53 = get_local ptr { b256 }, addr, !30
        v54 = load v53, !14
        v55 = call tx_type_6(), !35
        v56 = get_local ptr { u64 }, __matched_value_3, !37
        store v55 to v56, !38
        v57 = get_local ptr { u64 }, __matched_value_3, !39
        v58 = const u64 0
        v59 = get_elem_ptr v57, ptr u64, v58, !40
        v60 = load v59, !41
        v61 = const u64 0, !34
        v62 = cmp eq v60 v61, !43
        cbr v62, transfer_2_transfer_to_address_4_output_count_5_block0(), transfer_2_transfer_to_address_4_output_count_5_block1(), !44

        transfer_2_transfer_to_address_4_output_count_5_block0():
        v63 = const u64 0, !45
        v64 = gtf v63, 6, !47
        v65 = bitcast v64 to u64, !48
        br transfer_2_transfer_to_address_4_output_count_5_block5(v65), !49

        transfer_2_transfer_to_address_4_output_count_5_block1():
        v66 = get_local ptr { u64 }, __matched_value_3, !50
        v67 = const u64 0
        v68 = get_elem_ptr v66, ptr u64, v67, !51
        v69 = load v68, !52
        v70 = const u64 1, !34
        v71 = cmp eq v69 v70, !54
        cbr v71, transfer_2_transfer_to_address_4_output_count_5_block2(), transfer_2_transfer_to_address_4_output_count_5_block3(), !55

        transfer_2_transfer_to_address_4_output_count_5_block2():
        v72 = const u64 0, !56
        v73 = gtf v72, 260, !58
        v74 = bitcast v73 to u64, !59
        br transfer_2_transfer_to_address_4_output_count_5_block5(v74), !60

        transfer_2_transfer_to_address_4_output_count_5_block3():
        v75 = const u64 14757395258967588866, !36
        revert v75, !61

        transfer_2_transfer_to_address_4_output_count_5_block5(v76: u64):
        v77 = const u64 0, !62
        br transfer_2_transfer_to_address_4_while(v77), !63

        transfer_2_transfer_to_address_4_while(v78: u64):
        v79 = cmp lt v78 v76, !65
        cbr v79, transfer_2_transfer_to_address_4_while_body(), transfer_2_transfer_to_address_4_end_while(), !66

        transfer_2_transfer_to_address_4_while_body():
        v80 = call output_type_10(v78), !68
        v81 = get_local ptr { u64 }, __matched_value_2, !70
        store v80 to v81, !71
        v82 = get_local ptr { u64 }, __matched_value_2, !72
        v83 = const u64 0
        v84 = get_elem_ptr v82, ptr u64, v83, !73
        v85 = load v84, !74
        v86 = const u64 3, !67
        v87 = cmp eq v85 v86, !76
        v88 = const unit ()
        cbr v87, transfer_2_transfer_to_address_4_block0(), transfer_2_transfer_to_address_4_block5(v88), !77

        transfer_2_transfer_to_address_4_block0():
        v89 = call output_type_10(v78), !80
        v90 = get_local ptr { u64 }, __matched_value_4, !82
        store v89 to v90, !83
        v91 = get_local ptr { u64 }, __matched_value_4, !84
        v92 = const u64 0
        v93 = get_elem_ptr v91, ptr u64, v92, !85
        v94 = load v93, !86
        v95 = const u64 0, !79
        v96 = cmp eq v94 v95, !88
        cbr v96, transfer_2_transfer_to_address_4_output_amount_11_block0(), transfer_2_transfer_to_address_4_output_amount_11_block1(), !89

        transfer_2_transfer_to_address_4_output_amount_11_block0():
        v97 = gtf v78, 770, !91
        v98 = bitcast v97 to u64, !92
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v98), !93

        transfer_2_transfer_to_address_4_output_amount_11_block1():
        v99 = get_local ptr { u64 }, __matched_value_4, !94
        v100 = const u64 0
        v101 = get_elem_ptr v99, ptr u64, v100, !95
        v102 = load v101, !96
        v103 = const u64 1, !79
        v104 = cmp eq v102 v103, !98
        cbr v104, transfer_2_transfer_to_address_4_output_amount_11_block2(), transfer_2_transfer_to_address_4_output_amount_11_block3(), !99

        transfer_2_transfer_to_address_4_output_amount_11_block2():
        v105 = const u64 0, !100
        revert v105, !104

        transfer_2_transfer_to_address_4_output_amount_11_block3():
        v106 = get_local ptr { u64 }, __matched_value_4, !105
        v107 = const u64 0
        v108 = get_elem_ptr v106, ptr u64, v107, !106
        v109 = load v108, !107
        v110 = const u64 2, !79
        v111 = cmp eq v109 v110, !109
        v112 = const u64 0, !110
        cbr v111, transfer_2_transfer_to_address_4_output_amount_11_block9(v112), transfer_2_transfer_to_address_4_output_amount_11_block5(), !111

        transfer_2_transfer_to_address_4_output_amount_11_block5():
        v113 = get_local ptr { u64 }, __matched_value_4, !112
        v114 = const u64 0
        v115 = get_elem_ptr v113, ptr u64, v114, !113
        v116 = load v115, !114
        v117 = const u64 3, !79
        v118 = cmp eq v116 v117, !116
        cbr v118, transfer_2_transfer_to_address_4_output_amount_11_block6(), transfer_2_transfer_to_address_4_output_amount_11_block7(), !117

        transfer_2_transfer_to_address_4_output_amount_11_block6():
        v119 = call tx_type_6(), !120
        v120 = get_local ptr { u64 }, __matched_value_20, !122
        store v119 to v120, !123
        v121 = get_local ptr { u64 }, __matched_value_20, !124
        v122 = const u64 0
        v123 = get_elem_ptr v121, ptr u64, v122, !125
        v124 = load v123, !126
        v125 = const u64 0, !119
        v126 = cmp eq v124 v125, !128
        cbr v126, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1(), !129

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0():
        v127 = gtf v78, 12, !131
        v128 = bitcast v127 to u64, !132
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v128), !133

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1():
        v129 = get_local ptr { u64 }, __matched_value_20, !134
        v130 = const u64 0
        v131 = get_elem_ptr v129, ptr u64, v130, !135
        v132 = load v131, !136
        v133 = const u64 1, !119
        v134 = cmp eq v132 v133, !138
        cbr v134, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3(), !139

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2():
        v135 = gtf v78, 265, !141
        v136 = bitcast v135 to u64, !142
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v136), !143

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3():
        v137 = const u64 14757395258967588866, !121
        revert v137, !144

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v138: u64):
        v139 = asm(r1, r2, r3: v138) -> u64 r1, !146 {
            addi   r2 r3 i40, !147
            lw     r1 r2 i0, !148
        }
        br transfer_2_transfer_to_address_4_output_amount_11_block9(v139), !149

        transfer_2_transfer_to_address_4_output_amount_11_block7():
        v140 = const u64 14757395258967588866, !81
        revert v140, !150

        transfer_2_transfer_to_address_4_output_amount_11_block9(v141: u64):
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v141), !151

        transfer_2_transfer_to_address_4_output_amount_11_block11(v142: u64):
        v143 = const u64 0, !152
        v144 = cmp eq v142 v143, !154
        v145 = const unit ()
        cbr v144, transfer_2_transfer_to_address_4_block1(), transfer_2_transfer_to_address_4_block5(v145), !155

        transfer_2_transfer_to_address_4_block1():
        v146 = call bits_16(v54), !157
        v147 = const u64 10, !158
        v148 = asm(r1: v146, r2: v78, r3: v147, r4: v39) {
            tro    r1 r2 r3 r4, !159
        }
        v149 = const unit (), !160
        br transfer_2_block5(v149), !14

        transfer_2_transfer_to_address_4_block5(v150: ()):
        v151 = const u64 1, !161
        v152 = add v78, v151, !163
        br transfer_2_transfer_to_address_4_while(v152), !164

        transfer_2_transfer_to_address_4_end_while():
        v153 = const u64 18446744073709486081, !166
        revert v153, !168

        transfer_2_block1():
        v154 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !169
        v155 = const u64 0
        v156 = get_elem_ptr v154, ptr u64, v155, !170
        v157 = load v156, !14
        v158 = const u64 1, !19
        v159 = cmp eq v157 v158, !172
        cbr v159, transfer_2_block2(), transfer_2_block3(), !173

        transfer_2_block2():
        v160 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !174
        v161 = const u64 1
        v162 = const u64 1
        v163 = get_elem_ptr v160, ptr { b256 }, v161, v162, !14
        v164 = load v163, !14
        v165 = get_local ptr { b256 }, id, !176
        store v164 to v165, !177
        v166 = get_local ptr { b256 }, id, !179
        v167 = load v166, !14
        v168 = call bits_16(v167), !182
        v169 = asm(r1: v147, r2: v39, r3: v168) {
            tr     r3 r1 r2, !183
        }
        v170 = const unit ()
        br transfer_2_block5(v170), !14

        transfer_2_block3():
        v171 = const u64 14757395258967588866, !16
        revert v171, !184

        transfer_2_block5(v172: ()):
        v173 = const unit ()
        ret () v173
    }

    pub fn from_0(bits !186: b256) -> { b256 }, !187 {
        local { b256 } __anon_0

        entry(bits: b256):
        v0 = get_local ptr { b256 }, __anon_0, !188
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        store bits to v2, !188
        v3 = load v0
        ret { b256 } v3
    }

    pub fn tx_type_6() -> { u64 }, !190 {
        local { u64 } __anon_0
        local { u64 } __anon_1

        entry():
        v0 = const u64 0, !191
        v1 = gtf v0, 1, !192
        v2 = bitcast v1 to u8, !192
        v3 = const u8 0, !193
        v4 = cmp eq v2 v3, !194
        cbr v4, block0(), block1(), !194

        block0():
        v5 = get_local ptr { u64 }, __anon_0, !195
        v6 = const u64 0
        v7 = get_elem_ptr v5, ptr u64, v6, !195
        v8 = const u64 0, !195
        store v8 to v7, !195
        v9 = load v5
        br block5(v9)

        block1():
        v10 = const u8 1, !196
        v11 = cmp eq v2 v10, !197
        cbr v11, block2(), block3(), !197

        block2():
        v12 = get_local ptr { u64 }, __anon_1, !195
        v13 = const u64 0
        v14 = get_elem_ptr v12, ptr u64, v13, !195
        v15 = const u64 1, !195
        store v15 to v14, !195
        v16 = load v12
        br block5(v16)

        block3():
        v17 = const u64 0, !198
        revert v17, !200

        block5(v18: { u64 }):
        ret { u64 } v18
    }

    pub fn output_type_10(index !201: u64) -> { u64 }, !202 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local { u64 } __anon_3

        entry(index: u64):
        v0 = gtf index, 768, !203
        v1 = bitcast v0 to u8, !203
        v2 = const u8 0, !204
        v3 = cmp eq v1 v2, !205
        cbr v3, block0(), block1(), !205

        block0():
        v4 = get_local ptr { u64 }, __anon_0, !206
        v5 = const u64 0
        v6 = get_elem_ptr v4, ptr u64, v5, !206
        v7 = const u64 0, !206
        store v7 to v6, !206
        v8 = load v4
        br block11(v8)

        block1():
        v9 = const u8 1, !207
        v10 = cmp eq v1 v9, !208
        cbr v10, block2(), block3(), !208

        block2():
        v11 = get_local ptr { u64 }, __anon_1, !206
        v12 = const u64 0
        v13 = get_elem_ptr v11, ptr u64, v12, !206
        v14 = const u64 1, !206
        store v14 to v13, !206
        v15 = load v11
        br block10(v15)

        block3():
        v16 = const u8 2, !209
        v17 = cmp eq v1 v16, !210
        cbr v17, block4(), block5(), !210

        block4():
        v18 = get_local ptr { u64 }, __anon_2, !206
        v19 = const u64 0
        v20 = get_elem_ptr v18, ptr u64, v19, !206
        v21 = const u64 2, !206
        store v21 to v20, !206
        v22 = load v18
        br block9(v22)

        block5():
        v23 = const u8 3, !211
        v24 = cmp eq v1 v23, !212
        cbr v24, block6(), block7(), !212

        block6():
        v25 = get_local ptr { u64 }, __anon_3, !206
        v26 = const u64 0
        v27 = get_elem_ptr v25, ptr u64, v26, !206
        v28 = const u64 3, !206
        store v28 to v27, !206
        v29 = load v25
        br block9(v29)

        block7():
        v30 = const u64 0, !213
        revert v30, !215

        block9(v31: { u64 }):
        br block10(v31)

        block10(v32: { u64 }):
        br block11(v32)

        block11(v33: { u64 }):
        ret { u64 } v33
    }

    pub fn bits_16(self !217: { b256 }) -> b256, !218 {
        entry(self: { b256 }):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !219
        v4 = load v3
        ret b256 v4
    }
}

!0 = "/home/kebradalaonda/p/sway/test/src/e2e_vm_tests/test_programs/should_pass/static_analysis/cei_pattern_violation_in_asm_block_tr/src/main.sw"
!1 = span !0 105 713
!2 = span !0 263 287
!3 = span !0 412 493
!4 = span !0 528 535
!5 = span !0 514 536
!6 = span !0 502 537
!7 = span !0 574 581
!8 = span !0 557 582
!9 = span !0 546 583
!10 = "/home/kebradalaonda/p/sway/sway-lib-std/src/identity.sw"
!11 = span !10 477 548
!12 = span !0 685 689
!13 = span !0 692 697
!14 = span !0 655 706
!15 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset.sw"
!16 = span !15 3829 4011
!17 = (!14 !16)
!18 = (!14 !16)
!19 = span !15 3835 3837
!20 = (!14 !19)
!21 = (!14 !19)
!22 = span !15 3848 3919
!23 = (!14 !22)
!24 = (!14 !22)
!25 = (!14 !19)
!26 = span !15 3866 3870
!27 = (!14 !26)
!28 = (!14 !26)
!29 = span !15 3895 3899
!30 = (!14 !29)
!31 = span !15 3875 3918
!32 = span !15 6153 6167
!33 = "/home/kebradalaonda/p/sway/sway-lib-std/src/outputs.sw"
!34 = span !33 3435 3444
!35 = (!14 !31 !32 !34)
!36 = span !33 3429 3600
!37 = (!14 !31 !32 !36)
!38 = (!14 !31 !32 !36)
!39 = (!14 !31 !32 !34)
!40 = (!14 !31 !32 !34)
!41 = (!14 !31 !32)
!42 = span !33 3455 3520
!43 = (!14 !31 !32 !42)
!44 = (!14 !31 !32 !42)
!45 = span !33 3491 3492
!46 = span !33 3478 3519
!47 = (!14 !31 !32 !46)
!48 = (!14 !31 !32 !46)
!49 = (!14 !31 !32)
!50 = (!14 !31 !32 !34)
!51 = (!14 !31 !32 !34)
!52 = (!14 !31 !32)
!53 = span !33 3529 3594
!54 = (!14 !31 !32 !53)
!55 = (!14 !31 !32 !53)
!56 = span !33 3565 3566
!57 = span !33 3552 3593
!58 = (!14 !31 !32 !57)
!59 = (!14 !31 !32 !57)
!60 = (!14 !31 !32)
!61 = (!14 !31 !32 !36)
!62 = span !15 5893 5894
!63 = (!14 !31)
!64 = span !15 6179 6204
!65 = (!14 !31 !64)
!66 = (!14 !31)
!67 = span !15 6241 6259
!68 = (!14 !31 !67)
!69 = span !15 6215 6482
!70 = (!14 !31 !69)
!71 = (!14 !31 !69)
!72 = (!14 !31 !67)
!73 = (!14 !31 !67)
!74 = (!14 !31)
!75 = span !15 6222 6482
!76 = (!14 !31 !75)
!77 = (!14 !31 !75)
!78 = span !15 6277 6297
!79 = span !33 4543 4561
!80 = (!14 !31 !78 !79)
!81 = span !33 4537 5459
!82 = (!14 !31 !78 !81)
!83 = (!14 !31 !78 !81)
!84 = (!14 !31 !78 !79)
!85 = (!14 !31 !78 !79)
!86 = (!14 !31 !78)
!87 = span !33 4572 4632
!88 = (!14 !31 !78 !87)
!89 = (!14 !31 !78 !87)
!90 = span !33 4588 4631
!91 = (!14 !31 !78 !90)
!92 = (!14 !31 !78 !90)
!93 = (!14 !31 !78)
!94 = (!14 !31 !78 !79)
!95 = (!14 !31 !78 !79)
!96 = (!14 !31 !78)
!97 = span !33 4641 4671
!98 = (!14 !31 !78 !97)
!99 = (!14 !31 !78 !97)
!100 = span !33 4668 4669
!101 = span !33 4661 4670
!102 = "/home/kebradalaonda/p/sway/sway-lib-std/src/revert.sw"
!103 = span !102 691 705
!104 = (!14 !31 !78 !101 !103)
!105 = (!14 !31 !78 !79)
!106 = (!14 !31 !78 !79)
!107 = (!14 !31 !78)
!108 = span !33 5018 5038
!109 = (!14 !31 !78 !108)
!110 = span !33 5036 5037
!111 = (!14 !31 !78 !108)
!112 = (!14 !31 !78 !79)
!113 = (!14 !31 !78 !79)
!114 = (!14 !31 !78)
!115 = span !33 5242 5453
!116 = (!14 !31 !78 !115)
!117 = (!14 !31 !78 !115)
!118 = span !33 5286 5307
!119 = span !33 2773 2782
!120 = (!14 !31 !78 !118 !119)
!121 = span !33 2767 2950
!122 = (!14 !31 !78 !118 !121)
!123 = (!14 !31 !78 !118 !121)
!124 = (!14 !31 !78 !118 !119)
!125 = (!14 !31 !78 !118 !119)
!126 = (!14 !31 !78 !118)
!127 = span !33 2793 2864
!128 = (!14 !31 !78 !118 !127)
!129 = (!14 !31 !78 !118 !127)
!130 = span !33 2816 2863
!131 = (!14 !31 !78 !118 !130)
!132 = (!14 !31 !78 !118 !130)
!133 = (!14 !31 !78 !118)
!134 = (!14 !31 !78 !118 !119)
!135 = (!14 !31 !78 !118 !119)
!136 = (!14 !31 !78 !118)
!137 = span !33 2873 2944
!138 = (!14 !31 !78 !118 !137)
!139 = (!14 !31 !78 !118 !137)
!140 = span !33 2896 2943
!141 = (!14 !31 !78 !118 !140)
!142 = (!14 !31 !78 !118 !140)
!143 = (!14 !31 !78 !118)
!144 = (!14 !31 !78 !118 !121)
!145 = span !33 5321 5442
!146 = (!14 !31 !78 !145)
!147 = span !33 5360 5374
!148 = span !33 5392 5403
!149 = (!14 !31 !78)
!150 = (!14 !31 !78 !81)
!151 = (!14 !31 !78)
!152 = span !15 6301 6302
!153 = span !15 6277 6302
!154 = (!14 !31 !153)
!155 = (!14 !31 !153)
!156 = span !15 6329 6338
!157 = (!14 !31 !156)
!158 = span !0 400 402
!159 = span !15 6399 6414
!160 = span !15 6451 6457
!161 = span !15 6500 6501
!162 = span !15 6491 6501
!163 = (!14 !31 !162)
!164 = (!14 !31)
!165 = "/home/kebradalaonda/p/sway/sway-lib-std/src/error_signals.sw"
!166 = span !165 566 587
!167 = span !15 6514 6555
!168 = (!14 !31 !167 !103)
!169 = (!14 !19)
!170 = (!14 !19)
!171 = span !15 3928 4005
!172 = (!14 !171)
!173 = (!14 !171)
!174 = (!14 !19)
!175 = span !15 3949 3951
!176 = (!14 !175)
!177 = (!14 !175)
!178 = span !15 3983 3985
!179 = (!14 !178)
!180 = span !15 3956 4004
!181 = span !15 5029 5038
!182 = (!14 !180 !181)
!183 = span !15 5050 5061
!184 = (!14 !16)
!185 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset_id.sw"
!186 = span !185 1300 1304
!187 = span !185 1292 1349
!188 = span !185 1330 1343
!189 = "/home/kebradalaonda/p/sway/sway-lib-std/src/tx.sw"
!190 = span !189 2271 2445
!191 = span !189 2327 2328
!192 = span !189 2315 2339
!193 = span !189 2350 2353
!194 = span !189 2350 2377
!195 = span !189 1445 1616
!196 = span !189 2386 2389
!197 = span !189 2386 2413
!198 = span !189 2434 2435
!199 = span !189 2427 2436
!200 = (!199 !103)
!201 = span !33 1936 1941
!202 = span !33 1917 2165
!203 = span !33 1970 2005
!204 = span !33 2016 2019
!205 = span !33 2016 2036
!206 = span !33 956 1170
!207 = span !33 2045 2048
!208 = span !33 2045 2069
!209 = span !33 2078 2081
!210 = span !33 2078 2100
!211 = span !33 2109 2112
!212 = span !33 2109 2133
!213 = span !33 2154 2155
!214 = span !33 2147 2156
!215 = (!214 !103)
!216 = "/home/kebradalaonda/p/sway/sway-lib-std/src/contract_id.sw"
!217 = span !216 707 711
!218 = span !216 695 746
!219 = span !216 305 315

// IR: [arg-demotion] Demotion of by-value function arguments to by-reference
contract {
    pub entry fn deposit<2df2cef7>() -> (), !1 {
        local { b256, u64, u64 } __anon_0
        local b256 __anon_1
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local b256 __const = const b256 0x3dba0a4455b598b7655a7fb430883d96c9527ef275b49739e7b0ad12f8280eae
        local b256 __const0 = const b256 0x0000000000000000000000000000000000000000000000000000000000000000
        local b256 __const1 = const b256 0x0000000000000000000000000000000000000000000000000000000000000001
        local { u64, ( { b256 } | { b256 } ) } __matched_value_1
        local { u64 } __matched_value_2
        local { u64 } __matched_value_20
        local { u64 } __matched_value_3
        local { u64 } __matched_value_4
        local b256 __tmp_arg
        local b256 __tmp_arg0
        local { b256 } __tmp_arg1
        local { b256 } __tmp_arg2
        local { b256 } addr
        local b256 address
        local { b256 } asset
        local { b256 } id
        local { b256 } pool

        entry():
        v0 = get_local ptr b256, __const
        v1 = load v0
        v2 = get_local ptr b256, __const0
        v3 = load v2
        v4 = get_local ptr b256, __const1
        v5 = load v4
        v6 = get_local ptr { b256, u64, u64 }, __anon_0, !2
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr b256, v7
        store v1 to v8, !2
        v9 = const u64 1
        v10 = get_elem_ptr v6, ptr u64, v9
        v11 = const u64 770887415, !2
        store v11 to v10, !2
        v12 = const u64 2
        v13 = get_elem_ptr v6, ptr u64, v12
        v14 = const u64 0
        store v14 to v13, !2
        v15 = get_local ptr b256, __anon_1
        store v3 to v15
        v16 = read_register cgas, !2
        v17 = const u64 0, !2
        v18 = contract_call () deposit v6, v17, v15, v16, !2
        v19 = get_local ptr b256, address, !3
        store v5 to v19, !3
        v20 = get_local ptr b256, address, !4
        v21 = load v20
        v22 = get_local ptr b256, __tmp_arg
        store v21 to v22
        v23 = call from_0(v22)
        v24 = get_local ptr { b256 }, asset, !5
        store v23 to v24, !5
        v25 = get_local ptr b256, address, !6
        v26 = load v25
        v27 = get_local ptr b256, __tmp_arg0
        store v26 to v27
        v28 = call from_0(v27)
        v29 = get_local ptr { b256 }, pool, !7
        store v28 to v29, !7
        v30 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !9
        v31 = const u64 0
        v32 = get_elem_ptr v30, ptr u64, v31, !9
        v33 = const u64 1, !9
        store v33 to v32, !9
        v34 = get_local ptr { b256 }, pool, !10
        v35 = load v34
        v36 = const u64 1
        v37 = const u64 1
        v38 = get_elem_ptr v30, ptr { b256 }, v36, v37, !9
        store v35 to v38, !9
        v39 = load v30
        v40 = get_local ptr { b256 }, asset, !11
        v41 = load v40
        v42 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !15
        store v39 to v42, !16
        v43 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !18
        v44 = const u64 0
        v45 = get_elem_ptr v43, ptr u64, v44, !19
        v46 = load v45, !12
        v47 = const u64 0, !17
        v48 = cmp eq v46 v47, !21
        cbr v48, transfer_2_block0(), transfer_2_block1(), !22

        transfer_2_block0():
        v49 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !23
        v50 = const u64 1
        v51 = const u64 0
        v52 = get_elem_ptr v49, ptr { b256 }, v50, v51, !12
        v53 = load v52, !12
        v54 = get_local ptr { b256 }, addr, !25
        store v53 to v54, !26
        v55 = get_local ptr { b256 }, addr, !28
        v56 = load v55, !12
        v57 = call tx_type_6(), !33
        v58 = get_local ptr { u64 }, __matched_value_3, !35
        store v57 to v58, !36
        v59 = get_local ptr { u64 }, __matched_value_3, !37
        v60 = const u64 0
        v61 = get_elem_ptr v59, ptr u64, v60, !38
        v62 = load v61, !39
        v63 = const u64 0, !32
        v64 = cmp eq v62 v63, !41
        cbr v64, transfer_2_transfer_to_address_4_output_count_5_block0(), transfer_2_transfer_to_address_4_output_count_5_block1(), !42

        transfer_2_transfer_to_address_4_output_count_5_block0():
        v65 = const u64 0, !43
        v66 = gtf v65, 6, !45
        v67 = bitcast v66 to u64, !46
        br transfer_2_transfer_to_address_4_output_count_5_block5(v67), !47

        transfer_2_transfer_to_address_4_output_count_5_block1():
        v68 = get_local ptr { u64 }, __matched_value_3, !48
        v69 = const u64 0
        v70 = get_elem_ptr v68, ptr u64, v69, !49
        v71 = load v70, !50
        v72 = const u64 1, !32
        v73 = cmp eq v71 v72, !52
        cbr v73, transfer_2_transfer_to_address_4_output_count_5_block2(), transfer_2_transfer_to_address_4_output_count_5_block3(), !53

        transfer_2_transfer_to_address_4_output_count_5_block2():
        v74 = const u64 0, !54
        v75 = gtf v74, 260, !56
        v76 = bitcast v75 to u64, !57
        br transfer_2_transfer_to_address_4_output_count_5_block5(v76), !58

        transfer_2_transfer_to_address_4_output_count_5_block3():
        v77 = const u64 14757395258967588866, !34
        revert v77, !59

        transfer_2_transfer_to_address_4_output_count_5_block5(v78: u64):
        v79 = const u64 0, !60
        br transfer_2_transfer_to_address_4_while(v79), !61

        transfer_2_transfer_to_address_4_while(v80: u64):
        v81 = cmp lt v80 v78, !63
        cbr v81, transfer_2_transfer_to_address_4_while_body(), transfer_2_transfer_to_address_4_end_while(), !64

        transfer_2_transfer_to_address_4_while_body():
        v82 = call output_type_10(v80), !66
        v83 = get_local ptr { u64 }, __matched_value_2, !68
        store v82 to v83, !69
        v84 = get_local ptr { u64 }, __matched_value_2, !70
        v85 = const u64 0
        v86 = get_elem_ptr v84, ptr u64, v85, !71
        v87 = load v86, !72
        v88 = const u64 3, !65
        v89 = cmp eq v87 v88, !74
        v90 = const unit ()
        cbr v89, transfer_2_transfer_to_address_4_block0(), transfer_2_transfer_to_address_4_block5(v90), !75

        transfer_2_transfer_to_address_4_block0():
        v91 = call output_type_10(v80), !78
        v92 = get_local ptr { u64 }, __matched_value_4, !80
        store v91 to v92, !81
        v93 = get_local ptr { u64 }, __matched_value_4, !82
        v94 = const u64 0
        v95 = get_elem_ptr v93, ptr u64, v94, !83
        v96 = load v95, !84
        v97 = const u64 0, !77
        v98 = cmp eq v96 v97, !86
        cbr v98, transfer_2_transfer_to_address_4_output_amount_11_block0(), transfer_2_transfer_to_address_4_output_amount_11_block1(), !87

        transfer_2_transfer_to_address_4_output_amount_11_block0():
        v99 = gtf v80, 770, !89
        v100 = bitcast v99 to u64, !90
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v100), !91

        transfer_2_transfer_to_address_4_output_amount_11_block1():
        v101 = get_local ptr { u64 }, __matched_value_4, !92
        v102 = const u64 0
        v103 = get_elem_ptr v101, ptr u64, v102, !93
        v104 = load v103, !94
        v105 = const u64 1, !77
        v106 = cmp eq v104 v105, !96
        cbr v106, transfer_2_transfer_to_address_4_output_amount_11_block2(), transfer_2_transfer_to_address_4_output_amount_11_block3(), !97

        transfer_2_transfer_to_address_4_output_amount_11_block2():
        v107 = const u64 0, !98
        revert v107, !102

        transfer_2_transfer_to_address_4_output_amount_11_block3():
        v108 = get_local ptr { u64 }, __matched_value_4, !103
        v109 = const u64 0
        v110 = get_elem_ptr v108, ptr u64, v109, !104
        v111 = load v110, !105
        v112 = const u64 2, !77
        v113 = cmp eq v111 v112, !107
        v114 = const u64 0, !108
        cbr v113, transfer_2_transfer_to_address_4_output_amount_11_block9(v114), transfer_2_transfer_to_address_4_output_amount_11_block5(), !109

        transfer_2_transfer_to_address_4_output_amount_11_block5():
        v115 = get_local ptr { u64 }, __matched_value_4, !110
        v116 = const u64 0
        v117 = get_elem_ptr v115, ptr u64, v116, !111
        v118 = load v117, !112
        v119 = const u64 3, !77
        v120 = cmp eq v118 v119, !114
        cbr v120, transfer_2_transfer_to_address_4_output_amount_11_block6(), transfer_2_transfer_to_address_4_output_amount_11_block7(), !115

        transfer_2_transfer_to_address_4_output_amount_11_block6():
        v121 = call tx_type_6(), !118
        v122 = get_local ptr { u64 }, __matched_value_20, !120
        store v121 to v122, !121
        v123 = get_local ptr { u64 }, __matched_value_20, !122
        v124 = const u64 0
        v125 = get_elem_ptr v123, ptr u64, v124, !123
        v126 = load v125, !124
        v127 = const u64 0, !117
        v128 = cmp eq v126 v127, !126
        cbr v128, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1(), !127

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0():
        v129 = gtf v80, 12, !129
        v130 = bitcast v129 to u64, !130
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v130), !131

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1():
        v131 = get_local ptr { u64 }, __matched_value_20, !132
        v132 = const u64 0
        v133 = get_elem_ptr v131, ptr u64, v132, !133
        v134 = load v133, !134
        v135 = const u64 1, !117
        v136 = cmp eq v134 v135, !136
        cbr v136, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3(), !137

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2():
        v137 = gtf v80, 265, !139
        v138 = bitcast v137 to u64, !140
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v138), !141

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3():
        v139 = const u64 14757395258967588866, !119
        revert v139, !142

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v140: u64):
        v141 = asm(r1, r2, r3: v140) -> u64 r1, !144 {
            addi   r2 r3 i40, !145
            lw     r1 r2 i0, !146
        }
        br transfer_2_transfer_to_address_4_output_amount_11_block9(v141), !147

        transfer_2_transfer_to_address_4_output_amount_11_block7():
        v142 = const u64 14757395258967588866, !79
        revert v142, !148

        transfer_2_transfer_to_address_4_output_amount_11_block9(v143: u64):
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v143), !149

        transfer_2_transfer_to_address_4_output_amount_11_block11(v144: u64):
        v145 = const u64 0, !150
        v146 = cmp eq v144 v145, !152
        v147 = const unit ()
        cbr v146, transfer_2_transfer_to_address_4_block1(), transfer_2_transfer_to_address_4_block5(v147), !153

        transfer_2_transfer_to_address_4_block1():
        v148 = get_local ptr { b256 }, __tmp_arg1
        store v56 to v148
        v149 = call bits_16(v148)
        v150 = const u64 10, !154
        v151 = asm(r1: v149, r2: v80, r3: v150, r4: v41) {
            tro    r1 r2 r3 r4, !155
        }
        v152 = const unit (), !156
        br transfer_2_block5(v152), !12

        transfer_2_transfer_to_address_4_block5(v153: ()):
        v154 = const u64 1, !157
        v155 = add v80, v154, !159
        br transfer_2_transfer_to_address_4_while(v155), !160

        transfer_2_transfer_to_address_4_end_while():
        v156 = const u64 18446744073709486081, !162
        revert v156, !164

        transfer_2_block1():
        v157 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !165
        v158 = const u64 0
        v159 = get_elem_ptr v157, ptr u64, v158, !166
        v160 = load v159, !12
        v161 = const u64 1, !17
        v162 = cmp eq v160 v161, !168
        cbr v162, transfer_2_block2(), transfer_2_block3(), !169

        transfer_2_block2():
        v163 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !170
        v164 = const u64 1
        v165 = const u64 1
        v166 = get_elem_ptr v163, ptr { b256 }, v164, v165, !12
        v167 = load v166, !12
        v168 = get_local ptr { b256 }, id, !172
        store v167 to v168, !173
        v169 = get_local ptr { b256 }, id, !175
        v170 = load v169, !12
        v171 = get_local ptr { b256 }, __tmp_arg2
        store v170 to v171
        v172 = call bits_16(v171)
        v173 = asm(r1: v150, r2: v41, r3: v172) {
            tr     r3 r1 r2, !176
        }
        v174 = const unit ()
        br transfer_2_block5(v174), !12

        transfer_2_block3():
        v175 = const u64 14757395258967588866, !14
        revert v175, !177

        transfer_2_block5(v176: ()):
        v177 = const unit ()
        ret () v177
    }

    pub fn from_0(bits: ptr b256) -> { b256 }, !179 {
        local { b256 } __anon_0

        entry(bits: ptr b256):
        v0 = load bits
        v1 = get_local ptr { b256 }, __anon_0, !180
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2
        store v0 to v3, !180
        v4 = load v1
        ret { b256 } v4
    }

    pub fn tx_type_6() -> { u64 }, !182 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __tmp_block_arg

        entry():
        v0 = const u64 0, !183
        v1 = gtf v0, 1, !184
        v2 = bitcast v1 to u8, !184
        v3 = const u8 0, !185
        v4 = cmp eq v2 v3, !186
        cbr v4, block0(), block1(), !186

        block0():
        v5 = get_local ptr { u64 }, __anon_0, !187
        v6 = const u64 0
        v7 = get_elem_ptr v5, ptr u64, v6, !187
        v8 = const u64 0, !187
        store v8 to v7, !187
        v9 = load v5
        v10 = get_local ptr { u64 }, __tmp_block_arg
        store v9 to v10
        br block5(v10)

        block1():
        v11 = const u8 1, !188
        v12 = cmp eq v2 v11, !189
        cbr v12, block2(), block3(), !189

        block2():
        v13 = get_local ptr { u64 }, __anon_1, !187
        v14 = const u64 0
        v15 = get_elem_ptr v13, ptr u64, v14, !187
        v16 = const u64 1, !187
        store v16 to v15, !187
        v17 = load v13
        v18 = get_local ptr { u64 }, __tmp_block_arg
        store v17 to v18
        br block5(v18)

        block3():
        v19 = const u64 0, !190
        revert v19, !192

        block5(v20: ptr { u64 }):
        v21 = load v20
        ret { u64 } v21
    }

    pub fn output_type_10(index !193: u64) -> { u64 }, !194 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local { u64 } __anon_3
        local { u64 } __tmp_block_arg
        local { u64 } __tmp_block_arg0
        local { u64 } __tmp_block_arg1

        entry(index: u64):
        v0 = gtf index, 768, !195
        v1 = bitcast v0 to u8, !195
        v2 = const u8 0, !196
        v3 = cmp eq v1 v2, !197
        cbr v3, block0(), block1(), !197

        block0():
        v4 = get_local ptr { u64 }, __anon_0, !198
        v5 = const u64 0
        v6 = get_elem_ptr v4, ptr u64, v5, !198
        v7 = const u64 0, !198
        store v7 to v6, !198
        v8 = load v4
        v9 = get_local ptr { u64 }, __tmp_block_arg1
        store v8 to v9
        br block11(v9)

        block1():
        v10 = const u8 1, !199
        v11 = cmp eq v1 v10, !200
        cbr v11, block2(), block3(), !200

        block2():
        v12 = get_local ptr { u64 }, __anon_1, !198
        v13 = const u64 0
        v14 = get_elem_ptr v12, ptr u64, v13, !198
        v15 = const u64 1, !198
        store v15 to v14, !198
        v16 = load v12
        v17 = get_local ptr { u64 }, __tmp_block_arg0
        store v16 to v17
        br block10(v17)

        block3():
        v18 = const u8 2, !201
        v19 = cmp eq v1 v18, !202
        cbr v19, block4(), block5(), !202

        block4():
        v20 = get_local ptr { u64 }, __anon_2, !198
        v21 = const u64 0
        v22 = get_elem_ptr v20, ptr u64, v21, !198
        v23 = const u64 2, !198
        store v23 to v22, !198
        v24 = load v20
        v25 = get_local ptr { u64 }, __tmp_block_arg
        store v24 to v25
        br block9(v25)

        block5():
        v26 = const u8 3, !203
        v27 = cmp eq v1 v26, !204
        cbr v27, block6(), block7(), !204

        block6():
        v28 = get_local ptr { u64 }, __anon_3, !198
        v29 = const u64 0
        v30 = get_elem_ptr v28, ptr u64, v29, !198
        v31 = const u64 3, !198
        store v31 to v30, !198
        v32 = load v28
        v33 = get_local ptr { u64 }, __tmp_block_arg
        store v32 to v33
        br block9(v33)

        block7():
        v34 = const u64 0, !205
        revert v34, !207

        block9(v35: ptr { u64 }):
        v36 = load v35
        v37 = get_local ptr { u64 }, __tmp_block_arg0
        store v36 to v37
        br block10(v37)

        block10(v38: ptr { u64 }):
        v39 = load v38
        v40 = get_local ptr { u64 }, __tmp_block_arg1
        store v39 to v40
        br block11(v40)

        block11(v41: ptr { u64 }):
        v42 = load v41
        ret { u64 } v42
    }

    pub fn bits_16(self: ptr { b256 }) -> b256, !209 {
        entry(self: ptr { b256 }):
        v0 = load self
        v1 = ptr_to_int v0 to u64
        v2 = int_to_ptr v1 to ptr { b256 }
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr b256, v3, !210
        v5 = load v4
        ret b256 v5
    }
}

!0 = "/home/kebradalaonda/p/sway/test/src/e2e_vm_tests/test_programs/should_pass/static_analysis/cei_pattern_violation_in_asm_block_tr/src/main.sw"
!1 = span !0 105 713
!2 = span !0 263 287
!3 = span !0 412 493
!4 = span !0 528 535
!5 = span !0 502 537
!6 = span !0 574 581
!7 = span !0 546 583
!8 = "/home/kebradalaonda/p/sway/sway-lib-std/src/identity.sw"
!9 = span !8 477 548
!10 = span !0 685 689
!11 = span !0 692 697
!12 = span !0 655 706
!13 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset.sw"
!14 = span !13 3829 4011
!15 = (!12 !14)
!16 = (!12 !14)
!17 = span !13 3835 3837
!18 = (!12 !17)
!19 = (!12 !17)
!20 = span !13 3848 3919
!21 = (!12 !20)
!22 = (!12 !20)
!23 = (!12 !17)
!24 = span !13 3866 3870
!25 = (!12 !24)
!26 = (!12 !24)
!27 = span !13 3895 3899
!28 = (!12 !27)
!29 = span !13 3875 3918
!30 = span !13 6153 6167
!31 = "/home/kebradalaonda/p/sway/sway-lib-std/src/outputs.sw"
!32 = span !31 3435 3444
!33 = (!12 !29 !30 !32)
!34 = span !31 3429 3600
!35 = (!12 !29 !30 !34)
!36 = (!12 !29 !30 !34)
!37 = (!12 !29 !30 !32)
!38 = (!12 !29 !30 !32)
!39 = (!12 !29 !30)
!40 = span !31 3455 3520
!41 = (!12 !29 !30 !40)
!42 = (!12 !29 !30 !40)
!43 = span !31 3491 3492
!44 = span !31 3478 3519
!45 = (!12 !29 !30 !44)
!46 = (!12 !29 !30 !44)
!47 = (!12 !29 !30)
!48 = (!12 !29 !30 !32)
!49 = (!12 !29 !30 !32)
!50 = (!12 !29 !30)
!51 = span !31 3529 3594
!52 = (!12 !29 !30 !51)
!53 = (!12 !29 !30 !51)
!54 = span !31 3565 3566
!55 = span !31 3552 3593
!56 = (!12 !29 !30 !55)
!57 = (!12 !29 !30 !55)
!58 = (!12 !29 !30)
!59 = (!12 !29 !30 !34)
!60 = span !13 5893 5894
!61 = (!12 !29)
!62 = span !13 6179 6204
!63 = (!12 !29 !62)
!64 = (!12 !29)
!65 = span !13 6241 6259
!66 = (!12 !29 !65)
!67 = span !13 6215 6482
!68 = (!12 !29 !67)
!69 = (!12 !29 !67)
!70 = (!12 !29 !65)
!71 = (!12 !29 !65)
!72 = (!12 !29)
!73 = span !13 6222 6482
!74 = (!12 !29 !73)
!75 = (!12 !29 !73)
!76 = span !13 6277 6297
!77 = span !31 4543 4561
!78 = (!12 !29 !76 !77)
!79 = span !31 4537 5459
!80 = (!12 !29 !76 !79)
!81 = (!12 !29 !76 !79)
!82 = (!12 !29 !76 !77)
!83 = (!12 !29 !76 !77)
!84 = (!12 !29 !76)
!85 = span !31 4572 4632
!86 = (!12 !29 !76 !85)
!87 = (!12 !29 !76 !85)
!88 = span !31 4588 4631
!89 = (!12 !29 !76 !88)
!90 = (!12 !29 !76 !88)
!91 = (!12 !29 !76)
!92 = (!12 !29 !76 !77)
!93 = (!12 !29 !76 !77)
!94 = (!12 !29 !76)
!95 = span !31 4641 4671
!96 = (!12 !29 !76 !95)
!97 = (!12 !29 !76 !95)
!98 = span !31 4668 4669
!99 = span !31 4661 4670
!100 = "/home/kebradalaonda/p/sway/sway-lib-std/src/revert.sw"
!101 = span !100 691 705
!102 = (!12 !29 !76 !99 !101)
!103 = (!12 !29 !76 !77)
!104 = (!12 !29 !76 !77)
!105 = (!12 !29 !76)
!106 = span !31 5018 5038
!107 = (!12 !29 !76 !106)
!108 = span !31 5036 5037
!109 = (!12 !29 !76 !106)
!110 = (!12 !29 !76 !77)
!111 = (!12 !29 !76 !77)
!112 = (!12 !29 !76)
!113 = span !31 5242 5453
!114 = (!12 !29 !76 !113)
!115 = (!12 !29 !76 !113)
!116 = span !31 5286 5307
!117 = span !31 2773 2782
!118 = (!12 !29 !76 !116 !117)
!119 = span !31 2767 2950
!120 = (!12 !29 !76 !116 !119)
!121 = (!12 !29 !76 !116 !119)
!122 = (!12 !29 !76 !116 !117)
!123 = (!12 !29 !76 !116 !117)
!124 = (!12 !29 !76 !116)
!125 = span !31 2793 2864
!126 = (!12 !29 !76 !116 !125)
!127 = (!12 !29 !76 !116 !125)
!128 = span !31 2816 2863
!129 = (!12 !29 !76 !116 !128)
!130 = (!12 !29 !76 !116 !128)
!131 = (!12 !29 !76 !116)
!132 = (!12 !29 !76 !116 !117)
!133 = (!12 !29 !76 !116 !117)
!134 = (!12 !29 !76 !116)
!135 = span !31 2873 2944
!136 = (!12 !29 !76 !116 !135)
!137 = (!12 !29 !76 !116 !135)
!138 = span !31 2896 2943
!139 = (!12 !29 !76 !116 !138)
!140 = (!12 !29 !76 !116 !138)
!141 = (!12 !29 !76 !116)
!142 = (!12 !29 !76 !116 !119)
!143 = span !31 5321 5442
!144 = (!12 !29 !76 !143)
!145 = span !31 5360 5374
!146 = span !31 5392 5403
!147 = (!12 !29 !76)
!148 = (!12 !29 !76 !79)
!149 = (!12 !29 !76)
!150 = span !13 6301 6302
!151 = span !13 6277 6302
!152 = (!12 !29 !151)
!153 = (!12 !29 !151)
!154 = span !0 400 402
!155 = span !13 6399 6414
!156 = span !13 6451 6457
!157 = span !13 6500 6501
!158 = span !13 6491 6501
!159 = (!12 !29 !158)
!160 = (!12 !29)
!161 = "/home/kebradalaonda/p/sway/sway-lib-std/src/error_signals.sw"
!162 = span !161 566 587
!163 = span !13 6514 6555
!164 = (!12 !29 !163 !101)
!165 = (!12 !17)
!166 = (!12 !17)
!167 = span !13 3928 4005
!168 = (!12 !167)
!169 = (!12 !167)
!170 = (!12 !17)
!171 = span !13 3949 3951
!172 = (!12 !171)
!173 = (!12 !171)
!174 = span !13 3983 3985
!175 = (!12 !174)
!176 = span !13 5050 5061
!177 = (!12 !14)
!178 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset_id.sw"
!179 = span !178 1292 1349
!180 = span !178 1330 1343
!181 = "/home/kebradalaonda/p/sway/sway-lib-std/src/tx.sw"
!182 = span !181 2271 2445
!183 = span !181 2327 2328
!184 = span !181 2315 2339
!185 = span !181 2350 2353
!186 = span !181 2350 2377
!187 = span !181 1445 1616
!188 = span !181 2386 2389
!189 = span !181 2386 2413
!190 = span !181 2434 2435
!191 = span !181 2427 2436
!192 = (!191 !101)
!193 = span !31 1936 1941
!194 = span !31 1917 2165
!195 = span !31 1970 2005
!196 = span !31 2016 2019
!197 = span !31 2016 2036
!198 = span !31 956 1170
!199 = span !31 2045 2048
!200 = span !31 2045 2069
!201 = span !31 2078 2081
!202 = span !31 2078 2100
!203 = span !31 2109 2112
!204 = span !31 2109 2133
!205 = span !31 2154 2155
!206 = span !31 2147 2156
!207 = (!206 !101)
!208 = "/home/kebradalaonda/p/sway/sway-lib-std/src/contract_id.sw"
!209 = span !208 695 746
!210 = span !208 305 315

// IR: [ret-demotion] Demotion of by-value function return values to by-reference
contract {
    pub entry fn deposit<2df2cef7>() -> (), !1 {
        local { b256, u64, u64 } __anon_0
        local b256 __anon_1
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local b256 __const = const b256 0x3dba0a4455b598b7655a7fb430883d96c9527ef275b49739e7b0ad12f8280eae
        local b256 __const0 = const b256 0x0000000000000000000000000000000000000000000000000000000000000000
        local b256 __const1 = const b256 0x0000000000000000000000000000000000000000000000000000000000000001
        local { u64, ( { b256 } | { b256 } ) } __matched_value_1
        local { u64 } __matched_value_2
        local { u64 } __matched_value_20
        local { u64 } __matched_value_3
        local { u64 } __matched_value_4
        local { b256 } __ret_val
        local { b256 } __ret_val0
        local { u64 } __ret_val1
        local { u64 } __ret_val2
        local { u64 } __ret_val3
        local { u64 } __ret_val4
        local b256 __ret_val5
        local b256 __ret_val6
        local b256 __tmp_arg
        local b256 __tmp_arg0
        local { b256 } __tmp_arg1
        local { b256 } __tmp_arg2
        local { b256 } addr
        local b256 address
        local { b256 } asset
        local { b256 } id
        local { b256 } pool

        entry():
        v0 = get_local ptr b256, __const
        v1 = load v0
        v2 = get_local ptr b256, __const0
        v3 = load v2
        v4 = get_local ptr b256, __const1
        v5 = load v4
        v6 = get_local ptr { b256, u64, u64 }, __anon_0, !2
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr b256, v7
        store v1 to v8, !2
        v9 = const u64 1
        v10 = get_elem_ptr v6, ptr u64, v9
        v11 = const u64 770887415, !2
        store v11 to v10, !2
        v12 = const u64 2
        v13 = get_elem_ptr v6, ptr u64, v12
        v14 = const u64 0
        store v14 to v13, !2
        v15 = get_local ptr b256, __anon_1
        store v3 to v15
        v16 = read_register cgas, !2
        v17 = const u64 0, !2
        v18 = contract_call () deposit v6, v17, v15, v16, !2
        v19 = get_local ptr b256, address, !3
        store v5 to v19, !3
        v20 = get_local ptr b256, address, !4
        v21 = load v20
        v22 = get_local ptr b256, __tmp_arg
        store v21 to v22
        v23 = get_local ptr { b256 }, __ret_val
        v24 = call from_0(v22, v23)
        v25 = load v24
        v26 = get_local ptr { b256 }, asset, !5
        store v25 to v26, !5
        v27 = get_local ptr b256, address, !6
        v28 = load v27
        v29 = get_local ptr b256, __tmp_arg0
        store v28 to v29
        v30 = get_local ptr { b256 }, __ret_val0
        v31 = call from_0(v29, v30)
        v32 = load v31
        v33 = get_local ptr { b256 }, pool, !7
        store v32 to v33, !7
        v34 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !9
        v35 = const u64 0
        v36 = get_elem_ptr v34, ptr u64, v35, !9
        v37 = const u64 1, !9
        store v37 to v36, !9
        v38 = get_local ptr { b256 }, pool, !10
        v39 = load v38
        v40 = const u64 1
        v41 = const u64 1
        v42 = get_elem_ptr v34, ptr { b256 }, v40, v41, !9
        store v39 to v42, !9
        v43 = load v34
        v44 = get_local ptr { b256 }, asset, !11
        v45 = load v44
        v46 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !15
        store v43 to v46, !16
        v47 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !18
        v48 = const u64 0
        v49 = get_elem_ptr v47, ptr u64, v48, !19
        v50 = load v49, !12
        v51 = const u64 0, !17
        v52 = cmp eq v50 v51, !21
        cbr v52, transfer_2_block0(), transfer_2_block1(), !22

        transfer_2_block0():
        v53 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !23
        v54 = const u64 1
        v55 = const u64 0
        v56 = get_elem_ptr v53, ptr { b256 }, v54, v55, !12
        v57 = load v56, !12
        v58 = get_local ptr { b256 }, addr, !25
        store v57 to v58, !26
        v59 = get_local ptr { b256 }, addr, !28
        v60 = load v59, !12
        v61 = get_local ptr { u64 }, __ret_val1
        v62 = call tx_type_6(v61)
        v63 = load v62
        v64 = get_local ptr { u64 }, __matched_value_3, !33
        store v63 to v64, !34
        v65 = get_local ptr { u64 }, __matched_value_3, !36
        v66 = const u64 0
        v67 = get_elem_ptr v65, ptr u64, v66, !37
        v68 = load v67, !38
        v69 = const u64 0, !35
        v70 = cmp eq v68 v69, !40
        cbr v70, transfer_2_transfer_to_address_4_output_count_5_block0(), transfer_2_transfer_to_address_4_output_count_5_block1(), !41

        transfer_2_transfer_to_address_4_output_count_5_block0():
        v71 = const u64 0, !42
        v72 = gtf v71, 6, !44
        v73 = bitcast v72 to u64, !45
        br transfer_2_transfer_to_address_4_output_count_5_block5(v73), !46

        transfer_2_transfer_to_address_4_output_count_5_block1():
        v74 = get_local ptr { u64 }, __matched_value_3, !47
        v75 = const u64 0
        v76 = get_elem_ptr v74, ptr u64, v75, !48
        v77 = load v76, !49
        v78 = const u64 1, !35
        v79 = cmp eq v77 v78, !51
        cbr v79, transfer_2_transfer_to_address_4_output_count_5_block2(), transfer_2_transfer_to_address_4_output_count_5_block3(), !52

        transfer_2_transfer_to_address_4_output_count_5_block2():
        v80 = const u64 0, !53
        v81 = gtf v80, 260, !55
        v82 = bitcast v81 to u64, !56
        br transfer_2_transfer_to_address_4_output_count_5_block5(v82), !57

        transfer_2_transfer_to_address_4_output_count_5_block3():
        v83 = const u64 14757395258967588866, !32
        revert v83, !58

        transfer_2_transfer_to_address_4_output_count_5_block5(v84: u64):
        v85 = const u64 0, !59
        br transfer_2_transfer_to_address_4_while(v85), !60

        transfer_2_transfer_to_address_4_while(v86: u64):
        v87 = cmp lt v86 v84, !62
        cbr v87, transfer_2_transfer_to_address_4_while_body(), transfer_2_transfer_to_address_4_end_while(), !63

        transfer_2_transfer_to_address_4_while_body():
        v88 = get_local ptr { u64 }, __ret_val3
        v89 = call output_type_10(v86, v88)
        v90 = load v89
        v91 = get_local ptr { u64 }, __matched_value_2, !65
        store v90 to v91, !66
        v92 = get_local ptr { u64 }, __matched_value_2, !68
        v93 = const u64 0
        v94 = get_elem_ptr v92, ptr u64, v93, !69
        v95 = load v94, !70
        v96 = const u64 3, !67
        v97 = cmp eq v95 v96, !72
        v98 = const unit ()
        cbr v97, transfer_2_transfer_to_address_4_block0(), transfer_2_transfer_to_address_4_block5(v98), !73

        transfer_2_transfer_to_address_4_block0():
        v99 = get_local ptr { u64 }, __ret_val4
        v100 = call output_type_10(v86, v99)
        v101 = load v100
        v102 = get_local ptr { u64 }, __matched_value_4, !76
        store v101 to v102, !77
        v103 = get_local ptr { u64 }, __matched_value_4, !79
        v104 = const u64 0
        v105 = get_elem_ptr v103, ptr u64, v104, !80
        v106 = load v105, !81
        v107 = const u64 0, !78
        v108 = cmp eq v106 v107, !83
        cbr v108, transfer_2_transfer_to_address_4_output_amount_11_block0(), transfer_2_transfer_to_address_4_output_amount_11_block1(), !84

        transfer_2_transfer_to_address_4_output_amount_11_block0():
        v109 = gtf v86, 770, !86
        v110 = bitcast v109 to u64, !87
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v110), !88

        transfer_2_transfer_to_address_4_output_amount_11_block1():
        v111 = get_local ptr { u64 }, __matched_value_4, !89
        v112 = const u64 0
        v113 = get_elem_ptr v111, ptr u64, v112, !90
        v114 = load v113, !91
        v115 = const u64 1, !78
        v116 = cmp eq v114 v115, !93
        cbr v116, transfer_2_transfer_to_address_4_output_amount_11_block2(), transfer_2_transfer_to_address_4_output_amount_11_block3(), !94

        transfer_2_transfer_to_address_4_output_amount_11_block2():
        v117 = const u64 0, !95
        revert v117, !99

        transfer_2_transfer_to_address_4_output_amount_11_block3():
        v118 = get_local ptr { u64 }, __matched_value_4, !100
        v119 = const u64 0
        v120 = get_elem_ptr v118, ptr u64, v119, !101
        v121 = load v120, !102
        v122 = const u64 2, !78
        v123 = cmp eq v121 v122, !104
        v124 = const u64 0, !105
        cbr v123, transfer_2_transfer_to_address_4_output_amount_11_block9(v124), transfer_2_transfer_to_address_4_output_amount_11_block5(), !106

        transfer_2_transfer_to_address_4_output_amount_11_block5():
        v125 = get_local ptr { u64 }, __matched_value_4, !107
        v126 = const u64 0
        v127 = get_elem_ptr v125, ptr u64, v126, !108
        v128 = load v127, !109
        v129 = const u64 3, !78
        v130 = cmp eq v128 v129, !111
        cbr v130, transfer_2_transfer_to_address_4_output_amount_11_block6(), transfer_2_transfer_to_address_4_output_amount_11_block7(), !112

        transfer_2_transfer_to_address_4_output_amount_11_block6():
        v131 = get_local ptr { u64 }, __ret_val2
        v132 = call tx_type_6(v131)
        v133 = load v132
        v134 = get_local ptr { u64 }, __matched_value_20, !115
        store v133 to v134, !116
        v135 = get_local ptr { u64 }, __matched_value_20, !118
        v136 = const u64 0
        v137 = get_elem_ptr v135, ptr u64, v136, !119
        v138 = load v137, !120
        v139 = const u64 0, !117
        v140 = cmp eq v138 v139, !122
        cbr v140, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1(), !123

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0():
        v141 = gtf v86, 12, !125
        v142 = bitcast v141 to u64, !126
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v142), !127

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1():
        v143 = get_local ptr { u64 }, __matched_value_20, !128
        v144 = const u64 0
        v145 = get_elem_ptr v143, ptr u64, v144, !129
        v146 = load v145, !130
        v147 = const u64 1, !117
        v148 = cmp eq v146 v147, !132
        cbr v148, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3(), !133

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2():
        v149 = gtf v86, 265, !135
        v150 = bitcast v149 to u64, !136
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v150), !137

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3():
        v151 = const u64 14757395258967588866, !114
        revert v151, !138

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v152: u64):
        v153 = asm(r1, r2, r3: v152) -> u64 r1, !140 {
            addi   r2 r3 i40, !141
            lw     r1 r2 i0, !142
        }
        br transfer_2_transfer_to_address_4_output_amount_11_block9(v153), !143

        transfer_2_transfer_to_address_4_output_amount_11_block7():
        v154 = const u64 14757395258967588866, !75
        revert v154, !144

        transfer_2_transfer_to_address_4_output_amount_11_block9(v155: u64):
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v155), !145

        transfer_2_transfer_to_address_4_output_amount_11_block11(v156: u64):
        v157 = const u64 0, !146
        v158 = cmp eq v156 v157, !148
        v159 = const unit ()
        cbr v158, transfer_2_transfer_to_address_4_block1(), transfer_2_transfer_to_address_4_block5(v159), !149

        transfer_2_transfer_to_address_4_block1():
        v160 = get_local ptr { b256 }, __tmp_arg1
        store v60 to v160
        v161 = get_local ptr b256, __ret_val5
        v162 = call bits_16(v160, v161)
        v163 = load v162
        v164 = const u64 10, !150
        v165 = asm(r1: v163, r2: v86, r3: v164, r4: v45) {
            tro    r1 r2 r3 r4, !151
        }
        v166 = const unit (), !152
        br transfer_2_block5(v166), !12

        transfer_2_transfer_to_address_4_block5(v167: ()):
        v168 = const u64 1, !153
        v169 = add v86, v168, !155
        br transfer_2_transfer_to_address_4_while(v169), !156

        transfer_2_transfer_to_address_4_end_while():
        v170 = const u64 18446744073709486081, !158
        revert v170, !160

        transfer_2_block1():
        v171 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !161
        v172 = const u64 0
        v173 = get_elem_ptr v171, ptr u64, v172, !162
        v174 = load v173, !12
        v175 = const u64 1, !17
        v176 = cmp eq v174 v175, !164
        cbr v176, transfer_2_block2(), transfer_2_block3(), !165

        transfer_2_block2():
        v177 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !166
        v178 = const u64 1
        v179 = const u64 1
        v180 = get_elem_ptr v177, ptr { b256 }, v178, v179, !12
        v181 = load v180, !12
        v182 = get_local ptr { b256 }, id, !168
        store v181 to v182, !169
        v183 = get_local ptr { b256 }, id, !171
        v184 = load v183, !12
        v185 = get_local ptr { b256 }, __tmp_arg2
        store v184 to v185
        v186 = get_local ptr b256, __ret_val6
        v187 = call bits_16(v185, v186)
        v188 = load v187
        v189 = asm(r1: v164, r2: v45, r3: v188) {
            tr     r3 r1 r2, !172
        }
        v190 = const unit ()
        br transfer_2_block5(v190), !12

        transfer_2_block3():
        v191 = const u64 14757395258967588866, !14
        revert v191, !173

        transfer_2_block5(v192: ()):
        v193 = const unit ()
        ret () v193
    }

    pub fn from_0(bits: ptr b256, __ret_value: ptr { b256 }) -> ptr { b256 }, !175 {
        local { b256 } __anon_0

        entry(bits: ptr b256, __ret_value: ptr { b256 }):
        v0 = load bits
        v1 = get_local ptr { b256 }, __anon_0, !176
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2
        store v0 to v3, !176
        v4 = load v1
        store v4 to __ret_value
        ret ptr { b256 } __ret_value
    }

    pub fn tx_type_6(__ret_value: ptr { u64 }) -> ptr { u64 }, !178 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __tmp_block_arg

        entry(__ret_value: ptr { u64 }):
        v0 = const u64 0, !179
        v1 = gtf v0, 1, !180
        v2 = bitcast v1 to u8, !180
        v3 = const u8 0, !181
        v4 = cmp eq v2 v3, !182
        cbr v4, block0(), block1(), !182

        block0():
        v5 = get_local ptr { u64 }, __anon_0, !183
        v6 = const u64 0
        v7 = get_elem_ptr v5, ptr u64, v6, !183
        v8 = const u64 0, !183
        store v8 to v7, !183
        v9 = load v5
        v10 = get_local ptr { u64 }, __tmp_block_arg
        store v9 to v10
        br block5(v10)

        block1():
        v11 = const u8 1, !184
        v12 = cmp eq v2 v11, !185
        cbr v12, block2(), block3(), !185

        block2():
        v13 = get_local ptr { u64 }, __anon_1, !183
        v14 = const u64 0
        v15 = get_elem_ptr v13, ptr u64, v14, !183
        v16 = const u64 1, !183
        store v16 to v15, !183
        v17 = load v13
        v18 = get_local ptr { u64 }, __tmp_block_arg
        store v17 to v18
        br block5(v18)

        block3():
        v19 = const u64 0, !186
        revert v19, !188

        block5(v20: ptr { u64 }):
        v21 = load v20
        store v21 to __ret_value
        ret ptr { u64 } __ret_value
    }

    pub fn output_type_10(index !189: u64, __ret_value: ptr { u64 }) -> ptr { u64 }, !190 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local { u64 } __anon_3
        local { u64 } __tmp_block_arg
        local { u64 } __tmp_block_arg0
        local { u64 } __tmp_block_arg1

        entry(index: u64, __ret_value: ptr { u64 }):
        v0 = gtf index, 768, !191
        v1 = bitcast v0 to u8, !191
        v2 = const u8 0, !192
        v3 = cmp eq v1 v2, !193
        cbr v3, block0(), block1(), !193

        block0():
        v4 = get_local ptr { u64 }, __anon_0, !194
        v5 = const u64 0
        v6 = get_elem_ptr v4, ptr u64, v5, !194
        v7 = const u64 0, !194
        store v7 to v6, !194
        v8 = load v4
        v9 = get_local ptr { u64 }, __tmp_block_arg1
        store v8 to v9
        br block11(v9)

        block1():
        v10 = const u8 1, !195
        v11 = cmp eq v1 v10, !196
        cbr v11, block2(), block3(), !196

        block2():
        v12 = get_local ptr { u64 }, __anon_1, !194
        v13 = const u64 0
        v14 = get_elem_ptr v12, ptr u64, v13, !194
        v15 = const u64 1, !194
        store v15 to v14, !194
        v16 = load v12
        v17 = get_local ptr { u64 }, __tmp_block_arg0
        store v16 to v17
        br block10(v17)

        block3():
        v18 = const u8 2, !197
        v19 = cmp eq v1 v18, !198
        cbr v19, block4(), block5(), !198

        block4():
        v20 = get_local ptr { u64 }, __anon_2, !194
        v21 = const u64 0
        v22 = get_elem_ptr v20, ptr u64, v21, !194
        v23 = const u64 2, !194
        store v23 to v22, !194
        v24 = load v20
        v25 = get_local ptr { u64 }, __tmp_block_arg
        store v24 to v25
        br block9(v25)

        block5():
        v26 = const u8 3, !199
        v27 = cmp eq v1 v26, !200
        cbr v27, block6(), block7(), !200

        block6():
        v28 = get_local ptr { u64 }, __anon_3, !194
        v29 = const u64 0
        v30 = get_elem_ptr v28, ptr u64, v29, !194
        v31 = const u64 3, !194
        store v31 to v30, !194
        v32 = load v28
        v33 = get_local ptr { u64 }, __tmp_block_arg
        store v32 to v33
        br block9(v33)

        block7():
        v34 = const u64 0, !201
        revert v34, !203

        block9(v35: ptr { u64 }):
        v36 = load v35
        v37 = get_local ptr { u64 }, __tmp_block_arg0
        store v36 to v37
        br block10(v37)

        block10(v38: ptr { u64 }):
        v39 = load v38
        v40 = get_local ptr { u64 }, __tmp_block_arg1
        store v39 to v40
        br block11(v40)

        block11(v41: ptr { u64 }):
        v42 = load v41
        store v42 to __ret_value
        ret ptr { u64 } __ret_value
    }

    pub fn bits_16(self: ptr { b256 }, __ret_value: ptr b256) -> ptr b256, !205 {
        entry(self: ptr { b256 }, __ret_value: ptr b256):
        v0 = load self
        v1 = ptr_to_int v0 to u64
        v2 = int_to_ptr v1 to ptr { b256 }
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr b256, v3, !206
        v5 = load v4
        store v5 to __ret_value
        ret ptr b256 __ret_value
    }
}

!0 = "/home/kebradalaonda/p/sway/test/src/e2e_vm_tests/test_programs/should_pass/static_analysis/cei_pattern_violation_in_asm_block_tr/src/main.sw"
!1 = span !0 105 713
!2 = span !0 263 287
!3 = span !0 412 493
!4 = span !0 528 535
!5 = span !0 502 537
!6 = span !0 574 581
!7 = span !0 546 583
!8 = "/home/kebradalaonda/p/sway/sway-lib-std/src/identity.sw"
!9 = span !8 477 548
!10 = span !0 685 689
!11 = span !0 692 697
!12 = span !0 655 706
!13 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset.sw"
!14 = span !13 3829 4011
!15 = (!12 !14)
!16 = (!12 !14)
!17 = span !13 3835 3837
!18 = (!12 !17)
!19 = (!12 !17)
!20 = span !13 3848 3919
!21 = (!12 !20)
!22 = (!12 !20)
!23 = (!12 !17)
!24 = span !13 3866 3870
!25 = (!12 !24)
!26 = (!12 !24)
!27 = span !13 3895 3899
!28 = (!12 !27)
!29 = span !13 3875 3918
!30 = span !13 6153 6167
!31 = "/home/kebradalaonda/p/sway/sway-lib-std/src/outputs.sw"
!32 = span !31 3429 3600
!33 = (!12 !29 !30 !32)
!34 = (!12 !29 !30 !32)
!35 = span !31 3435 3444
!36 = (!12 !29 !30 !35)
!37 = (!12 !29 !30 !35)
!38 = (!12 !29 !30)
!39 = span !31 3455 3520
!40 = (!12 !29 !30 !39)
!41 = (!12 !29 !30 !39)
!42 = span !31 3491 3492
!43 = span !31 3478 3519
!44 = (!12 !29 !30 !43)
!45 = (!12 !29 !30 !43)
!46 = (!12 !29 !30)
!47 = (!12 !29 !30 !35)
!48 = (!12 !29 !30 !35)
!49 = (!12 !29 !30)
!50 = span !31 3529 3594
!51 = (!12 !29 !30 !50)
!52 = (!12 !29 !30 !50)
!53 = span !31 3565 3566
!54 = span !31 3552 3593
!55 = (!12 !29 !30 !54)
!56 = (!12 !29 !30 !54)
!57 = (!12 !29 !30)
!58 = (!12 !29 !30 !32)
!59 = span !13 5893 5894
!60 = (!12 !29)
!61 = span !13 6179 6204
!62 = (!12 !29 !61)
!63 = (!12 !29)
!64 = span !13 6215 6482
!65 = (!12 !29 !64)
!66 = (!12 !29 !64)
!67 = span !13 6241 6259
!68 = (!12 !29 !67)
!69 = (!12 !29 !67)
!70 = (!12 !29)
!71 = span !13 6222 6482
!72 = (!12 !29 !71)
!73 = (!12 !29 !71)
!74 = span !13 6277 6297
!75 = span !31 4537 5459
!76 = (!12 !29 !74 !75)
!77 = (!12 !29 !74 !75)
!78 = span !31 4543 4561
!79 = (!12 !29 !74 !78)
!80 = (!12 !29 !74 !78)
!81 = (!12 !29 !74)
!82 = span !31 4572 4632
!83 = (!12 !29 !74 !82)
!84 = (!12 !29 !74 !82)
!85 = span !31 4588 4631
!86 = (!12 !29 !74 !85)
!87 = (!12 !29 !74 !85)
!88 = (!12 !29 !74)
!89 = (!12 !29 !74 !78)
!90 = (!12 !29 !74 !78)
!91 = (!12 !29 !74)
!92 = span !31 4641 4671
!93 = (!12 !29 !74 !92)
!94 = (!12 !29 !74 !92)
!95 = span !31 4668 4669
!96 = span !31 4661 4670
!97 = "/home/kebradalaonda/p/sway/sway-lib-std/src/revert.sw"
!98 = span !97 691 705
!99 = (!12 !29 !74 !96 !98)
!100 = (!12 !29 !74 !78)
!101 = (!12 !29 !74 !78)
!102 = (!12 !29 !74)
!103 = span !31 5018 5038
!104 = (!12 !29 !74 !103)
!105 = span !31 5036 5037
!106 = (!12 !29 !74 !103)
!107 = (!12 !29 !74 !78)
!108 = (!12 !29 !74 !78)
!109 = (!12 !29 !74)
!110 = span !31 5242 5453
!111 = (!12 !29 !74 !110)
!112 = (!12 !29 !74 !110)
!113 = span !31 5286 5307
!114 = span !31 2767 2950
!115 = (!12 !29 !74 !113 !114)
!116 = (!12 !29 !74 !113 !114)
!117 = span !31 2773 2782
!118 = (!12 !29 !74 !113 !117)
!119 = (!12 !29 !74 !113 !117)
!120 = (!12 !29 !74 !113)
!121 = span !31 2793 2864
!122 = (!12 !29 !74 !113 !121)
!123 = (!12 !29 !74 !113 !121)
!124 = span !31 2816 2863
!125 = (!12 !29 !74 !113 !124)
!126 = (!12 !29 !74 !113 !124)
!127 = (!12 !29 !74 !113)
!128 = (!12 !29 !74 !113 !117)
!129 = (!12 !29 !74 !113 !117)
!130 = (!12 !29 !74 !113)
!131 = span !31 2873 2944
!132 = (!12 !29 !74 !113 !131)
!133 = (!12 !29 !74 !113 !131)
!134 = span !31 2896 2943
!135 = (!12 !29 !74 !113 !134)
!136 = (!12 !29 !74 !113 !134)
!137 = (!12 !29 !74 !113)
!138 = (!12 !29 !74 !113 !114)
!139 = span !31 5321 5442
!140 = (!12 !29 !74 !139)
!141 = span !31 5360 5374
!142 = span !31 5392 5403
!143 = (!12 !29 !74)
!144 = (!12 !29 !74 !75)
!145 = (!12 !29 !74)
!146 = span !13 6301 6302
!147 = span !13 6277 6302
!148 = (!12 !29 !147)
!149 = (!12 !29 !147)
!150 = span !0 400 402
!151 = span !13 6399 6414
!152 = span !13 6451 6457
!153 = span !13 6500 6501
!154 = span !13 6491 6501
!155 = (!12 !29 !154)
!156 = (!12 !29)
!157 = "/home/kebradalaonda/p/sway/sway-lib-std/src/error_signals.sw"
!158 = span !157 566 587
!159 = span !13 6514 6555
!160 = (!12 !29 !159 !98)
!161 = (!12 !17)
!162 = (!12 !17)
!163 = span !13 3928 4005
!164 = (!12 !163)
!165 = (!12 !163)
!166 = (!12 !17)
!167 = span !13 3949 3951
!168 = (!12 !167)
!169 = (!12 !167)
!170 = span !13 3983 3985
!171 = (!12 !170)
!172 = span !13 5050 5061
!173 = (!12 !14)
!174 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset_id.sw"
!175 = span !174 1292 1349
!176 = span !174 1330 1343
!177 = "/home/kebradalaonda/p/sway/sway-lib-std/src/tx.sw"
!178 = span !177 2271 2445
!179 = span !177 2327 2328
!180 = span !177 2315 2339
!181 = span !177 2350 2353
!182 = span !177 2350 2377
!183 = span !177 1445 1616
!184 = span !177 2386 2389
!185 = span !177 2386 2413
!186 = span !177 2434 2435
!187 = span !177 2427 2436
!188 = (!187 !98)
!189 = span !31 1936 1941
!190 = span !31 1917 2165
!191 = span !31 1970 2005
!192 = span !31 2016 2019
!193 = span !31 2016 2036
!194 = span !31 956 1170
!195 = span !31 2045 2048
!196 = span !31 2045 2069
!197 = span !31 2078 2081
!198 = span !31 2078 2100
!199 = span !31 2109 2112
!200 = span !31 2109 2133
!201 = span !31 2154 2155
!202 = span !31 2147 2156
!203 = (!202 !98)
!204 = "/home/kebradalaonda/p/sway/sway-lib-std/src/contract_id.sw"
!205 = span !204 695 746
!206 = span !204 305 315

// IR: [misc-demotion] Miscellaneous by-value demotions to by-reference
contract {
    pub entry fn deposit<2df2cef7>() -> (), !1 {
        local { b256, u64, u64 } __anon_0
        local b256 __anon_1
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local b256 __asm_arg
        local { b256 } __asm_arg0
        local { b256 } __asm_arg1
        local b256 __asm_arg2
        local b256 __const = const b256 0x3dba0a4455b598b7655a7fb430883d96c9527ef275b49739e7b0ad12f8280eae
        local b256 __const0 = const b256 0x0000000000000000000000000000000000000000000000000000000000000000
        local b256 __const1 = const b256 0x0000000000000000000000000000000000000000000000000000000000000001
        local { u64, ( { b256 } | { b256 } ) } __matched_value_1
        local { u64 } __matched_value_2
        local { u64 } __matched_value_20
        local { u64 } __matched_value_3
        local { u64 } __matched_value_4
        local { b256 } __ret_val
        local { b256 } __ret_val0
        local { u64 } __ret_val1
        local { u64 } __ret_val2
        local { u64 } __ret_val3
        local { u64 } __ret_val4
        local b256 __ret_val5
        local b256 __ret_val6
        local b256 __tmp_arg
        local b256 __tmp_arg0
        local { b256 } __tmp_arg1
        local { b256 } __tmp_arg2
        local { b256 } addr
        local b256 address
        local { b256 } asset
        local { b256 } id
        local { b256 } pool

        entry():
        v0 = get_local ptr b256, __const
        v1 = load v0
        v2 = get_local ptr b256, __const0
        v3 = load v2
        v4 = get_local ptr b256, __const1
        v5 = load v4
        v6 = get_local ptr { b256, u64, u64 }, __anon_0, !2
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr b256, v7
        store v1 to v8, !2
        v9 = const u64 1
        v10 = get_elem_ptr v6, ptr u64, v9
        v11 = const u64 770887415, !2
        store v11 to v10, !2
        v12 = const u64 2
        v13 = get_elem_ptr v6, ptr u64, v12
        v14 = const u64 0
        store v14 to v13, !2
        v15 = get_local ptr b256, __anon_1
        store v3 to v15
        v16 = read_register cgas, !2
        v17 = const u64 0, !2
        v18 = contract_call () deposit v6, v17, v15, v16, !2
        v19 = get_local ptr b256, address, !3
        store v5 to v19, !3
        v20 = get_local ptr b256, address, !4
        v21 = load v20
        v22 = get_local ptr b256, __tmp_arg
        store v21 to v22
        v23 = get_local ptr { b256 }, __ret_val
        v24 = call from_0(v22, v23)
        v25 = load v24
        v26 = get_local ptr { b256 }, asset, !5
        store v25 to v26, !5
        v27 = get_local ptr b256, address, !6
        v28 = load v27
        v29 = get_local ptr b256, __tmp_arg0
        store v28 to v29
        v30 = get_local ptr { b256 }, __ret_val0
        v31 = call from_0(v29, v30)
        v32 = load v31
        v33 = get_local ptr { b256 }, pool, !7
        store v32 to v33, !7
        v34 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !9
        v35 = const u64 0
        v36 = get_elem_ptr v34, ptr u64, v35, !9
        v37 = const u64 1, !9
        store v37 to v36, !9
        v38 = get_local ptr { b256 }, pool, !10
        v39 = load v38
        v40 = const u64 1
        v41 = const u64 1
        v42 = get_elem_ptr v34, ptr { b256 }, v40, v41, !9
        store v39 to v42, !9
        v43 = load v34
        v44 = get_local ptr { b256 }, asset, !11
        v45 = load v44
        v46 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !15
        store v43 to v46, !16
        v47 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !18
        v48 = const u64 0
        v49 = get_elem_ptr v47, ptr u64, v48, !19
        v50 = load v49, !12
        v51 = const u64 0, !17
        v52 = cmp eq v50 v51, !21
        cbr v52, transfer_2_block0(), transfer_2_block1(), !22

        transfer_2_block0():
        v53 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !23
        v54 = const u64 1
        v55 = const u64 0
        v56 = get_elem_ptr v53, ptr { b256 }, v54, v55, !12
        v57 = load v56, !12
        v58 = get_local ptr { b256 }, addr, !25
        store v57 to v58, !26
        v59 = get_local ptr { b256 }, addr, !28
        v60 = load v59, !12
        v61 = get_local ptr { u64 }, __ret_val1
        v62 = call tx_type_6(v61)
        v63 = load v62
        v64 = get_local ptr { u64 }, __matched_value_3, !33
        store v63 to v64, !34
        v65 = get_local ptr { u64 }, __matched_value_3, !36
        v66 = const u64 0
        v67 = get_elem_ptr v65, ptr u64, v66, !37
        v68 = load v67, !38
        v69 = const u64 0, !35
        v70 = cmp eq v68 v69, !40
        cbr v70, transfer_2_transfer_to_address_4_output_count_5_block0(), transfer_2_transfer_to_address_4_output_count_5_block1(), !41

        transfer_2_transfer_to_address_4_output_count_5_block0():
        v71 = const u64 0, !42
        v72 = gtf v71, 6, !44
        v73 = bitcast v72 to u64, !45
        br transfer_2_transfer_to_address_4_output_count_5_block5(v73), !46

        transfer_2_transfer_to_address_4_output_count_5_block1():
        v74 = get_local ptr { u64 }, __matched_value_3, !47
        v75 = const u64 0
        v76 = get_elem_ptr v74, ptr u64, v75, !48
        v77 = load v76, !49
        v78 = const u64 1, !35
        v79 = cmp eq v77 v78, !51
        cbr v79, transfer_2_transfer_to_address_4_output_count_5_block2(), transfer_2_transfer_to_address_4_output_count_5_block3(), !52

        transfer_2_transfer_to_address_4_output_count_5_block2():
        v80 = const u64 0, !53
        v81 = gtf v80, 260, !55
        v82 = bitcast v81 to u64, !56
        br transfer_2_transfer_to_address_4_output_count_5_block5(v82), !57

        transfer_2_transfer_to_address_4_output_count_5_block3():
        v83 = const u64 14757395258967588866, !32
        revert v83, !58

        transfer_2_transfer_to_address_4_output_count_5_block5(v84: u64):
        v85 = const u64 0, !59
        br transfer_2_transfer_to_address_4_while(v85), !60

        transfer_2_transfer_to_address_4_while(v86: u64):
        v87 = cmp lt v86 v84, !62
        cbr v87, transfer_2_transfer_to_address_4_while_body(), transfer_2_transfer_to_address_4_end_while(), !63

        transfer_2_transfer_to_address_4_while_body():
        v88 = get_local ptr { u64 }, __ret_val3
        v89 = call output_type_10(v86, v88)
        v90 = load v89
        v91 = get_local ptr { u64 }, __matched_value_2, !65
        store v90 to v91, !66
        v92 = get_local ptr { u64 }, __matched_value_2, !68
        v93 = const u64 0
        v94 = get_elem_ptr v92, ptr u64, v93, !69
        v95 = load v94, !70
        v96 = const u64 3, !67
        v97 = cmp eq v95 v96, !72
        v98 = const unit ()
        cbr v97, transfer_2_transfer_to_address_4_block0(), transfer_2_transfer_to_address_4_block5(v98), !73

        transfer_2_transfer_to_address_4_block0():
        v99 = get_local ptr { u64 }, __ret_val4
        v100 = call output_type_10(v86, v99)
        v101 = load v100
        v102 = get_local ptr { u64 }, __matched_value_4, !76
        store v101 to v102, !77
        v103 = get_local ptr { u64 }, __matched_value_4, !79
        v104 = const u64 0
        v105 = get_elem_ptr v103, ptr u64, v104, !80
        v106 = load v105, !81
        v107 = const u64 0, !78
        v108 = cmp eq v106 v107, !83
        cbr v108, transfer_2_transfer_to_address_4_output_amount_11_block0(), transfer_2_transfer_to_address_4_output_amount_11_block1(), !84

        transfer_2_transfer_to_address_4_output_amount_11_block0():
        v109 = gtf v86, 770, !86
        v110 = bitcast v109 to u64, !87
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v110), !88

        transfer_2_transfer_to_address_4_output_amount_11_block1():
        v111 = get_local ptr { u64 }, __matched_value_4, !89
        v112 = const u64 0
        v113 = get_elem_ptr v111, ptr u64, v112, !90
        v114 = load v113, !91
        v115 = const u64 1, !78
        v116 = cmp eq v114 v115, !93
        cbr v116, transfer_2_transfer_to_address_4_output_amount_11_block2(), transfer_2_transfer_to_address_4_output_amount_11_block3(), !94

        transfer_2_transfer_to_address_4_output_amount_11_block2():
        v117 = const u64 0, !95
        revert v117, !99

        transfer_2_transfer_to_address_4_output_amount_11_block3():
        v118 = get_local ptr { u64 }, __matched_value_4, !100
        v119 = const u64 0
        v120 = get_elem_ptr v118, ptr u64, v119, !101
        v121 = load v120, !102
        v122 = const u64 2, !78
        v123 = cmp eq v121 v122, !104
        v124 = const u64 0, !105
        cbr v123, transfer_2_transfer_to_address_4_output_amount_11_block9(v124), transfer_2_transfer_to_address_4_output_amount_11_block5(), !106

        transfer_2_transfer_to_address_4_output_amount_11_block5():
        v125 = get_local ptr { u64 }, __matched_value_4, !107
        v126 = const u64 0
        v127 = get_elem_ptr v125, ptr u64, v126, !108
        v128 = load v127, !109
        v129 = const u64 3, !78
        v130 = cmp eq v128 v129, !111
        cbr v130, transfer_2_transfer_to_address_4_output_amount_11_block6(), transfer_2_transfer_to_address_4_output_amount_11_block7(), !112

        transfer_2_transfer_to_address_4_output_amount_11_block6():
        v131 = get_local ptr { u64 }, __ret_val2
        v132 = call tx_type_6(v131)
        v133 = load v132
        v134 = get_local ptr { u64 }, __matched_value_20, !115
        store v133 to v134, !116
        v135 = get_local ptr { u64 }, __matched_value_20, !118
        v136 = const u64 0
        v137 = get_elem_ptr v135, ptr u64, v136, !119
        v138 = load v137, !120
        v139 = const u64 0, !117
        v140 = cmp eq v138 v139, !122
        cbr v140, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1(), !123

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0():
        v141 = gtf v86, 12, !125
        v142 = bitcast v141 to u64, !126
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v142), !127

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1():
        v143 = get_local ptr { u64 }, __matched_value_20, !128
        v144 = const u64 0
        v145 = get_elem_ptr v143, ptr u64, v144, !129
        v146 = load v145, !130
        v147 = const u64 1, !117
        v148 = cmp eq v146 v147, !132
        cbr v148, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3(), !133

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2():
        v149 = gtf v86, 265, !135
        v150 = bitcast v149 to u64, !136
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v150), !137

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3():
        v151 = const u64 14757395258967588866, !114
        revert v151, !138

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v152: u64):
        v153 = asm(r1, r2, r3: v152) -> u64 r1, !140 {
            addi   r2 r3 i40, !141
            lw     r1 r2 i0, !142
        }
        br transfer_2_transfer_to_address_4_output_amount_11_block9(v153), !143

        transfer_2_transfer_to_address_4_output_amount_11_block7():
        v154 = const u64 14757395258967588866, !75
        revert v154, !144

        transfer_2_transfer_to_address_4_output_amount_11_block9(v155: u64):
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v155), !145

        transfer_2_transfer_to_address_4_output_amount_11_block11(v156: u64):
        v157 = const u64 0, !146
        v158 = cmp eq v156 v157, !148
        v159 = const unit ()
        cbr v158, transfer_2_transfer_to_address_4_block1(), transfer_2_transfer_to_address_4_block5(v159), !149

        transfer_2_transfer_to_address_4_block1():
        v160 = get_local ptr { b256 }, __tmp_arg1
        store v60 to v160
        v161 = get_local ptr b256, __ret_val5
        v162 = call bits_16(v160, v161)
        v163 = load v162
        v164 = get_local ptr b256, __asm_arg
        store v163 to v164
        v165 = get_local ptr { b256 }, __asm_arg0
        store v45 to v165
        v166 = const u64 10, !150
        v167 = asm(r1: v164, r2: v86, r3: v166, r4: v165) {
            tro    r1 r2 r3 r4, !151
        }
        v168 = const unit (), !152
        br transfer_2_block5(v168), !12

        transfer_2_transfer_to_address_4_block5(v169: ()):
        v170 = const u64 1, !153
        v171 = add v86, v170, !155
        br transfer_2_transfer_to_address_4_while(v171), !156

        transfer_2_transfer_to_address_4_end_while():
        v172 = const u64 18446744073709486081, !158
        revert v172, !160

        transfer_2_block1():
        v173 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !161
        v174 = const u64 0
        v175 = get_elem_ptr v173, ptr u64, v174, !162
        v176 = load v175, !12
        v177 = const u64 1, !17
        v178 = cmp eq v176 v177, !164
        cbr v178, transfer_2_block2(), transfer_2_block3(), !165

        transfer_2_block2():
        v179 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !166
        v180 = const u64 1
        v181 = const u64 1
        v182 = get_elem_ptr v179, ptr { b256 }, v180, v181, !12
        v183 = load v182, !12
        v184 = get_local ptr { b256 }, id, !168
        store v183 to v184, !169
        v185 = get_local ptr { b256 }, id, !171
        v186 = load v185, !12
        v187 = get_local ptr { b256 }, __tmp_arg2
        store v186 to v187
        v188 = get_local ptr b256, __ret_val6
        v189 = call bits_16(v187, v188)
        v190 = load v189
        v191 = get_local ptr { b256 }, __asm_arg1
        store v45 to v191
        v192 = get_local ptr b256, __asm_arg2
        store v190 to v192
        v193 = asm(r1: v166, r2: v191, r3: v192) {
            tr     r3 r1 r2, !172
        }
        v194 = const unit ()
        br transfer_2_block5(v194), !12

        transfer_2_block3():
        v195 = const u64 14757395258967588866, !14
        revert v195, !173

        transfer_2_block5(v196: ()):
        v197 = const unit ()
        ret () v197
    }

    pub fn from_0(bits: ptr b256, __ret_value: ptr { b256 }) -> ptr { b256 }, !175 {
        local { b256 } __anon_0

        entry(bits: ptr b256, __ret_value: ptr { b256 }):
        v0 = load bits
        v1 = get_local ptr { b256 }, __anon_0, !176
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2
        store v0 to v3, !176
        v4 = load v1
        store v4 to __ret_value
        ret ptr { b256 } __ret_value
    }

    pub fn tx_type_6(__ret_value: ptr { u64 }) -> ptr { u64 }, !178 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __tmp_block_arg

        entry(__ret_value: ptr { u64 }):
        v0 = const u64 0, !179
        v1 = gtf v0, 1, !180
        v2 = bitcast v1 to u8, !180
        v3 = const u8 0, !181
        v4 = cmp eq v2 v3, !182
        cbr v4, block0(), block1(), !182

        block0():
        v5 = get_local ptr { u64 }, __anon_0, !183
        v6 = const u64 0
        v7 = get_elem_ptr v5, ptr u64, v6, !183
        v8 = const u64 0, !183
        store v8 to v7, !183
        v9 = load v5
        v10 = get_local ptr { u64 }, __tmp_block_arg
        store v9 to v10
        br block5(v10)

        block1():
        v11 = const u8 1, !184
        v12 = cmp eq v2 v11, !185
        cbr v12, block2(), block3(), !185

        block2():
        v13 = get_local ptr { u64 }, __anon_1, !183
        v14 = const u64 0
        v15 = get_elem_ptr v13, ptr u64, v14, !183
        v16 = const u64 1, !183
        store v16 to v15, !183
        v17 = load v13
        v18 = get_local ptr { u64 }, __tmp_block_arg
        store v17 to v18
        br block5(v18)

        block3():
        v19 = const u64 0, !186
        revert v19, !188

        block5(v20: ptr { u64 }):
        v21 = load v20
        store v21 to __ret_value
        ret ptr { u64 } __ret_value
    }

    pub fn output_type_10(index !189: u64, __ret_value: ptr { u64 }) -> ptr { u64 }, !190 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local { u64 } __anon_3
        local { u64 } __tmp_block_arg
        local { u64 } __tmp_block_arg0
        local { u64 } __tmp_block_arg1

        entry(index: u64, __ret_value: ptr { u64 }):
        v0 = gtf index, 768, !191
        v1 = bitcast v0 to u8, !191
        v2 = const u8 0, !192
        v3 = cmp eq v1 v2, !193
        cbr v3, block0(), block1(), !193

        block0():
        v4 = get_local ptr { u64 }, __anon_0, !194
        v5 = const u64 0
        v6 = get_elem_ptr v4, ptr u64, v5, !194
        v7 = const u64 0, !194
        store v7 to v6, !194
        v8 = load v4
        v9 = get_local ptr { u64 }, __tmp_block_arg1
        store v8 to v9
        br block11(v9)

        block1():
        v10 = const u8 1, !195
        v11 = cmp eq v1 v10, !196
        cbr v11, block2(), block3(), !196

        block2():
        v12 = get_local ptr { u64 }, __anon_1, !194
        v13 = const u64 0
        v14 = get_elem_ptr v12, ptr u64, v13, !194
        v15 = const u64 1, !194
        store v15 to v14, !194
        v16 = load v12
        v17 = get_local ptr { u64 }, __tmp_block_arg0
        store v16 to v17
        br block10(v17)

        block3():
        v18 = const u8 2, !197
        v19 = cmp eq v1 v18, !198
        cbr v19, block4(), block5(), !198

        block4():
        v20 = get_local ptr { u64 }, __anon_2, !194
        v21 = const u64 0
        v22 = get_elem_ptr v20, ptr u64, v21, !194
        v23 = const u64 2, !194
        store v23 to v22, !194
        v24 = load v20
        v25 = get_local ptr { u64 }, __tmp_block_arg
        store v24 to v25
        br block9(v25)

        block5():
        v26 = const u8 3, !199
        v27 = cmp eq v1 v26, !200
        cbr v27, block6(), block7(), !200

        block6():
        v28 = get_local ptr { u64 }, __anon_3, !194
        v29 = const u64 0
        v30 = get_elem_ptr v28, ptr u64, v29, !194
        v31 = const u64 3, !194
        store v31 to v30, !194
        v32 = load v28
        v33 = get_local ptr { u64 }, __tmp_block_arg
        store v32 to v33
        br block9(v33)

        block7():
        v34 = const u64 0, !201
        revert v34, !203

        block9(v35: ptr { u64 }):
        v36 = load v35
        v37 = get_local ptr { u64 }, __tmp_block_arg0
        store v36 to v37
        br block10(v37)

        block10(v38: ptr { u64 }):
        v39 = load v38
        v40 = get_local ptr { u64 }, __tmp_block_arg1
        store v39 to v40
        br block11(v40)

        block11(v41: ptr { u64 }):
        v42 = load v41
        store v42 to __ret_value
        ret ptr { u64 } __ret_value
    }

    pub fn bits_16(self: ptr { b256 }, __ret_value: ptr b256) -> ptr b256, !205 {
        entry(self: ptr { b256 }, __ret_value: ptr b256):
        v0 = load self
        v1 = ptr_to_int self to u64
        v2 = int_to_ptr v1 to ptr { b256 }
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr b256, v3, !206
        v5 = load v4
        store v5 to __ret_value
        ret ptr b256 __ret_value
    }
}

!0 = "/home/kebradalaonda/p/sway/test/src/e2e_vm_tests/test_programs/should_pass/static_analysis/cei_pattern_violation_in_asm_block_tr/src/main.sw"
!1 = span !0 105 713
!2 = span !0 263 287
!3 = span !0 412 493
!4 = span !0 528 535
!5 = span !0 502 537
!6 = span !0 574 581
!7 = span !0 546 583
!8 = "/home/kebradalaonda/p/sway/sway-lib-std/src/identity.sw"
!9 = span !8 477 548
!10 = span !0 685 689
!11 = span !0 692 697
!12 = span !0 655 706
!13 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset.sw"
!14 = span !13 3829 4011
!15 = (!12 !14)
!16 = (!12 !14)
!17 = span !13 3835 3837
!18 = (!12 !17)
!19 = (!12 !17)
!20 = span !13 3848 3919
!21 = (!12 !20)
!22 = (!12 !20)
!23 = (!12 !17)
!24 = span !13 3866 3870
!25 = (!12 !24)
!26 = (!12 !24)
!27 = span !13 3895 3899
!28 = (!12 !27)
!29 = span !13 3875 3918
!30 = span !13 6153 6167
!31 = "/home/kebradalaonda/p/sway/sway-lib-std/src/outputs.sw"
!32 = span !31 3429 3600
!33 = (!12 !29 !30 !32)
!34 = (!12 !29 !30 !32)
!35 = span !31 3435 3444
!36 = (!12 !29 !30 !35)
!37 = (!12 !29 !30 !35)
!38 = (!12 !29 !30)
!39 = span !31 3455 3520
!40 = (!12 !29 !30 !39)
!41 = (!12 !29 !30 !39)
!42 = span !31 3491 3492
!43 = span !31 3478 3519
!44 = (!12 !29 !30 !43)
!45 = (!12 !29 !30 !43)
!46 = (!12 !29 !30)
!47 = (!12 !29 !30 !35)
!48 = (!12 !29 !30 !35)
!49 = (!12 !29 !30)
!50 = span !31 3529 3594
!51 = (!12 !29 !30 !50)
!52 = (!12 !29 !30 !50)
!53 = span !31 3565 3566
!54 = span !31 3552 3593
!55 = (!12 !29 !30 !54)
!56 = (!12 !29 !30 !54)
!57 = (!12 !29 !30)
!58 = (!12 !29 !30 !32)
!59 = span !13 5893 5894
!60 = (!12 !29)
!61 = span !13 6179 6204
!62 = (!12 !29 !61)
!63 = (!12 !29)
!64 = span !13 6215 6482
!65 = (!12 !29 !64)
!66 = (!12 !29 !64)
!67 = span !13 6241 6259
!68 = (!12 !29 !67)
!69 = (!12 !29 !67)
!70 = (!12 !29)
!71 = span !13 6222 6482
!72 = (!12 !29 !71)
!73 = (!12 !29 !71)
!74 = span !13 6277 6297
!75 = span !31 4537 5459
!76 = (!12 !29 !74 !75)
!77 = (!12 !29 !74 !75)
!78 = span !31 4543 4561
!79 = (!12 !29 !74 !78)
!80 = (!12 !29 !74 !78)
!81 = (!12 !29 !74)
!82 = span !31 4572 4632
!83 = (!12 !29 !74 !82)
!84 = (!12 !29 !74 !82)
!85 = span !31 4588 4631
!86 = (!12 !29 !74 !85)
!87 = (!12 !29 !74 !85)
!88 = (!12 !29 !74)
!89 = (!12 !29 !74 !78)
!90 = (!12 !29 !74 !78)
!91 = (!12 !29 !74)
!92 = span !31 4641 4671
!93 = (!12 !29 !74 !92)
!94 = (!12 !29 !74 !92)
!95 = span !31 4668 4669
!96 = span !31 4661 4670
!97 = "/home/kebradalaonda/p/sway/sway-lib-std/src/revert.sw"
!98 = span !97 691 705
!99 = (!12 !29 !74 !96 !98)
!100 = (!12 !29 !74 !78)
!101 = (!12 !29 !74 !78)
!102 = (!12 !29 !74)
!103 = span !31 5018 5038
!104 = (!12 !29 !74 !103)
!105 = span !31 5036 5037
!106 = (!12 !29 !74 !103)
!107 = (!12 !29 !74 !78)
!108 = (!12 !29 !74 !78)
!109 = (!12 !29 !74)
!110 = span !31 5242 5453
!111 = (!12 !29 !74 !110)
!112 = (!12 !29 !74 !110)
!113 = span !31 5286 5307
!114 = span !31 2767 2950
!115 = (!12 !29 !74 !113 !114)
!116 = (!12 !29 !74 !113 !114)
!117 = span !31 2773 2782
!118 = (!12 !29 !74 !113 !117)
!119 = (!12 !29 !74 !113 !117)
!120 = (!12 !29 !74 !113)
!121 = span !31 2793 2864
!122 = (!12 !29 !74 !113 !121)
!123 = (!12 !29 !74 !113 !121)
!124 = span !31 2816 2863
!125 = (!12 !29 !74 !113 !124)
!126 = (!12 !29 !74 !113 !124)
!127 = (!12 !29 !74 !113)
!128 = (!12 !29 !74 !113 !117)
!129 = (!12 !29 !74 !113 !117)
!130 = (!12 !29 !74 !113)
!131 = span !31 2873 2944
!132 = (!12 !29 !74 !113 !131)
!133 = (!12 !29 !74 !113 !131)
!134 = span !31 2896 2943
!135 = (!12 !29 !74 !113 !134)
!136 = (!12 !29 !74 !113 !134)
!137 = (!12 !29 !74 !113)
!138 = (!12 !29 !74 !113 !114)
!139 = span !31 5321 5442
!140 = (!12 !29 !74 !139)
!141 = span !31 5360 5374
!142 = span !31 5392 5403
!143 = (!12 !29 !74)
!144 = (!12 !29 !74 !75)
!145 = (!12 !29 !74)
!146 = span !13 6301 6302
!147 = span !13 6277 6302
!148 = (!12 !29 !147)
!149 = (!12 !29 !147)
!150 = span !0 400 402
!151 = span !13 6399 6414
!152 = span !13 6451 6457
!153 = span !13 6500 6501
!154 = span !13 6491 6501
!155 = (!12 !29 !154)
!156 = (!12 !29)
!157 = "/home/kebradalaonda/p/sway/sway-lib-std/src/error_signals.sw"
!158 = span !157 566 587
!159 = span !13 6514 6555
!160 = (!12 !29 !159 !98)
!161 = (!12 !17)
!162 = (!12 !17)
!163 = span !13 3928 4005
!164 = (!12 !163)
!165 = (!12 !163)
!166 = (!12 !17)
!167 = span !13 3949 3951
!168 = (!12 !167)
!169 = (!12 !167)
!170 = span !13 3983 3985
!171 = (!12 !170)
!172 = span !13 5050 5061
!173 = (!12 !14)
!174 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset_id.sw"
!175 = span !174 1292 1349
!176 = span !174 1330 1343
!177 = "/home/kebradalaonda/p/sway/sway-lib-std/src/tx.sw"
!178 = span !177 2271 2445
!179 = span !177 2327 2328
!180 = span !177 2315 2339
!181 = span !177 2350 2353
!182 = span !177 2350 2377
!183 = span !177 1445 1616
!184 = span !177 2386 2389
!185 = span !177 2386 2413
!186 = span !177 2434 2435
!187 = span !177 2427 2436
!188 = (!187 !98)
!189 = span !31 1936 1941
!190 = span !31 1917 2165
!191 = span !31 1970 2005
!192 = span !31 2016 2019
!193 = span !31 2016 2036
!194 = span !31 956 1170
!195 = span !31 2045 2048
!196 = span !31 2045 2069
!197 = span !31 2078 2081
!198 = span !31 2078 2100
!199 = span !31 2109 2112
!200 = span !31 2109 2133
!201 = span !31 2154 2155
!202 = span !31 2147 2156
!203 = (!202 !98)
!204 = "/home/kebradalaonda/p/sway/sway-lib-std/src/contract_id.sw"
!205 = span !204 695 746
!206 = span !204 305 315

// IR: [memcpyopt] Optimizations related to MemCopy instructions
contract {
    pub entry fn deposit<2df2cef7>() -> (), !1 {
        local { b256, u64, u64 } __anon_0
        local b256 __anon_1
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local b256 __asm_arg
        local { b256 } __asm_arg0
        local { b256 } __asm_arg1
        local b256 __asm_arg2
        local b256 __const = const b256 0x3dba0a4455b598b7655a7fb430883d96c9527ef275b49739e7b0ad12f8280eae
        local b256 __const0 = const b256 0x0000000000000000000000000000000000000000000000000000000000000000
        local b256 __const1 = const b256 0x0000000000000000000000000000000000000000000000000000000000000001
        local { u64, ( { b256 } | { b256 } ) } __matched_value_1
        local { u64 } __matched_value_2
        local { u64 } __matched_value_20
        local { u64 } __matched_value_3
        local { u64 } __matched_value_4
        local { b256 } __ret_val
        local { b256 } __ret_val0
        local { u64 } __ret_val1
        local { u64 } __ret_val2
        local { u64 } __ret_val3
        local { u64 } __ret_val4
        local b256 __ret_val5
        local b256 __ret_val6
        local b256 __tmp_arg
        local b256 __tmp_arg0
        local { b256 } __tmp_arg1
        local { b256 } __tmp_arg2
        local { b256 } addr
        local b256 address
        local { b256 } asset
        local { b256 } id
        local { b256 } pool

        entry():
        v0 = get_local ptr b256, __const
        v1 = load v0
        v2 = get_local ptr b256, __const0
        v3 = load v2
        v4 = get_local ptr b256, __const1
        v5 = load v4
        v6 = get_local ptr { b256, u64, u64 }, __anon_0, !2
        v7 = const u64 0
        v8 = get_elem_ptr v6, ptr b256, v7
        mem_copy_val v8, v0
        v9 = const u64 1
        v10 = get_elem_ptr v6, ptr u64, v9
        v11 = const u64 770887415, !2
        store v11 to v10, !2
        v12 = const u64 2
        v13 = get_elem_ptr v6, ptr u64, v12
        v14 = const u64 0
        store v14 to v13, !2
        v15 = get_local ptr b256, __const0
        v16 = read_register cgas, !2
        v17 = const u64 0, !2
        v18 = contract_call () deposit v6, v17, v15, v16, !2
        v19 = get_local ptr b256, __const1, !3
        v20 = get_local ptr b256, __const1, !4
        v21 = load v20
        v22 = get_local ptr b256, __tmp_arg
        mem_copy_val v22, v20
        v23 = get_local ptr { b256 }, __ret_val
        v24 = call from_0(v22, v23)
        v25 = load v24
        v26 = get_local ptr { b256 }, asset, !5
        mem_copy_val v26, v24
        v27 = get_local ptr b256, __const1, !6
        v28 = load v27
        v29 = get_local ptr b256, __tmp_arg0
        mem_copy_val v29, v27
        v30 = get_local ptr { b256 }, __ret_val0
        v31 = call from_0(v29, v30)
        v32 = load v31
        v33 = get_local ptr { b256 }, pool, !7
        mem_copy_val v33, v31
        v34 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !9
        v35 = const u64 0
        v36 = get_elem_ptr v34, ptr u64, v35, !9
        v37 = const u64 1, !9
        store v37 to v36, !9
        v38 = get_local ptr { b256 }, pool, !10
        v39 = load v38
        v40 = const u64 1
        v41 = const u64 1
        v42 = get_elem_ptr v34, ptr { b256 }, v40, v41, !9
        mem_copy_val v42, v38
        v43 = load v34
        v44 = get_local ptr { b256 }, asset, !11
        v45 = load v44
        v46 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !15
        mem_copy_val v46, v34
        v47 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !17
        v48 = const u64 0
        v49 = get_elem_ptr v47, ptr u64, v48, !18
        v50 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2
        v51 = get_elem_ptr v50, ptr u64, v48
        v52 = load v51, !12
        v53 = const u64 0, !16
        v54 = cmp eq v52 v53, !20
        cbr v54, transfer_2_block0(), transfer_2_block1(), !21

        transfer_2_block0():
        v55 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !22
        v56 = const u64 1
        v57 = const u64 0
        v58 = get_elem_ptr v55, ptr { b256 }, v56, v57, !12
        v59 = load v58, !12
        v60 = get_local ptr { b256 }, addr, !24
        mem_copy_val v60, v58
        v61 = get_local ptr { b256 }, addr, !26
        v62 = load v58, !12
        v63 = get_local ptr { u64 }, __ret_val1
        v64 = call tx_type_6(v63)
        v65 = load v64
        v66 = get_local ptr { u64 }, __matched_value_3, !31
        mem_copy_val v66, v64
        v67 = get_local ptr { u64 }, __matched_value_3, !33
        v68 = const u64 0
        v69 = get_elem_ptr v67, ptr u64, v68, !34
        v70 = load v69, !35
        v71 = const u64 0, !32
        v72 = cmp eq v70 v71, !37
        cbr v72, transfer_2_transfer_to_address_4_output_count_5_block0(), transfer_2_transfer_to_address_4_output_count_5_block1(), !38

        transfer_2_transfer_to_address_4_output_count_5_block0():
        v73 = const u64 0, !39
        v74 = gtf v73, 6, !41
        v75 = bitcast v74 to u64, !42
        br transfer_2_transfer_to_address_4_output_count_5_block5(v75), !43

        transfer_2_transfer_to_address_4_output_count_5_block1():
        v76 = get_local ptr { u64 }, __matched_value_3, !44
        v77 = const u64 0
        v78 = get_elem_ptr v76, ptr u64, v77, !45
        v79 = load v78, !46
        v80 = const u64 1, !32
        v81 = cmp eq v79 v80, !48
        cbr v81, transfer_2_transfer_to_address_4_output_count_5_block2(), transfer_2_transfer_to_address_4_output_count_5_block3(), !49

        transfer_2_transfer_to_address_4_output_count_5_block2():
        v82 = const u64 0, !50
        v83 = gtf v82, 260, !52
        v84 = bitcast v83 to u64, !53
        br transfer_2_transfer_to_address_4_output_count_5_block5(v84), !54

        transfer_2_transfer_to_address_4_output_count_5_block3():
        v85 = const u64 14757395258967588866, !30
        revert v85, !55

        transfer_2_transfer_to_address_4_output_count_5_block5(v86: u64):
        v87 = const u64 0, !56
        br transfer_2_transfer_to_address_4_while(v87), !57

        transfer_2_transfer_to_address_4_while(v88: u64):
        v89 = cmp lt v88 v86, !59
        cbr v89, transfer_2_transfer_to_address_4_while_body(), transfer_2_transfer_to_address_4_end_while(), !60

        transfer_2_transfer_to_address_4_while_body():
        v90 = get_local ptr { u64 }, __ret_val3
        v91 = call output_type_10(v88, v90)
        v92 = load v91
        v93 = get_local ptr { u64 }, __matched_value_2, !62
        mem_copy_val v93, v91
        v94 = get_local ptr { u64 }, __matched_value_2, !64
        v95 = const u64 0
        v96 = get_elem_ptr v94, ptr u64, v95, !65
        v97 = load v96, !66
        v98 = const u64 3, !63
        v99 = cmp eq v97 v98, !68
        v100 = const unit ()
        cbr v99, transfer_2_transfer_to_address_4_block0(), transfer_2_transfer_to_address_4_block5(v100), !69

        transfer_2_transfer_to_address_4_block0():
        v101 = get_local ptr { u64 }, __ret_val4
        v102 = call output_type_10(v88, v101)
        v103 = load v102
        v104 = get_local ptr { u64 }, __matched_value_4, !72
        mem_copy_val v104, v102
        v105 = get_local ptr { u64 }, __matched_value_4, !74
        v106 = const u64 0
        v107 = get_elem_ptr v105, ptr u64, v106, !75
        v108 = load v107, !76
        v109 = const u64 0, !73
        v110 = cmp eq v108 v109, !78
        cbr v110, transfer_2_transfer_to_address_4_output_amount_11_block0(), transfer_2_transfer_to_address_4_output_amount_11_block1(), !79

        transfer_2_transfer_to_address_4_output_amount_11_block0():
        v111 = gtf v88, 770, !81
        v112 = bitcast v111 to u64, !82
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v112), !83

        transfer_2_transfer_to_address_4_output_amount_11_block1():
        v113 = get_local ptr { u64 }, __matched_value_4, !84
        v114 = const u64 0
        v115 = get_elem_ptr v113, ptr u64, v114, !85
        v116 = load v115, !86
        v117 = const u64 1, !73
        v118 = cmp eq v116 v117, !88
        cbr v118, transfer_2_transfer_to_address_4_output_amount_11_block2(), transfer_2_transfer_to_address_4_output_amount_11_block3(), !89

        transfer_2_transfer_to_address_4_output_amount_11_block2():
        v119 = const u64 0, !90
        revert v119, !94

        transfer_2_transfer_to_address_4_output_amount_11_block3():
        v120 = get_local ptr { u64 }, __matched_value_4, !95
        v121 = const u64 0
        v122 = get_elem_ptr v120, ptr u64, v121, !96
        v123 = load v122, !97
        v124 = const u64 2, !73
        v125 = cmp eq v123 v124, !99
        v126 = const u64 0, !100
        cbr v125, transfer_2_transfer_to_address_4_output_amount_11_block9(v126), transfer_2_transfer_to_address_4_output_amount_11_block5(), !101

        transfer_2_transfer_to_address_4_output_amount_11_block5():
        v127 = get_local ptr { u64 }, __matched_value_4, !102
        v128 = const u64 0
        v129 = get_elem_ptr v127, ptr u64, v128, !103
        v130 = load v129, !104
        v131 = const u64 3, !73
        v132 = cmp eq v130 v131, !106
        cbr v132, transfer_2_transfer_to_address_4_output_amount_11_block6(), transfer_2_transfer_to_address_4_output_amount_11_block7(), !107

        transfer_2_transfer_to_address_4_output_amount_11_block6():
        v133 = get_local ptr { u64 }, __ret_val2
        v134 = call tx_type_6(v133)
        v135 = load v134
        v136 = get_local ptr { u64 }, __matched_value_20, !110
        mem_copy_val v136, v134
        v137 = get_local ptr { u64 }, __matched_value_20, !112
        v138 = const u64 0
        v139 = get_elem_ptr v137, ptr u64, v138, !113
        v140 = load v139, !114
        v141 = const u64 0, !111
        v142 = cmp eq v140 v141, !116
        cbr v142, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1(), !117

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0():
        v143 = gtf v88, 12, !119
        v144 = bitcast v143 to u64, !120
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v144), !121

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1():
        v145 = get_local ptr { u64 }, __matched_value_20, !122
        v146 = const u64 0
        v147 = get_elem_ptr v145, ptr u64, v146, !123
        v148 = load v147, !124
        v149 = const u64 1, !111
        v150 = cmp eq v148 v149, !126
        cbr v150, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3(), !127

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2():
        v151 = gtf v88, 265, !129
        v152 = bitcast v151 to u64, !130
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v152), !131

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3():
        v153 = const u64 14757395258967588866, !109
        revert v153, !132

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v154: u64):
        v155 = asm(r1, r2, r3: v154) -> u64 r1, !134 {
            addi   r2 r3 i40, !135
            lw     r1 r2 i0, !136
        }
        br transfer_2_transfer_to_address_4_output_amount_11_block9(v155), !137

        transfer_2_transfer_to_address_4_output_amount_11_block7():
        v156 = const u64 14757395258967588866, !71
        revert v156, !138

        transfer_2_transfer_to_address_4_output_amount_11_block9(v157: u64):
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v157), !139

        transfer_2_transfer_to_address_4_output_amount_11_block11(v158: u64):
        v159 = const u64 0, !140
        v160 = cmp eq v158 v159, !142
        v161 = const unit ()
        cbr v160, transfer_2_transfer_to_address_4_block1(), transfer_2_transfer_to_address_4_block5(v161), !143

        transfer_2_transfer_to_address_4_block1():
        v162 = get_local ptr { b256 }, __tmp_arg1
        mem_copy_val v162, v61
        v163 = get_local ptr b256, __ret_val5
        v164 = call bits_16(v162, v163)
        v165 = load v164
        v166 = get_local ptr b256, __asm_arg
        mem_copy_val v166, v164
        v167 = get_local ptr { b256 }, __asm_arg0
        mem_copy_val v167, v44
        v168 = const u64 10, !144
        v169 = asm(r1: v166, r2: v88, r3: v168, r4: v167) {
            tro    r1 r2 r3 r4, !145
        }
        v170 = const unit (), !146
        br transfer_2_block5(v170), !12

        transfer_2_transfer_to_address_4_block5(v171: ()):
        v172 = const u64 1, !147
        v173 = add v88, v172, !149
        br transfer_2_transfer_to_address_4_while(v173), !150

        transfer_2_transfer_to_address_4_end_while():
        v174 = const u64 18446744073709486081, !152
        revert v174, !154

        transfer_2_block1():
        v175 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !155
        v176 = const u64 0
        v177 = get_elem_ptr v175, ptr u64, v176, !156
        v178 = load v177, !12
        v179 = const u64 1, !16
        v180 = cmp eq v178 v179, !158
        cbr v180, transfer_2_block2(), transfer_2_block3(), !159

        transfer_2_block2():
        v181 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !160
        v182 = const u64 1
        v183 = const u64 1
        v184 = get_elem_ptr v181, ptr { b256 }, v182, v183, !12
        v185 = load v184, !12
        v186 = get_local ptr { b256 }, id, !162
        mem_copy_val v186, v184
        v187 = get_local ptr { b256 }, id, !164
        v188 = load v184, !12
        v189 = get_local ptr { b256 }, __tmp_arg2
        mem_copy_val v189, v184
        v190 = get_local ptr b256, __ret_val6
        v191 = call bits_16(v189, v190)
        v192 = load v191
        v193 = get_local ptr { b256 }, __asm_arg1
        mem_copy_val v193, v44
        v194 = get_local ptr b256, __asm_arg2
        mem_copy_val v194, v191
        v195 = asm(r1: v168, r2: v193, r3: v194) {
            tr     r3 r1 r2, !165
        }
        v196 = const unit ()
        br transfer_2_block5(v196), !12

        transfer_2_block3():
        v197 = const u64 14757395258967588866, !14
        revert v197, !166

        transfer_2_block5(v198: ()):
        v199 = const unit ()
        ret () v199
    }

    pub fn from_0(bits: ptr b256, __ret_value: ptr { b256 }) -> ptr { b256 }, !168 {
        local { b256 } __anon_0

        entry(bits: ptr b256, __ret_value: ptr { b256 }):
        v0 = load bits
        v1 = get_local ptr { b256 }, __anon_0, !169
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2
        mem_copy_val v3, bits
        v4 = load v1
        mem_copy_val __ret_value, v1
        ret ptr { b256 } __ret_value
    }

    pub fn tx_type_6(__ret_value: ptr { u64 }) -> ptr { u64 }, !171 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __tmp_block_arg

        entry(__ret_value: ptr { u64 }):
        v0 = const u64 0, !172
        v1 = gtf v0, 1, !173
        v2 = bitcast v1 to u8, !173
        v3 = const u8 0, !174
        v4 = cmp eq v2 v3, !175
        cbr v4, block0(), block1(), !175

        block0():
        v5 = get_local ptr { u64 }, __anon_0, !176
        v6 = const u64 0
        v7 = get_elem_ptr v5, ptr u64, v6, !176
        v8 = const u64 0, !176
        store v8 to v7, !176
        v9 = load v5
        v10 = get_local ptr { u64 }, __tmp_block_arg
        mem_copy_val v10, v5
        br block5(v10)

        block1():
        v11 = const u8 1, !177
        v12 = cmp eq v2 v11, !178
        cbr v12, block2(), block3(), !178

        block2():
        v13 = get_local ptr { u64 }, __anon_1, !176
        v14 = const u64 0
        v15 = get_elem_ptr v13, ptr u64, v14, !176
        v16 = const u64 1, !176
        store v16 to v15, !176
        v17 = load v13
        v18 = get_local ptr { u64 }, __tmp_block_arg
        mem_copy_val v18, v13
        br block5(v18)

        block3():
        v19 = const u64 0, !179
        revert v19, !181

        block5(v20: ptr { u64 }):
        v21 = load v20
        mem_copy_val __ret_value, v20
        ret ptr { u64 } __ret_value
    }

    pub fn output_type_10(index !182: u64, __ret_value: ptr { u64 }) -> ptr { u64 }, !183 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local { u64 } __anon_3
        local { u64 } __tmp_block_arg
        local { u64 } __tmp_block_arg0
        local { u64 } __tmp_block_arg1

        entry(index: u64, __ret_value: ptr { u64 }):
        v0 = gtf index, 768, !184
        v1 = bitcast v0 to u8, !184
        v2 = const u8 0, !185
        v3 = cmp eq v1 v2, !186
        cbr v3, block0(), block1(), !186

        block0():
        v4 = get_local ptr { u64 }, __anon_0, !187
        v5 = const u64 0
        v6 = get_elem_ptr v4, ptr u64, v5, !187
        v7 = const u64 0, !187
        store v7 to v6, !187
        v8 = load v4
        v9 = get_local ptr { u64 }, __tmp_block_arg1
        mem_copy_val v9, v4
        br block11(v9)

        block1():
        v10 = const u8 1, !188
        v11 = cmp eq v1 v10, !189
        cbr v11, block2(), block3(), !189

        block2():
        v12 = get_local ptr { u64 }, __anon_1, !187
        v13 = const u64 0
        v14 = get_elem_ptr v12, ptr u64, v13, !187
        v15 = const u64 1, !187
        store v15 to v14, !187
        v16 = load v12
        v17 = get_local ptr { u64 }, __tmp_block_arg0
        mem_copy_val v17, v12
        br block10(v17)

        block3():
        v18 = const u8 2, !190
        v19 = cmp eq v1 v18, !191
        cbr v19, block4(), block5(), !191

        block4():
        v20 = get_local ptr { u64 }, __anon_2, !187
        v21 = const u64 0
        v22 = get_elem_ptr v20, ptr u64, v21, !187
        v23 = const u64 2, !187
        store v23 to v22, !187
        v24 = load v20
        v25 = get_local ptr { u64 }, __tmp_block_arg
        mem_copy_val v25, v20
        br block9(v25)

        block5():
        v26 = const u8 3, !192
        v27 = cmp eq v1 v26, !193
        cbr v27, block6(), block7(), !193

        block6():
        v28 = get_local ptr { u64 }, __anon_3, !187
        v29 = const u64 0
        v30 = get_elem_ptr v28, ptr u64, v29, !187
        v31 = const u64 3, !187
        store v31 to v30, !187
        v32 = load v28
        v33 = get_local ptr { u64 }, __tmp_block_arg
        mem_copy_val v33, v28
        br block9(v33)

        block7():
        v34 = const u64 0, !194
        revert v34, !196

        block9(v35: ptr { u64 }):
        v36 = load v35
        v37 = get_local ptr { u64 }, __tmp_block_arg0
        mem_copy_val v37, v35
        br block10(v37)

        block10(v38: ptr { u64 }):
        v39 = load v38
        v40 = get_local ptr { u64 }, __tmp_block_arg1
        mem_copy_val v40, v38
        br block11(v40)

        block11(v41: ptr { u64 }):
        v42 = load v41
        mem_copy_val __ret_value, v41
        ret ptr { u64 } __ret_value
    }

    pub fn bits_16(self: ptr { b256 }, __ret_value: ptr b256) -> ptr b256, !198 {
        entry(self: ptr { b256 }, __ret_value: ptr b256):
        v0 = load self
        v1 = ptr_to_int self to u64
        v2 = int_to_ptr v1 to ptr { b256 }
        v3 = const u64 0
        v4 = get_elem_ptr v2, ptr b256, v3, !199
        v5 = load v4
        mem_copy_val __ret_value, v4
        ret ptr b256 __ret_value
    }
}

!0 = "/home/kebradalaonda/p/sway/test/src/e2e_vm_tests/test_programs/should_pass/static_analysis/cei_pattern_violation_in_asm_block_tr/src/main.sw"
!1 = span !0 105 713
!2 = span !0 263 287
!3 = span !0 412 493
!4 = span !0 528 535
!5 = span !0 502 537
!6 = span !0 574 581
!7 = span !0 546 583
!8 = "/home/kebradalaonda/p/sway/sway-lib-std/src/identity.sw"
!9 = span !8 477 548
!10 = span !0 685 689
!11 = span !0 692 697
!12 = span !0 655 706
!13 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset.sw"
!14 = span !13 3829 4011
!15 = (!12 !14)
!16 = span !13 3835 3837
!17 = (!12 !16)
!18 = (!12 !16)
!19 = span !13 3848 3919
!20 = (!12 !19)
!21 = (!12 !19)
!22 = (!12 !16)
!23 = span !13 3866 3870
!24 = (!12 !23)
!25 = span !13 3895 3899
!26 = (!12 !25)
!27 = span !13 3875 3918
!28 = span !13 6153 6167
!29 = "/home/kebradalaonda/p/sway/sway-lib-std/src/outputs.sw"
!30 = span !29 3429 3600
!31 = (!12 !27 !28 !30)
!32 = span !29 3435 3444
!33 = (!12 !27 !28 !32)
!34 = (!12 !27 !28 !32)
!35 = (!12 !27 !28)
!36 = span !29 3455 3520
!37 = (!12 !27 !28 !36)
!38 = (!12 !27 !28 !36)
!39 = span !29 3491 3492
!40 = span !29 3478 3519
!41 = (!12 !27 !28 !40)
!42 = (!12 !27 !28 !40)
!43 = (!12 !27 !28)
!44 = (!12 !27 !28 !32)
!45 = (!12 !27 !28 !32)
!46 = (!12 !27 !28)
!47 = span !29 3529 3594
!48 = (!12 !27 !28 !47)
!49 = (!12 !27 !28 !47)
!50 = span !29 3565 3566
!51 = span !29 3552 3593
!52 = (!12 !27 !28 !51)
!53 = (!12 !27 !28 !51)
!54 = (!12 !27 !28)
!55 = (!12 !27 !28 !30)
!56 = span !13 5893 5894
!57 = (!12 !27)
!58 = span !13 6179 6204
!59 = (!12 !27 !58)
!60 = (!12 !27)
!61 = span !13 6215 6482
!62 = (!12 !27 !61)
!63 = span !13 6241 6259
!64 = (!12 !27 !63)
!65 = (!12 !27 !63)
!66 = (!12 !27)
!67 = span !13 6222 6482
!68 = (!12 !27 !67)
!69 = (!12 !27 !67)
!70 = span !13 6277 6297
!71 = span !29 4537 5459
!72 = (!12 !27 !70 !71)
!73 = span !29 4543 4561
!74 = (!12 !27 !70 !73)
!75 = (!12 !27 !70 !73)
!76 = (!12 !27 !70)
!77 = span !29 4572 4632
!78 = (!12 !27 !70 !77)
!79 = (!12 !27 !70 !77)
!80 = span !29 4588 4631
!81 = (!12 !27 !70 !80)
!82 = (!12 !27 !70 !80)
!83 = (!12 !27 !70)
!84 = (!12 !27 !70 !73)
!85 = (!12 !27 !70 !73)
!86 = (!12 !27 !70)
!87 = span !29 4641 4671
!88 = (!12 !27 !70 !87)
!89 = (!12 !27 !70 !87)
!90 = span !29 4668 4669
!91 = span !29 4661 4670
!92 = "/home/kebradalaonda/p/sway/sway-lib-std/src/revert.sw"
!93 = span !92 691 705
!94 = (!12 !27 !70 !91 !93)
!95 = (!12 !27 !70 !73)
!96 = (!12 !27 !70 !73)
!97 = (!12 !27 !70)
!98 = span !29 5018 5038
!99 = (!12 !27 !70 !98)
!100 = span !29 5036 5037
!101 = (!12 !27 !70 !98)
!102 = (!12 !27 !70 !73)
!103 = (!12 !27 !70 !73)
!104 = (!12 !27 !70)
!105 = span !29 5242 5453
!106 = (!12 !27 !70 !105)
!107 = (!12 !27 !70 !105)
!108 = span !29 5286 5307
!109 = span !29 2767 2950
!110 = (!12 !27 !70 !108 !109)
!111 = span !29 2773 2782
!112 = (!12 !27 !70 !108 !111)
!113 = (!12 !27 !70 !108 !111)
!114 = (!12 !27 !70 !108)
!115 = span !29 2793 2864
!116 = (!12 !27 !70 !108 !115)
!117 = (!12 !27 !70 !108 !115)
!118 = span !29 2816 2863
!119 = (!12 !27 !70 !108 !118)
!120 = (!12 !27 !70 !108 !118)
!121 = (!12 !27 !70 !108)
!122 = (!12 !27 !70 !108 !111)
!123 = (!12 !27 !70 !108 !111)
!124 = (!12 !27 !70 !108)
!125 = span !29 2873 2944
!126 = (!12 !27 !70 !108 !125)
!127 = (!12 !27 !70 !108 !125)
!128 = span !29 2896 2943
!129 = (!12 !27 !70 !108 !128)
!130 = (!12 !27 !70 !108 !128)
!131 = (!12 !27 !70 !108)
!132 = (!12 !27 !70 !108 !109)
!133 = span !29 5321 5442
!134 = (!12 !27 !70 !133)
!135 = span !29 5360 5374
!136 = span !29 5392 5403
!137 = (!12 !27 !70)
!138 = (!12 !27 !70 !71)
!139 = (!12 !27 !70)
!140 = span !13 6301 6302
!141 = span !13 6277 6302
!142 = (!12 !27 !141)
!143 = (!12 !27 !141)
!144 = span !0 400 402
!145 = span !13 6399 6414
!146 = span !13 6451 6457
!147 = span !13 6500 6501
!148 = span !13 6491 6501
!149 = (!12 !27 !148)
!150 = (!12 !27)
!151 = "/home/kebradalaonda/p/sway/sway-lib-std/src/error_signals.sw"
!152 = span !151 566 587
!153 = span !13 6514 6555
!154 = (!12 !27 !153 !93)
!155 = (!12 !16)
!156 = (!12 !16)
!157 = span !13 3928 4005
!158 = (!12 !157)
!159 = (!12 !157)
!160 = (!12 !16)
!161 = span !13 3949 3951
!162 = (!12 !161)
!163 = span !13 3983 3985
!164 = (!12 !163)
!165 = span !13 5050 5061
!166 = (!12 !14)
!167 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset_id.sw"
!168 = span !167 1292 1349
!169 = span !167 1330 1343
!170 = "/home/kebradalaonda/p/sway/sway-lib-std/src/tx.sw"
!171 = span !170 2271 2445
!172 = span !170 2327 2328
!173 = span !170 2315 2339
!174 = span !170 2350 2353
!175 = span !170 2350 2377
!176 = span !170 1445 1616
!177 = span !170 2386 2389
!178 = span !170 2386 2413
!179 = span !170 2434 2435
!180 = span !170 2427 2436
!181 = (!180 !93)
!182 = span !29 1936 1941
!183 = span !29 1917 2165
!184 = span !29 1970 2005
!185 = span !29 2016 2019
!186 = span !29 2016 2036
!187 = span !29 956 1170
!188 = span !29 2045 2048
!189 = span !29 2045 2069
!190 = span !29 2078 2081
!191 = span !29 2078 2100
!192 = span !29 2109 2112
!193 = span !29 2109 2133
!194 = span !29 2154 2155
!195 = span !29 2147 2156
!196 = (!195 !93)
!197 = "/home/kebradalaonda/p/sway/sway-lib-std/src/contract_id.sw"
!198 = span !197 695 746
!199 = span !197 305 315

// IR: [dce] Dead code elimination
contract {
    pub entry fn deposit<2df2cef7>() -> (), !1 {
        local { b256, u64, u64 } __anon_0
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local b256 __asm_arg
        local { b256 } __asm_arg0
        local { b256 } __asm_arg1
        local b256 __asm_arg2
        local b256 __const = const b256 0x3dba0a4455b598b7655a7fb430883d96c9527ef275b49739e7b0ad12f8280eae
        local b256 __const0 = const b256 0x0000000000000000000000000000000000000000000000000000000000000000
        local b256 __const1 = const b256 0x0000000000000000000000000000000000000000000000000000000000000001
        local { u64, ( { b256 } | { b256 } ) } __matched_value_1
        local { u64 } __matched_value_2
        local { u64 } __matched_value_20
        local { u64 } __matched_value_3
        local { u64 } __matched_value_4
        local { b256 } __ret_val
        local { b256 } __ret_val0
        local { u64 } __ret_val1
        local { u64 } __ret_val2
        local { u64 } __ret_val3
        local { u64 } __ret_val4
        local b256 __ret_val5
        local b256 __ret_val6
        local b256 __tmp_arg
        local b256 __tmp_arg0
        local { b256 } __tmp_arg1
        local { b256 } __tmp_arg2
        local { b256 } addr
        local { b256 } asset
        local { b256 } id
        local { b256 } pool

        entry():
        v0 = get_local ptr b256, __const
        v1 = get_local ptr { b256, u64, u64 }, __anon_0, !2
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2
        mem_copy_val v3, v0
        v4 = const u64 1
        v5 = get_elem_ptr v1, ptr u64, v4
        v6 = const u64 770887415, !2
        store v6 to v5, !2
        v7 = const u64 2
        v8 = get_elem_ptr v1, ptr u64, v7
        v9 = const u64 0
        store v9 to v8, !2
        v10 = get_local ptr b256, __const0
        v11 = read_register cgas, !2
        v12 = const u64 0, !2
        v13 = contract_call () deposit v1, v12, v10, v11, !2
        v14 = get_local ptr b256, __const1, !3
        v15 = get_local ptr b256, __tmp_arg
        mem_copy_val v15, v14
        v16 = get_local ptr { b256 }, __ret_val
        v17 = call from_0(v15, v16)
        v18 = get_local ptr { b256 }, asset, !4
        mem_copy_val v18, v17
        v19 = get_local ptr b256, __const1, !5
        v20 = get_local ptr b256, __tmp_arg0
        mem_copy_val v20, v19
        v21 = get_local ptr { b256 }, __ret_val0
        v22 = call from_0(v20, v21)
        v23 = get_local ptr { b256 }, pool, !6
        mem_copy_val v23, v22
        v24 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !8
        v25 = const u64 0
        v26 = get_elem_ptr v24, ptr u64, v25, !8
        v27 = const u64 1, !8
        store v27 to v26, !8
        v28 = get_local ptr { b256 }, pool, !9
        v29 = const u64 1
        v30 = const u64 1
        v31 = get_elem_ptr v24, ptr { b256 }, v29, v30, !8
        mem_copy_val v31, v28
        v32 = get_local ptr { b256 }, asset, !10
        v33 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !14
        mem_copy_val v33, v24
        v34 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2
        v35 = const u64 0
        v36 = get_elem_ptr v34, ptr u64, v35
        v37 = load v36, !11
        v38 = const u64 0, !15
        v39 = cmp eq v37 v38, !17
        cbr v39, transfer_2_block0(), transfer_2_block1(), !18

        transfer_2_block0():
        v40 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !19
        v41 = const u64 1
        v42 = const u64 0
        v43 = get_elem_ptr v40, ptr { b256 }, v41, v42, !11
        v44 = get_local ptr { b256 }, addr, !21
        mem_copy_val v44, v43
        v45 = get_local ptr { b256 }, addr, !23
        v46 = get_local ptr { u64 }, __ret_val1
        v47 = call tx_type_6(v46)
        v48 = get_local ptr { u64 }, __matched_value_3, !28
        mem_copy_val v48, v47
        v49 = get_local ptr { u64 }, __matched_value_3, !30
        v50 = const u64 0
        v51 = get_elem_ptr v49, ptr u64, v50, !31
        v52 = load v51, !32
        v53 = const u64 0, !29
        v54 = cmp eq v52 v53, !34
        cbr v54, transfer_2_transfer_to_address_4_output_count_5_block0(), transfer_2_transfer_to_address_4_output_count_5_block1(), !35

        transfer_2_transfer_to_address_4_output_count_5_block0():
        v55 = const u64 0, !36
        v56 = gtf v55, 6, !38
        v57 = bitcast v56 to u64, !39
        br transfer_2_transfer_to_address_4_output_count_5_block5(v57), !40

        transfer_2_transfer_to_address_4_output_count_5_block1():
        v58 = get_local ptr { u64 }, __matched_value_3, !41
        v59 = const u64 0
        v60 = get_elem_ptr v58, ptr u64, v59, !42
        v61 = load v60, !43
        v62 = const u64 1, !29
        v63 = cmp eq v61 v62, !45
        cbr v63, transfer_2_transfer_to_address_4_output_count_5_block2(), transfer_2_transfer_to_address_4_output_count_5_block3(), !46

        transfer_2_transfer_to_address_4_output_count_5_block2():
        v64 = const u64 0, !47
        v65 = gtf v64, 260, !49
        v66 = bitcast v65 to u64, !50
        br transfer_2_transfer_to_address_4_output_count_5_block5(v66), !51

        transfer_2_transfer_to_address_4_output_count_5_block3():
        v67 = const u64 14757395258967588866, !27
        revert v67, !52

        transfer_2_transfer_to_address_4_output_count_5_block5(v68: u64):
        v69 = const u64 0, !53
        br transfer_2_transfer_to_address_4_while(v69), !54

        transfer_2_transfer_to_address_4_while(v70: u64):
        v71 = cmp lt v70 v68, !56
        cbr v71, transfer_2_transfer_to_address_4_while_body(), transfer_2_transfer_to_address_4_end_while(), !57

        transfer_2_transfer_to_address_4_while_body():
        v72 = get_local ptr { u64 }, __ret_val3
        v73 = call output_type_10(v70, v72)
        v74 = get_local ptr { u64 }, __matched_value_2, !59
        mem_copy_val v74, v73
        v75 = get_local ptr { u64 }, __matched_value_2, !61
        v76 = const u64 0
        v77 = get_elem_ptr v75, ptr u64, v76, !62
        v78 = load v77, !63
        v79 = const u64 3, !60
        v80 = cmp eq v78 v79, !65
        v81 = const unit ()
        cbr v80, transfer_2_transfer_to_address_4_block0(), transfer_2_transfer_to_address_4_block5(v81), !66

        transfer_2_transfer_to_address_4_block0():
        v82 = get_local ptr { u64 }, __ret_val4
        v83 = call output_type_10(v70, v82)
        v84 = get_local ptr { u64 }, __matched_value_4, !69
        mem_copy_val v84, v83
        v85 = get_local ptr { u64 }, __matched_value_4, !71
        v86 = const u64 0
        v87 = get_elem_ptr v85, ptr u64, v86, !72
        v88 = load v87, !73
        v89 = const u64 0, !70
        v90 = cmp eq v88 v89, !75
        cbr v90, transfer_2_transfer_to_address_4_output_amount_11_block0(), transfer_2_transfer_to_address_4_output_amount_11_block1(), !76

        transfer_2_transfer_to_address_4_output_amount_11_block0():
        v91 = gtf v70, 770, !78
        v92 = bitcast v91 to u64, !79
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v92), !80

        transfer_2_transfer_to_address_4_output_amount_11_block1():
        v93 = get_local ptr { u64 }, __matched_value_4, !81
        v94 = const u64 0
        v95 = get_elem_ptr v93, ptr u64, v94, !82
        v96 = load v95, !83
        v97 = const u64 1, !70
        v98 = cmp eq v96 v97, !85
        cbr v98, transfer_2_transfer_to_address_4_output_amount_11_block2(), transfer_2_transfer_to_address_4_output_amount_11_block3(), !86

        transfer_2_transfer_to_address_4_output_amount_11_block2():
        v99 = const u64 0, !87
        revert v99, !91

        transfer_2_transfer_to_address_4_output_amount_11_block3():
        v100 = get_local ptr { u64 }, __matched_value_4, !92
        v101 = const u64 0
        v102 = get_elem_ptr v100, ptr u64, v101, !93
        v103 = load v102, !94
        v104 = const u64 2, !70
        v105 = cmp eq v103 v104, !96
        v106 = const u64 0, !97
        cbr v105, transfer_2_transfer_to_address_4_output_amount_11_block9(v106), transfer_2_transfer_to_address_4_output_amount_11_block5(), !98

        transfer_2_transfer_to_address_4_output_amount_11_block5():
        v107 = get_local ptr { u64 }, __matched_value_4, !99
        v108 = const u64 0
        v109 = get_elem_ptr v107, ptr u64, v108, !100
        v110 = load v109, !101
        v111 = const u64 3, !70
        v112 = cmp eq v110 v111, !103
        cbr v112, transfer_2_transfer_to_address_4_output_amount_11_block6(), transfer_2_transfer_to_address_4_output_amount_11_block7(), !104

        transfer_2_transfer_to_address_4_output_amount_11_block6():
        v113 = get_local ptr { u64 }, __ret_val2
        v114 = call tx_type_6(v113)
        v115 = get_local ptr { u64 }, __matched_value_20, !107
        mem_copy_val v115, v114
        v116 = get_local ptr { u64 }, __matched_value_20, !109
        v117 = const u64 0
        v118 = get_elem_ptr v116, ptr u64, v117, !110
        v119 = load v118, !111
        v120 = const u64 0, !108
        v121 = cmp eq v119 v120, !113
        cbr v121, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1(), !114

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0():
        v122 = gtf v70, 12, !116
        v123 = bitcast v122 to u64, !117
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v123), !118

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1():
        v124 = get_local ptr { u64 }, __matched_value_20, !119
        v125 = const u64 0
        v126 = get_elem_ptr v124, ptr u64, v125, !120
        v127 = load v126, !121
        v128 = const u64 1, !108
        v129 = cmp eq v127 v128, !123
        cbr v129, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3(), !124

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2():
        v130 = gtf v70, 265, !126
        v131 = bitcast v130 to u64, !127
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v131), !128

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3():
        v132 = const u64 14757395258967588866, !106
        revert v132, !129

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v133: u64):
        v134 = asm(r1, r2, r3: v133) -> u64 r1, !131 {
            addi   r2 r3 i40, !132
            lw     r1 r2 i0, !133
        }
        br transfer_2_transfer_to_address_4_output_amount_11_block9(v134), !134

        transfer_2_transfer_to_address_4_output_amount_11_block7():
        v135 = const u64 14757395258967588866, !68
        revert v135, !135

        transfer_2_transfer_to_address_4_output_amount_11_block9(v136: u64):
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v136), !136

        transfer_2_transfer_to_address_4_output_amount_11_block11(v137: u64):
        v138 = const u64 0, !137
        v139 = cmp eq v137 v138, !139
        v140 = const unit ()
        cbr v139, transfer_2_transfer_to_address_4_block1(), transfer_2_transfer_to_address_4_block5(v140), !140

        transfer_2_transfer_to_address_4_block1():
        v141 = get_local ptr { b256 }, __tmp_arg1
        mem_copy_val v141, v45
        v142 = get_local ptr b256, __ret_val5
        v143 = call bits_16(v141, v142)
        v144 = get_local ptr b256, __asm_arg
        mem_copy_val v144, v143
        v145 = get_local ptr { b256 }, __asm_arg0
        mem_copy_val v145, v32
        v146 = const u64 10, !141
        v147 = asm(r1: v144, r2: v70, r3: v146, r4: v145) {
            tro    r1 r2 r3 r4, !142
        }
        v148 = const unit (), !143
        br transfer_2_block5(v148), !11

        transfer_2_transfer_to_address_4_block5(v149: ()):
        v150 = const u64 1, !144
        v151 = add v70, v150, !146
        br transfer_2_transfer_to_address_4_while(v151), !147

        transfer_2_transfer_to_address_4_end_while():
        v152 = const u64 18446744073709486081, !149
        revert v152, !151

        transfer_2_block1():
        v153 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !152
        v154 = const u64 0
        v155 = get_elem_ptr v153, ptr u64, v154, !153
        v156 = load v155, !11
        v157 = const u64 1, !15
        v158 = cmp eq v156 v157, !155
        cbr v158, transfer_2_block2(), transfer_2_block3(), !156

        transfer_2_block2():
        v159 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !157
        v160 = const u64 1
        v161 = const u64 1
        v162 = get_elem_ptr v159, ptr { b256 }, v160, v161, !11
        v163 = get_local ptr { b256 }, id, !159
        mem_copy_val v163, v162
        v164 = get_local ptr { b256 }, __tmp_arg2
        mem_copy_val v164, v162
        v165 = get_local ptr b256, __ret_val6
        v166 = call bits_16(v164, v165)
        v167 = get_local ptr { b256 }, __asm_arg1
        mem_copy_val v167, v32
        v168 = get_local ptr b256, __asm_arg2
        mem_copy_val v168, v166
        v169 = asm(r1: v146, r2: v167, r3: v168) {
            tr     r3 r1 r2, !160
        }
        v170 = const unit ()
        br transfer_2_block5(v170), !11

        transfer_2_block3():
        v171 = const u64 14757395258967588866, !13
        revert v171, !161

        transfer_2_block5(v172: ()):
        v173 = const unit ()
        ret () v173
    }

    pub fn from_0(bits: ptr b256, __ret_value: ptr { b256 }) -> ptr { b256 }, !163 {
        local { b256 } __anon_0

        entry(bits: ptr b256, __ret_value: ptr { b256 }):
        v0 = get_local ptr { b256 }, __anon_0, !164
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        mem_copy_val v2, bits
        mem_copy_val __ret_value, v0
        ret ptr { b256 } __ret_value
    }

    pub fn tx_type_6(__ret_value: ptr { u64 }) -> ptr { u64 }, !166 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __tmp_block_arg

        entry(__ret_value: ptr { u64 }):
        v0 = const u64 0, !167
        v1 = gtf v0, 1, !168
        v2 = bitcast v1 to u8, !168
        v3 = const u8 0, !169
        v4 = cmp eq v2 v3, !170
        cbr v4, block0(), block1(), !170

        block0():
        v5 = get_local ptr { u64 }, __anon_0, !171
        v6 = const u64 0
        v7 = get_elem_ptr v5, ptr u64, v6, !171
        v8 = const u64 0, !171
        store v8 to v7, !171
        v9 = get_local ptr { u64 }, __tmp_block_arg
        mem_copy_val v9, v5
        br block5(v9)

        block1():
        v10 = const u8 1, !172
        v11 = cmp eq v2 v10, !173
        cbr v11, block2(), block3(), !173

        block2():
        v12 = get_local ptr { u64 }, __anon_1, !171
        v13 = const u64 0
        v14 = get_elem_ptr v12, ptr u64, v13, !171
        v15 = const u64 1, !171
        store v15 to v14, !171
        v16 = get_local ptr { u64 }, __tmp_block_arg
        mem_copy_val v16, v12
        br block5(v16)

        block3():
        v17 = const u64 0, !174
        revert v17, !176

        block5(v18: ptr { u64 }):
        mem_copy_val __ret_value, v18
        ret ptr { u64 } __ret_value
    }

    pub fn output_type_10(index !177: u64, __ret_value: ptr { u64 }) -> ptr { u64 }, !178 {
        local { u64 } __anon_0
        local { u64 } __anon_1
        local { u64 } __anon_2
        local { u64 } __anon_3
        local { u64 } __tmp_block_arg
        local { u64 } __tmp_block_arg0
        local { u64 } __tmp_block_arg1

        entry(index: u64, __ret_value: ptr { u64 }):
        v0 = gtf index, 768, !179
        v1 = bitcast v0 to u8, !179
        v2 = const u8 0, !180
        v3 = cmp eq v1 v2, !181
        cbr v3, block0(), block1(), !181

        block0():
        v4 = get_local ptr { u64 }, __anon_0, !182
        v5 = const u64 0
        v6 = get_elem_ptr v4, ptr u64, v5, !182
        v7 = const u64 0, !182
        store v7 to v6, !182
        v8 = get_local ptr { u64 }, __tmp_block_arg1
        mem_copy_val v8, v4
        br block11(v8)

        block1():
        v9 = const u8 1, !183
        v10 = cmp eq v1 v9, !184
        cbr v10, block2(), block3(), !184

        block2():
        v11 = get_local ptr { u64 }, __anon_1, !182
        v12 = const u64 0
        v13 = get_elem_ptr v11, ptr u64, v12, !182
        v14 = const u64 1, !182
        store v14 to v13, !182
        v15 = get_local ptr { u64 }, __tmp_block_arg0
        mem_copy_val v15, v11
        br block10(v15)

        block3():
        v16 = const u8 2, !185
        v17 = cmp eq v1 v16, !186
        cbr v17, block4(), block5(), !186

        block4():
        v18 = get_local ptr { u64 }, __anon_2, !182
        v19 = const u64 0
        v20 = get_elem_ptr v18, ptr u64, v19, !182
        v21 = const u64 2, !182
        store v21 to v20, !182
        v22 = get_local ptr { u64 }, __tmp_block_arg
        mem_copy_val v22, v18
        br block9(v22)

        block5():
        v23 = const u8 3, !187
        v24 = cmp eq v1 v23, !188
        cbr v24, block6(), block7(), !188

        block6():
        v25 = get_local ptr { u64 }, __anon_3, !182
        v26 = const u64 0
        v27 = get_elem_ptr v25, ptr u64, v26, !182
        v28 = const u64 3, !182
        store v28 to v27, !182
        v29 = get_local ptr { u64 }, __tmp_block_arg
        mem_copy_val v29, v25
        br block9(v29)

        block7():
        v30 = const u64 0, !189
        revert v30, !191

        block9(v31: ptr { u64 }):
        v32 = get_local ptr { u64 }, __tmp_block_arg0
        mem_copy_val v32, v31
        br block10(v32)

        block10(v33: ptr { u64 }):
        v34 = get_local ptr { u64 }, __tmp_block_arg1
        mem_copy_val v34, v33
        br block11(v34)

        block11(v35: ptr { u64 }):
        mem_copy_val __ret_value, v35
        ret ptr { u64 } __ret_value
    }

    pub fn bits_16(self: ptr { b256 }, __ret_value: ptr b256) -> ptr b256, !193 {
        entry(self: ptr { b256 }, __ret_value: ptr b256):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !194
        mem_copy_val __ret_value, v3
        ret ptr b256 __ret_value
    }
}

!0 = "/home/kebradalaonda/p/sway/test/src/e2e_vm_tests/test_programs/should_pass/static_analysis/cei_pattern_violation_in_asm_block_tr/src/main.sw"
!1 = span !0 105 713
!2 = span !0 263 287
!3 = span !0 528 535
!4 = span !0 502 537
!5 = span !0 574 581
!6 = span !0 546 583
!7 = "/home/kebradalaonda/p/sway/sway-lib-std/src/identity.sw"
!8 = span !7 477 548
!9 = span !0 685 689
!10 = span !0 692 697
!11 = span !0 655 706
!12 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset.sw"
!13 = span !12 3829 4011
!14 = (!11 !13)
!15 = span !12 3835 3837
!16 = span !12 3848 3919
!17 = (!11 !16)
!18 = (!11 !16)
!19 = (!11 !15)
!20 = span !12 3866 3870
!21 = (!11 !20)
!22 = span !12 3895 3899
!23 = (!11 !22)
!24 = span !12 3875 3918
!25 = span !12 6153 6167
!26 = "/home/kebradalaonda/p/sway/sway-lib-std/src/outputs.sw"
!27 = span !26 3429 3600
!28 = (!11 !24 !25 !27)
!29 = span !26 3435 3444
!30 = (!11 !24 !25 !29)
!31 = (!11 !24 !25 !29)
!32 = (!11 !24 !25)
!33 = span !26 3455 3520
!34 = (!11 !24 !25 !33)
!35 = (!11 !24 !25 !33)
!36 = span !26 3491 3492
!37 = span !26 3478 3519
!38 = (!11 !24 !25 !37)
!39 = (!11 !24 !25 !37)
!40 = (!11 !24 !25)
!41 = (!11 !24 !25 !29)
!42 = (!11 !24 !25 !29)
!43 = (!11 !24 !25)
!44 = span !26 3529 3594
!45 = (!11 !24 !25 !44)
!46 = (!11 !24 !25 !44)
!47 = span !26 3565 3566
!48 = span !26 3552 3593
!49 = (!11 !24 !25 !48)
!50 = (!11 !24 !25 !48)
!51 = (!11 !24 !25)
!52 = (!11 !24 !25 !27)
!53 = span !12 5893 5894
!54 = (!11 !24)
!55 = span !12 6179 6204
!56 = (!11 !24 !55)
!57 = (!11 !24)
!58 = span !12 6215 6482
!59 = (!11 !24 !58)
!60 = span !12 6241 6259
!61 = (!11 !24 !60)
!62 = (!11 !24 !60)
!63 = (!11 !24)
!64 = span !12 6222 6482
!65 = (!11 !24 !64)
!66 = (!11 !24 !64)
!67 = span !12 6277 6297
!68 = span !26 4537 5459
!69 = (!11 !24 !67 !68)
!70 = span !26 4543 4561
!71 = (!11 !24 !67 !70)
!72 = (!11 !24 !67 !70)
!73 = (!11 !24 !67)
!74 = span !26 4572 4632
!75 = (!11 !24 !67 !74)
!76 = (!11 !24 !67 !74)
!77 = span !26 4588 4631
!78 = (!11 !24 !67 !77)
!79 = (!11 !24 !67 !77)
!80 = (!11 !24 !67)
!81 = (!11 !24 !67 !70)
!82 = (!11 !24 !67 !70)
!83 = (!11 !24 !67)
!84 = span !26 4641 4671
!85 = (!11 !24 !67 !84)
!86 = (!11 !24 !67 !84)
!87 = span !26 4668 4669
!88 = span !26 4661 4670
!89 = "/home/kebradalaonda/p/sway/sway-lib-std/src/revert.sw"
!90 = span !89 691 705
!91 = (!11 !24 !67 !88 !90)
!92 = (!11 !24 !67 !70)
!93 = (!11 !24 !67 !70)
!94 = (!11 !24 !67)
!95 = span !26 5018 5038
!96 = (!11 !24 !67 !95)
!97 = span !26 5036 5037
!98 = (!11 !24 !67 !95)
!99 = (!11 !24 !67 !70)
!100 = (!11 !24 !67 !70)
!101 = (!11 !24 !67)
!102 = span !26 5242 5453
!103 = (!11 !24 !67 !102)
!104 = (!11 !24 !67 !102)
!105 = span !26 5286 5307
!106 = span !26 2767 2950
!107 = (!11 !24 !67 !105 !106)
!108 = span !26 2773 2782
!109 = (!11 !24 !67 !105 !108)
!110 = (!11 !24 !67 !105 !108)
!111 = (!11 !24 !67 !105)
!112 = span !26 2793 2864
!113 = (!11 !24 !67 !105 !112)
!114 = (!11 !24 !67 !105 !112)
!115 = span !26 2816 2863
!116 = (!11 !24 !67 !105 !115)
!117 = (!11 !24 !67 !105 !115)
!118 = (!11 !24 !67 !105)
!119 = (!11 !24 !67 !105 !108)
!120 = (!11 !24 !67 !105 !108)
!121 = (!11 !24 !67 !105)
!122 = span !26 2873 2944
!123 = (!11 !24 !67 !105 !122)
!124 = (!11 !24 !67 !105 !122)
!125 = span !26 2896 2943
!126 = (!11 !24 !67 !105 !125)
!127 = (!11 !24 !67 !105 !125)
!128 = (!11 !24 !67 !105)
!129 = (!11 !24 !67 !105 !106)
!130 = span !26 5321 5442
!131 = (!11 !24 !67 !130)
!132 = span !26 5360 5374
!133 = span !26 5392 5403
!134 = (!11 !24 !67)
!135 = (!11 !24 !67 !68)
!136 = (!11 !24 !67)
!137 = span !12 6301 6302
!138 = span !12 6277 6302
!139 = (!11 !24 !138)
!140 = (!11 !24 !138)
!141 = span !0 400 402
!142 = span !12 6399 6414
!143 = span !12 6451 6457
!144 = span !12 6500 6501
!145 = span !12 6491 6501
!146 = (!11 !24 !145)
!147 = (!11 !24)
!148 = "/home/kebradalaonda/p/sway/sway-lib-std/src/error_signals.sw"
!149 = span !148 566 587
!150 = span !12 6514 6555
!151 = (!11 !24 !150 !90)
!152 = (!11 !15)
!153 = (!11 !15)
!154 = span !12 3928 4005
!155 = (!11 !154)
!156 = (!11 !154)
!157 = (!11 !15)
!158 = span !12 3949 3951
!159 = (!11 !158)
!160 = span !12 5050 5061
!161 = (!11 !13)
!162 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset_id.sw"
!163 = span !162 1292 1349
!164 = span !162 1330 1343
!165 = "/home/kebradalaonda/p/sway/sway-lib-std/src/tx.sw"
!166 = span !165 2271 2445
!167 = span !165 2327 2328
!168 = span !165 2315 2339
!169 = span !165 2350 2353
!170 = span !165 2350 2377
!171 = span !165 1445 1616
!172 = span !165 2386 2389
!173 = span !165 2386 2413
!174 = span !165 2434 2435
!175 = span !165 2427 2436
!176 = (!175 !90)
!177 = span !26 1936 1941
!178 = span !26 1917 2165
!179 = span !26 1970 2005
!180 = span !26 2016 2019
!181 = span !26 2016 2036
!182 = span !26 956 1170
!183 = span !26 2045 2048
!184 = span !26 2045 2069
!185 = span !26 2078 2081
!186 = span !26 2078 2100
!187 = span !26 2109 2112
!188 = span !26 2109 2133
!189 = span !26 2154 2155
!190 = span !26 2147 2156
!191 = (!190 !90)
!192 = "/home/kebradalaonda/p/sway/sway-lib-std/src/contract_id.sw"
!193 = span !192 695 746
!194 = span !192 305 315

// IR: [sroa] Scalar replacement of aggregates
contract {
    pub entry fn deposit<2df2cef7>() -> (), !1 {
        local { b256, u64, u64 } __anon_0
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local b256 __asm_arg
        local { b256 } __asm_arg0
        local { b256 } __asm_arg1
        local b256 __asm_arg2
        local b256 __const = const b256 0x3dba0a4455b598b7655a7fb430883d96c9527ef275b49739e7b0ad12f8280eae
        local b256 __const0 = const b256 0x0000000000000000000000000000000000000000000000000000000000000000
        local b256 __const1 = const b256 0x0000000000000000000000000000000000000000000000000000000000000001
        local { u64, ( { b256 } | { b256 } ) } __matched_value_1
        local { u64 } __matched_value_2
        local { u64 } __matched_value_20
        local u64 __matched_value_200
        local u64 __matched_value_201
        local { u64 } __matched_value_3
        local u64 __matched_value_30
        local { u64 } __matched_value_4
        local u64 __matched_value_40
        local { b256 } __ret_val
        local { b256 } __ret_val0
        local { u64 } __ret_val1
        local { u64 } __ret_val2
        local { u64 } __ret_val3
        local { u64 } __ret_val4
        local b256 __ret_val5
        local b256 __ret_val6
        local b256 __tmp_arg
        local b256 __tmp_arg0
        local { b256 } __tmp_arg1
        local { b256 } __tmp_arg2
        local { b256 } addr
        local { b256 } asset
        local { b256 } id
        local { b256 } pool

        entry():
        v0 = get_local ptr b256, __const
        v1 = get_local ptr { b256, u64, u64 }, __anon_0, !2
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2
        mem_copy_val v3, v0
        v4 = const u64 1
        v5 = get_elem_ptr v1, ptr u64, v4
        v6 = const u64 770887415, !2
        store v6 to v5, !2
        v7 = const u64 2
        v8 = get_elem_ptr v1, ptr u64, v7
        v9 = const u64 0
        store v9 to v8, !2
        v10 = get_local ptr b256, __const0
        v11 = read_register cgas, !2
        v12 = const u64 0, !2
        v13 = contract_call () deposit v1, v12, v10, v11, !2
        v14 = get_local ptr b256, __const1, !3
        v15 = get_local ptr b256, __tmp_arg
        mem_copy_val v15, v14
        v16 = get_local ptr { b256 }, __ret_val
        v17 = call from_0(v15, v16)
        v18 = get_local ptr { b256 }, asset, !4
        mem_copy_val v18, v17
        v19 = get_local ptr b256, __const1, !5
        v20 = get_local ptr b256, __tmp_arg0
        mem_copy_val v20, v19
        v21 = get_local ptr { b256 }, __ret_val0
        v22 = call from_0(v20, v21)
        v23 = get_local ptr { b256 }, pool, !6
        mem_copy_val v23, v22
        v24 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !8
        v25 = const u64 0
        v26 = get_elem_ptr v24, ptr u64, v25, !8
        v27 = const u64 1, !8
        store v27 to v26, !8
        v28 = get_local ptr { b256 }, pool, !9
        v29 = const u64 1
        v30 = const u64 1
        v31 = get_elem_ptr v24, ptr { b256 }, v29, v30, !8
        mem_copy_val v31, v28
        v32 = get_local ptr { b256 }, asset, !10
        v33 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !14
        mem_copy_val v33, v24
        v34 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2
        v35 = const u64 0
        v36 = get_elem_ptr v34, ptr u64, v35
        v37 = load v36, !11
        v38 = const u64 0, !15
        v39 = cmp eq v37 v38, !17
        cbr v39, transfer_2_block0(), transfer_2_block1(), !18

        transfer_2_block0():
        v40 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !19
        v41 = const u64 1
        v42 = const u64 0
        v43 = get_elem_ptr v40, ptr { b256 }, v41, v42, !11
        v44 = get_local ptr { b256 }, addr, !21
        mem_copy_val v44, v43
        v45 = get_local ptr { b256 }, addr, !23
        v46 = get_local ptr { u64 }, __ret_val1
        v47 = call tx_type_6(v46)
        v48 = get_local ptr { u64 }, __matched_value_3, !28
        v49 = const u64 0
        v50 = get_elem_ptr v47, ptr u64, v49
        v51 = load v50
        v52 = get_local ptr u64, __matched_value_30
        store v51 to v52
        v53 = get_local ptr { u64 }, __matched_value_3, !30
        v54 = const u64 0
        v55 = get_elem_ptr v53, ptr u64, v54, !31
        v56 = get_local ptr u64, __matched_value_30
        v57 = load v56, !32
        v58 = const u64 0, !29
        v59 = cmp eq v57 v58, !34
        cbr v59, transfer_2_transfer_to_address_4_output_count_5_block0(), transfer_2_transfer_to_address_4_output_count_5_block1(), !35

        transfer_2_transfer_to_address_4_output_count_5_block0():
        v60 = const u64 0, !36
        v61 = gtf v60, 6, !38
        v62 = bitcast v61 to u64, !39
        br transfer_2_transfer_to_address_4_output_count_5_block5(v62), !40

        transfer_2_transfer_to_address_4_output_count_5_block1():
        v63 = get_local ptr { u64 }, __matched_value_3, !41
        v64 = const u64 0
        v65 = get_elem_ptr v63, ptr u64, v64, !42
        v66 = get_local ptr u64, __matched_value_30
        v67 = load v66, !43
        v68 = const u64 1, !29
        v69 = cmp eq v67 v68, !45
        cbr v69, transfer_2_transfer_to_address_4_output_count_5_block2(), transfer_2_transfer_to_address_4_output_count_5_block3(), !46

        transfer_2_transfer_to_address_4_output_count_5_block2():
        v70 = const u64 0, !47
        v71 = gtf v70, 260, !49
        v72 = bitcast v71 to u64, !50
        br transfer_2_transfer_to_address_4_output_count_5_block5(v72), !51

        transfer_2_transfer_to_address_4_output_count_5_block3():
        v73 = const u64 14757395258967588866, !27
        revert v73, !52

        transfer_2_transfer_to_address_4_output_count_5_block5(v74: u64):
        v75 = const u64 0, !53
        br transfer_2_transfer_to_address_4_while(v75), !54

        transfer_2_transfer_to_address_4_while(v76: u64):
        v77 = cmp lt v76 v74, !56
        cbr v77, transfer_2_transfer_to_address_4_while_body(), transfer_2_transfer_to_address_4_end_while(), !57

        transfer_2_transfer_to_address_4_while_body():
        v78 = get_local ptr { u64 }, __ret_val3
        v79 = call output_type_10(v76, v78)
        v80 = get_local ptr { u64 }, __matched_value_2, !59
        v81 = const u64 0
        v82 = get_elem_ptr v79, ptr u64, v81
        v83 = load v82
        v84 = get_local ptr u64, __matched_value_201
        store v83 to v84
        v85 = get_local ptr { u64 }, __matched_value_2, !61
        v86 = const u64 0
        v87 = get_elem_ptr v85, ptr u64, v86, !62
        v88 = get_local ptr u64, __matched_value_201
        v89 = load v88, !63
        v90 = const u64 3, !60
        v91 = cmp eq v89 v90, !65
        v92 = const unit ()
        cbr v91, transfer_2_transfer_to_address_4_block0(), transfer_2_transfer_to_address_4_block5(v92), !66

        transfer_2_transfer_to_address_4_block0():
        v93 = get_local ptr { u64 }, __ret_val4
        v94 = call output_type_10(v76, v93)
        v95 = get_local ptr { u64 }, __matched_value_4, !69
        v96 = const u64 0
        v97 = get_elem_ptr v94, ptr u64, v96
        v98 = load v97
        v99 = get_local ptr u64, __matched_value_40
        store v98 to v99
        v100 = get_local ptr { u64 }, __matched_value_4, !71
        v101 = const u64 0
        v102 = get_elem_ptr v100, ptr u64, v101, !72
        v103 = get_local ptr u64, __matched_value_40
        v104 = load v103, !73
        v105 = const u64 0, !70
        v106 = cmp eq v104 v105, !75
        cbr v106, transfer_2_transfer_to_address_4_output_amount_11_block0(), transfer_2_transfer_to_address_4_output_amount_11_block1(), !76

        transfer_2_transfer_to_address_4_output_amount_11_block0():
        v107 = gtf v76, 770, !78
        v108 = bitcast v107 to u64, !79
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v108), !80

        transfer_2_transfer_to_address_4_output_amount_11_block1():
        v109 = get_local ptr { u64 }, __matched_value_4, !81
        v110 = const u64 0
        v111 = get_elem_ptr v109, ptr u64, v110, !82
        v112 = get_local ptr u64, __matched_value_40
        v113 = load v112, !83
        v114 = const u64 1, !70
        v115 = cmp eq v113 v114, !85
        cbr v115, transfer_2_transfer_to_address_4_output_amount_11_block2(), transfer_2_transfer_to_address_4_output_amount_11_block3(), !86

        transfer_2_transfer_to_address_4_output_amount_11_block2():
        v116 = const u64 0, !87
        revert v116, !91

        transfer_2_transfer_to_address_4_output_amount_11_block3():
        v117 = get_local ptr { u64 }, __matched_value_4, !92
        v118 = const u64 0
        v119 = get_elem_ptr v117, ptr u64, v118, !93
        v120 = get_local ptr u64, __matched_value_40
        v121 = load v120, !94
        v122 = const u64 2, !70
        v123 = cmp eq v121 v122, !96
        v124 = const u64 0, !97
        cbr v123, transfer_2_transfer_to_address_4_output_amount_11_block9(v124), transfer_2_transfer_to_address_4_output_amount_11_block5(), !98

        transfer_2_transfer_to_address_4_output_amount_11_block5():
        v125 = get_local ptr { u64 }, __matched_value_4, !99
        v126 = const u64 0
        v127 = get_elem_ptr v125, ptr u64, v126, !100
        v128 = get_local ptr u64, __matched_value_40
        v129 = load v128, !101
        v130 = const u64 3, !70
        v131 = cmp eq v129 v130, !103
        cbr v131, transfer_2_transfer_to_address_4_output_amount_11_block6(), transfer_2_transfer_to_address_4_output_amount_11_block7(), !104

        transfer_2_transfer_to_address_4_output_amount_11_block6():
        v132 = get_local ptr { u64 }, __ret_val2
        v133 = call tx_type_6(v132)
        v134 = get_local ptr { u64 }, __matched_value_20, !107
        v135 = const u64 0
        v136 = get_elem_ptr v133, ptr u64, v135
        v137 = load v136
        v138 = get_local ptr u64, __matched_value_200
        store v137 to v138
        v139 = get_local ptr { u64 }, __matched_value_20, !109
        v140 = const u64 0
        v141 = get_elem_ptr v139, ptr u64, v140, !110
        v142 = get_local ptr u64, __matched_value_200
        v143 = load v142, !111
        v144 = const u64 0, !108
        v145 = cmp eq v143 v144, !113
        cbr v145, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1(), !114

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0():
        v146 = gtf v76, 12, !116
        v147 = bitcast v146 to u64, !117
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v147), !118

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1():
        v148 = get_local ptr { u64 }, __matched_value_20, !119
        v149 = const u64 0
        v150 = get_elem_ptr v148, ptr u64, v149, !120
        v151 = get_local ptr u64, __matched_value_200
        v152 = load v151, !121
        v153 = const u64 1, !108
        v154 = cmp eq v152 v153, !123
        cbr v154, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3(), !124

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2():
        v155 = gtf v76, 265, !126
        v156 = bitcast v155 to u64, !127
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v156), !128

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3():
        v157 = const u64 14757395258967588866, !106
        revert v157, !129

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v158: u64):
        v159 = asm(r1, r2, r3: v158) -> u64 r1, !131 {
            addi   r2 r3 i40, !132
            lw     r1 r2 i0, !133
        }
        br transfer_2_transfer_to_address_4_output_amount_11_block9(v159), !134

        transfer_2_transfer_to_address_4_output_amount_11_block7():
        v160 = const u64 14757395258967588866, !68
        revert v160, !135

        transfer_2_transfer_to_address_4_output_amount_11_block9(v161: u64):
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v161), !136

        transfer_2_transfer_to_address_4_output_amount_11_block11(v162: u64):
        v163 = const u64 0, !137
        v164 = cmp eq v162 v163, !139
        v165 = const unit ()
        cbr v164, transfer_2_transfer_to_address_4_block1(), transfer_2_transfer_to_address_4_block5(v165), !140

        transfer_2_transfer_to_address_4_block1():
        v166 = get_local ptr { b256 }, __tmp_arg1
        mem_copy_val v166, v45
        v167 = get_local ptr b256, __ret_val5
        v168 = call bits_16(v166, v167)
        v169 = get_local ptr b256, __asm_arg
        mem_copy_val v169, v168
        v170 = get_local ptr { b256 }, __asm_arg0
        mem_copy_val v170, v32
        v171 = const u64 10, !141
        v172 = asm(r1: v169, r2: v76, r3: v171, r4: v170) {
            tro    r1 r2 r3 r4, !142
        }
        v173 = const unit (), !143
        br transfer_2_block5(v173), !11

        transfer_2_transfer_to_address_4_block5(v174: ()):
        v175 = const u64 1, !144
        v176 = add v76, v175, !146
        br transfer_2_transfer_to_address_4_while(v176), !147

        transfer_2_transfer_to_address_4_end_while():
        v177 = const u64 18446744073709486081, !149
        revert v177, !151

        transfer_2_block1():
        v178 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !152
        v179 = const u64 0
        v180 = get_elem_ptr v178, ptr u64, v179, !153
        v181 = load v180, !11
        v182 = const u64 1, !15
        v183 = cmp eq v181 v182, !155
        cbr v183, transfer_2_block2(), transfer_2_block3(), !156

        transfer_2_block2():
        v184 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !157
        v185 = const u64 1
        v186 = const u64 1
        v187 = get_elem_ptr v184, ptr { b256 }, v185, v186, !11
        v188 = get_local ptr { b256 }, id, !159
        mem_copy_val v188, v187
        v189 = get_local ptr { b256 }, __tmp_arg2
        mem_copy_val v189, v187
        v190 = get_local ptr b256, __ret_val6
        v191 = call bits_16(v189, v190)
        v192 = get_local ptr { b256 }, __asm_arg1
        mem_copy_val v192, v32
        v193 = get_local ptr b256, __asm_arg2
        mem_copy_val v193, v191
        v194 = asm(r1: v171, r2: v192, r3: v193) {
            tr     r3 r1 r2, !160
        }
        v195 = const unit ()
        br transfer_2_block5(v195), !11

        transfer_2_block3():
        v196 = const u64 14757395258967588866, !13
        revert v196, !161

        transfer_2_block5(v197: ()):
        v198 = const unit ()
        ret () v198
    }

    pub fn from_0(bits: ptr b256, __ret_value: ptr { b256 }) -> ptr { b256 }, !163 {
        local { b256 } __anon_0

        entry(bits: ptr b256, __ret_value: ptr { b256 }):
        v0 = get_local ptr { b256 }, __anon_0, !164
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        mem_copy_val v2, bits
        mem_copy_val __ret_value, v0
        ret ptr { b256 } __ret_value
    }

    pub fn tx_type_6(__ret_value: ptr { u64 }) -> ptr { u64 }, !166 {
        local { u64 } __anon_0
        local u64 __anon_00
        local { u64 } __anon_1
        local u64 __anon_10
        local { u64 } __tmp_block_arg
        local u64 __tmp_block_arg0

        entry(__ret_value: ptr { u64 }):
        v0 = const u64 0, !167
        v1 = gtf v0, 1, !168
        v2 = bitcast v1 to u8, !168
        v3 = const u8 0, !169
        v4 = cmp eq v2 v3, !170
        cbr v4, block0(), block1(), !170

        block0():
        v5 = get_local ptr { u64 }, __anon_0, !171
        v6 = const u64 0
        v7 = get_elem_ptr v5, ptr u64, v6, !171
        v8 = get_local ptr u64, __anon_00
        v9 = const u64 0, !171
        store v9 to v8, !171
        v10 = get_local ptr { u64 }, __tmp_block_arg
        v11 = get_local ptr u64, __anon_00
        v12 = load v11
        v13 = get_local ptr u64, __tmp_block_arg0
        store v12 to v13
        br block5(v10)

        block1():
        v14 = const u8 1, !172
        v15 = cmp eq v2 v14, !173
        cbr v15, block2(), block3(), !173

        block2():
        v16 = get_local ptr { u64 }, __anon_1, !171
        v17 = const u64 0
        v18 = get_elem_ptr v16, ptr u64, v17, !171
        v19 = get_local ptr u64, __anon_10
        v20 = const u64 1, !171
        store v20 to v19, !171
        v21 = get_local ptr { u64 }, __tmp_block_arg
        v22 = get_local ptr u64, __anon_10
        v23 = load v22
        v24 = get_local ptr u64, __tmp_block_arg0
        store v23 to v24
        br block5(v21)

        block3():
        v25 = const u64 0, !174
        revert v25, !176

        block5(v26: ptr { u64 }):
        v27 = get_local ptr u64, __tmp_block_arg0
        v28 = load v27
        v29 = const u64 0
        v30 = get_elem_ptr __ret_value, ptr u64, v29
        store v28 to v30
        ret ptr { u64 } __ret_value
    }

    pub fn output_type_10(index !177: u64, __ret_value: ptr { u64 }) -> ptr { u64 }, !178 {
        local { u64 } __anon_0
        local u64 __anon_00
        local { u64 } __anon_1
        local u64 __anon_10
        local { u64 } __anon_2
        local u64 __anon_20
        local { u64 } __anon_3
        local u64 __anon_30
        local { u64 } __tmp_block_arg
        local { u64 } __tmp_block_arg0
        local u64 __tmp_block_arg00
        local u64 __tmp_block_arg01
        local { u64 } __tmp_block_arg1
        local u64 __tmp_block_arg10

        entry(index: u64, __ret_value: ptr { u64 }):
        v0 = gtf index, 768, !179
        v1 = bitcast v0 to u8, !179
        v2 = const u8 0, !180
        v3 = cmp eq v1 v2, !181
        cbr v3, block0(), block1(), !181

        block0():
        v4 = get_local ptr { u64 }, __anon_0, !182
        v5 = const u64 0
        v6 = get_elem_ptr v4, ptr u64, v5, !182
        v7 = get_local ptr u64, __anon_00
        v8 = const u64 0, !182
        store v8 to v7, !182
        v9 = get_local ptr { u64 }, __tmp_block_arg1
        v10 = get_local ptr u64, __anon_00
        v11 = load v10
        v12 = get_local ptr u64, __tmp_block_arg10
        store v11 to v12
        br block11(v9)

        block1():
        v13 = const u8 1, !183
        v14 = cmp eq v1 v13, !184
        cbr v14, block2(), block3(), !184

        block2():
        v15 = get_local ptr { u64 }, __anon_1, !182
        v16 = const u64 0
        v17 = get_elem_ptr v15, ptr u64, v16, !182
        v18 = get_local ptr u64, __anon_10
        v19 = const u64 1, !182
        store v19 to v18, !182
        v20 = get_local ptr { u64 }, __tmp_block_arg0
        v21 = get_local ptr u64, __anon_10
        v22 = load v21
        v23 = get_local ptr u64, __tmp_block_arg00
        store v22 to v23
        br block10(v20)

        block3():
        v24 = const u8 2, !185
        v25 = cmp eq v1 v24, !186
        cbr v25, block4(), block5(), !186

        block4():
        v26 = get_local ptr { u64 }, __anon_2, !182
        v27 = const u64 0
        v28 = get_elem_ptr v26, ptr u64, v27, !182
        v29 = get_local ptr u64, __anon_20
        v30 = const u64 2, !182
        store v30 to v29, !182
        v31 = get_local ptr { u64 }, __tmp_block_arg
        v32 = get_local ptr u64, __anon_20
        v33 = load v32
        v34 = get_local ptr u64, __tmp_block_arg01
        store v33 to v34
        br block9(v31)

        block5():
        v35 = const u8 3, !187
        v36 = cmp eq v1 v35, !188
        cbr v36, block6(), block7(), !188

        block6():
        v37 = get_local ptr { u64 }, __anon_3, !182
        v38 = const u64 0
        v39 = get_elem_ptr v37, ptr u64, v38, !182
        v40 = get_local ptr u64, __anon_30
        v41 = const u64 3, !182
        store v41 to v40, !182
        v42 = get_local ptr { u64 }, __tmp_block_arg
        v43 = get_local ptr u64, __anon_30
        v44 = load v43
        v45 = get_local ptr u64, __tmp_block_arg01
        store v44 to v45
        br block9(v42)

        block7():
        v46 = const u64 0, !189
        revert v46, !191

        block9(v47: ptr { u64 }):
        v48 = get_local ptr { u64 }, __tmp_block_arg0
        v49 = get_local ptr u64, __tmp_block_arg01
        v50 = load v49
        v51 = get_local ptr u64, __tmp_block_arg00
        store v50 to v51
        br block10(v48)

        block10(v52: ptr { u64 }):
        v53 = get_local ptr { u64 }, __tmp_block_arg1
        v54 = get_local ptr u64, __tmp_block_arg00
        v55 = load v54
        v56 = get_local ptr u64, __tmp_block_arg10
        store v55 to v56
        br block11(v53)

        block11(v57: ptr { u64 }):
        v58 = get_local ptr u64, __tmp_block_arg10
        v59 = load v58
        v60 = const u64 0
        v61 = get_elem_ptr __ret_value, ptr u64, v60
        store v59 to v61
        ret ptr { u64 } __ret_value
    }

    pub fn bits_16(self: ptr { b256 }, __ret_value: ptr b256) -> ptr b256, !193 {
        entry(self: ptr { b256 }, __ret_value: ptr b256):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !194
        mem_copy_val __ret_value, v3
        ret ptr b256 __ret_value
    }
}

!0 = "/home/kebradalaonda/p/sway/test/src/e2e_vm_tests/test_programs/should_pass/static_analysis/cei_pattern_violation_in_asm_block_tr/src/main.sw"
!1 = span !0 105 713
!2 = span !0 263 287
!3 = span !0 528 535
!4 = span !0 502 537
!5 = span !0 574 581
!6 = span !0 546 583
!7 = "/home/kebradalaonda/p/sway/sway-lib-std/src/identity.sw"
!8 = span !7 477 548
!9 = span !0 685 689
!10 = span !0 692 697
!11 = span !0 655 706
!12 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset.sw"
!13 = span !12 3829 4011
!14 = (!11 !13)
!15 = span !12 3835 3837
!16 = span !12 3848 3919
!17 = (!11 !16)
!18 = (!11 !16)
!19 = (!11 !15)
!20 = span !12 3866 3870
!21 = (!11 !20)
!22 = span !12 3895 3899
!23 = (!11 !22)
!24 = span !12 3875 3918
!25 = span !12 6153 6167
!26 = "/home/kebradalaonda/p/sway/sway-lib-std/src/outputs.sw"
!27 = span !26 3429 3600
!28 = (!11 !24 !25 !27)
!29 = span !26 3435 3444
!30 = (!11 !24 !25 !29)
!31 = (!11 !24 !25 !29)
!32 = (!11 !24 !25)
!33 = span !26 3455 3520
!34 = (!11 !24 !25 !33)
!35 = (!11 !24 !25 !33)
!36 = span !26 3491 3492
!37 = span !26 3478 3519
!38 = (!11 !24 !25 !37)
!39 = (!11 !24 !25 !37)
!40 = (!11 !24 !25)
!41 = (!11 !24 !25 !29)
!42 = (!11 !24 !25 !29)
!43 = (!11 !24 !25)
!44 = span !26 3529 3594
!45 = (!11 !24 !25 !44)
!46 = (!11 !24 !25 !44)
!47 = span !26 3565 3566
!48 = span !26 3552 3593
!49 = (!11 !24 !25 !48)
!50 = (!11 !24 !25 !48)
!51 = (!11 !24 !25)
!52 = (!11 !24 !25 !27)
!53 = span !12 5893 5894
!54 = (!11 !24)
!55 = span !12 6179 6204
!56 = (!11 !24 !55)
!57 = (!11 !24)
!58 = span !12 6215 6482
!59 = (!11 !24 !58)
!60 = span !12 6241 6259
!61 = (!11 !24 !60)
!62 = (!11 !24 !60)
!63 = (!11 !24)
!64 = span !12 6222 6482
!65 = (!11 !24 !64)
!66 = (!11 !24 !64)
!67 = span !12 6277 6297
!68 = span !26 4537 5459
!69 = (!11 !24 !67 !68)
!70 = span !26 4543 4561
!71 = (!11 !24 !67 !70)
!72 = (!11 !24 !67 !70)
!73 = (!11 !24 !67)
!74 = span !26 4572 4632
!75 = (!11 !24 !67 !74)
!76 = (!11 !24 !67 !74)
!77 = span !26 4588 4631
!78 = (!11 !24 !67 !77)
!79 = (!11 !24 !67 !77)
!80 = (!11 !24 !67)
!81 = (!11 !24 !67 !70)
!82 = (!11 !24 !67 !70)
!83 = (!11 !24 !67)
!84 = span !26 4641 4671
!85 = (!11 !24 !67 !84)
!86 = (!11 !24 !67 !84)
!87 = span !26 4668 4669
!88 = span !26 4661 4670
!89 = "/home/kebradalaonda/p/sway/sway-lib-std/src/revert.sw"
!90 = span !89 691 705
!91 = (!11 !24 !67 !88 !90)
!92 = (!11 !24 !67 !70)
!93 = (!11 !24 !67 !70)
!94 = (!11 !24 !67)
!95 = span !26 5018 5038
!96 = (!11 !24 !67 !95)
!97 = span !26 5036 5037
!98 = (!11 !24 !67 !95)
!99 = (!11 !24 !67 !70)
!100 = (!11 !24 !67 !70)
!101 = (!11 !24 !67)
!102 = span !26 5242 5453
!103 = (!11 !24 !67 !102)
!104 = (!11 !24 !67 !102)
!105 = span !26 5286 5307
!106 = span !26 2767 2950
!107 = (!11 !24 !67 !105 !106)
!108 = span !26 2773 2782
!109 = (!11 !24 !67 !105 !108)
!110 = (!11 !24 !67 !105 !108)
!111 = (!11 !24 !67 !105)
!112 = span !26 2793 2864
!113 = (!11 !24 !67 !105 !112)
!114 = (!11 !24 !67 !105 !112)
!115 = span !26 2816 2863
!116 = (!11 !24 !67 !105 !115)
!117 = (!11 !24 !67 !105 !115)
!118 = (!11 !24 !67 !105)
!119 = (!11 !24 !67 !105 !108)
!120 = (!11 !24 !67 !105 !108)
!121 = (!11 !24 !67 !105)
!122 = span !26 2873 2944
!123 = (!11 !24 !67 !105 !122)
!124 = (!11 !24 !67 !105 !122)
!125 = span !26 2896 2943
!126 = (!11 !24 !67 !105 !125)
!127 = (!11 !24 !67 !105 !125)
!128 = (!11 !24 !67 !105)
!129 = (!11 !24 !67 !105 !106)
!130 = span !26 5321 5442
!131 = (!11 !24 !67 !130)
!132 = span !26 5360 5374
!133 = span !26 5392 5403
!134 = (!11 !24 !67)
!135 = (!11 !24 !67 !68)
!136 = (!11 !24 !67)
!137 = span !12 6301 6302
!138 = span !12 6277 6302
!139 = (!11 !24 !138)
!140 = (!11 !24 !138)
!141 = span !0 400 402
!142 = span !12 6399 6414
!143 = span !12 6451 6457
!144 = span !12 6500 6501
!145 = span !12 6491 6501
!146 = (!11 !24 !145)
!147 = (!11 !24)
!148 = "/home/kebradalaonda/p/sway/sway-lib-std/src/error_signals.sw"
!149 = span !148 566 587
!150 = span !12 6514 6555
!151 = (!11 !24 !150 !90)
!152 = (!11 !15)
!153 = (!11 !15)
!154 = span !12 3928 4005
!155 = (!11 !154)
!156 = (!11 !154)
!157 = (!11 !15)
!158 = span !12 3949 3951
!159 = (!11 !158)
!160 = span !12 5050 5061
!161 = (!11 !13)
!162 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset_id.sw"
!163 = span !162 1292 1349
!164 = span !162 1330 1343
!165 = "/home/kebradalaonda/p/sway/sway-lib-std/src/tx.sw"
!166 = span !165 2271 2445
!167 = span !165 2327 2328
!168 = span !165 2315 2339
!169 = span !165 2350 2353
!170 = span !165 2350 2377
!171 = span !165 1445 1616
!172 = span !165 2386 2389
!173 = span !165 2386 2413
!174 = span !165 2434 2435
!175 = span !165 2427 2436
!176 = (!175 !90)
!177 = span !26 1936 1941
!178 = span !26 1917 2165
!179 = span !26 1970 2005
!180 = span !26 2016 2019
!181 = span !26 2016 2036
!182 = span !26 956 1170
!183 = span !26 2045 2048
!184 = span !26 2045 2069
!185 = span !26 2078 2081
!186 = span !26 2078 2100
!187 = span !26 2109 2112
!188 = span !26 2109 2133
!189 = span !26 2154 2155
!190 = span !26 2147 2156
!191 = (!190 !90)
!192 = "/home/kebradalaonda/p/sway/sway-lib-std/src/contract_id.sw"
!193 = span !192 695 746
!194 = span !192 305 315

// IR: [mem2reg] Promotion of local memory to SSA registers
contract {
    pub entry fn deposit<2df2cef7>() -> (), !1 {
        local { b256, u64, u64 } __anon_0
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local b256 __asm_arg
        local { b256 } __asm_arg0
        local { b256 } __asm_arg1
        local b256 __asm_arg2
        local b256 __const = const b256 0x3dba0a4455b598b7655a7fb430883d96c9527ef275b49739e7b0ad12f8280eae
        local b256 __const0 = const b256 0x0000000000000000000000000000000000000000000000000000000000000000
        local b256 __const1 = const b256 0x0000000000000000000000000000000000000000000000000000000000000001
        local { u64, ( { b256 } | { b256 } ) } __matched_value_1
        local { u64 } __matched_value_2
        local { u64 } __matched_value_20
        local u64 __matched_value_200
        local u64 __matched_value_201
        local { u64 } __matched_value_3
        local u64 __matched_value_30
        local { u64 } __matched_value_4
        local u64 __matched_value_40
        local { b256 } __ret_val
        local { b256 } __ret_val0
        local { u64 } __ret_val1
        local { u64 } __ret_val2
        local { u64 } __ret_val3
        local { u64 } __ret_val4
        local b256 __ret_val5
        local b256 __ret_val6
        local b256 __tmp_arg
        local b256 __tmp_arg0
        local { b256 } __tmp_arg1
        local { b256 } __tmp_arg2
        local { b256 } addr
        local { b256 } asset
        local { b256 } id
        local { b256 } pool

        entry():
        v0 = get_local ptr b256, __const
        v1 = get_local ptr { b256, u64, u64 }, __anon_0, !2
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2
        mem_copy_val v3, v0
        v4 = const u64 1
        v5 = get_elem_ptr v1, ptr u64, v4
        v6 = const u64 770887415, !2
        store v6 to v5, !2
        v7 = const u64 2
        v8 = get_elem_ptr v1, ptr u64, v7
        v9 = const u64 0
        store v9 to v8, !2
        v10 = get_local ptr b256, __const0
        v11 = read_register cgas, !2
        v12 = const u64 0, !2
        v13 = contract_call () deposit v1, v12, v10, v11, !2
        v14 = get_local ptr b256, __const1, !3
        v15 = get_local ptr b256, __tmp_arg
        mem_copy_val v15, v14
        v16 = get_local ptr { b256 }, __ret_val
        v17 = call from_0(v15, v16)
        v18 = get_local ptr { b256 }, asset, !4
        mem_copy_val v18, v17
        v19 = get_local ptr b256, __const1, !5
        v20 = get_local ptr b256, __tmp_arg0
        mem_copy_val v20, v19
        v21 = get_local ptr { b256 }, __ret_val0
        v22 = call from_0(v20, v21)
        v23 = get_local ptr { b256 }, pool, !6
        mem_copy_val v23, v22
        v24 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !8
        v25 = const u64 0
        v26 = get_elem_ptr v24, ptr u64, v25, !8
        v27 = const u64 1, !8
        store v27 to v26, !8
        v28 = get_local ptr { b256 }, pool, !9
        v29 = const u64 1
        v30 = const u64 1
        v31 = get_elem_ptr v24, ptr { b256 }, v29, v30, !8
        mem_copy_val v31, v28
        v32 = get_local ptr { b256 }, asset, !10
        v33 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !14
        mem_copy_val v33, v24
        v34 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2
        v35 = const u64 0
        v36 = get_elem_ptr v34, ptr u64, v35
        v37 = load v36, !11
        v38 = const u64 0, !15
        v39 = cmp eq v37 v38, !17
        cbr v39, transfer_2_block0(), transfer_2_block1(), !18

        transfer_2_block0():
        v40 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !19
        v41 = const u64 1
        v42 = const u64 0
        v43 = get_elem_ptr v40, ptr { b256 }, v41, v42, !11
        v44 = get_local ptr { b256 }, addr, !21
        mem_copy_val v44, v43
        v45 = get_local ptr { b256 }, addr, !23
        v46 = get_local ptr { u64 }, __ret_val1
        v47 = call tx_type_6(v46)
        v48 = get_local ptr { u64 }, __matched_value_3, !28
        v49 = const u64 0
        v50 = get_elem_ptr v47, ptr u64, v49
        v51 = load v50
        v52 = get_local ptr u64, __matched_value_30
        v53 = get_local ptr { u64 }, __matched_value_3, !30
        v54 = const u64 0
        v55 = get_elem_ptr v53, ptr u64, v54, !31
        v56 = get_local ptr u64, __matched_value_30
        v57 = const u64 0, !29
        v58 = cmp eq v51 v57, !33
        cbr v58, transfer_2_transfer_to_address_4_output_count_5_block0(), transfer_2_transfer_to_address_4_output_count_5_block1(), !34

        transfer_2_transfer_to_address_4_output_count_5_block0():
        v59 = const u64 0, !35
        v60 = gtf v59, 6, !37
        v61 = bitcast v60 to u64, !38
        br transfer_2_transfer_to_address_4_output_count_5_block5(v61), !39

        transfer_2_transfer_to_address_4_output_count_5_block1():
        v62 = get_local ptr { u64 }, __matched_value_3, !40
        v63 = const u64 0
        v64 = get_elem_ptr v62, ptr u64, v63, !41
        v65 = get_local ptr u64, __matched_value_30
        v66 = const u64 1, !29
        v67 = cmp eq v51 v66, !43
        cbr v67, transfer_2_transfer_to_address_4_output_count_5_block2(), transfer_2_transfer_to_address_4_output_count_5_block3(), !44

        transfer_2_transfer_to_address_4_output_count_5_block2():
        v68 = const u64 0, !45
        v69 = gtf v68, 260, !47
        v70 = bitcast v69 to u64, !48
        br transfer_2_transfer_to_address_4_output_count_5_block5(v70), !49

        transfer_2_transfer_to_address_4_output_count_5_block3():
        v71 = const u64 14757395258967588866, !27
        revert v71, !50

        transfer_2_transfer_to_address_4_output_count_5_block5(v72: u64):
        v73 = const u64 0, !51
        br transfer_2_transfer_to_address_4_while(v73), !52

        transfer_2_transfer_to_address_4_while(v74: u64):
        v75 = cmp lt v74 v72, !54
        cbr v75, transfer_2_transfer_to_address_4_while_body(), transfer_2_transfer_to_address_4_end_while(), !55

        transfer_2_transfer_to_address_4_while_body():
        v76 = get_local ptr { u64 }, __ret_val3
        v77 = call output_type_10(v74, v76)
        v78 = get_local ptr { u64 }, __matched_value_2, !57
        v79 = const u64 0
        v80 = get_elem_ptr v77, ptr u64, v79
        v81 = load v80
        v82 = get_local ptr u64, __matched_value_201
        v83 = get_local ptr { u64 }, __matched_value_2, !59
        v84 = const u64 0
        v85 = get_elem_ptr v83, ptr u64, v84, !60
        v86 = get_local ptr u64, __matched_value_201
        v87 = const u64 3, !58
        v88 = cmp eq v81 v87, !62
        v89 = const unit ()
        cbr v88, transfer_2_transfer_to_address_4_block0(), transfer_2_transfer_to_address_4_block5(v89), !63

        transfer_2_transfer_to_address_4_block0():
        v90 = get_local ptr { u64 }, __ret_val4
        v91 = call output_type_10(v74, v90)
        v92 = get_local ptr { u64 }, __matched_value_4, !66
        v93 = const u64 0
        v94 = get_elem_ptr v91, ptr u64, v93
        v95 = load v94
        v96 = get_local ptr u64, __matched_value_40
        v97 = get_local ptr { u64 }, __matched_value_4, !68
        v98 = const u64 0
        v99 = get_elem_ptr v97, ptr u64, v98, !69
        v100 = get_local ptr u64, __matched_value_40
        v101 = const u64 0, !67
        v102 = cmp eq v95 v101, !71
        cbr v102, transfer_2_transfer_to_address_4_output_amount_11_block0(), transfer_2_transfer_to_address_4_output_amount_11_block1(), !72

        transfer_2_transfer_to_address_4_output_amount_11_block0():
        v103 = gtf v74, 770, !74
        v104 = bitcast v103 to u64, !75
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v104), !76

        transfer_2_transfer_to_address_4_output_amount_11_block1():
        v105 = get_local ptr { u64 }, __matched_value_4, !77
        v106 = const u64 0
        v107 = get_elem_ptr v105, ptr u64, v106, !78
        v108 = get_local ptr u64, __matched_value_40
        v109 = const u64 1, !67
        v110 = cmp eq v95 v109, !80
        cbr v110, transfer_2_transfer_to_address_4_output_amount_11_block2(), transfer_2_transfer_to_address_4_output_amount_11_block3(), !81

        transfer_2_transfer_to_address_4_output_amount_11_block2():
        v111 = const u64 0, !82
        revert v111, !86

        transfer_2_transfer_to_address_4_output_amount_11_block3():
        v112 = get_local ptr { u64 }, __matched_value_4, !87
        v113 = const u64 0
        v114 = get_elem_ptr v112, ptr u64, v113, !88
        v115 = get_local ptr u64, __matched_value_40
        v116 = const u64 2, !67
        v117 = cmp eq v95 v116, !90
        v118 = const u64 0, !91
        cbr v117, transfer_2_transfer_to_address_4_output_amount_11_block9(v118), transfer_2_transfer_to_address_4_output_amount_11_block5(), !92

        transfer_2_transfer_to_address_4_output_amount_11_block5():
        v119 = get_local ptr { u64 }, __matched_value_4, !93
        v120 = const u64 0
        v121 = get_elem_ptr v119, ptr u64, v120, !94
        v122 = get_local ptr u64, __matched_value_40
        v123 = const u64 3, !67
        v124 = cmp eq v95 v123, !96
        cbr v124, transfer_2_transfer_to_address_4_output_amount_11_block6(), transfer_2_transfer_to_address_4_output_amount_11_block7(), !97

        transfer_2_transfer_to_address_4_output_amount_11_block6():
        v125 = get_local ptr { u64 }, __ret_val2
        v126 = call tx_type_6(v125)
        v127 = get_local ptr { u64 }, __matched_value_20, !100
        v128 = const u64 0
        v129 = get_elem_ptr v126, ptr u64, v128
        v130 = load v129
        v131 = get_local ptr u64, __matched_value_200
        v132 = get_local ptr { u64 }, __matched_value_20, !102
        v133 = const u64 0
        v134 = get_elem_ptr v132, ptr u64, v133, !103
        v135 = get_local ptr u64, __matched_value_200
        v136 = const u64 0, !101
        v137 = cmp eq v130 v136, !105
        cbr v137, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1(), !106

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0():
        v138 = gtf v74, 12, !108
        v139 = bitcast v138 to u64, !109
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v139), !110

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1():
        v140 = get_local ptr { u64 }, __matched_value_20, !111
        v141 = const u64 0
        v142 = get_elem_ptr v140, ptr u64, v141, !112
        v143 = get_local ptr u64, __matched_value_200
        v144 = const u64 1, !101
        v145 = cmp eq v130 v144, !114
        cbr v145, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3(), !115

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2():
        v146 = gtf v74, 265, !117
        v147 = bitcast v146 to u64, !118
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v147), !119

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3():
        v148 = const u64 14757395258967588866, !99
        revert v148, !120

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v149: u64):
        v150 = asm(r1, r2, r3: v149) -> u64 r1, !122 {
            addi   r2 r3 i40, !123
            lw     r1 r2 i0, !124
        }
        br transfer_2_transfer_to_address_4_output_amount_11_block9(v150), !125

        transfer_2_transfer_to_address_4_output_amount_11_block7():
        v151 = const u64 14757395258967588866, !65
        revert v151, !126

        transfer_2_transfer_to_address_4_output_amount_11_block9(v152: u64):
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v152), !127

        transfer_2_transfer_to_address_4_output_amount_11_block11(v153: u64):
        v154 = const u64 0, !128
        v155 = cmp eq v153 v154, !130
        v156 = const unit ()
        cbr v155, transfer_2_transfer_to_address_4_block1(), transfer_2_transfer_to_address_4_block5(v156), !131

        transfer_2_transfer_to_address_4_block1():
        v157 = get_local ptr { b256 }, __tmp_arg1
        mem_copy_val v157, v45
        v158 = get_local ptr b256, __ret_val5
        v159 = call bits_16(v157, v158)
        v160 = get_local ptr b256, __asm_arg
        mem_copy_val v160, v159
        v161 = get_local ptr { b256 }, __asm_arg0
        mem_copy_val v161, v32
        v162 = const u64 10, !132
        v163 = asm(r1: v160, r2: v74, r3: v162, r4: v161) {
            tro    r1 r2 r3 r4, !133
        }
        v164 = const unit (), !134
        br transfer_2_block5(v164), !11

        transfer_2_transfer_to_address_4_block5(v165: ()):
        v166 = const u64 1, !135
        v167 = add v74, v166, !137
        br transfer_2_transfer_to_address_4_while(v167), !138

        transfer_2_transfer_to_address_4_end_while():
        v168 = const u64 18446744073709486081, !140
        revert v168, !142

        transfer_2_block1():
        v169 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !143
        v170 = const u64 0
        v171 = get_elem_ptr v169, ptr u64, v170, !144
        v172 = load v171, !11
        v173 = const u64 1, !15
        v174 = cmp eq v172 v173, !146
        cbr v174, transfer_2_block2(), transfer_2_block3(), !147

        transfer_2_block2():
        v175 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !148
        v176 = const u64 1
        v177 = const u64 1
        v178 = get_elem_ptr v175, ptr { b256 }, v176, v177, !11
        v179 = get_local ptr { b256 }, id, !150
        mem_copy_val v179, v178
        v180 = get_local ptr { b256 }, __tmp_arg2
        mem_copy_val v180, v178
        v181 = get_local ptr b256, __ret_val6
        v182 = call bits_16(v180, v181)
        v183 = get_local ptr { b256 }, __asm_arg1
        mem_copy_val v183, v32
        v184 = get_local ptr b256, __asm_arg2
        mem_copy_val v184, v182
        v185 = asm(r1: v162, r2: v183, r3: v184) {
            tr     r3 r1 r2, !151
        }
        v186 = const unit ()
        br transfer_2_block5(v186), !11

        transfer_2_block3():
        v187 = const u64 14757395258967588866, !13
        revert v187, !152

        transfer_2_block5(v188: ()):
        v189 = const unit ()
        ret () v189
    }

    pub fn from_0(bits: ptr b256, __ret_value: ptr { b256 }) -> ptr { b256 }, !154 {
        local { b256 } __anon_0

        entry(bits: ptr b256, __ret_value: ptr { b256 }):
        v0 = get_local ptr { b256 }, __anon_0, !155
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        mem_copy_val v2, bits
        mem_copy_val __ret_value, v0
        ret ptr { b256 } __ret_value
    }

    pub fn tx_type_6(__ret_value: ptr { u64 }) -> ptr { u64 }, !157 {
        local { u64 } __anon_0
        local u64 __anon_00
        local { u64 } __anon_1
        local u64 __anon_10
        local { u64 } __tmp_block_arg
        local u64 __tmp_block_arg0

        entry(__ret_value: ptr { u64 }):
        v0 = const u64 0, !158
        v1 = gtf v0, 1, !159
        v2 = bitcast v1 to u8, !159
        v3 = const u8 0, !160
        v4 = cmp eq v2 v3, !161
        cbr v4, block0(), block1(), !161

        block0():
        v5 = get_local ptr { u64 }, __anon_0, !162
        v6 = const u64 0
        v7 = get_elem_ptr v5, ptr u64, v6, !162
        v8 = get_local ptr u64, __anon_00
        v9 = get_local ptr { u64 }, __tmp_block_arg
        v10 = get_local ptr u64, __anon_00
        v11 = get_local ptr u64, __tmp_block_arg0
        v12 = const u64 0, !162
        br block5(v9, v12)

        block1():
        v13 = const u8 1, !163
        v14 = cmp eq v2 v13, !164
        cbr v14, block2(), block3(), !164

        block2():
        v15 = get_local ptr { u64 }, __anon_1, !162
        v16 = const u64 0
        v17 = get_elem_ptr v15, ptr u64, v16, !162
        v18 = get_local ptr u64, __anon_10
        v19 = get_local ptr { u64 }, __tmp_block_arg
        v20 = get_local ptr u64, __anon_10
        v21 = get_local ptr u64, __tmp_block_arg0
        v22 = const u64 1, !162
        br block5(v19, v22)

        block3():
        v23 = const u64 0, !165
        revert v23, !167

        block5(v24: ptr { u64 }, v25: u64):
        v26 = get_local ptr u64, __tmp_block_arg0
        v27 = const u64 0
        v28 = get_elem_ptr __ret_value, ptr u64, v27
        store v25 to v28
        ret ptr { u64 } __ret_value
    }

    pub fn output_type_10(index !168: u64, __ret_value: ptr { u64 }) -> ptr { u64 }, !169 {
        local { u64 } __anon_0
        local u64 __anon_00
        local { u64 } __anon_1
        local u64 __anon_10
        local { u64 } __anon_2
        local u64 __anon_20
        local { u64 } __anon_3
        local u64 __anon_30
        local { u64 } __tmp_block_arg
        local { u64 } __tmp_block_arg0
        local u64 __tmp_block_arg00
        local u64 __tmp_block_arg01
        local { u64 } __tmp_block_arg1
        local u64 __tmp_block_arg10

        entry(index: u64, __ret_value: ptr { u64 }):
        v0 = gtf index, 768, !170
        v1 = bitcast v0 to u8, !170
        v2 = const u8 0, !171
        v3 = cmp eq v1 v2, !172
        cbr v3, block0(), block1(), !172

        block0():
        v4 = get_local ptr { u64 }, __anon_0, !173
        v5 = const u64 0
        v6 = get_elem_ptr v4, ptr u64, v5, !173
        v7 = get_local ptr u64, __anon_00
        v8 = get_local ptr { u64 }, __tmp_block_arg1
        v9 = get_local ptr u64, __anon_00
        v10 = get_local ptr u64, __tmp_block_arg10
        v11 = const u64 0, !173
        br block11(v8, v11)

        block1():
        v12 = const u8 1, !174
        v13 = cmp eq v1 v12, !175
        cbr v13, block2(), block3(), !175

        block2():
        v14 = get_local ptr { u64 }, __anon_1, !173
        v15 = const u64 0
        v16 = get_elem_ptr v14, ptr u64, v15, !173
        v17 = get_local ptr u64, __anon_10
        v18 = get_local ptr { u64 }, __tmp_block_arg0
        v19 = get_local ptr u64, __anon_10
        v20 = get_local ptr u64, __tmp_block_arg00
        v21 = const u64 1, !173
        br block10(v18, v21)

        block3():
        v22 = const u8 2, !176
        v23 = cmp eq v1 v22, !177
        cbr v23, block4(), block5(), !177

        block4():
        v24 = get_local ptr { u64 }, __anon_2, !173
        v25 = const u64 0
        v26 = get_elem_ptr v24, ptr u64, v25, !173
        v27 = get_local ptr u64, __anon_20
        v28 = get_local ptr { u64 }, __tmp_block_arg
        v29 = get_local ptr u64, __anon_20
        v30 = get_local ptr u64, __tmp_block_arg01
        v31 = const u64 2, !173
        br block9(v28, v31)

        block5():
        v32 = const u8 3, !178
        v33 = cmp eq v1 v32, !179
        cbr v33, block6(), block7(), !179

        block6():
        v34 = get_local ptr { u64 }, __anon_3, !173
        v35 = const u64 0
        v36 = get_elem_ptr v34, ptr u64, v35, !173
        v37 = get_local ptr u64, __anon_30
        v38 = get_local ptr { u64 }, __tmp_block_arg
        v39 = get_local ptr u64, __anon_30
        v40 = get_local ptr u64, __tmp_block_arg01
        v41 = const u64 3, !173
        br block9(v38, v41)

        block7():
        v42 = const u64 0, !180
        revert v42, !182

        block9(v43: ptr { u64 }, v44: u64):
        v45 = get_local ptr { u64 }, __tmp_block_arg0
        v46 = get_local ptr u64, __tmp_block_arg01
        v47 = get_local ptr u64, __tmp_block_arg00
        br block10(v45, v44)

        block10(v48: ptr { u64 }, v49: u64):
        v50 = get_local ptr { u64 }, __tmp_block_arg1
        v51 = get_local ptr u64, __tmp_block_arg00
        v52 = get_local ptr u64, __tmp_block_arg10
        br block11(v50, v49)

        block11(v53: ptr { u64 }, v54: u64):
        v55 = get_local ptr u64, __tmp_block_arg10
        v56 = const u64 0
        v57 = get_elem_ptr __ret_value, ptr u64, v56
        store v54 to v57
        ret ptr { u64 } __ret_value
    }

    pub fn bits_16(self: ptr { b256 }, __ret_value: ptr b256) -> ptr b256, !184 {
        entry(self: ptr { b256 }, __ret_value: ptr b256):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !185
        mem_copy_val __ret_value, v3
        ret ptr b256 __ret_value
    }
}

!0 = "/home/kebradalaonda/p/sway/test/src/e2e_vm_tests/test_programs/should_pass/static_analysis/cei_pattern_violation_in_asm_block_tr/src/main.sw"
!1 = span !0 105 713
!2 = span !0 263 287
!3 = span !0 528 535
!4 = span !0 502 537
!5 = span !0 574 581
!6 = span !0 546 583
!7 = "/home/kebradalaonda/p/sway/sway-lib-std/src/identity.sw"
!8 = span !7 477 548
!9 = span !0 685 689
!10 = span !0 692 697
!11 = span !0 655 706
!12 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset.sw"
!13 = span !12 3829 4011
!14 = (!11 !13)
!15 = span !12 3835 3837
!16 = span !12 3848 3919
!17 = (!11 !16)
!18 = (!11 !16)
!19 = (!11 !15)
!20 = span !12 3866 3870
!21 = (!11 !20)
!22 = span !12 3895 3899
!23 = (!11 !22)
!24 = span !12 3875 3918
!25 = span !12 6153 6167
!26 = "/home/kebradalaonda/p/sway/sway-lib-std/src/outputs.sw"
!27 = span !26 3429 3600
!28 = (!11 !24 !25 !27)
!29 = span !26 3435 3444
!30 = (!11 !24 !25 !29)
!31 = (!11 !24 !25 !29)
!32 = span !26 3455 3520
!33 = (!11 !24 !25 !32)
!34 = (!11 !24 !25 !32)
!35 = span !26 3491 3492
!36 = span !26 3478 3519
!37 = (!11 !24 !25 !36)
!38 = (!11 !24 !25 !36)
!39 = (!11 !24 !25)
!40 = (!11 !24 !25 !29)
!41 = (!11 !24 !25 !29)
!42 = span !26 3529 3594
!43 = (!11 !24 !25 !42)
!44 = (!11 !24 !25 !42)
!45 = span !26 3565 3566
!46 = span !26 3552 3593
!47 = (!11 !24 !25 !46)
!48 = (!11 !24 !25 !46)
!49 = (!11 !24 !25)
!50 = (!11 !24 !25 !27)
!51 = span !12 5893 5894
!52 = (!11 !24)
!53 = span !12 6179 6204
!54 = (!11 !24 !53)
!55 = (!11 !24)
!56 = span !12 6215 6482
!57 = (!11 !24 !56)
!58 = span !12 6241 6259
!59 = (!11 !24 !58)
!60 = (!11 !24 !58)
!61 = span !12 6222 6482
!62 = (!11 !24 !61)
!63 = (!11 !24 !61)
!64 = span !12 6277 6297
!65 = span !26 4537 5459
!66 = (!11 !24 !64 !65)
!67 = span !26 4543 4561
!68 = (!11 !24 !64 !67)
!69 = (!11 !24 !64 !67)
!70 = span !26 4572 4632
!71 = (!11 !24 !64 !70)
!72 = (!11 !24 !64 !70)
!73 = span !26 4588 4631
!74 = (!11 !24 !64 !73)
!75 = (!11 !24 !64 !73)
!76 = (!11 !24 !64)
!77 = (!11 !24 !64 !67)
!78 = (!11 !24 !64 !67)
!79 = span !26 4641 4671
!80 = (!11 !24 !64 !79)
!81 = (!11 !24 !64 !79)
!82 = span !26 4668 4669
!83 = span !26 4661 4670
!84 = "/home/kebradalaonda/p/sway/sway-lib-std/src/revert.sw"
!85 = span !84 691 705
!86 = (!11 !24 !64 !83 !85)
!87 = (!11 !24 !64 !67)
!88 = (!11 !24 !64 !67)
!89 = span !26 5018 5038
!90 = (!11 !24 !64 !89)
!91 = span !26 5036 5037
!92 = (!11 !24 !64 !89)
!93 = (!11 !24 !64 !67)
!94 = (!11 !24 !64 !67)
!95 = span !26 5242 5453
!96 = (!11 !24 !64 !95)
!97 = (!11 !24 !64 !95)
!98 = span !26 5286 5307
!99 = span !26 2767 2950
!100 = (!11 !24 !64 !98 !99)
!101 = span !26 2773 2782
!102 = (!11 !24 !64 !98 !101)
!103 = (!11 !24 !64 !98 !101)
!104 = span !26 2793 2864
!105 = (!11 !24 !64 !98 !104)
!106 = (!11 !24 !64 !98 !104)
!107 = span !26 2816 2863
!108 = (!11 !24 !64 !98 !107)
!109 = (!11 !24 !64 !98 !107)
!110 = (!11 !24 !64 !98)
!111 = (!11 !24 !64 !98 !101)
!112 = (!11 !24 !64 !98 !101)
!113 = span !26 2873 2944
!114 = (!11 !24 !64 !98 !113)
!115 = (!11 !24 !64 !98 !113)
!116 = span !26 2896 2943
!117 = (!11 !24 !64 !98 !116)
!118 = (!11 !24 !64 !98 !116)
!119 = (!11 !24 !64 !98)
!120 = (!11 !24 !64 !98 !99)
!121 = span !26 5321 5442
!122 = (!11 !24 !64 !121)
!123 = span !26 5360 5374
!124 = span !26 5392 5403
!125 = (!11 !24 !64)
!126 = (!11 !24 !64 !65)
!127 = (!11 !24 !64)
!128 = span !12 6301 6302
!129 = span !12 6277 6302
!130 = (!11 !24 !129)
!131 = (!11 !24 !129)
!132 = span !0 400 402
!133 = span !12 6399 6414
!134 = span !12 6451 6457
!135 = span !12 6500 6501
!136 = span !12 6491 6501
!137 = (!11 !24 !136)
!138 = (!11 !24)
!139 = "/home/kebradalaonda/p/sway/sway-lib-std/src/error_signals.sw"
!140 = span !139 566 587
!141 = span !12 6514 6555
!142 = (!11 !24 !141 !85)
!143 = (!11 !15)
!144 = (!11 !15)
!145 = span !12 3928 4005
!146 = (!11 !145)
!147 = (!11 !145)
!148 = (!11 !15)
!149 = span !12 3949 3951
!150 = (!11 !149)
!151 = span !12 5050 5061
!152 = (!11 !13)
!153 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset_id.sw"
!154 = span !153 1292 1349
!155 = span !153 1330 1343
!156 = "/home/kebradalaonda/p/sway/sway-lib-std/src/tx.sw"
!157 = span !156 2271 2445
!158 = span !156 2327 2328
!159 = span !156 2315 2339
!160 = span !156 2350 2353
!161 = span !156 2350 2377
!162 = span !156 1445 1616
!163 = span !156 2386 2389
!164 = span !156 2386 2413
!165 = span !156 2434 2435
!166 = span !156 2427 2436
!167 = (!166 !85)
!168 = span !26 1936 1941
!169 = span !26 1917 2165
!170 = span !26 1970 2005
!171 = span !26 2016 2019
!172 = span !26 2016 2036
!173 = span !26 956 1170
!174 = span !26 2045 2048
!175 = span !26 2045 2069
!176 = span !26 2078 2081
!177 = span !26 2078 2100
!178 = span !26 2109 2112
!179 = span !26 2109 2133
!180 = span !26 2154 2155
!181 = span !26 2147 2156
!182 = (!181 !85)
!183 = "/home/kebradalaonda/p/sway/sway-lib-std/src/contract_id.sw"
!184 = span !183 695 746
!185 = span !183 305 315

// IR: [dce] Dead code elimination
contract {
    pub entry fn deposit<2df2cef7>() -> (), !1 {
        local { b256, u64, u64 } __anon_0
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local b256 __asm_arg
        local { b256 } __asm_arg0
        local { b256 } __asm_arg1
        local b256 __asm_arg2
        local b256 __const = const b256 0x3dba0a4455b598b7655a7fb430883d96c9527ef275b49739e7b0ad12f8280eae
        local b256 __const0 = const b256 0x0000000000000000000000000000000000000000000000000000000000000000
        local b256 __const1 = const b256 0x0000000000000000000000000000000000000000000000000000000000000001
        local { u64, ( { b256 } | { b256 } ) } __matched_value_1
        local { b256 } __ret_val
        local { b256 } __ret_val0
        local { u64 } __ret_val1
        local { u64 } __ret_val2
        local { u64 } __ret_val3
        local { u64 } __ret_val4
        local b256 __ret_val5
        local b256 __ret_val6
        local b256 __tmp_arg
        local b256 __tmp_arg0
        local { b256 } __tmp_arg1
        local { b256 } __tmp_arg2
        local { b256 } addr
        local { b256 } asset
        local { b256 } id
        local { b256 } pool

        entry():
        v0 = get_local ptr b256, __const
        v1 = get_local ptr { b256, u64, u64 }, __anon_0, !2
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2
        mem_copy_val v3, v0
        v4 = const u64 1
        v5 = get_elem_ptr v1, ptr u64, v4
        v6 = const u64 770887415, !2
        store v6 to v5, !2
        v7 = const u64 2
        v8 = get_elem_ptr v1, ptr u64, v7
        v9 = const u64 0
        store v9 to v8, !2
        v10 = get_local ptr b256, __const0
        v11 = read_register cgas, !2
        v12 = const u64 0, !2
        v13 = contract_call () deposit v1, v12, v10, v11, !2
        v14 = get_local ptr b256, __const1, !3
        v15 = get_local ptr b256, __tmp_arg
        mem_copy_val v15, v14
        v16 = get_local ptr { b256 }, __ret_val
        v17 = call from_0(v15, v16)
        v18 = get_local ptr { b256 }, asset, !4
        mem_copy_val v18, v17
        v19 = get_local ptr b256, __const1, !5
        v20 = get_local ptr b256, __tmp_arg0
        mem_copy_val v20, v19
        v21 = get_local ptr { b256 }, __ret_val0
        v22 = call from_0(v20, v21)
        v23 = get_local ptr { b256 }, pool, !6
        mem_copy_val v23, v22
        v24 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !8
        v25 = const u64 0
        v26 = get_elem_ptr v24, ptr u64, v25, !8
        v27 = const u64 1, !8
        store v27 to v26, !8
        v28 = get_local ptr { b256 }, pool, !9
        v29 = const u64 1
        v30 = const u64 1
        v31 = get_elem_ptr v24, ptr { b256 }, v29, v30, !8
        mem_copy_val v31, v28
        v32 = get_local ptr { b256 }, asset, !10
        v33 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !14
        mem_copy_val v33, v24
        v34 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2
        v35 = const u64 0
        v36 = get_elem_ptr v34, ptr u64, v35
        v37 = load v36, !11
        v38 = const u64 0, !15
        v39 = cmp eq v37 v38, !17
        cbr v39, transfer_2_block0(), transfer_2_block1(), !18

        transfer_2_block0():
        v40 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !19
        v41 = const u64 1
        v42 = const u64 0
        v43 = get_elem_ptr v40, ptr { b256 }, v41, v42, !11
        v44 = get_local ptr { b256 }, addr, !21
        mem_copy_val v44, v43
        v45 = get_local ptr { b256 }, addr, !23
        v46 = get_local ptr { u64 }, __ret_val1
        v47 = call tx_type_6(v46)
        v48 = const u64 0
        v49 = get_elem_ptr v47, ptr u64, v48
        v50 = load v49
        v51 = const u64 0, !25
        v52 = cmp eq v50 v51, !29
        cbr v52, transfer_2_transfer_to_address_4_output_count_5_block0(), transfer_2_transfer_to_address_4_output_count_5_block1(), !30

        transfer_2_transfer_to_address_4_output_count_5_block0():
        v53 = const u64 0, !31
        v54 = gtf v53, 6, !33
        v55 = bitcast v54 to u64, !34
        br transfer_2_transfer_to_address_4_output_count_5_block5(v55), !35

        transfer_2_transfer_to_address_4_output_count_5_block1():
        v56 = const u64 1, !25
        v57 = cmp eq v50 v56, !37
        cbr v57, transfer_2_transfer_to_address_4_output_count_5_block2(), transfer_2_transfer_to_address_4_output_count_5_block3(), !38

        transfer_2_transfer_to_address_4_output_count_5_block2():
        v58 = const u64 0, !39
        v59 = gtf v58, 260, !41
        v60 = bitcast v59 to u64, !42
        br transfer_2_transfer_to_address_4_output_count_5_block5(v60), !43

        transfer_2_transfer_to_address_4_output_count_5_block3():
        v61 = const u64 14757395258967588866, !44
        revert v61, !45

        transfer_2_transfer_to_address_4_output_count_5_block5(v62: u64):
        v63 = const u64 0, !46
        br transfer_2_transfer_to_address_4_while(v63), !47

        transfer_2_transfer_to_address_4_while(v64: u64):
        v65 = cmp lt v64 v62, !49
        cbr v65, transfer_2_transfer_to_address_4_while_body(), transfer_2_transfer_to_address_4_end_while(), !50

        transfer_2_transfer_to_address_4_while_body():
        v66 = get_local ptr { u64 }, __ret_val3
        v67 = call output_type_10(v64, v66)
        v68 = const u64 0
        v69 = get_elem_ptr v67, ptr u64, v68
        v70 = load v69
        v71 = const u64 3, !51
        v72 = cmp eq v70 v71, !53
        v73 = const unit ()
        cbr v72, transfer_2_transfer_to_address_4_block0(), transfer_2_transfer_to_address_4_block5(v73), !54

        transfer_2_transfer_to_address_4_block0():
        v74 = get_local ptr { u64 }, __ret_val4
        v75 = call output_type_10(v64, v74)
        v76 = const u64 0
        v77 = get_elem_ptr v75, ptr u64, v76
        v78 = load v77
        v79 = const u64 0, !55
        v80 = cmp eq v78 v79, !58
        cbr v80, transfer_2_transfer_to_address_4_output_amount_11_block0(), transfer_2_transfer_to_address_4_output_amount_11_block1(), !59

        transfer_2_transfer_to_address_4_output_amount_11_block0():
        v81 = gtf v64, 770, !61
        v82 = bitcast v81 to u64, !62
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v82), !63

        transfer_2_transfer_to_address_4_output_amount_11_block1():
        v83 = const u64 1, !55
        v84 = cmp eq v78 v83, !65
        cbr v84, transfer_2_transfer_to_address_4_output_amount_11_block2(), transfer_2_transfer_to_address_4_output_amount_11_block3(), !66

        transfer_2_transfer_to_address_4_output_amount_11_block2():
        v85 = const u64 0, !67
        revert v85, !71

        transfer_2_transfer_to_address_4_output_amount_11_block3():
        v86 = const u64 2, !55
        v87 = cmp eq v78 v86, !73
        v88 = const u64 0, !74
        cbr v87, transfer_2_transfer_to_address_4_output_amount_11_block9(v88), transfer_2_transfer_to_address_4_output_amount_11_block5(), !75

        transfer_2_transfer_to_address_4_output_amount_11_block5():
        v89 = const u64 3, !55
        v90 = cmp eq v78 v89, !77
        cbr v90, transfer_2_transfer_to_address_4_output_amount_11_block6(), transfer_2_transfer_to_address_4_output_amount_11_block7(), !78

        transfer_2_transfer_to_address_4_output_amount_11_block6():
        v91 = get_local ptr { u64 }, __ret_val2
        v92 = call tx_type_6(v91)
        v93 = const u64 0
        v94 = get_elem_ptr v92, ptr u64, v93
        v95 = load v94
        v96 = const u64 0, !79
        v97 = cmp eq v95 v96, !82
        cbr v97, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1(), !83

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0():
        v98 = gtf v64, 12, !85
        v99 = bitcast v98 to u64, !86
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v99), !87

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1():
        v100 = const u64 1, !79
        v101 = cmp eq v95 v100, !89
        cbr v101, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3(), !90

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2():
        v102 = gtf v64, 265, !92
        v103 = bitcast v102 to u64, !93
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v103), !94

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3():
        v104 = const u64 14757395258967588866, !95
        revert v104, !96

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v105: u64):
        v106 = asm(r1, r2, r3: v105) -> u64 r1, !98 {
            addi   r2 r3 i40, !99
            lw     r1 r2 i0, !100
        }
        br transfer_2_transfer_to_address_4_output_amount_11_block9(v106), !101

        transfer_2_transfer_to_address_4_output_amount_11_block7():
        v107 = const u64 14757395258967588866, !102
        revert v107, !103

        transfer_2_transfer_to_address_4_output_amount_11_block9(v108: u64):
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v108), !104

        transfer_2_transfer_to_address_4_output_amount_11_block11(v109: u64):
        v110 = const u64 0, !105
        v111 = cmp eq v109 v110, !107
        v112 = const unit ()
        cbr v111, transfer_2_transfer_to_address_4_block1(), transfer_2_transfer_to_address_4_block5(v112), !108

        transfer_2_transfer_to_address_4_block1():
        v113 = get_local ptr { b256 }, __tmp_arg1
        mem_copy_val v113, v45
        v114 = get_local ptr b256, __ret_val5
        v115 = call bits_16(v113, v114)
        v116 = get_local ptr b256, __asm_arg
        mem_copy_val v116, v115
        v117 = get_local ptr { b256 }, __asm_arg0
        mem_copy_val v117, v32
        v118 = const u64 10, !109
        v119 = asm(r1: v116, r2: v64, r3: v118, r4: v117) {
            tro    r1 r2 r3 r4, !110
        }
        v120 = const unit (), !111
        br transfer_2_block5(v120), !11

        transfer_2_transfer_to_address_4_block5(v121: ()):
        v122 = const u64 1, !112
        v123 = add v64, v122, !114
        br transfer_2_transfer_to_address_4_while(v123), !115

        transfer_2_transfer_to_address_4_end_while():
        v124 = const u64 18446744073709486081, !117
        revert v124, !119

        transfer_2_block1():
        v125 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !120
        v126 = const u64 0
        v127 = get_elem_ptr v125, ptr u64, v126, !121
        v128 = load v127, !11
        v129 = const u64 1, !15
        v130 = cmp eq v128 v129, !123
        cbr v130, transfer_2_block2(), transfer_2_block3(), !124

        transfer_2_block2():
        v131 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !125
        v132 = const u64 1
        v133 = const u64 1
        v134 = get_elem_ptr v131, ptr { b256 }, v132, v133, !11
        v135 = get_local ptr { b256 }, id, !127
        mem_copy_val v135, v134
        v136 = get_local ptr { b256 }, __tmp_arg2
        mem_copy_val v136, v134
        v137 = get_local ptr b256, __ret_val6
        v138 = call bits_16(v136, v137)
        v139 = get_local ptr { b256 }, __asm_arg1
        mem_copy_val v139, v32
        v140 = get_local ptr b256, __asm_arg2
        mem_copy_val v140, v138
        v141 = asm(r1: v118, r2: v139, r3: v140) {
            tr     r3 r1 r2, !128
        }
        v142 = const unit ()
        br transfer_2_block5(v142), !11

        transfer_2_block3():
        v143 = const u64 14757395258967588866, !13
        revert v143, !129

        transfer_2_block5(v144: ()):
        v145 = const unit ()
        ret () v145
    }

    pub fn from_0(bits: ptr b256, __ret_value: ptr { b256 }) -> ptr { b256 }, !131 {
        local { b256 } __anon_0

        entry(bits: ptr b256, __ret_value: ptr { b256 }):
        v0 = get_local ptr { b256 }, __anon_0, !132
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        mem_copy_val v2, bits
        mem_copy_val __ret_value, v0
        ret ptr { b256 } __ret_value
    }

    pub fn tx_type_6(__ret_value: ptr { u64 }) -> ptr { u64 }, !134 {
        local { u64 } __tmp_block_arg

        entry(__ret_value: ptr { u64 }):
        v0 = const u64 0, !135
        v1 = gtf v0, 1, !136
        v2 = bitcast v1 to u8, !136
        v3 = const u8 0, !137
        v4 = cmp eq v2 v3, !138
        cbr v4, block0(), block1(), !138

        block0():
        v5 = get_local ptr { u64 }, __tmp_block_arg
        v6 = const u64 0, !139
        br block5(v5, v6)

        block1():
        v7 = const u8 1, !140
        v8 = cmp eq v2 v7, !141
        cbr v8, block2(), block3(), !141

        block2():
        v9 = get_local ptr { u64 }, __tmp_block_arg
        v10 = const u64 1, !139
        br block5(v9, v10)

        block3():
        v11 = const u64 0, !142
        revert v11, !144

        block5(v12: ptr { u64 }, v13: u64):
        v14 = const u64 0
        v15 = get_elem_ptr __ret_value, ptr u64, v14
        store v13 to v15
        ret ptr { u64 } __ret_value
    }

    pub fn output_type_10(index !145: u64, __ret_value: ptr { u64 }) -> ptr { u64 }, !146 {
        local { u64 } __tmp_block_arg
        local { u64 } __tmp_block_arg0
        local { u64 } __tmp_block_arg1

        entry(index: u64, __ret_value: ptr { u64 }):
        v0 = gtf index, 768, !147
        v1 = bitcast v0 to u8, !147
        v2 = const u8 0, !148
        v3 = cmp eq v1 v2, !149
        cbr v3, block0(), block1(), !149

        block0():
        v4 = get_local ptr { u64 }, __tmp_block_arg1
        v5 = const u64 0, !150
        br block11(v4, v5)

        block1():
        v6 = const u8 1, !151
        v7 = cmp eq v1 v6, !152
        cbr v7, block2(), block3(), !152

        block2():
        v8 = get_local ptr { u64 }, __tmp_block_arg0
        v9 = const u64 1, !150
        br block10(v8, v9)

        block3():
        v10 = const u8 2, !153
        v11 = cmp eq v1 v10, !154
        cbr v11, block4(), block5(), !154

        block4():
        v12 = get_local ptr { u64 }, __tmp_block_arg
        v13 = const u64 2, !150
        br block9(v12, v13)

        block5():
        v14 = const u8 3, !155
        v15 = cmp eq v1 v14, !156
        cbr v15, block6(), block7(), !156

        block6():
        v16 = get_local ptr { u64 }, __tmp_block_arg
        v17 = const u64 3, !150
        br block9(v16, v17)

        block7():
        v18 = const u64 0, !157
        revert v18, !159

        block9(v19: ptr { u64 }, v20: u64):
        v21 = get_local ptr { u64 }, __tmp_block_arg0
        br block10(v21, v20)

        block10(v22: ptr { u64 }, v23: u64):
        v24 = get_local ptr { u64 }, __tmp_block_arg1
        br block11(v24, v23)

        block11(v25: ptr { u64 }, v26: u64):
        v27 = const u64 0
        v28 = get_elem_ptr __ret_value, ptr u64, v27
        store v26 to v28
        ret ptr { u64 } __ret_value
    }

    pub fn bits_16(self: ptr { b256 }, __ret_value: ptr b256) -> ptr b256, !161 {
        entry(self: ptr { b256 }, __ret_value: ptr b256):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !162
        mem_copy_val __ret_value, v3
        ret ptr b256 __ret_value
    }
}

!0 = "/home/kebradalaonda/p/sway/test/src/e2e_vm_tests/test_programs/should_pass/static_analysis/cei_pattern_violation_in_asm_block_tr/src/main.sw"
!1 = span !0 105 713
!2 = span !0 263 287
!3 = span !0 528 535
!4 = span !0 502 537
!5 = span !0 574 581
!6 = span !0 546 583
!7 = "/home/kebradalaonda/p/sway/sway-lib-std/src/identity.sw"
!8 = span !7 477 548
!9 = span !0 685 689
!10 = span !0 692 697
!11 = span !0 655 706
!12 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset.sw"
!13 = span !12 3829 4011
!14 = (!11 !13)
!15 = span !12 3835 3837
!16 = span !12 3848 3919
!17 = (!11 !16)
!18 = (!11 !16)
!19 = (!11 !15)
!20 = span !12 3866 3870
!21 = (!11 !20)
!22 = span !12 3895 3899
!23 = (!11 !22)
!24 = "/home/kebradalaonda/p/sway/sway-lib-std/src/outputs.sw"
!25 = span !24 3435 3444
!26 = span !12 3875 3918
!27 = span !12 6153 6167
!28 = span !24 3455 3520
!29 = (!11 !26 !27 !28)
!30 = (!11 !26 !27 !28)
!31 = span !24 3491 3492
!32 = span !24 3478 3519
!33 = (!11 !26 !27 !32)
!34 = (!11 !26 !27 !32)
!35 = (!11 !26 !27)
!36 = span !24 3529 3594
!37 = (!11 !26 !27 !36)
!38 = (!11 !26 !27 !36)
!39 = span !24 3565 3566
!40 = span !24 3552 3593
!41 = (!11 !26 !27 !40)
!42 = (!11 !26 !27 !40)
!43 = (!11 !26 !27)
!44 = span !24 3429 3600
!45 = (!11 !26 !27 !44)
!46 = span !12 5893 5894
!47 = (!11 !26)
!48 = span !12 6179 6204
!49 = (!11 !26 !48)
!50 = (!11 !26)
!51 = span !12 6241 6259
!52 = span !12 6222 6482
!53 = (!11 !26 !52)
!54 = (!11 !26 !52)
!55 = span !24 4543 4561
!56 = span !12 6277 6297
!57 = span !24 4572 4632
!58 = (!11 !26 !56 !57)
!59 = (!11 !26 !56 !57)
!60 = span !24 4588 4631
!61 = (!11 !26 !56 !60)
!62 = (!11 !26 !56 !60)
!63 = (!11 !26 !56)
!64 = span !24 4641 4671
!65 = (!11 !26 !56 !64)
!66 = (!11 !26 !56 !64)
!67 = span !24 4668 4669
!68 = span !24 4661 4670
!69 = "/home/kebradalaonda/p/sway/sway-lib-std/src/revert.sw"
!70 = span !69 691 705
!71 = (!11 !26 !56 !68 !70)
!72 = span !24 5018 5038
!73 = (!11 !26 !56 !72)
!74 = span !24 5036 5037
!75 = (!11 !26 !56 !72)
!76 = span !24 5242 5453
!77 = (!11 !26 !56 !76)
!78 = (!11 !26 !56 !76)
!79 = span !24 2773 2782
!80 = span !24 5286 5307
!81 = span !24 2793 2864
!82 = (!11 !26 !56 !80 !81)
!83 = (!11 !26 !56 !80 !81)
!84 = span !24 2816 2863
!85 = (!11 !26 !56 !80 !84)
!86 = (!11 !26 !56 !80 !84)
!87 = (!11 !26 !56 !80)
!88 = span !24 2873 2944
!89 = (!11 !26 !56 !80 !88)
!90 = (!11 !26 !56 !80 !88)
!91 = span !24 2896 2943
!92 = (!11 !26 !56 !80 !91)
!93 = (!11 !26 !56 !80 !91)
!94 = (!11 !26 !56 !80)
!95 = span !24 2767 2950
!96 = (!11 !26 !56 !80 !95)
!97 = span !24 5321 5442
!98 = (!11 !26 !56 !97)
!99 = span !24 5360 5374
!100 = span !24 5392 5403
!101 = (!11 !26 !56)
!102 = span !24 4537 5459
!103 = (!11 !26 !56 !102)
!104 = (!11 !26 !56)
!105 = span !12 6301 6302
!106 = span !12 6277 6302
!107 = (!11 !26 !106)
!108 = (!11 !26 !106)
!109 = span !0 400 402
!110 = span !12 6399 6414
!111 = span !12 6451 6457
!112 = span !12 6500 6501
!113 = span !12 6491 6501
!114 = (!11 !26 !113)
!115 = (!11 !26)
!116 = "/home/kebradalaonda/p/sway/sway-lib-std/src/error_signals.sw"
!117 = span !116 566 587
!118 = span !12 6514 6555
!119 = (!11 !26 !118 !70)
!120 = (!11 !15)
!121 = (!11 !15)
!122 = span !12 3928 4005
!123 = (!11 !122)
!124 = (!11 !122)
!125 = (!11 !15)
!126 = span !12 3949 3951
!127 = (!11 !126)
!128 = span !12 5050 5061
!129 = (!11 !13)
!130 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset_id.sw"
!131 = span !130 1292 1349
!132 = span !130 1330 1343
!133 = "/home/kebradalaonda/p/sway/sway-lib-std/src/tx.sw"
!134 = span !133 2271 2445
!135 = span !133 2327 2328
!136 = span !133 2315 2339
!137 = span !133 2350 2353
!138 = span !133 2350 2377
!139 = span !133 1445 1616
!140 = span !133 2386 2389
!141 = span !133 2386 2413
!142 = span !133 2434 2435
!143 = span !133 2427 2436
!144 = (!143 !70)
!145 = span !24 1936 1941
!146 = span !24 1917 2165
!147 = span !24 1970 2005
!148 = span !24 2016 2019
!149 = span !24 2016 2036
!150 = span !24 956 1170
!151 = span !24 2045 2048
!152 = span !24 2045 2069
!153 = span !24 2078 2081
!154 = span !24 2078 2100
!155 = span !24 2109 2112
!156 = span !24 2109 2133
!157 = span !24 2154 2155
!158 = span !24 2147 2156
!159 = (!158 !70)
!160 = "/home/kebradalaonda/p/sway/sway-lib-std/src/contract_id.sw"
!161 = span !160 695 746
!162 = span !160 305 315

// IR: Final
contract {
    pub entry fn deposit<2df2cef7>() -> (), !1 {
        local { b256, u64, u64 } __anon_0
        local { u64, ( { b256 } | { b256 } ) } __anon_2
        local b256 __asm_arg
        local { b256 } __asm_arg0
        local { b256 } __asm_arg1
        local b256 __asm_arg2
        local b256 __const = const b256 0x3dba0a4455b598b7655a7fb430883d96c9527ef275b49739e7b0ad12f8280eae
        local b256 __const0 = const b256 0x0000000000000000000000000000000000000000000000000000000000000000
        local b256 __const1 = const b256 0x0000000000000000000000000000000000000000000000000000000000000001
        local { u64, ( { b256 } | { b256 } ) } __matched_value_1
        local { b256 } __ret_val
        local { b256 } __ret_val0
        local { u64 } __ret_val1
        local { u64 } __ret_val2
        local { u64 } __ret_val3
        local { u64 } __ret_val4
        local b256 __ret_val5
        local b256 __ret_val6
        local b256 __tmp_arg
        local b256 __tmp_arg0
        local { b256 } __tmp_arg1
        local { b256 } __tmp_arg2
        local { b256 } addr
        local { b256 } asset
        local { b256 } id
        local { b256 } pool

        entry():
        v0 = get_local ptr b256, __const
        v1 = get_local ptr { b256, u64, u64 }, __anon_0, !2
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2
        mem_copy_val v3, v0
        v4 = const u64 1
        v5 = get_elem_ptr v1, ptr u64, v4
        v6 = const u64 770887415, !2
        store v6 to v5, !2
        v7 = const u64 2
        v8 = get_elem_ptr v1, ptr u64, v7
        v9 = const u64 0
        store v9 to v8, !2
        v10 = get_local ptr b256, __const0
        v11 = read_register cgas, !2
        v12 = const u64 0, !2
        v13 = contract_call () deposit v1, v12, v10, v11, !2
        v14 = get_local ptr b256, __const1, !3
        v15 = get_local ptr b256, __tmp_arg
        mem_copy_val v15, v14
        v16 = get_local ptr { b256 }, __ret_val
        v17 = call from_0(v15, v16)
        v18 = get_local ptr { b256 }, asset, !4
        mem_copy_val v18, v17
        v19 = get_local ptr b256, __const1, !5
        v20 = get_local ptr b256, __tmp_arg0
        mem_copy_val v20, v19
        v21 = get_local ptr { b256 }, __ret_val0
        v22 = call from_0(v20, v21)
        v23 = get_local ptr { b256 }, pool, !6
        mem_copy_val v23, v22
        v24 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2, !8
        v25 = const u64 0
        v26 = get_elem_ptr v24, ptr u64, v25, !8
        v27 = const u64 1, !8
        store v27 to v26, !8
        v28 = get_local ptr { b256 }, pool, !9
        v29 = const u64 1
        v30 = const u64 1
        v31 = get_elem_ptr v24, ptr { b256 }, v29, v30, !8
        mem_copy_val v31, v28
        v32 = get_local ptr { b256 }, asset, !10
        v33 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !14
        mem_copy_val v33, v24
        v34 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __anon_2
        v35 = const u64 0
        v36 = get_elem_ptr v34, ptr u64, v35
        v37 = load v36, !11
        v38 = const u64 0, !15
        v39 = cmp eq v37 v38, !17
        cbr v39, transfer_2_block0(), transfer_2_block1(), !18

        transfer_2_block0():
        v40 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !19
        v41 = const u64 1
        v42 = const u64 0
        v43 = get_elem_ptr v40, ptr { b256 }, v41, v42, !11
        v44 = get_local ptr { b256 }, addr, !21
        mem_copy_val v44, v43
        v45 = get_local ptr { b256 }, addr, !23
        v46 = get_local ptr { u64 }, __ret_val1
        v47 = call tx_type_6(v46)
        v48 = const u64 0
        v49 = get_elem_ptr v47, ptr u64, v48
        v50 = load v49
        v51 = const u64 0, !25
        v52 = cmp eq v50 v51, !29
        cbr v52, transfer_2_transfer_to_address_4_output_count_5_block0(), transfer_2_transfer_to_address_4_output_count_5_block1(), !30

        transfer_2_transfer_to_address_4_output_count_5_block0():
        v53 = const u64 0, !31
        v54 = gtf v53, 6, !33
        v55 = bitcast v54 to u64, !34
        br transfer_2_transfer_to_address_4_output_count_5_block5(v55), !35

        transfer_2_transfer_to_address_4_output_count_5_block1():
        v56 = const u64 1, !25
        v57 = cmp eq v50 v56, !37
        cbr v57, transfer_2_transfer_to_address_4_output_count_5_block2(), transfer_2_transfer_to_address_4_output_count_5_block3(), !38

        transfer_2_transfer_to_address_4_output_count_5_block2():
        v58 = const u64 0, !39
        v59 = gtf v58, 260, !41
        v60 = bitcast v59 to u64, !42
        br transfer_2_transfer_to_address_4_output_count_5_block5(v60), !43

        transfer_2_transfer_to_address_4_output_count_5_block3():
        v61 = const u64 14757395258967588866, !44
        revert v61, !45

        transfer_2_transfer_to_address_4_output_count_5_block5(v62: u64):
        v63 = const u64 0, !46
        br transfer_2_transfer_to_address_4_while(v63), !47

        transfer_2_transfer_to_address_4_while(v64: u64):
        v65 = cmp lt v64 v62, !49
        cbr v65, transfer_2_transfer_to_address_4_while_body(), transfer_2_transfer_to_address_4_end_while(), !50

        transfer_2_transfer_to_address_4_while_body():
        v66 = get_local ptr { u64 }, __ret_val3
        v67 = call output_type_10(v64, v66)
        v68 = const u64 0
        v69 = get_elem_ptr v67, ptr u64, v68
        v70 = load v69
        v71 = const u64 3, !51
        v72 = cmp eq v70 v71, !53
        v73 = const unit ()
        cbr v72, transfer_2_transfer_to_address_4_block0(), transfer_2_transfer_to_address_4_block5(v73), !54

        transfer_2_transfer_to_address_4_block0():
        v74 = get_local ptr { u64 }, __ret_val4
        v75 = call output_type_10(v64, v74)
        v76 = const u64 0
        v77 = get_elem_ptr v75, ptr u64, v76
        v78 = load v77
        v79 = const u64 0, !55
        v80 = cmp eq v78 v79, !58
        cbr v80, transfer_2_transfer_to_address_4_output_amount_11_block0(), transfer_2_transfer_to_address_4_output_amount_11_block1(), !59

        transfer_2_transfer_to_address_4_output_amount_11_block0():
        v81 = gtf v64, 770, !61
        v82 = bitcast v81 to u64, !62
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v82), !63

        transfer_2_transfer_to_address_4_output_amount_11_block1():
        v83 = const u64 1, !55
        v84 = cmp eq v78 v83, !65
        cbr v84, transfer_2_transfer_to_address_4_output_amount_11_block2(), transfer_2_transfer_to_address_4_output_amount_11_block3(), !66

        transfer_2_transfer_to_address_4_output_amount_11_block2():
        v85 = const u64 0, !67
        revert v85, !71

        transfer_2_transfer_to_address_4_output_amount_11_block3():
        v86 = const u64 2, !55
        v87 = cmp eq v78 v86, !73
        v88 = const u64 0, !74
        cbr v87, transfer_2_transfer_to_address_4_output_amount_11_block9(v88), transfer_2_transfer_to_address_4_output_amount_11_block5(), !75

        transfer_2_transfer_to_address_4_output_amount_11_block5():
        v89 = const u64 3, !55
        v90 = cmp eq v78 v89, !77
        cbr v90, transfer_2_transfer_to_address_4_output_amount_11_block6(), transfer_2_transfer_to_address_4_output_amount_11_block7(), !78

        transfer_2_transfer_to_address_4_output_amount_11_block6():
        v91 = get_local ptr { u64 }, __ret_val2
        v92 = call tx_type_6(v91)
        v93 = const u64 0
        v94 = get_elem_ptr v92, ptr u64, v93
        v95 = load v94
        v96 = const u64 0, !79
        v97 = cmp eq v95 v96, !82
        cbr v97, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1(), !83

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block0():
        v98 = gtf v64, 12, !85
        v99 = bitcast v98 to u64, !86
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v99), !87

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block1():
        v100 = const u64 1, !79
        v101 = cmp eq v95 v100, !89
        cbr v101, transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2(), transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3(), !90

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block2():
        v102 = gtf v64, 265, !92
        v103 = bitcast v102 to u64, !93
        br transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v103), !94

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block3():
        v104 = const u64 14757395258967588866, !95
        revert v104, !96

        transfer_2_transfer_to_address_4_output_amount_11_output_pointer_12_block5(v105: u64):
        v106 = asm(r1, r2, r3: v105) -> u64 r1, !98 {
            addi   r2 r3 i40, !99
            lw     r1 r2 i0, !100
        }
        br transfer_2_transfer_to_address_4_output_amount_11_block9(v106), !101

        transfer_2_transfer_to_address_4_output_amount_11_block7():
        v107 = const u64 14757395258967588866, !102
        revert v107, !103

        transfer_2_transfer_to_address_4_output_amount_11_block9(v108: u64):
        br transfer_2_transfer_to_address_4_output_amount_11_block11(v108), !104

        transfer_2_transfer_to_address_4_output_amount_11_block11(v109: u64):
        v110 = const u64 0, !105
        v111 = cmp eq v109 v110, !107
        v112 = const unit ()
        cbr v111, transfer_2_transfer_to_address_4_block1(), transfer_2_transfer_to_address_4_block5(v112), !108

        transfer_2_transfer_to_address_4_block1():
        v113 = get_local ptr { b256 }, __tmp_arg1
        mem_copy_val v113, v45
        v114 = get_local ptr b256, __ret_val5
        v115 = call bits_16(v113, v114)
        v116 = get_local ptr b256, __asm_arg
        mem_copy_val v116, v115
        v117 = get_local ptr { b256 }, __asm_arg0
        mem_copy_val v117, v32
        v118 = const u64 10, !109
        v119 = asm(r1: v116, r2: v64, r3: v118, r4: v117) {
            tro    r1 r2 r3 r4, !110
        }
        v120 = const unit (), !111
        br transfer_2_block5(v120), !11

        transfer_2_transfer_to_address_4_block5(v121: ()):
        v122 = const u64 1, !112
        v123 = add v64, v122, !114
        br transfer_2_transfer_to_address_4_while(v123), !115

        transfer_2_transfer_to_address_4_end_while():
        v124 = const u64 18446744073709486081, !117
        revert v124, !119

        transfer_2_block1():
        v125 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !120
        v126 = const u64 0
        v127 = get_elem_ptr v125, ptr u64, v126, !121
        v128 = load v127, !11
        v129 = const u64 1, !15
        v130 = cmp eq v128 v129, !123
        cbr v130, transfer_2_block2(), transfer_2_block3(), !124

        transfer_2_block2():
        v131 = get_local ptr { u64, ( { b256 } | { b256 } ) }, __matched_value_1, !125
        v132 = const u64 1
        v133 = const u64 1
        v134 = get_elem_ptr v131, ptr { b256 }, v132, v133, !11
        v135 = get_local ptr { b256 }, id, !127
        mem_copy_val v135, v134
        v136 = get_local ptr { b256 }, __tmp_arg2
        mem_copy_val v136, v134
        v137 = get_local ptr b256, __ret_val6
        v138 = call bits_16(v136, v137)
        v139 = get_local ptr { b256 }, __asm_arg1
        mem_copy_val v139, v32
        v140 = get_local ptr b256, __asm_arg2
        mem_copy_val v140, v138
        v141 = asm(r1: v118, r2: v139, r3: v140) {
            tr     r3 r1 r2, !128
        }
        v142 = const unit ()
        br transfer_2_block5(v142), !11

        transfer_2_block3():
        v143 = const u64 14757395258967588866, !13
        revert v143, !129

        transfer_2_block5(v144: ()):
        v145 = const unit ()
        ret () v145
    }

    pub fn from_0(bits: ptr b256, __ret_value: ptr { b256 }) -> ptr { b256 }, !131 {
        local { b256 } __anon_0

        entry(bits: ptr b256, __ret_value: ptr { b256 }):
        v0 = get_local ptr { b256 }, __anon_0, !132
        v1 = const u64 0
        v2 = get_elem_ptr v0, ptr b256, v1
        mem_copy_val v2, bits
        mem_copy_val __ret_value, v0
        ret ptr { b256 } __ret_value
    }

    pub fn tx_type_6(__ret_value: ptr { u64 }) -> ptr { u64 }, !134 {
        local { u64 } __tmp_block_arg

        entry(__ret_value: ptr { u64 }):
        v0 = const u64 0, !135
        v1 = gtf v0, 1, !136
        v2 = bitcast v1 to u8, !136
        v3 = const u8 0, !137
        v4 = cmp eq v2 v3, !138
        cbr v4, block0(), block1(), !138

        block0():
        v5 = get_local ptr { u64 }, __tmp_block_arg
        v6 = const u64 0, !139
        br block5(v5, v6)

        block1():
        v7 = const u8 1, !140
        v8 = cmp eq v2 v7, !141
        cbr v8, block2(), block3(), !141

        block2():
        v9 = get_local ptr { u64 }, __tmp_block_arg
        v10 = const u64 1, !139
        br block5(v9, v10)

        block3():
        v11 = const u64 0, !142
        revert v11, !144

        block5(v12: ptr { u64 }, v13: u64):
        v14 = const u64 0
        v15 = get_elem_ptr __ret_value, ptr u64, v14
        store v13 to v15
        ret ptr { u64 } __ret_value
    }

    pub fn output_type_10(index !145: u64, __ret_value: ptr { u64 }) -> ptr { u64 }, !146 {
        local { u64 } __tmp_block_arg
        local { u64 } __tmp_block_arg0
        local { u64 } __tmp_block_arg1

        entry(index: u64, __ret_value: ptr { u64 }):
        v0 = gtf index, 768, !147
        v1 = bitcast v0 to u8, !147
        v2 = const u8 0, !148
        v3 = cmp eq v1 v2, !149
        cbr v3, block0(), block1(), !149

        block0():
        v4 = get_local ptr { u64 }, __tmp_block_arg1
        v5 = const u64 0, !150
        br block11(v4, v5)

        block1():
        v6 = const u8 1, !151
        v7 = cmp eq v1 v6, !152
        cbr v7, block2(), block3(), !152

        block2():
        v8 = get_local ptr { u64 }, __tmp_block_arg0
        v9 = const u64 1, !150
        br block10(v8, v9)

        block3():
        v10 = const u8 2, !153
        v11 = cmp eq v1 v10, !154
        cbr v11, block4(), block5(), !154

        block4():
        v12 = get_local ptr { u64 }, __tmp_block_arg
        v13 = const u64 2, !150
        br block9(v12, v13)

        block5():
        v14 = const u8 3, !155
        v15 = cmp eq v1 v14, !156
        cbr v15, block6(), block7(), !156

        block6():
        v16 = get_local ptr { u64 }, __tmp_block_arg
        v17 = const u64 3, !150
        br block9(v16, v17)

        block7():
        v18 = const u64 0, !157
        revert v18, !159

        block9(v19: ptr { u64 }, v20: u64):
        v21 = get_local ptr { u64 }, __tmp_block_arg0
        br block10(v21, v20)

        block10(v22: ptr { u64 }, v23: u64):
        v24 = get_local ptr { u64 }, __tmp_block_arg1
        br block11(v24, v23)

        block11(v25: ptr { u64 }, v26: u64):
        v27 = const u64 0
        v28 = get_elem_ptr __ret_value, ptr u64, v27
        store v26 to v28
        ret ptr { u64 } __ret_value
    }

    pub fn bits_16(self: ptr { b256 }, __ret_value: ptr b256) -> ptr b256, !161 {
        entry(self: ptr { b256 }, __ret_value: ptr b256):
        v0 = ptr_to_int self to u64
        v1 = int_to_ptr v0 to ptr { b256 }
        v2 = const u64 0
        v3 = get_elem_ptr v1, ptr b256, v2, !162
        mem_copy_val __ret_value, v3
        ret ptr b256 __ret_value
    }
}

!0 = "/home/kebradalaonda/p/sway/test/src/e2e_vm_tests/test_programs/should_pass/static_analysis/cei_pattern_violation_in_asm_block_tr/src/main.sw"
!1 = span !0 105 713
!2 = span !0 263 287
!3 = span !0 528 535
!4 = span !0 502 537
!5 = span !0 574 581
!6 = span !0 546 583
!7 = "/home/kebradalaonda/p/sway/sway-lib-std/src/identity.sw"
!8 = span !7 477 548
!9 = span !0 685 689
!10 = span !0 692 697
!11 = span !0 655 706
!12 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset.sw"
!13 = span !12 3829 4011
!14 = (!11 !13)
!15 = span !12 3835 3837
!16 = span !12 3848 3919
!17 = (!11 !16)
!18 = (!11 !16)
!19 = (!11 !15)
!20 = span !12 3866 3870
!21 = (!11 !20)
!22 = span !12 3895 3899
!23 = (!11 !22)
!24 = "/home/kebradalaonda/p/sway/sway-lib-std/src/outputs.sw"
!25 = span !24 3435 3444
!26 = span !12 3875 3918
!27 = span !12 6153 6167
!28 = span !24 3455 3520
!29 = (!11 !26 !27 !28)
!30 = (!11 !26 !27 !28)
!31 = span !24 3491 3492
!32 = span !24 3478 3519
!33 = (!11 !26 !27 !32)
!34 = (!11 !26 !27 !32)
!35 = (!11 !26 !27)
!36 = span !24 3529 3594
!37 = (!11 !26 !27 !36)
!38 = (!11 !26 !27 !36)
!39 = span !24 3565 3566
!40 = span !24 3552 3593
!41 = (!11 !26 !27 !40)
!42 = (!11 !26 !27 !40)
!43 = (!11 !26 !27)
!44 = span !24 3429 3600
!45 = (!11 !26 !27 !44)
!46 = span !12 5893 5894
!47 = (!11 !26)
!48 = span !12 6179 6204
!49 = (!11 !26 !48)
!50 = (!11 !26)
!51 = span !12 6241 6259
!52 = span !12 6222 6482
!53 = (!11 !26 !52)
!54 = (!11 !26 !52)
!55 = span !24 4543 4561
!56 = span !12 6277 6297
!57 = span !24 4572 4632
!58 = (!11 !26 !56 !57)
!59 = (!11 !26 !56 !57)
!60 = span !24 4588 4631
!61 = (!11 !26 !56 !60)
!62 = (!11 !26 !56 !60)
!63 = (!11 !26 !56)
!64 = span !24 4641 4671
!65 = (!11 !26 !56 !64)
!66 = (!11 !26 !56 !64)
!67 = span !24 4668 4669
!68 = span !24 4661 4670
!69 = "/home/kebradalaonda/p/sway/sway-lib-std/src/revert.sw"
!70 = span !69 691 705
!71 = (!11 !26 !56 !68 !70)
!72 = span !24 5018 5038
!73 = (!11 !26 !56 !72)
!74 = span !24 5036 5037
!75 = (!11 !26 !56 !72)
!76 = span !24 5242 5453
!77 = (!11 !26 !56 !76)
!78 = (!11 !26 !56 !76)
!79 = span !24 2773 2782
!80 = span !24 5286 5307
!81 = span !24 2793 2864
!82 = (!11 !26 !56 !80 !81)
!83 = (!11 !26 !56 !80 !81)
!84 = span !24 2816 2863
!85 = (!11 !26 !56 !80 !84)
!86 = (!11 !26 !56 !80 !84)
!87 = (!11 !26 !56 !80)
!88 = span !24 2873 2944
!89 = (!11 !26 !56 !80 !88)
!90 = (!11 !26 !56 !80 !88)
!91 = span !24 2896 2943
!92 = (!11 !26 !56 !80 !91)
!93 = (!11 !26 !56 !80 !91)
!94 = (!11 !26 !56 !80)
!95 = span !24 2767 2950
!96 = (!11 !26 !56 !80 !95)
!97 = span !24 5321 5442
!98 = (!11 !26 !56 !97)
!99 = span !24 5360 5374
!100 = span !24 5392 5403
!101 = (!11 !26 !56)
!102 = span !24 4537 5459
!103 = (!11 !26 !56 !102)
!104 = (!11 !26 !56)
!105 = span !12 6301 6302
!106 = span !12 6277 6302
!107 = (!11 !26 !106)
!108 = (!11 !26 !106)
!109 = span !0 400 402
!110 = span !12 6399 6414
!111 = span !12 6451 6457
!112 = span !12 6500 6501
!113 = span !12 6491 6501
!114 = (!11 !26 !113)
!115 = (!11 !26)
!116 = "/home/kebradalaonda/p/sway/sway-lib-std/src/error_signals.sw"
!117 = span !116 566 587
!118 = span !12 6514 6555
!119 = (!11 !26 !118 !70)
!120 = (!11 !15)
!121 = (!11 !15)
!122 = span !12 3928 4005
!123 = (!11 !122)
!124 = (!11 !122)
!125 = (!11 !15)
!126 = span !12 3949 3951
!127 = (!11 !126)
!128 = span !12 5050 5061
!129 = (!11 !13)
!130 = "/home/kebradalaonda/p/sway/sway-lib-std/src/asset_id.sw"
!131 = span !130 1292 1349
!132 = span !130 1330 1343
!133 = "/home/kebradalaonda/p/sway/sway-lib-std/src/tx.sw"
!134 = span !133 2271 2445
!135 = span !133 2327 2328
!136 = span !133 2315 2339
!137 = span !133 2350 2353
!138 = span !133 2350 2377
!139 = span !133 1445 1616
!140 = span !133 2386 2389
!141 = span !133 2386 2413
!142 = span !133 2434 2435
!143 = span !133 2427 2436
!144 = (!143 !70)
!145 = span !24 1936 1941
!146 = span !24 1917 2165
!147 = span !24 1970 2005
!148 = span !24 2016 2019
!149 = span !24 2016 2036
!150 = span !24 956 1170
!151 = span !24 2045 2048
!152 = span !24 2045 2069
!153 = span !24 2078 2081
!154 = span !24 2078 2100
!155 = span !24 2109 2112
!156 = span !24 2109 2133
!157 = span !24 2154 2155
!158 = span !24 2147 2156
!159 = (!158 !70)
!160 = "/home/kebradalaonda/p/sway/sway-lib-std/src/contract_id.sw"
!161 = span !160 695 746
!162 = span !160 305 315

  [1;32mFinished[0m release [optimized + fuel] target(s) in 10.52s
      Bytecode size: 1344 bytes
