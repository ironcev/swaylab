pub entry fn new_syntax_b_field_a_1_field_u64<09f185d7>() -> u64, !4 {
    local { b256, u64, b256 } __anon_0
    local b256 __const = const b256 0x87314c243e59486847dd9d3dacd54c0fc10493e4a6d96d7556cb479352d17afb
    local b256 __const0 = const b256 0x87314c243e59486847dd9d3dacd54c0fc10493e4a6d96d7556cb479352d17afb
    local { { u64, { u8, u64 } }, { u64, { u8, u64 } } } __ret_val
    local { b256, u64, b256 } __tmp_arg

    entry():
    v0 = get_local ptr b256, __const
    v1 = get_local ptr b256, __const0
    v2 = get_local ptr { b256, u64, b256 }, __anon_0, !5
    v3 = const u64 0
    v4 = get_elem_ptr v2, ptr b256, v3
    mem_copy_val v4, v0
    v5 = const u64 1
    v6 = get_elem_ptr v2, ptr u64, v5
    v7 = const u64 0
    store v7 to v6, !5
    v8 = const u64 2
    v9 = get_elem_ptr v2, ptr b256, v8
    mem_copy_val v9, v1
    v10 = get_local ptr { b256, u64, b256 }, __tmp_arg
    mem_copy_val v10, v2
    v11 = get_local ptr { { u64, { u8, u64 } }, { u64, { u8, u64 } } }, __ret_val
    v12 = call read_0(v10, v11)
    v13 = const u64 0
    v14 = const u64 0
    v15 = get_elem_ptr v12, ptr u64, v13, v14
    v16 = load v15
    ret u64 v16
}