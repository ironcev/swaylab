from_parts
abi_decode
decode
abi_decode
read_32_bytes
from_parts
abi_decode
read
as_u32
read
as_u32
read
as_u32
read
as_u32
lsh
lsh
binary_or
lsh
binary_or
binary_or
eq
read_8_bytes
max
from_second_parameter
decode_first_param
eq
is_paused
encode
ptr
len
eq
pause
eq
unpause
eq
decode
cancel_order
eq
decode
cancel_small_order
eq
deposit
eq
decode
deposit_for
eq
decode
fulfill_order_many
encode
ptr
len
eq
decode
initialize_ownership
eq
decode
match_order_many
eq
decode
open_market_order
encode
ptr
len
eq
decode
open_order
encode
ptr
len
eq
decode
set_epoch
eq
decode
set_matcher_fee
eq
decode
set_min_order_price
eq
decode
set_min_order_size
eq
decode
set_protocol_fee
eq
decode
transfer_ownership
eq
decode
withdraw
eq
decode
withdraw_to_market
eq
decode
account
encode
ptr
len
eq
config
encode
ptr
len
eq
get_epoch
encode
ptr
len
eq
decode
market_order
encode
ptr
len
eq
matcher_fee
encode
ptr
len
eq
min_order_price
encode
ptr
len
eq
min_order_size
encode
ptr
len
eq
decode
order
encode
ptr
len
eq
decode
order_id
encode
ptr
len
eq
protocol_fee
encode
ptr
len
eq
decode
protocol_fee_user
encode
ptr
len
eq
decode
protocol_fee_user_amount
encode
ptr
len
eq
decode
user_order_height
encode
ptr
len
eq
decode
user_orders
encode
ptr
len
add
read
from_first_parameter
abi_decode
add
read
read_8_bytes
read_bytes
ptr
into_parts
len
len
neq
as_ptr
as_ptr
len
eq
not
_is_paused
new
try_read
unwrap_or
eq
eq
slot
offset
read
eq
slot_calculator
multiply
alloc
add
read
multiply
add
add
rsh
modulo
eq
multiply
add
add
rsh
eq
as_u256
as_u256
as_u256
subtract
add
as_b256
multiply
new
abi_encode
as_raw_slice
into_parts
only_owner
require_not_paused
_pause
_owner
msg_sender
unwrap
eq
require
not
log
revert
encode
new
abi_encode
as_raw_slice
eq
abi_encode
eq
eq
eq
eq
eq
eq
eq
eq
eq
eq
eq
eq
eq
eq
eq
new
try_read
unwrap_or
eq
eq
slot
offset
read
eq
slot_calculator
multiply
alloc
add
read
multiply
add
add
rsh
modulo
eq
multiply
add
add
rsh
eq
as_u256
as_u256
as_u256
subtract
add
as_b256
eq
revert
caller_is_external
caller_address
eq
eq
caller_contract_id
input_count
as_u64
lt
input_type
eq
eq
eq
eq
add
eq
eq
input_coin_owner
eq
eq
input_message_recipient
add
is_none
add
unwrap
unwrap
eq
add
eq
eq
tx_type
eq
eq
eq
eq
eq
revert
eq
eq
eq
eq
eq
revert
input_count
as_u64
ge
eq
eq
eq
gt
eq
input_type
eq
eq
from
input_type
eq
eq
from
eq
eq
revert
from
new
try_read
unwrap_or
not
require
not
log
revert
encode
new
abi_encode
as_raw_slice
eq
abi_encode
eq
abi_encode
new
write
slot
offset
write
eq
slot_calculator
multiply
alloc
add
write
only_owner
require_paused
_unpause
new
try_read
unwrap_or
require
new
write
abi_decode
abi_decode
reentrancy_guard
cancel_order_internal
is_reentrant
not
require
not
log
revert
encode
new
abi_encode
as_raw_slice
eq
abi_encode
this
frame_ptr
is_null
not
get_previous_frame_pointer
is_null
not
get_contract_id_from_call_frame
eq
get_previous_frame_pointer
from
add
add
from
read_order
market_order
eq
height
add
ge
msg_sender
unwrap
eq
require
cancel_read_order
get
try_read
is_some
require
unwrap
slot
offset
read
eq
slot_calculator
multiply
alloc
add
read
multiply
add
add
rsh
modulo
eq
multiply
add
add
rsh
eq
as_u256
as_u256
as_u256
subtract
add
as_b256
field_id
sha256
new
new
hash
sha256
new
new
alloc_bytes
hash
hash
alloc_bytes
from_parts
from
write
append
len
eq
eq
add
capacity
lt
ptr
capacity
realloc_bytes
from_parts
from
ptr
add_uint_offset
ptr
copy_bytes_to
from_parts
gt
alloc_bytes
gt
copy_bytes_to
number_of_bytes
alloc_bytes
gt
ptr
copy_to
into_parts
ptr
from
number_of_bytes
min
ptr
len
not
log
revert
encode
new
abi_encode
as_raw_slice
eq
abi_encode
abi_encode
eq
abi_encode
abi_encode
eq
abi_encode
abi_encode
eq
abi_encode
abi_encode
eq
abi_encode
eq
abi_encode
eq
abi_encode
eq
abi_encode
eq
abi_encode
abi_encode
abi_encode
abi_encode
eq
eq
revert
get
try_read
eq
get
try_read
eq
field_id
sha256
new
gt
eq
max
panic_on_overflow_is_enabled
max
flags
not
log
revert
encode
new
abi_encode
as_raw_slice
eq
abi_encode
get
read
lock_order_amount
eq
eq
not
unlock_amount
remove_order
insert
log
slot
offset
read
unwrap
eq
revert
eq
slot_calculator
multiply
alloc
add
read
multiply
add
add
rsh
modulo
eq
multiply
add
add
rsh
eq
as_u256
as_u256
as_u256
subtract
add
as_b256
field_id
sha256
new
new
hash
sha256
hash
hash
eq
hash
hash
eq
hash
hash
with_capacity
push
write
with_capacity
alloc_bytes
capacity
eq
grow
ptr
add_uint_offset
write_byte
add
eq
multiply
realloc_bytes
hash
hash
neq
require
credit
debit
eq
add
eq
add
eq
le
require
subtract
eq
le
require
subtract
not
log
revert
encode
new
abi_encode
as_raw_slice
eq
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
lt
eq
eq
quote_of_base_amount
max_protocol_fee_of_amount
add
add
eq
eq
eq
eq
convert_asset_amount
add
subtract
pow
mul_div
mul_div
eq
eq
log
revert
from
from
multiply
from
divide
as_u64
panic_on_unsafe_math_enabled
eq
eq
assert
overflowing_mul
eq
multiply
add
eq
multiply
add
flags
binary_and
eq
not
revert
disable_panic_on_overflow
set_flags
flags
binary_or
from
panic_on_unsafe_math_enabled
neq
assert
eq
eq
eq
divide
from
new
new
subtract
lsh
lsh
rsh
binary_and
binary_or
ge
subtract
binary_or
eq
subtract
eq
not
eq
eq
ge
new
ge
subtract
lsh
from
subtract
rsh
lsh
add
lsh
from
ge
new
ge
subtract
rsh
from
subtract
lsh
rsh
rsh
add
from
gt
eq
gt
eq
gt
panic_on_overflow_enabled
lt
not
assert
subtract
lt
max
subtract
subtract
subtract
subtract
subtract
flags
binary_and
eq
lt
eq
lt
eq
encode
new
abi_encode
as_raw_slice
eq
abi_encode
max
multiply
divide
gt
eq
eq
remove
require
remove
get
get
read
get
len
get
remove
require
eq
get
pop
unwrap
eq
require
get
last
unwrap
read
get
swap_remove
eq
require
get
insert
field_id
sha256
clear
eq
slot_calculator
field_id
sha256
clear
eq
slot_calculator
slot
offset
read
unwrap
eq
revert
eq
slot_calculator
multiply
alloc
add
read
multiply
add
add
rsh
modulo
eq
multiply
add
add
rsh
eq
as_u256
as_u256
as_u256
subtract
add
as_b256
field_id
sha256
new
field_id
sha256
new
field_id
read
unwrap_or
eq
eq
field_id
sha256
new
field_id
sha256
clear
eq
slot_calculator
eq
revert
field_id
read
unwrap_or
eq
field_id
subtract
write
field_id
sha256
subtract
offset_calculator
read
eq
slot_calculator
multiply
alloc
add
write
new
hash
sha256
subtract
add
subtract
add
modulo
subtract
multiply
divide
eq
slot_calculator
multiply
alloc
add
read
multiply
add
add
rsh
modulo
eq
multiply
add
add
rsh
eq
as_u256
as_u256
as_u256
subtract
add
as_b256
slot
offset
read
unwrap
eq
revert
field_id
sha256
field_id
read
unwrap_or
eq
subtract
offset_calculator
subtract
sha256
new
new
hash
sha256
hash
hash
alloc_bytes
from_parts
from
write
field_id
read
unwrap_or
lt
assert
field_id
sha256
offset_calculator
read
unwrap
subtract
offset_calculator
read
unwrap
write
field_id
subtract
write
eq
slot_calculator
multiply
alloc
add
write
field_id
sha256
write
field_id
sha256
write
eq
slot_calculator
multiply
alloc
add
write
encode
new
abi_encode
as_raw_slice
abi_encode
abi_encode
abi_encode
eq
abi_encode
abi_encode
eq
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
reentrancy_guard
cancel_if_small_order
require
read_order
valid_order_amount
not
cancel_read_order
read_min_order_size
ge
try_read
unwrap_or
slot
offset
read
require_not_paused
reentrancy_guard
msg_sender
unwrap
deposit_internal
log
msg_amount
gt
require
msg_asset_id
get_asset_type
get
try_read
new
unwrap_or
credit
insert
balance
not
log
revert
encode
new
abi_encode
as_raw_slice
eq
abi_encode
eq
abi_encode
eq
abi_encode
eq
abi_encode
abi_encode
eq
abi_encode
abi_encode
eq
abi_encode
eq
abi_encode
eq
abi_encode
eq
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
from
eq
eq
log
revert
eq
encode
new
abi_encode
as_raw_slice
eq
abi_encode
eq
abi_encode
eq
abi_encode
eq
eq
slot
offset
read
new
new
encode
new
abi_encode
as_raw_slice
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_decode
abi_decode
decode
eq
decode
eq
decode
abi_decode
read_8_bytes
abi_decode
decode
abi_decode
decode
require_not_paused
reentrancy_guard
msg_sender
unwrap
deposit_internal
log
abi_decode
abi_decode
abi_decode
abi_decode
abi_decode
abi_decode
abi_decode
decode
eq
eq
decode
eq
eq
eq
eq
abi_decode
with_capacity
lt
abi_decode
push
add
with_capacity
alloc
multiply
capacity
eq
grow
ptr
add
write
add
eq
multiply
realloc
gt
alloc
gt
copy_to
require_not_paused
reentrancy_guard
len
gt
require
le
require
open_order_internal
len
multiply
divide
lt
get
read
get
unwrap
get
try_read
is_some
unwrap
eq
distance
le
eq
distance
le
non_limit_order_type
unwrap
match_order_internal
eq
eq
eq
eq
eq
add
eq
not
require
eq
eq
not
require
eq
eq
cancel_order_internal
msg_sender
unwrap
protocol_fee_user
valid_order_amount
require
height
next_order_height
read_min_order_price
new
id
get
try_read
is_none
require
get
push
get
get
len
subtract
insert
insert
get
try_read
new
unwrap_or
lock_order_amount
eq
eq
not
lock_amount
insert
log
get
try_read
new
unwrap_or
read_epoch
get
get_volume_protocol_fee
lt
eq
eq
slot
offset
read
eq
slot_calculator
multiply
alloc
add
read
multiply
add
add
rsh
modulo
eq
multiply
add
add
rsh
eq
as_u256
as_u256
as_u256
subtract
add
as_b256
field_id
sha256
new
try_read
unwrap_or
len
eq
new
gt
len
subtract
le
subtract
divide
add
get
unwrap
read
le
add
subtract
get
unwrap
read
field_id
read
unwrap_or
slot
offset
read
unwrap
eq
revert
eq
slot_calculator
multiply
alloc
add
read
multiply
add
add
rsh
modulo
eq
multiply
add
add
rsh
eq
as_u256
as_u256
as_u256
subtract
add
as_b256
eq
revert
field_id
read
unwrap_or
le
field_id
sha256
offset_calculator
sha256
new
subtract
add
subtract
add
modulo
subtract
multiply
divide
eq
require
ge
require
not
log
revert
eq
eq
eq
eq
get
try_read
unwrap_or
add
insert
field_id
sha256
new
field_id
sha256
write
try_read
unwrap_or
this
sha256
sha256
new
hash
sha256
hash
hash
hash
hash
hash
eq
hash
eq
hash
eq
hash
eq
hash
new
hash
sha256
hash
hash
eq
field_id
read
unwrap_or
field_id
sha256
offset_calculator
write
field_id
add
write
field_id
sha256
write
eq
slot_calculator
multiply
alloc
add
write
neq
require
debit
credit
encode
new
abi_encode
as_raw_slice
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
eq
abi_encode
eq
abi_encode
eq
abi_encode
eq
abi_encode
eq
abi_encode
eq
abi_encode
slot
offset
read
unwrap
le
ptr
add
read
gt
subtract
subtract
msg_sender
unwrap
eq
eq
require
eq
zero
eq
gt
zero
is_maker
min
execute_trade
increase_user_volume
increase_user_volume
get
read
get
read
emit_match_events
update_order_storage
eq
cancel_if_small_order
zero
lt
lt
quote_of_base_amount
quote_of_base_amount
subtract
matcher_fee_of_amount
matcher_fee_of_amount
protocol_fee_of_amount
protocol_fee_of_amount
eq
get
read
unlock_amount
max_protocol_fee_of_amount
add
subtract
subtract
not
unlock_amount
insert
get
read
get
read
transfer_locked_amount
not
transfer_locked_amount
add
gt
not
lock_amount
max_protocol_fee_of_amount
add
subtract
gt
not
unlock_amount
insert
insert
gt
eq
get
read
not
unlock_amount
insert
get
read
get
try_read
new
unwrap_or
not
transfer_locked_amount
insert
insert
gt
eq
get
read
not
unlock_amount
insert
get
read
get
try_read
new
unwrap_or
not
transfer_locked_amount
insert
insert
owner_identity
gt
eq
get
read
not
unlock_amount
insert
get
read
get
try_read
new
unwrap_or
not
transfer_locked_amount
insert
insert
gt
eq
get
read
not
unlock_amount
insert
get
read
get
try_read
new
unwrap_or
not
transfer_locked_amount
insert
insert
multiply
divide
lt
protocol_maker_fee_of_amount
protocol_taker_fee_of_amount
multiply
divide
multiply
divide
neq
require
credit
debit
_owner
eq
zero
zero
extend_epoch_if_finished
get
try_read
new
unwrap_or
read_epoch
update
insert
read_epoch_duration
read_epoch
add
timestamp
le
write
log
try_read
unwrap_or
height
timestamp_of_block
slot
offset
write
encode
new
abi_encode
as_raw_slice
abi_encode
abi_encode
field_id
sha256
write
eq
slot_calculator
multiply
alloc
add
write
lt
add
height
tx_id
is_maker
log
encode
new
abi_encode
as_raw_slice
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
read
eq
remove_order
eq
remove_order
neq
subtract
subtract
insert
neq
subtract
subtract
insert
zero
eq
eq
eq
eq
eq
eq
eq
revert
market_order
eq
eq
not
log
revert
encode
new
abi_encode
as_raw_slice
eq
abi_encode
abi_encode
eq
abi_encode
eq
abi_encode
eq
abi_encode
abi_encode
abi_encode
eq
eq
eq
eq
eq
eq
eq
eq
new
abi_encode
as_raw_slice
initialize_ownership
_owner
eq
require
new
write
log
not
log
revert
encode
new
abi_encode
as_raw_slice
eq
abi_encode
slot
offset
write
eq
slot_calculator
multiply
alloc
add
write
encode
new
abi_encode
as_raw_slice
abi_encode
abi_decode
abi_decode
require_not_paused
reentrancy_guard
len
ge
require
len
lts
eq
add
get
unwrap
get
try_read
is_none
add
get
unwrap
get
try_read
is_none
add
unwrap
non_limit_order_type
unwrap
unwrap
non_limit_order_type
unwrap
match_order_internal
eq
lt
add
add
eq
eq
add
add
add
eq
min
add
add
add
gt
require
lt
lt
abi_decode
abi_decode
abi_decode
abi_decode
require_not_paused
reentrancy_guard
read_matcher_fee
open_order_internal
insert
try_read
unwrap_or
field_id
sha256
write
require_not_paused
reentrancy_guard
read_matcher_fee
open_order_internal
abi_decode
abi_decode
abi_decode
only_owner
read_epoch
timestamp
ge
add
gt
require
write
write
log
abi_decode
abi_decode
only_owner
read_matcher_fee
neq
require
write
log
encode
new
abi_encode
as_raw_slice
abi_encode
only_owner
read_min_order_price
neq
require
write
log
encode
new
abi_encode
as_raw_slice
abi_encode
only_owner
read_min_order_size
neq
require
write
log
encode
new
abi_encode
as_raw_slice
abi_encode
abi_decode
abi_decode
abi_decode
with_capacity
lt
abi_decode
push
add
with_capacity
alloc
multiply
decode
decode
decode
capacity
eq
grow
ptr
add
write
add
eq
multiply
realloc
gt
alloc
gt
copy_to
only_owner
len
gt
get
unwrap
eq
require
is_volume_threshold_valid
require
store_vec
log
le
ptr
add
read
iter
next
is_some
unwrap
lt
eq
eq
next
len
ge
add
subtract
get
eq
lt
as_raw_slice
len
multiply
alloc_bytes
len
lt
ptr
add
multiply
add_uint_offset
copy_bytes_to
add
from_parts
as_raw_slice
number_of_bytes
add
rsh
ptr
multiply
realloc_bytes
field_id
sha256
field_id
len
write
ptr
from_parts
from_parts
encode
new
abi_encode
as_raw_slice
abi_encode
len
abi_encode
lt
get
unwrap
abi_encode
add
abi_encode
abi_encode
abi_encode
transfer_ownership
only_owner
new
write
msg_sender
unwrap
log
encode
new
abi_encode
as_raw_slice
abi_encode
abi_encode
abi_decode
abi_decode
abi_decode
decode
eq
eq
reentrancy_guard
withdraw_internal
transfer
log
gt
require
msg_sender
unwrap
get
try_read
new
unwrap_or
debit
insert
get_asset_id
eq
eq
eq
transfer_to_address
eq
force_transfer_to_contract
output_count
as_u64
lt
output_type
eq
eq
output_amount
eq
eq
bits
add
revert
tx_type
eq
eq
eq
eq
eq
revert
output_count
as_u64
ge
eq
eq
eq
eq
eq
output_type
eq
eq
eq
eq
eq
eq
eq
eq
output_pointer
unwrap
eq
eq
eq
eq
revert
output_type
is_none
tx_type
eq
eq
eq
eq
eq
eq
bits
encode
new
abi_encode
as_raw_slice
abi_encode
abi_encode
abi_encode
abi_encode
abi_decode
abi_decode
abi_decode
abi_decode
reentrancy_guard
this
neq
require
withdraw_internal
into
contract_call
eq
eq
require
into
into
contract_call
log
eq
not
encode
encode
ptr
ptr
encode
ptr
from_parts
abi_decode
new
abi_encode
as_raw_slice
new
abi_encode
as_raw_slice
new
abi_encode
as_raw_slice
abi_encode
abi_encode
abi_encode
abi_decode
abi_decode
abi_decode
abi_decode
abi_decode
abi_decode
abi_decode
decode
eq
eq
decode
abi_decode
from
bits
encode
encode
ptr
ptr
encode
ptr
from_parts
abi_decode
new
abi_encode
as_raw_slice
abi_encode
from
bits
encode
new
abi_encode
as_raw_slice
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
get
try_read
new
unwrap_or
new
abi_encode
as_raw_slice
_owner
owner
eq
new
abi_encode
as_raw_slice
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
eq
abi_encode
eq
abi_encode
abi_encode
read_epoch
read_epoch_duration
new
abi_encode
as_raw_slice
market_order
new
abi_encode
as_raw_slice
eq
abi_encode
eq
abi_encode
abi_encode
read_matcher_fee
new
abi_encode
as_raw_slice
read_min_order_price
read_min_order_size
get
try_read
new
abi_encode
as_raw_slice
eq
abi_encode
eq
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
abi_encode
eq
abi_encode
eq
abi_encode
abi_decode
abi_decode
abi_decode
abi_decode
abi_decode
abi_decode
new
id
load_vec
field_id
read
unwrap_or
eq
new
neq
assert
lt
multiply
multiply
add
rsh
multiply
alloc_bytes
field_id
sha256
lt
multiply
alloc_bytes
lt
multiply
add_uint_offset
add
copy_bytes_to
add
from
from
new
alloc
from
len
len
alloc
gt
ptr
copy_to
into_parts
new
abi_encode
as_raw_slice
protocol_fee_user
abi_decode
abi_decode
abi_decode
protocol_fee_user_amount
protocol_fee_user
multiply
divide
multiply
divide
get
try_read
unwrap_or
get
load_vec
field_id
read
unwrap_or
eq
new
neq
assert
lt
multiply
multiply
add
rsh
multiply
alloc_bytes
field_id
sha256
lt
multiply
alloc_bytes
lt
multiply
add_uint_offset
add
copy_bytes_to
add
from
from
new
alloc
from
len
len
alloc
gt
ptr
copy_to
into_parts
new
abi_encode
as_raw_slice
len
abi_encode
lt
get
unwrap
abi_encode
add
_is_paused
only_owner
require_not_paused
_pause
only_owner
require_paused
_unpause
reentrancy_guard
cancel_order_internal
reentrancy_guard
cancel_if_small_order
require
require_not_paused
reentrancy_guard
msg_sender
unwrap
deposit_internal
log
require_not_paused
reentrancy_guard
msg_sender
unwrap
deposit_internal
log
require_not_paused
reentrancy_guard
len
gt
require
le
require
open_order_internal
len
multiply
divide
lt
get
read
get
unwrap
get
try_read
is_some
unwrap
eq
distance
le
eq
distance
le
non_limit_order_type
unwrap
match_order_internal
eq
eq
eq
eq
eq
add
eq
not
require
eq
eq
not
require
eq
eq
cancel_order_internal
initialize_ownership
require_not_paused
reentrancy_guard
len
ge
require
len
lts
eq
add
get
unwrap
get
try_read
is_none
add
get
unwrap
get
try_read
is_none
add
unwrap
non_limit_order_type
unwrap
unwrap
non_limit_order_type
unwrap
match_order_internal
eq
lt
add
add
eq
eq
add
add
add
eq
min
add
add
add
gt
require
require_not_paused
reentrancy_guard
read_matcher_fee
open_order_internal
insert
require_not_paused
reentrancy_guard
read_matcher_fee
open_order_internal
only_owner
read_epoch
timestamp
ge
add
gt
require
write
write
log
only_owner
read_matcher_fee
neq
require
write
log
only_owner
read_min_order_price
neq
require
write
log
only_owner
read_min_order_size
neq
require
write
log
only_owner
len
gt
get
unwrap
eq
require
is_volume_threshold_valid
require
store_vec
log
transfer_ownership
reentrancy_guard
withdraw_internal
transfer
log
reentrancy_guard
this
neq
require
withdraw_internal
into
contract_call
eq
eq
require
into
into
contract_call
log
get
try_read
new
unwrap_or
_owner
owner
read_epoch
read_epoch_duration
market_order
read_matcher_fee
read_min_order_price
read_min_order_size
get
try_read
new
id
load_vec
protocol_fee_user
protocol_fee_user_amount
get
try_read
unwrap_or
get
load_vec
